; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui__getcursorpos.o --depend=.\rvmdk\gui__getcursorpos.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui__getcursorpos.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI__GetCursorPos.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI__GetCursorPosX PROC
;;;39     */
;;;40     int GUI__GetCursorPosX(const char GUI_UNI_PTR * s, int Index, int MaxNumChars) {
000000  b537              PUSH     {r0-r2,r4,r5,lr}
;;;41       #if GUI_SUPPORT_ARABIC
;;;42         return GUI__GetCursorPosXArabic(s, Index, MaxNumChars);
;;;43       #else
;;;44         int CursorPosX = 0;
000002  2500              MOVS     r5,#0
;;;45         U16 Char;
;;;46         GUI_USE_PARA(MaxNumChars);
;;;47         while (Index--) {
000004  1e4c              SUBS     r4,r1,#1
000006  b139              CBZ      r1,|L1.24|
                  |L1.8|
;;;48           Char        = GUI_UC__GetCharCodeInc(&s);
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       GUI_UC__GetCharCodeInc
;;;49           CursorPosX += GUI_GetCharDistX(Char);
00000e  f7fffffe          BL       GUI_GetCharDistX
000012  4405              ADD      r5,r5,r0
000014  1e64              SUBS     r4,r4,#1              ;47
000016  d2f7              BCS      |L1.8|
                  |L1.24|
;;;50         }
;;;51         return CursorPosX;
;;;52       #endif
;;;53     }
000018  b003              ADD      sp,sp,#0xc
00001a  4628              MOV      r0,r5                 ;51
00001c  bd30              POP      {r4,r5,pc}
;;;54     
                          ENDP

                  GUI__GetCursorPosChar PROC
;;;66     */
;;;67     int GUI__GetCursorPosChar(const char GUI_UNI_PTR * s, int x, int MaxNumChars) {
00001e  e92d47f0          PUSH     {r4-r10,lr}
000022  4605              MOV      r5,r0
000024  4688              MOV      r8,r1
;;;68       #if GUI_SUPPORT_ARABIC
;;;69         return GUI__GetCursorPosCharArabic(s, x, MaxNumChars);
;;;70       #else
;;;71         int SizeX = 0;
000026  2400              MOVS     r4,#0
;;;72         const char GUI_UNI_PTR * p;
;;;73         p = s;
000028  46a9              MOV      r9,r5
;;;74         while (--MaxNumChars> 0) {
00002a  1e56              SUBS     r6,r2,#1
00002c  2e00              CMP      r6,#0
00002e  dd11              BLE      |L1.84|
                  |L1.48|
;;;75           U16 Char;
;;;76           Char   = GUI_UC_GetCharCode(s);
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       GUI_UC_GetCharCode
000036  4607              MOV      r7,r0
;;;77           SizeX += GUI_GetCharDistX(Char);
000038  4638              MOV      r0,r7
00003a  f7fffffe          BL       GUI_GetCharDistX
00003e  4404              ADD      r4,r4,r0
;;;78           if (!Char || (SizeX > x)) {
000040  b147              CBZ      r7,|L1.84|
000042  4544              CMP      r4,r8
000044  dc06              BGT      |L1.84|
;;;79             break;
;;;80           }
;;;81           s += GUI_UC_GetCharSize(s);
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       GUI_UC_GetCharSize
00004c  4405              ADD      r5,r5,r0
00004e  1e76              SUBS     r6,r6,#1              ;74
000050  2e00              CMP      r6,#0                 ;74
000052  dced              BGT      |L1.48|
                  |L1.84|
;;;82         }
;;;83         return GUI_UC__NumBytes2NumChars(p, s - p);
000054  eba50109          SUB      r1,r5,r9
000058  4648              MOV      r0,r9
00005a  e8bd47f0          POP      {r4-r10,lr}
00005e  f7ffbffe          B.W      GUI_UC__NumBytes2NumChars
;;;84       #endif
;;;85     }
;;;86     
                          ENDP

                  GUI__GetCursorCharacter PROC
;;;90     */
;;;91     U16 GUI__GetCursorCharacter(const char GUI_UNI_PTR * s, int Index, int MaxNumChars, int * pIsRTL) {
000062  b10b              CBZ      r3,|L1.104|
;;;92       #if GUI_SUPPORT_ARABIC
;;;93         return GUI__GetCursorCharacterArabic(s, Index, MaxNumChars, pIsRTL);
;;;94       #else
;;;95         GUI_USE_PARA(MaxNumChars);
;;;96         if (pIsRTL) {
;;;97           *pIsRTL = 0;
000064  2200              MOVS     r2,#0
000066  601a              STR      r2,[r3,#0]
                  |L1.104|
;;;98         }
;;;99         return GUI_UC_GetCharCode(s + Index);
000068  4408              ADD      r0,r0,r1
00006a  f7ffbffe          B.W      GUI_UC_GetCharCode
;;;100      #endif
;;;101    }
;;;102    
                          ENDP

