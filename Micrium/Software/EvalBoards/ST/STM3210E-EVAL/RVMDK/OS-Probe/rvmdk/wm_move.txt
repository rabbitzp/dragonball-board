; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\wm_move.o --depend=.\rvmdk\wm_move.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\wm_move.crf ..\..\..\..\..\uCGUI\GUI\WM\WM_Move.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _MoveDescendents PROC
;;;43     */
;;;44     static void _MoveDescendents(WM_HWIN hWin, int dx, int dy) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;45       WM_Obj* pWin;
;;;46     
;;;47       for (;hWin; hWin = pWin->hNext) {
00000a  2d00              CMP      r5,#0
00000c  d01c              BEQ      |L1.72|
                  |L1.14|
;;;48         pWin = WM_HANDLE2PTR(hWin);
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       GUI_ALLOC_h2p
000014  4604              MOV      r4,r0
;;;49         GUI_MoveRect(&pWin->Rect, dx, dy);
000016  463a              MOV      r2,r7
000018  4631              MOV      r1,r6
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       GUI_MoveRect
;;;50         GUI_MoveRect(&pWin->InvalidRect, dx, dy);
000020  463a              MOV      r2,r7
000022  4631              MOV      r1,r6
000024  f1040008          ADD      r0,r4,#8
000028  f7fffffe          BL       GUI_MoveRect
;;;51         _MoveDescendents(pWin->hFirstChild, dx, dy);  /* Children need to be moved along ...*/
00002c  f9b40018          LDRSH    r0,[r4,#0x18]
000030  463a              MOV      r2,r7
000032  4631              MOV      r1,r6
000034  f7fffffe          BL       _MoveDescendents
;;;52         WM__SendMsgNoData(hWin, WM_MOVE);
000038  2103              MOVS     r1,#3
00003a  4628              MOV      r0,r5
00003c  f7fffffe          BL       WM__SendMsgNoData
000040  f9b4501a          LDRSH    r5,[r4,#0x1a]         ;47
000044  2d00              CMP      r5,#0                 ;47
000046  d1e2              BNE      |L1.14|
                  |L1.72|
;;;53       }
;;;54     }
000048  e8bd81f0          POP      {r4-r8,pc}
;;;55     
                          ENDP

                  WM__MoveWindow PROC
;;;65     */
;;;66     void WM__MoveWindow(WM_HWIN hWin, int dx, int dy) {
00004c  b5f0              PUSH     {r4-r7,lr}
00004e  b083              SUB      sp,sp,#0xc
000050  4605              MOV      r5,r0
000052  460e              MOV      r6,r1
000054  4617              MOV      r7,r2
;;;67       GUI_RECT r;
;;;68       WM_Obj* pWin;
;;;69       if ((hWin) && (dx || dy)) {
000056  2d00              CMP      r5,#0
000058  d031              BEQ      |L1.190|
00005a  ea560007          ORRS     r0,r6,r7
00005e  d02e              BEQ      |L1.190|
;;;70         pWin = WM_HANDLE2PTR(hWin);
000060  4628              MOV      r0,r5
000062  f7fffffe          BL       GUI_ALLOC_h2p
000066  4604              MOV      r4,r0
;;;71         r = pWin->Rect;
000068  6861              LDR      r1,[r4,#4]
00006a  6820              LDR      r0,[r4,#0]
00006c  9101              STR      r1,[sp,#4]
00006e  9000              STR      r0,[sp,#0]
;;;72         GUI_MoveRect(&pWin->Rect, dx, dy);
000070  463a              MOV      r2,r7
000072  4631              MOV      r1,r6
000074  4620              MOV      r0,r4
000076  f7fffffe          BL       GUI_MoveRect
;;;73         GUI_MoveRect(&pWin->InvalidRect, dx, dy);
00007a  463a              MOV      r2,r7
00007c  4631              MOV      r1,r6
00007e  f1040008          ADD      r0,r4,#8
000082  f7fffffe          BL       GUI_MoveRect
;;;74         _MoveDescendents(pWin->hFirstChild, dx, dy);  /* Children need to be moved along ...*/
000086  f9b40018          LDRSH    r0,[r4,#0x18]
00008a  463a              MOV      r2,r7
00008c  4631              MOV      r1,r6
00008e  f7fffffe          BL       _MoveDescendents
;;;75         /* Invalidate old and new area ... */
;;;76         if (pWin->Status & WM_SF_ISVIS) {
000092  8ba0              LDRH     r0,[r4,#0x1c]
000094  f0100f02          TST      r0,#2
000098  d00d              BEQ      |L1.182|
;;;77           WM__InvalidateRectEx(&pWin->Rect, pWin->hParent, pWin->hNext); /* Invalidate new area */
00009a  f9b4201a          LDRSH    r2,[r4,#0x1a]
00009e  f9b41016          LDRSH    r1,[r4,#0x16]
0000a2  4620              MOV      r0,r4
0000a4  f7fffffe          BL       WM__InvalidateRectEx
;;;78           WM__InvalidateRectEx(&r,          pWin->hParent, pWin->hNext); /* Invalidate old area */
0000a8  f9b4201a          LDRSH    r2,[r4,#0x1a]
0000ac  f9b41016          LDRSH    r1,[r4,#0x16]
0000b0  4668              MOV      r0,sp
0000b2  f7fffffe          BL       WM__InvalidateRectEx
                  |L1.182|
;;;79         }
;;;80         WM__SendMsgNoData(hWin, WM_MOVE);             /* Notify window it has been moved */
0000b6  2103              MOVS     r1,#3
0000b8  4628              MOV      r0,r5
0000ba  f7fffffe          BL       WM__SendMsgNoData
                  |L1.190|
;;;81       }
;;;82     }
0000be  b003              ADD      sp,sp,#0xc
0000c0  bdf0              POP      {r4-r7,pc}
;;;83     
                          ENDP

                  WM__MoveTo PROC
;;;87     */
;;;88     void WM__MoveTo(WM_HWIN hWin, int x, int y) {
0000c2  b570              PUSH     {r4-r6,lr}
0000c4  4605              MOV      r5,r0
0000c6  460c              MOV      r4,r1
0000c8  4616              MOV      r6,r2
;;;89       if (hWin) {
0000ca  2d00              CMP      r5,#0
0000cc  d00c              BEQ      |L1.232|
;;;90         WM_Obj* pWin = WM_HANDLE2PTR(hWin);
0000ce  4628              MOV      r0,r5
0000d0  f7fffffe          BL       GUI_ALLOC_h2p
;;;91         x -= pWin->Rect.x0;
0000d4  f9b02000          LDRSH    r2,[r0,#0]
0000d8  1aa1              SUBS     r1,r4,r2
;;;92         y -= pWin->Rect.y0;
0000da  f9b00002          LDRSH    r0,[r0,#2]
0000de  1a32              SUBS     r2,r6,r0
;;;93         WM__MoveWindow(hWin, x, y);
0000e0  4628              MOV      r0,r5
0000e2  e8bd4070          POP      {r4-r6,lr}
0000e6  e7fe              B        WM__MoveWindow
                  |L1.232|
;;;94       }
;;;95     }
0000e8  bd70              POP      {r4-r6,pc}
;;;96     
                          ENDP

                  WM_MoveWindow PROC
;;;106    */
;;;107    void WM_MoveWindow(WM_HWIN hWin, int dx, int dy) {
0000ea  b570              PUSH     {r4-r6,lr}
0000ec  4604              MOV      r4,r0
0000ee  460d              MOV      r5,r1
0000f0  4616              MOV      r6,r2
;;;108      WM_LOCK(); {
0000f2  f7fffffe          BL       GUI_Lock
;;;109        WM__MoveWindow(hWin, dx, dy);
0000f6  4632              MOV      r2,r6
0000f8  4629              MOV      r1,r5
0000fa  4620              MOV      r0,r4
0000fc  f7fffffe          BL       WM__MoveWindow
;;;110      } WM_UNLOCK();
000100  e8bd4070          POP      {r4-r6,lr}
000104  f7ffbffe          B.W      GUI_Unlock
;;;111    }
;;;112    
                          ENDP

                  WM_MoveTo PROC
;;;116    */
;;;117    void WM_MoveTo(WM_HWIN hWin, int x, int y) {
000108  b570              PUSH     {r4-r6,lr}
00010a  4604              MOV      r4,r0
00010c  460d              MOV      r5,r1
00010e  4616              MOV      r6,r2
;;;118      WM_LOCK(); {
000110  f7fffffe          BL       GUI_Lock
;;;119        WM__MoveTo(hWin, x, y);
000114  4632              MOV      r2,r6
000116  4629              MOV      r1,r5
000118  4620              MOV      r0,r4
00011a  f7fffffe          BL       WM__MoveTo
;;;120      } WM_UNLOCK();
00011e  e8bd4070          POP      {r4-r6,lr}
000122  f7ffbffe          B.W      GUI_Unlock
;;;121    }
;;;122    
                          ENDP

