; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui2dlib.o --depend=.\rvmdk\gui2dlib.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui2dlib.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI2DLib.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_MoveRel PROC
;;;33     */
;;;34     void GUI_MoveRel(int dx, int dy) { /*tbd: GL_LinePos. */
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;35       GUI_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;36       GUI_Context.DrawPosX += dx;
00000a  4a38              LDR      r2,|L1.236|
00000c  8d51              LDRH     r1,[r2,#0x2a]  ; GUI_Context
00000e  1908              ADDS     r0,r1,r4
000010  8550              STRH     r0,[r2,#0x2a]
;;;37       GUI_Context.DrawPosY += dy;
000012  8d90              LDRH     r0,[r2,#0x2c]  ; GUI_Context
000014  4428              ADD      r0,r0,r5
000016  8590              STRH     r0,[r2,#0x2c]
;;;38       GUI_UNLOCK();
000018  e8bd4070          POP      {r4-r6,lr}
00001c  f7ffbffe          B.W      GUI_Unlock
;;;39     }
;;;40     
                          ENDP

                  GL_MoveTo PROC
;;;44     */
;;;45     void GL_MoveTo(int x, int y) {
000020  4a32              LDR      r2,|L1.236|
;;;46       GUI_Context.DrawPosX = x;
000022  8550              STRH     r0,[r2,#0x2a]
;;;47       GUI_Context.DrawPosY = y;
000024  8591              STRH     r1,[r2,#0x2c]
;;;48     }
000026  4770              BX       lr
;;;49     
                          ENDP

                  GUI_MoveTo PROC
;;;53     */
;;;54     void GUI_MoveTo(int x, int y) {
000028  b570              PUSH     {r4-r6,lr}
00002a  4604              MOV      r4,r0
00002c  460d              MOV      r5,r1
;;;55       GUI_LOCK();
00002e  f7fffffe          BL       GUI_Lock
;;;56       #if (GUI_WINSUPPORT)
;;;57         WM_ADDORG(x,y);
000032  4a2e              LDR      r2,|L1.236|
000034  6c53              LDR      r3,[r2,#0x44]  ; GUI_Context
000036  1918              ADDS     r0,r3,r4
000038  6c92              LDR      r2,[r2,#0x48]  ; GUI_Context
00003a  1951              ADDS     r1,r2,r5
;;;58       #endif
;;;59       GL_MoveTo(x,y);
00003c  f7fffffe          BL       GL_MoveTo
;;;60       GUI_UNLOCK();
000040  e8bd4070          POP      {r4-r6,lr}
000044  f7ffbffe          B.W      GUI_Unlock
;;;61     }
;;;62     
                          ENDP

                  _DrawRect PROC
;;;72     */
;;;73     static void _DrawRect(int x0, int y0, int x1, int y1) {
000048  e92d41f0          PUSH     {r4-r8,lr}
00004c  4607              MOV      r7,r0
00004e  460d              MOV      r5,r1
000050  4616              MOV      r6,r2
000052  461c              MOV      r4,r3
;;;74       LCD_DrawHLine(x0, y0, x1);
000054  4632              MOV      r2,r6
000056  4629              MOV      r1,r5
000058  4638              MOV      r0,r7
00005a  f7fffffe          BL       LCD_DrawHLine
;;;75       LCD_DrawHLine(x0, y1, x1);
00005e  4632              MOV      r2,r6
000060  4621              MOV      r1,r4
000062  4638              MOV      r0,r7
000064  f7fffffe          BL       LCD_DrawHLine
;;;76       LCD_DrawVLine(x0, y0 + 1, y1 - 1);
000068  1e62              SUBS     r2,r4,#1
00006a  1c69              ADDS     r1,r5,#1
00006c  4638              MOV      r0,r7
00006e  f7fffffe          BL       LCD_DrawVLine
;;;77       LCD_DrawVLine(x1, y0 + 1, y1 - 1);
000072  1e62              SUBS     r2,r4,#1
000074  1c69              ADDS     r1,r5,#1
000076  4630              MOV      r0,r6
000078  e8bd41f0          POP      {r4-r8,lr}
00007c  f7ffbffe          B.W      LCD_DrawVLine
;;;78     }
;;;79     
                          ENDP

                  GUI_DrawRect PROC
;;;83     */
;;;84     void GUI_DrawRect(int x0, int y0, int x1, int y1) {
000080  e92d41f0          PUSH     {r4-r8,lr}
000084  b082              SUB      sp,sp,#8
000086  4605              MOV      r5,r0
000088  460e              MOV      r6,r1
00008a  4690              MOV      r8,r2
00008c  461f              MOV      r7,r3
;;;85       #if (GUI_WINSUPPORT)
;;;86         int Off;
;;;87         GUI_RECT r;
;;;88       #endif
;;;89       GUI_LOCK();
00008e  f7fffffe          BL       GUI_Lock
;;;90       #if (GUI_WINSUPPORT)
;;;91         Off = GUI_Context.PenSize -1;
000092  4816              LDR      r0,|L1.236|
000094  7e01              LDRB     r1,[r0,#0x18]  ; GUI_Context
000096  f1a10c01          SUB      r12,r1,#1
;;;92         WM_ADDORG(x0,y0);
00009a  6c44              LDR      r4,[r0,#0x44]  ; GUI_Context
00009c  4425              ADD      r5,r5,r4
00009e  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
0000a0  4406              ADD      r6,r6,r0
;;;93         WM_ADDORG(x1,y1);
0000a2  4444              ADD      r4,r4,r8
0000a4  4407              ADD      r7,r7,r0
;;;94         r.x0 = x0 - Off;
0000a6  eba5000c          SUB      r0,r5,r12
0000aa  f8ad0000          STRH     r0,[sp,#0]
;;;95         r.x1 = x1 + Off;
0000ae  eb04000c          ADD      r0,r4,r12
0000b2  f8ad0004          STRH     r0,[sp,#4]
;;;96         r.y0 = y0 - Off;
0000b6  eba6000c          SUB      r0,r6,r12
0000ba  f8ad0002          STRH     r0,[sp,#2]
;;;97         r.y1 = y1 + Off;
0000be  eb07000c          ADD      r0,r7,r12
0000c2  f8ad0006          STRH     r0,[sp,#6]
;;;98         WM_ITERATE_START(&r); {
0000c6  4668              MOV      r0,sp
0000c8  f7fffffe          BL       WM__InitIVRSearch
0000cc  b148              CBZ      r0,|L1.226|
                  |L1.206|
;;;99       #endif
;;;100      _DrawRect(x0, y0, x1, y1);
0000ce  463b              MOV      r3,r7
0000d0  4622              MOV      r2,r4
0000d2  4631              MOV      r1,r6
0000d4  4628              MOV      r0,r5
0000d6  f7fffffe          BL       _DrawRect
;;;101      #if (GUI_WINSUPPORT)
;;;102        } WM_ITERATE_END();
0000da  f7fffffe          BL       WM__GetNextIVR
0000de  2800              CMP      r0,#0
0000e0  d1f5              BNE      |L1.206|
                  |L1.226|
;;;103      #endif
;;;104      GUI_UNLOCK();
0000e2  f7fffffe          BL       GUI_Unlock
;;;105    }
0000e6  b002              ADD      sp,sp,#8
0000e8  e8bd81f0          POP      {r4-r8,pc}
;;;106    
                          ENDP

                  |L1.236|
                          DCD      GUI_Context
