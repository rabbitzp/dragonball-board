; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guicharm.o --depend=.\rvmdk\guicharm.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guicharm.crf ..\..\..\..\..\uCGUI\GUI\Core\GUICharM.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUIMONO_DispChar PROC
;;;38     */
;;;39     void GUIMONO_DispChar(U16P c) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b089              SUB      sp,sp,#0x24
;;;40       int c0, c1;
;;;41       const unsigned char GUI_UNI_PTR * pd;
;;;42       int x = GUI_Context.DispPosX;
000006  495b              LDR      r1,|L1.372|
000008  f9b19026          LDRSH    r9,[r1,#0x26]  ; GUI_Context
;;;43       int y = GUI_Context.DispPosY;
00000c  f9b18028          LDRSH    r8,[r1,#0x28]  ; GUI_Context
;;;44       /* do some checking if drawing is actually necessary ... */
;;;45       const GUI_FONT_MONO GUI_UNI_PTR * pMono = GUI_Context.pAFont->p.pMono;
000010  69cb              LDR      r3,[r1,#0x1c]  ; GUI_Context
000012  699c              LDR      r4,[r3,#0x18]
;;;46       unsigned int FirstChar = pMono->FirstChar;
000014  89a1              LDRH     r1,[r4,#0xc]
;;;47       /* translate character into 2 characters to display : c0,c1 */
;;;48       /* Check if regular character first. */
;;;49       if ((c >= (U16P)FirstChar) &&(c <= (U16P)pMono->LastChar)) {
000016  4288              CMP      r0,r1
000018  d307              BCC      |L1.42|
00001a  89e2              LDRH     r2,[r4,#0xe]
00001c  4282              CMP      r2,r0
00001e  d304              BCC      |L1.42|
;;;50         pd = pMono->pData;
000020  6827              LDR      r7,[r4,#0]
;;;51         c0 = ((int)c) - FirstChar;
000022  1a45              SUBS     r5,r0,r1
;;;52         c1 = -1;
000024  f04f36ff          MOV      r6,#0xffffffff
000028  e01a              B        |L1.96|
                  |L1.42|
;;;53       } else {
;;;54         /* Check if character is in translation table */
;;;55         GUI_FONT_TRANSINFO const GUI_UNI_PTR * pti = pMono->pTrans;
00002a  68a2              LDR      r2,[r4,#8]
;;;56         pd = pMono->pTransData;
00002c  6867              LDR      r7,[r4,#4]
;;;57         if (pti) {
00002e  b1a2              CBZ      r2,|L1.90|
;;;58           FirstChar = pti->FirstChar;
000030  8811              LDRH     r1,[r2,#0]
;;;59           if ((c >= (U16P)FirstChar) && (c <= (U16P)pti->LastChar)) {
000032  4288              CMP      r0,r1
000034  d30d              BCC      |L1.82|
000036  f8b2c002          LDRH     r12,[r2,#2]
00003a  4584              CMP      r12,r0
00003c  d309              BCC      |L1.82|
;;;60             GUI_FONT_TRANSLIST const GUI_UNI_PTR * ptl;
;;;61             c -= pti->FirstChar;
00003e  1a40              SUBS     r0,r0,r1
000040  b280              UXTH     r0,r0
;;;62             ptl = pti->pList;
000042  6851              LDR      r1,[r2,#4]
;;;63             ptl += c;
000044  eb010080          ADD      r0,r1,r0,LSL #2
;;;64             c0  = ptl->c0;
000048  f9b05000          LDRSH    r5,[r0,#0]
;;;65             c1  = ptl->c1;
00004c  f9b06002          LDRSH    r6,[r0,#2]
;;;66           } else {
000050  e006              B        |L1.96|
                  |L1.82|
;;;67             c0 = c1 = -1;
000052  f04f35ff          MOV      r5,#0xffffffff
000056  462e              MOV      r6,r5
000058  e002              B        |L1.96|
                  |L1.90|
;;;68           }
;;;69         } else {
;;;70           c0 = c1 = -1;
00005a  f04f35ff          MOV      r5,#0xffffffff
00005e  462e              MOV      r6,r5
                  |L1.96|
;;;71         }
;;;72       }
;;;73       /* Draw first character if it is valid */
;;;74       if (c0!=-1) {
000060  1c68              ADDS     r0,r5,#1
000062  d059              BEQ      |L1.280|
;;;75         int BytesPerChar = GUI_Context.pAFont->YSize*pMono->BytesPerLine;
000064  7d18              LDRB     r0,[r3,#0x14]
000066  7ca1              LDRB     r1,[r4,#0x12]
000068  fb00fb01          MUL      r11,r0,r1
;;;76         GUI_DRAWMODE DrawMode;
;;;77         int XSize = pMono->XSize;
00006c  7c21              LDRB     r1,[r4,#0x10]
00006e  9108              STR      r1,[sp,#0x20]
;;;78         int YSize = GUI_Context.pAFont->YSize;
000070  9007              STR      r0,[sp,#0x1c]
;;;79         /* Select the right drawing mode */
;;;80         DrawMode = GUI_Context.TextMode;
000072  4840              LDR      r0,|L1.372|
000074  f9b0a02e          LDRSH    r10,[r0,#0x2e]  ; GUI_Context
;;;81         /* call drawing routine */
;;;82         {
;;;83           U8 OldMode = LCD_SetDrawMode(DrawMode);
000078  4650              MOV      r0,r10
00007a  f7fffffe          BL       LCD_SetDrawMode
00007e  b2c0              UXTB     r0,r0
000080  9006              STR      r0,[sp,#0x18]
;;;84           LCD_DrawBitmap( x, y,
000082  fb05720b          MLA      r2,r5,r11,r7
000086  ad02              ADD      r5,sp,#8
000088  4b3a              LDR      r3,|L1.372|
00008a  7ca1              LDRB     r1,[r4,#0x12]
00008c  2001              MOVS     r0,#1
00008e  c50f              STM      r5!,{r0-r3}
000090  4618              MOV      r0,r3
000092  4641              MOV      r1,r8
000094  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000096  7dc3              LDRB     r3,[r0,#0x17]
000098  7d82              LDRB     r2,[r0,#0x16]
00009a  9301              STR      r3,[sp,#4]
00009c  9200              STR      r2,[sp,#0]
00009e  4648              MOV      r0,r9
0000a0  9b07              LDR      r3,[sp,#0x1c]
0000a2  9a08              LDR      r2,[sp,#0x20]
0000a4  f7fffffe          BL       LCD_DrawBitmap
;;;85                              XSize, YSize,
;;;86                              GUI_Context.pAFont->XMag,  GUI_Context.pAFont->YMag,
;;;87                              1,     /* Bits per Pixel */
;;;88                              pMono->BytesPerLine,
;;;89                              pd + c0* BytesPerChar,
;;;90                              &LCD_BKCOLORINDEX
;;;91                              );
;;;92           if (c1 != -1) {
0000a8  1c70              ADDS     r0,r6,#1
0000aa  d016              BEQ      |L1.218|
;;;93             LCD_SetDrawMode(DrawMode | LCD_DRAWMODE_TRANS);
0000ac  f04a0002          ORR      r0,r10,#2
0000b0  f7fffffe          BL       LCD_SetDrawMode
;;;94             LCD_DrawBitmap( x, y,
0000b4  fb06720b          MLA      r2,r6,r11,r7
0000b8  ad02              ADD      r5,sp,#8
0000ba  4b2e              LDR      r3,|L1.372|
0000bc  7ca1              LDRB     r1,[r4,#0x12]
0000be  2001              MOVS     r0,#1
0000c0  c50f              STM      r5!,{r0-r3}
0000c2  4618              MOV      r0,r3
0000c4  4641              MOV      r1,r8
0000c6  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
0000c8  7dc3              LDRB     r3,[r0,#0x17]
0000ca  7d82              LDRB     r2,[r0,#0x16]
0000cc  9301              STR      r3,[sp,#4]
0000ce  9200              STR      r2,[sp,#0]
0000d0  4648              MOV      r0,r9
0000d2  9b07              LDR      r3,[sp,#0x1c]
0000d4  9a08              LDR      r2,[sp,#0x20]
0000d6  f7fffffe          BL       LCD_DrawBitmap
                  |L1.218|
;;;95                                XSize, YSize,
;;;96                                GUI_Context.pAFont->XMag,  GUI_Context.pAFont->YMag,
;;;97                                1,     /* Bits per Pixel */
;;;98                                pMono->BytesPerLine,
;;;99                                pd + c1* BytesPerChar,
;;;100                               &LCD_BKCOLORINDEX
;;;101                               );
;;;102          }
;;;103          /* Fill empty pixel lines */
;;;104          if (GUI_Context.pAFont->YDist > GUI_Context.pAFont->YSize) {
0000da  4d26              LDR      r5,|L1.372|
0000dc  69e8              LDR      r0,[r5,#0x1c]  ; GUI_Context
0000de  7d41              LDRB     r1,[r0,#0x15]
0000e0  7d00              LDRB     r0,[r0,#0x14]
0000e2  4281              CMP      r1,r0
0000e4  d915              BLS      |L1.274|
;;;105            if (DrawMode != LCD_DRAWMODE_TRANS) {
0000e6  f1ba0f02          CMP      r10,#2
0000ea  d012              BEQ      |L1.274|
;;;106              LCD_SetDrawMode(DrawMode ^ LCD_DRAWMODE_REV);  /* Reverse so we can fill with BkColor */
0000ec  f08a0004          EOR      r0,r10,#4
0000f0  f7fffffe          BL       LCD_SetDrawMode
;;;107              LCD_FillRect(x, 
0000f4  69e8              LDR      r0,[r5,#0x1c]  ; GUI_Context
0000f6  7d41              LDRB     r1,[r0,#0x15]
0000f8  7d02              LDRB     r2,[r0,#0x14]
0000fa  eb010308          ADD      r3,r1,r8
0000fe  fb028c01          MLA      r12,r2,r1,r8
000102  7d81              LDRB     r1,[r0,#0x16]
000104  9808              LDR      r0,[sp,#0x20]
000106  fb009201          MLA      r2,r0,r1,r9
00010a  4661              MOV      r1,r12
00010c  4648              MOV      r0,r9
00010e  f7fffffe          BL       LCD_FillRect
                  |L1.274|
;;;108                           y + GUI_Context.pAFont->YSize * GUI_Context.pAFont->YDist, 
;;;109                           x + XSize * GUI_Context.pAFont->XMag, 
;;;110                           y + GUI_Context.pAFont->YDist);
;;;111            }
;;;112          }
;;;113          LCD_SetDrawMode(OldMode);
000112  9806              LDR      r0,[sp,#0x18]
000114  f7fffffe          BL       LCD_SetDrawMode
                  |L1.280|
;;;114        } 
;;;115      }
;;;116      GUI_Context.DispPosX+=pMono->XDist;
000118  4816              LDR      r0,|L1.372|
00011a  7c62              LDRB     r2,[r4,#0x11]
00011c  8cc1              LDRH     r1,[r0,#0x26]  ; GUI_Context
00011e  4411              ADD      r1,r1,r2
000120  84c1              STRH     r1,[r0,#0x26]
;;;117    }
000122  b009              ADD      sp,sp,#0x24
000124  e8bd8ff0          POP      {r4-r11,pc}
;;;118    
                          ENDP

                  GUIMONO_GetCharDistX PROC
;;;122    */
;;;123    int GUIMONO_GetCharDistX(U16P c) {
000128  4812              LDR      r0,|L1.372|
;;;124      const GUI_FONT_MONO GUI_UNI_PTR * pMono = GUI_Context.pAFont->p.pMono;
00012a  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00012c  6980              LDR      r0,[r0,#0x18]
;;;125      GUI_USE_PARA(c);
;;;126      return pMono->XDist;
00012e  7c40              LDRB     r0,[r0,#0x11]
;;;127    }
000130  4770              BX       lr
;;;128    
                          ENDP

                  GUIMONO_GetFontInfo PROC
;;;132    */
;;;133    void GUIMONO_GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO* pfi) {
000132  2002              MOVS     r0,#2
;;;134      GUI_USE_PARA(pFont);
;;;135      pfi->Flags = GUI_FONTINFO_FLAG_MONO;
000134  8008              STRH     r0,[r1,#0]
;;;136    }
000136  4770              BX       lr
;;;137    
                          ENDP

                  GUIMONO_IsInFont PROC
;;;141    */
;;;142    char GUIMONO_IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
000138  6980              LDR      r0,[r0,#0x18]
;;;143      const GUI_FONT_MONO GUI_UNI_PTR * pMono = pFont->p.pMono;
;;;144      unsigned int FirstChar = pMono->FirstChar;
00013a  8982              LDRH     r2,[r0,#0xc]
;;;145      /* Check if regular character first. */
;;;146      if ((c >= (U16P)FirstChar) &&(c <= (U16P)pMono->LastChar)) {
00013c  4291              CMP      r1,r2
00013e  d304              BCC      |L1.330|
000140  89c2              LDRH     r2,[r0,#0xe]
000142  428a              CMP      r2,r1
000144  d301              BCC      |L1.330|
;;;147        return 1;  /* Yes, we have it ! */
000146  2001              MOVS     r0,#1
;;;148      } else {
;;;149       /* Check if character is in translation table */
;;;150        GUI_FONT_TRANSINFO const GUI_UNI_PTR * pti;
;;;151        pti = pMono->pTrans;
;;;152        if (pti) {
;;;153          if ((c >= pti->FirstChar) && (c <= pti->LastChar)) {
;;;154            const GUI_FONT_TRANSLIST GUI_UNI_PTR * pList;
;;;155            pList = pti->pList + c - pti->FirstChar;
;;;156            if (pList->c0 >= 0) {
;;;157              return 1;  /* Yes, we have it ! */
;;;158            }
;;;159          }
;;;160        }
;;;161      }
;;;162      return 0;  /* No, we can not display this character */
;;;163    }
000148  4770              BX       lr
                  |L1.330|
00014a  6880              LDR      r0,[r0,#8]            ;151
00014c  b180              CBZ      r0,|L1.368|
00014e  8802              LDRH     r2,[r0,#0]            ;153
000150  428a              CMP      r2,r1                 ;153
000152  d80d              BHI      |L1.368|
000154  8843              LDRH     r3,[r0,#2]            ;153
000156  428b              CMP      r3,r1                 ;153
000158  d30a              BCC      |L1.368|
00015a  6840              LDR      r0,[r0,#4]            ;155
00015c  eb000081          ADD      r0,r0,r1,LSL #2       ;155
000160  eba00082          SUB      r0,r0,r2,LSL #2       ;155
000164  f9b00000          LDRSH    r0,[r0,#0]            ;156
000168  2800              CMP      r0,#0                 ;156
00016a  db01              BLT      |L1.368|
00016c  2001              MOVS     r0,#1                 ;157
00016e  4770              BX       lr
                  |L1.368|
000170  2000              MOVS     r0,#0                 ;162
000172  4770              BX       lr
;;;164    
                          ENDP

                  |L1.372|
                          DCD      GUI_Context
