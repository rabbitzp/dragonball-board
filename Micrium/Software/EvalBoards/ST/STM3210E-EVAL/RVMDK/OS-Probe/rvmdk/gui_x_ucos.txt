; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_x_ucos.o --depend=.\rvmdk\gui_x_ucos.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_x_ucos.crf ..\..\..\..\..\uCGUI\GUI_X_uCOS.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  GUI_X_GetTime PROC
;;;56     
;;;57     int  GUI_X_GetTime (void) 
000000  f7ffbffe          B.W      OSTimeGet
;;;58     {
;;;59         return ((int)OSTimeGet());
;;;60     }
;;;61     
                          ENDP

                  GUI_X_Delay PROC
;;;62     
;;;63     void  GUI_X_Delay (int period) 
000004  f44f717a          MOV      r1,#0x3e8
;;;64     {
;;;65         INT32U  ticks;
;;;66     
;;;67     
;;;68         ticks = (period * 1000) / OS_TICKS_PER_SEC;
000008  4348              MULS     r0,r1,r0
00000a  fb90f0f1          SDIV     r0,r0,r1
;;;69         OSTimeDly((INT16U)ticks);
00000e  b280              UXTH     r0,r0
000010  f7ffbffe          B.W      OSTimeDly
;;;70     }
;;;71     
                          ENDP

                  GUI_X_ExecIdle PROC
;;;77     */
;;;78     void GUI_X_ExecIdle (void) 
000014  2032              MOVS     r0,#0x32
;;;79     {
;;;80         //OS_X_Delay(1);
;;;81         OSTimeDly(50);
000016  f7ffbffe          B.W      OSTimeDly
;;;82     }
;;;83     
                          ENDP

                  GUI_X_InitOS PROC
;;;94     
;;;95     void  GUI_X_InitOS (void)
00001a  b510              PUSH     {r4,lr}
;;;96     { 
;;;97         DispSem   = OSSemCreate(1);
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       OSSemCreate
000022  4c2e              LDR      r4,|L1.220|
000024  6060              STR      r0,[r4,#4]  ; DispSem
;;;98         EventMbox = OSMboxCreate((void *)0);
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       OSMboxCreate
00002c  60a0              STR      r0,[r4,#8]  ; EventMbox
;;;99     }
00002e  bd10              POP      {r4,pc}
;;;100    
                          ENDP

                  GUI_X_Lock PROC
;;;101    
;;;102    void  GUI_X_Lock (void)
000030  b508              PUSH     {r3,lr}
;;;103    { 
;;;104        INT8U  err;
;;;105        
;;;106        
;;;107        OSSemPend(DispSem, 0, &err);
000032  482a              LDR      r0,|L1.220|
000034  466a              MOV      r2,sp
000036  2100              MOVS     r1,#0
000038  6840              LDR      r0,[r0,#4]  ; DispSem
00003a  f7fffffe          BL       OSSemPend
;;;108    }
00003e  bd08              POP      {r3,pc}
;;;109    
                          ENDP

                  GUI_X_Unlock PROC
;;;110    
;;;111    void  GUI_X_Unlock (void)
000040  4826              LDR      r0,|L1.220|
;;;112    { 
;;;113        OSSemPost(DispSem);
000042  6840              LDR      r0,[r0,#4]  ; DispSem
000044  f7ffbffe          B.W      OSSemPost
;;;114    }
;;;115    
                          ENDP

                  GUI_X_GetTaskId PROC
;;;116    
;;;117    U32  GUI_X_GetTaskId (void) 
000048  4825              LDR      r0,|L1.224|
;;;118    { 
;;;119        return ((U32)(OSTCBCur->OSTCBPrio));
00004a  6800              LDR      r0,[r0,#0]  ; OSTCBCur
00004c  f8900032          LDRB     r0,[r0,#0x32]
;;;120    }
000050  4770              BX       lr
;;;121    
                          ENDP

                  GUI_X_WaitEvent PROC
;;;129    
;;;130    void GUI_X_WaitEvent (void) 
000052  b508              PUSH     {r3,lr}
;;;131    {
;;;132        INT8U  err;
;;;133    
;;;134    
;;;135        (void)OSMboxPend(EventMbox, 0, &err);
000054  4821              LDR      r0,|L1.220|
000056  466a              MOV      r2,sp
000058  2100              MOVS     r1,#0
00005a  6880              LDR      r0,[r0,#8]  ; EventMbox
00005c  f7fffffe          BL       OSMboxPend
;;;136    }
000060  bd08              POP      {r3,pc}
;;;137    
                          ENDP

                  GUI_X_SignalEvent PROC
;;;138    
;;;139    void GUI_X_SignalEvent (void) 
000062  481e              LDR      r0,|L1.220|
;;;140    {
;;;141        (void)OSMboxPost(EventMbox, (void *)1);
000064  2101              MOVS     r1,#1
000066  6880              LDR      r0,[r0,#8]  ; EventMbox
000068  f7ffbffe          B.W      OSMboxPost
;;;142    }
;;;143    
                          ENDP

                  GUI_X_Init PROC
;;;165    
;;;166    void GUI_X_Init (void) 
00006c  b510              PUSH     {r4,lr}
;;;167    {
;;;168        KeySem = OSSemCreate(0);
00006e  2000              MOVS     r0,#0
000070  f7fffffe          BL       OSSemCreate
000074  4919              LDR      r1,|L1.220|
000076  60c8              STR      r0,[r1,#0xc]  ; KeySem
;;;169    }
000078  bd10              POP      {r4,pc}
;;;170    
                          ENDP

                  CheckInit PROC
;;;156    
;;;157    static  void  CheckInit (void) 
00007a  4818              LDR      r0,|L1.220|
;;;158    {
;;;159        if (KeyIsInited == FALSE) {
00007c  7801              LDRB     r1,[r0,#0]  ; KeyIsInited
00007e  2900              CMP      r1,#0
000080  d102              BNE      |L1.136|
;;;160            KeyIsInited = TRUE;
000082  2101              MOVS     r1,#1
000084  7001              STRB     r1,[r0,#0]
;;;161            GUI_X_Init();
000086  e7fe              B        GUI_X_Init
                  |L1.136|
;;;162        }
;;;163    }
000088  4770              BX       lr
;;;164    
                          ENDP

                  GUI_X_GetKey PROC
;;;171    
;;;172    int  GUI_X_GetKey (void) 
00008a  b570              PUSH     {r4-r6,lr}
;;;173    {
;;;174        int r;
;;;175    
;;;176    
;;;177        r          = KeyPressed;
00008c  4d13              LDR      r5,|L1.220|
00008e  692c              LDR      r4,[r5,#0x10]  ; KeyPressed
;;;178        CheckInit();
000090  f7fffffe          BL       CheckInit
;;;179        KeyPressed = 0;
000094  2100              MOVS     r1,#0
000096  6129              STR      r1,[r5,#0x10]  ; KeyPressed
;;;180        return (r);
000098  4620              MOV      r0,r4
;;;181    }
00009a  bd70              POP      {r4-r6,pc}
;;;182    
                          ENDP

                  GUI_X_WaitKey PROC
;;;183    
;;;184    int  GUI_X_WaitKey (void) 
00009c  b538              PUSH     {r3-r5,lr}
;;;185    {
;;;186        int    r;
;;;187        INT8U  err;
;;;188    
;;;189    
;;;190        CheckInit();
00009e  f7fffffe          BL       CheckInit
;;;191        if (KeyPressed == 0) {
0000a2  4c0e              LDR      r4,|L1.220|
0000a4  6920              LDR      r0,[r4,#0x10]  ; KeyPressed
0000a6  b920              CBNZ     r0,|L1.178|
;;;192            OSSemPend(KeySem, 0, &err);
0000a8  466a              MOV      r2,sp
0000aa  2100              MOVS     r1,#0
0000ac  68e0              LDR      r0,[r4,#0xc]  ; KeySem
0000ae  f7fffffe          BL       OSSemPend
                  |L1.178|
;;;193        }
;;;194        r          = KeyPressed;
0000b2  6920              LDR      r0,[r4,#0x10]  ; KeyPressed
;;;195        KeyPressed = 0;
0000b4  2100              MOVS     r1,#0
0000b6  6121              STR      r1,[r4,#0x10]  ; KeyPressed
;;;196        return (r);
;;;197    }
0000b8  bd38              POP      {r3-r5,pc}
;;;198    
                          ENDP

                  GUI_X_StoreKey PROC
;;;199    
;;;200    void  GUI_X_StoreKey (int k) 
0000ba  4908              LDR      r1,|L1.220|
;;;201    {
;;;202        KeyPressed = k;
0000bc  6108              STR      r0,[r1,#0x10]  ; KeyPressed
;;;203        OSSemPost(KeySem);
0000be  68c8              LDR      r0,[r1,#0xc]  ; KeySem
0000c0  f7ffbffe          B.W      OSSemPost
;;;204    }
;;;205    
                          ENDP

                  GUI_X_Log PROC
;;;206    void GUI_X_Log(const char *s)
0000c4  4601              MOV      r1,r0
;;;207    {
;;;208        printf("[Debug]%s", s);
0000c6  a007              ADR      r0,|L1.228|
0000c8  f7ffbffe          B.W      __2printf
;;;209    }
;;;210    
                          ENDP

                  GUI_X_Warn PROC
;;;211    void GUI_X_Warn(const char *s)
0000cc  4601              MOV      r1,r0
;;;212    {
;;;213        printf("[Warn]%s", s);
0000ce  a008              ADR      r0,|L1.240|
0000d0  f7ffbffe          B.W      __2printf
;;;214    }
;;;215    
                          ENDP

                  GUI_X_ErrorOut PROC
;;;216    void GUI_X_ErrorOut(const char *s)
0000d4  4601              MOV      r1,r0
;;;217    {
;;;218        printf("[Err]%s", s);
0000d6  a009              ADR      r0,|L1.252|
0000d8  f7ffbffe          B.W      __2printf
;;;219    }
;;;220    	 	 			 		    	 				 	  			   	 	 	 	 	 	  	  	      	   		 	 	 		  		  	 		 	  	  			     			       	   	 			  		    	 	     	 				  	 					 	 			   	  	  			 				 		 	 	 			     			 
                          ENDP

                  |L1.220|
                          DCD      ||.data||
                  |L1.224|
                          DCD      OSTCBCur
                  |L1.228|
0000e4  5b446562          DCB      "[Debug]%s",0
0000e8  75675d25
0000ec  7300    
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L1.240|
0000f0  5b576172          DCB      "[Warn]%s",0
0000f4  6e5d2573
0000f8  00      
0000f9  00                DCB      0
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L1.252|
0000fc  5b457272          DCB      "[Err]%s",0
000100  5d257300

                          AREA ||.data||, DATA, ALIGN=2

                  KeyIsInited
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  DispSem
                          DCD      0x00000000
                  EventMbox
                          DCD      0x00000000
                  KeySem
                          DCD      0x00000000
                  KeyPressed
                          DCD      0x00000000
