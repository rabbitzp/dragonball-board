; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\lcdrle8.o --depend=.\rvmdk\lcdrle8.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\lcdrle8.crf ..\..\..\..\..\uCGUI\GUI\Core\LCDRLE8.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DrawBitmap_RLE8 PROC
;;;47     */
;;;48     static void _DrawBitmap_RLE8(int x0,int y0,int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, int xMag, int yMag) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4680              MOV      r8,r0
000008  f8dda05c          LDR      r10,[sp,#0x5c]
00000c  9f14              LDR      r7,[sp,#0x50]
00000e  9815              LDR      r0,[sp,#0x54]
000010  468b              MOV      r11,r1
;;;49       LCD_PIXELINDEX aColorIndex[2];
;;;50       LCD_PIXELINDEX PixelIndex;
;;;51       int xi,y;
;;;52       int xL, yL;
;;;53       const U8 GUI_UNI_PTR * pPixelOrg = pPixel;
000012  463e              MOV      r6,r7
;;;54       char NoTrans = !(GUI_Context.DrawMode & LCD_DRAWMODE_TRANS);
000014  4a74              LDR      r2,|L1.488|
000016  2301              MOVS     r3,#1
000018  7c11              LDRB     r1,[r2,#0x10]  ; GUI_Context
00001a  ea230151          BIC      r1,r3,r1,LSR #1
00001e  9102              STR      r1,[sp,#8]
;;;55       const LCD_PIXELINDEX* pTrans =NULL;
000020  2100              MOVS     r1,#0
000022  9101              STR      r1,[sp,#4]
;;;56       char IsMagnified = ((yMag | xMag) != 1);
000024  9916              LDR      r1,[sp,#0x58]
000026  ea4a0101          ORR      r1,r10,r1
00002a  2901              CMP      r1,#1
00002c  d001              BEQ      |L1.50|
00002e  2101              MOVS     r1,#1
000030  e000              B        |L1.52|
                  |L1.50|
000032  2100              MOVS     r1,#0
                  |L1.52|
000034  9100              STR      r1,[sp,#0]
;;;57       aColorIndex[0] = LCD_ACOLORINDEX[0];
000036  4a6c              LDR      r2,|L1.488|
000038  8811              LDRH     r1,[r2,#0]  ; GUI_Context
00003a  f8ad100c          STRH     r1,[sp,#0xc]
00003e  9106              STR      r1,[sp,#0x18]
;;;58       aColorIndex[1] = LCD_ACOLORINDEX[1];
000040  8851              LDRH     r1,[r2,#2]  ; GUI_Context
000042  f8ad100e          STRH     r1,[sp,#0xe]
000046  9105              STR      r1,[sp,#0x14]
;;;59       /* Handle color translation */
;;;60       if ((pLogPal) && (pLogPal->pPalEntries)) {
000048  b130              CBZ      r0,|L1.88|
00004a  6881              LDR      r1,[r0,#8]
00004c  b121              CBZ      r1,|L1.88|
;;;61         if ((pTrans = LCD_GetpPalConvTable(pLogPal)) == NULL) {
00004e  f7fffffe          BL       LCD_GetpPalConvTable
000052  9001              STR      r0,[sp,#4]
000054  2800              CMP      r0,#0
000056  d074              BEQ      |L1.322|
                  |L1.88|
;;;62           return;
;;;63         }
;;;64       }
;;;65      /* Check if we can limit the number of lines due to clipping) */
;;;66       if (yMag == 1) {
000058  f1ba0f01          CMP      r10,#1
00005c  d10a              BNE      |L1.116|
;;;67         if (ysize > GUI_Context.ClipRect.y1 - y0 + 1)
00005e  4862              LDR      r0,|L1.488|
000060  990a              LDR      r1,[sp,#0x28]
000062  f9b0000e          LDRSH    r0,[r0,#0xe]  ; GUI_Context
000066  eba0000b          SUB      r0,r0,r11
00006a  1c42              ADDS     r2,r0,#1
00006c  428a              CMP      r2,r1
00006e  da01              BGE      |L1.116|
;;;68           ysize = GUI_Context.ClipRect.y1 - y0 + 1;
000070  1c40              ADDS     r0,r0,#1
000072  900a              STR      r0,[sp,#0x28]
                  |L1.116|
;;;69       }
;;;70       /* Init variables for looping */
;;;71       xi=0;
000074  2400              MOVS     r4,#0
;;;72       y =0;
000076  2500              MOVS     r5,#0
;;;73       /* Check if we can use the cache to save some unnecessary iterations */
;;;74       if (!IsMagnified) {
;;;75         int yDiff = GUI_Context.ClipRect.y0 - y0;
;;;76         if ((Cache.pPixelStart == pPixel) && (yDiff > Cache.y)) {
000078  495c              LDR      r1,|L1.492|
00007a  9800              LDR      r0,[sp,#0]            ;74
00007c  b968              CBNZ     r0,|L1.154|
00007e  485a              LDR      r0,|L1.488|
000080  f9b0000a          LDRSH    r0,[r0,#0xa]          ;75  ; GUI_Context
000084  eba0020b          SUB      r2,r0,r11             ;75
000088  68c8              LDR      r0,[r1,#0xc]  ; Cache
00008a  42b8              CMP      r0,r7
00008c  d105              BNE      |L1.154|
00008e  6848              LDR      r0,[r1,#4]  ; Cache
000090  4290              CMP      r0,r2
000092  da02              BGE      |L1.154|
;;;77           /* Accept cache values */
;;;78           y = Cache.y;
000094  4605              MOV      r5,r0
;;;79           xi = Cache.x;
000096  680c              LDR      r4,[r1,#0]  ; Cache
;;;80           pPixel = Cache.pPixel;
000098  688f              LDR      r7,[r1,#8]  ; Cache
                  |L1.154|
;;;81         }
;;;82       }
;;;83       /* Init values for caching */
;;;84       Cache.pPixel = Cache.pPixelStart = pPixelOrg;
00009a  60ce              STR      r6,[r1,#0xc]  ; Cache
00009c  608e              STR      r6,[r1,#8]  ; Cache
;;;85       Cache.x = Cache.y = 0;
00009e  2000              MOVS     r0,#0
0000a0  6048              STR      r0,[r1,#4]  ; Cache
0000a2  6008              STR      r0,[r1,#0]  ; Cache
;;;86       /* Repeat until we have reached bottom */
;;;87       for (; y < ysize; ) {
0000a4  980a              LDR      r0,[sp,#0x28]
0000a6  4285              CMP      r5,r0
0000a8  da7e              BGE      |L1.424|
                  |L1.170|
;;;88         U8 Cmd  = *pPixel++;
0000aa  f8979000          LDRB     r9,[r7,#0]
0000ae  1c78              ADDS     r0,r7,#1
;;;89         U8 Data = *pPixel++;
0000b0  1c47              ADDS     r7,r0,#1
0000b2  7806              LDRB     r6,[r0,#0]
;;;90         if (Cmd) {
0000b4  f1b90f00          CMP      r9,#0
0000b8  d044              BEQ      |L1.324|
;;;91           /* Save cache info */
;;;92           Cache.pPixel = pPixel-2;
0000ba  484c              LDR      r0,|L1.492|
0000bc  1eb9              SUBS     r1,r7,#2
0000be  6081              STR      r1,[r0,#8]  ; Cache
;;;93           Cache.x = xi;
0000c0  6004              STR      r4,[r0,#0]  ; Cache
;;;94           Cache.y = y;
0000c2  6045              STR      r5,[r0,#4]  ; Cache
;;;95           LCD_ACOLORINDEX[1] = pTrans ? *(pTrans+Data) : Data;
0000c4  9801              LDR      r0,[sp,#4]
0000c6  b118              CBZ      r0,|L1.208|
0000c8  9801              LDR      r0,[sp,#4]
0000ca  f8300016          LDRH     r0,[r0,r6,LSL #1]
0000ce  e000              B        |L1.210|
                  |L1.208|
0000d0  4630              MOV      r0,r6
                  |L1.210|
0000d2  4945              LDR      r1,|L1.488|
0000d4  8048              STRH     r0,[r1,#2]
;;;96           while (Cmd) {
;;;97             int xi1 = xi+Cmd;
;;;98             if (xi1>=xsize)
;;;99               xi1 = xsize;
;;;100            Cmd -= (xi1-xi);
;;;101            if (Data || NoTrans) {  /* Skip transparent pixels */
0000d6  9802              LDR      r0,[sp,#8]
0000d8  4330              ORRS     r0,r0,r6
0000da  9004              STR      r0,[sp,#0x10]
                  |L1.220|
0000dc  eb040609          ADD      r6,r4,r9              ;97
0000e0  9809              LDR      r0,[sp,#0x24]         ;98
0000e2  4286              CMP      r6,r0                 ;98
0000e4  db00              BLT      |L1.232|
0000e6  9e09              LDR      r6,[sp,#0x24]         ;99
                  |L1.232|
0000e8  1b30              SUBS     r0,r6,r4              ;100
0000ea  eba90100          SUB      r1,r9,r0              ;100
0000ee  f00109ff          AND      r9,r1,#0xff           ;100
0000f2  9904              LDR      r1,[sp,#0x10]
0000f4  b1d9              CBZ      r1,|L1.302|
;;;102              if (IsMagnified) {
0000f6  9900              LDR      r1,[sp,#0]
0000f8  b181              CBZ      r1,|L1.284|
;;;103                xL = xMag * xi + x0;
0000fa  9916              LDR      r1,[sp,#0x58]
0000fc  fb018c04          MLA      r12,r1,r4,r8
;;;104                yL = yMag * y + y0;
000100  fb0ab105          MLA      r1,r10,r5,r11
;;;105                LCD_FillRect(xL, yL, xL + xMag * (xi1 - xi) -1 , yL + yMag - 1);
000104  eb01020a          ADD      r2,r1,r10
000108  1e53              SUBS     r3,r2,#1
00010a  9a16              LDR      r2,[sp,#0x58]
00010c  f1ac0401          SUB      r4,r12,#1
000110  fb024200          MLA      r2,r2,r0,r4
000114  4660              MOV      r0,r12
000116  f7fffffe          BL       LCD_FillRect
00011a  e008              B        |L1.302|
                  |L1.284|
;;;106              } else {
;;;107                LCD_DrawHLine(x0+xi, y + y0, xi1+x0-1);
00011c  eb060008          ADD      r0,r6,r8
000120  1e42              SUBS     r2,r0,#1
000122  eb05010b          ADD      r1,r5,r11
000126  eb080004          ADD      r0,r8,r4
00012a  f7fffffe          BL       LCD_DrawHLine
                  |L1.302|
;;;108              }
;;;109            }
;;;110            xi =xi1;
;;;111            if (xi1==xsize) {
00012e  9809              LDR      r0,[sp,#0x24]
000130  4634              MOV      r4,r6
000132  4286              CMP      r6,r0
000134  d101              BNE      |L1.314|
;;;112              y++;
000136  1c6d              ADDS     r5,r5,#1
;;;113              xi=0;
000138  2400              MOVS     r4,#0
                  |L1.314|
00013a  f1b90f00          CMP      r9,#0                 ;96
00013e  d1cd              BNE      |L1.220|
000140  e045              B        |L1.462|
                  |L1.322|
000142  e04d              B        |L1.480|
                  |L1.324|
000144  f8df90a0          LDR      r9,|L1.488|
                  |L1.328|
;;;114            }
;;;115          }
;;;116        } else {
;;;117          do {
;;;118            U8 Index = *pPixel++;
000148  f8170b01          LDRB     r0,[r7],#1
;;;119            if (Index || NoTrans) {  /* Skip transparent pixels */
00014c  9902              LDR      r1,[sp,#8]
00014e  4301              ORRS     r1,r1,r0
000150  d030              BEQ      |L1.436|
;;;120              int x = x0+xi;
000152  eb080304          ADD      r3,r8,r4
;;;121              PixelIndex = pTrans ? *(pTrans+Index) : Index;
000156  9901              LDR      r1,[sp,#4]
000158  b111              CBZ      r1,|L1.352|
00015a  9901              LDR      r1,[sp,#4]
00015c  f8310010          LDRH     r0,[r1,r0,LSL #1]
                  |L1.352|
;;;122              if (IsMagnified) {
000160  9900              LDR      r1,[sp,#0]
000162  b179              CBZ      r1,|L1.388|
;;;123                LCD_SetColorIndex(PixelIndex);
000164  f7fffffe          BL       LCD_SetColorIndex
;;;124                xL = xMag * xi + x0;
000168  9816              LDR      r0,[sp,#0x58]
00016a  fb008004          MLA      r0,r0,r4,r8
;;;125                yL = yMag * y + y0;
00016e  fb0ab105          MLA      r1,r10,r5,r11
;;;126                LCD_FillRect(xL, yL, xL + xMag -1 , yL + yMag - 1);
000172  eb01020a          ADD      r2,r1,r10
000176  1e53              SUBS     r3,r2,#1
000178  9a16              LDR      r2,[sp,#0x58]
00017a  4402              ADD      r2,r2,r0
00017c  1e52              SUBS     r2,r2,#1
00017e  f7fffffe          BL       LCD_FillRect
000182  e017              B        |L1.436|
                  |L1.388|
;;;127              } else {
;;;128                #if 1 /* High speed variant */
;;;129                  if (y + y0>= GUI_Context.ClipRect.y0)
000184  f9b9200a          LDRSH    r2,[r9,#0xa]  ; GUI_Context
000188  eb05010b          ADD      r1,r5,r11
00018c  46cc              MOV      r12,r9
00018e  4291              CMP      r1,r2
000190  db10              BLT      |L1.436|
;;;130                    if (x >= GUI_Context.ClipRect.x0)
000192  f9bc2008          LDRSH    r2,[r12,#8]  ; GUI_Context
000196  429a              CMP      r2,r3
000198  dc0c              BGT      |L1.436|
;;;131                      if (x <= GUI_Context.ClipRect.x1)
00019a  f9bc200c          LDRSH    r2,[r12,#0xc]  ; GUI_Context
00019e  429a              CMP      r2,r3
0001a0  db08              BLT      |L1.436|
;;;132                        LCDDEV_L0_SetPixelIndex(x, y + y0, PixelIndex);
0001a2  f8dc204c          LDR      r2,[r12,#0x4c]  ; GUI_Context
0001a6  e000              B        |L1.426|
                  |L1.424|
0001a8  e015              B        |L1.470|
                  |L1.426|
0001aa  f8d2c024          LDR      r12,[r2,#0x24]
0001ae  4602              MOV      r2,r0
0001b0  4618              MOV      r0,r3
0001b2  47e0              BLX      r12
                  |L1.436|
;;;133                #else
;;;134                  LCD_SetPixelIndex(x, y + y0, PixelIndex);
;;;135                #endif
;;;136              }
;;;137            }
;;;138            if (++xi >= xsize) {
0001b4  9809              LDR      r0,[sp,#0x24]
0001b6  1c64              ADDS     r4,r4,#1
0001b8  4284              CMP      r4,r0
0001ba  db04              BLT      |L1.454|
;;;139              xi=0; y++;
0001bc  2400              MOVS     r4,#0
0001be  1c6d              ADDS     r5,r5,#1
;;;140              if (y >= ysize)
0001c0  980a              LDR      r0,[sp,#0x28]
0001c2  4285              CMP      r5,r0
0001c4  da03              BGE      |L1.462|
                  |L1.454|
;;;141                break;
;;;142            }
;;;143          } while (--Data);
0001c6  1e70              SUBS     r0,r6,#1
0001c8  f01006ff          ANDS     r6,r0,#0xff
0001cc  d1bc              BNE      |L1.328|
                  |L1.462|
0001ce  980a              LDR      r0,[sp,#0x28]         ;87
0001d0  4285              CMP      r5,r0                 ;87
0001d2  f6ffaf6a          BLT      |L1.170|
                  |L1.470|
;;;144        }
;;;145      }
;;;146      LCD_ACOLORINDEX[0] = aColorIndex[0];
0001d6  4804              LDR      r0,|L1.488|
0001d8  9906              LDR      r1,[sp,#0x18]
0001da  8001              STRH     r1,[r0,#0]
;;;147      LCD_ACOLORINDEX[1] = aColorIndex[1];
0001dc  9905              LDR      r1,[sp,#0x14]
0001de  8041              STRH     r1,[r0,#2]
                  |L1.480|
;;;148    }
0001e0  b00b              ADD      sp,sp,#0x2c
0001e2  e8bd8ff0          POP      {r4-r11,pc}
;;;149    
                          ENDP

0001e6  0000              DCW      0x0000
                  |L1.488|
                          DCD      GUI_Context
                  |L1.492|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  Cache
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  GUI_BitmapMethodsRLE8
                          DCD      _DrawBitmap_RLE8
                          DCD      0x00000000
