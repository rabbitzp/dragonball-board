; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guiaacircle.o --depend=.\rvmdk\guiaacircle.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guiaacircle.crf ..\..\..\..\..\uCGUI\GUI\AntiAlias\GUIAACircle.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FillCircle PROC
;;;41     */
;;;42     static void FillCircle(int x0, int y0, int r) {
000000  e92d5ff0          PUSH     {r4-r12,lr}
000004  4680              MOV      r8,r0
000006  468b              MOV      r11,r1
000008  4616              MOV      r6,r2
;;;43       int i, x;
;;;44       int sqmax = r*r+r/2;
00000a  eb0670d6          ADD      r0,r6,r6,LSR #31
00000e  1040              ASRS     r0,r0,#1
000010  fb060706          MLA      r7,r6,r6,r0
;;;45       int yMin, yMax;
;;;46       /* First step : find uppermost and lowermost coordinates */
;;;47       yMin = y0 - r;
000014  ebab0906          SUB      r9,r11,r6
;;;48       yMax = y0 + r;
000018  eb0b0a06          ADD      r10,r11,r6
;;;49       /* Use Clipping rect to reduce calculation (if possible) */
;;;50       if (GUI_Context.pClipRect_HL) {
00001c  484d              LDR      r0,|L1.340|
00001e  6940              LDR      r0,[r0,#0x14]  ; GUI_Context
000020  b148              CBZ      r0,|L1.54|
;;;51         if (yMax > GUI_Context.pClipRect_HL->y1)
000022  f9b01006          LDRSH    r1,[r0,#6]
000026  4551              CMP      r1,r10
000028  da00              BGE      |L1.44|
;;;52           yMax = GUI_Context.pClipRect_HL->y1;
00002a  468a              MOV      r10,r1
                  |L1.44|
;;;53         if (yMin < GUI_Context.pClipRect_HL->y0)
00002c  f9b00002          LDRSH    r0,[r0,#2]
000030  4548              CMP      r0,r9
000032  dd00              BLE      |L1.54|
;;;54           yMin = GUI_Context.pClipRect_HL->y0;
000034  4681              MOV      r9,r0
                  |L1.54|
;;;55       }
;;;56       /* Draw top half */
;;;57       for (i=0, x=r; i<r; i++) {
000036  2500              MOVS     r5,#0
000038  1e34              SUBS     r4,r6,#0
00003a  dd1c              BLE      |L1.118|
                  |L1.60|
;;;58         int y = y0-i;
00003c  ebab0105          SUB      r1,r11,r5
;;;59         if ((y >= yMin) && (y <= yMax)) {
000040  4549              CMP      r1,r9
000042  db15              BLT      |L1.112|
000044  4551              CMP      r1,r10
000046  dc13              BGT      |L1.112|
;;;60           /* calc proper x-value */
;;;61           while ((i*i+x*x) >sqmax)
000048  fb05f005          MUL      r0,r5,r5
00004c  fb040204          MLA      r2,r4,r4,r0
000050  42ba              CMP      r2,r7
000052  dd04              BLE      |L1.94|
                  |L1.84|
;;;62             --x;
000054  1e64              SUBS     r4,r4,#1
000056  fb040204          MLA      r2,r4,r4,r0           ;61
00005a  42ba              CMP      r2,r7                 ;61
00005c  dcfa              BGT      |L1.84|
                  |L1.94|
;;;63           LCD_HL_DrawHLine (x0-x, y, x0+x);
00005e  4a3d              LDR      r2,|L1.340|
000060  eb080c04          ADD      r12,r8,r4
000064  eba80004          SUB      r0,r8,r4
000068  6dd2              LDR      r2,[r2,#0x5c]  ; GUI_Context
00006a  6813              LDR      r3,[r2,#0]
00006c  4662              MOV      r2,r12
00006e  4798              BLX      r3
                  |L1.112|
000070  1c6d              ADDS     r5,r5,#1              ;57
000072  42b5              CMP      r5,r6                 ;57
000074  dbe2              BLT      |L1.60|
                  |L1.118|
;;;64         }
;;;65       }
;;;66       /* Draw bottom half */
;;;67       for (i=0, x=r; i<r; i++) {
000076  2400              MOVS     r4,#0
000078  1e35              SUBS     r5,r6,#0
00007a  dd1c              BLE      |L1.182|
                  |L1.124|
;;;68         int y = y0 + i;
00007c  eb0b0104          ADD      r1,r11,r4
;;;69         if ((y >= yMin) && (y <= yMax)) {
000080  4549              CMP      r1,r9
000082  db15              BLT      |L1.176|
000084  4551              CMP      r1,r10
000086  dc13              BGT      |L1.176|
;;;70           /* calc proper x-value */
;;;71           while ((i*i+x*x) >sqmax)
000088  fb04f004          MUL      r0,r4,r4
00008c  fb050205          MLA      r2,r5,r5,r0
000090  42ba              CMP      r2,r7
000092  dd04              BLE      |L1.158|
                  |L1.148|
;;;72             --x;
000094  1e6d              SUBS     r5,r5,#1
000096  fb050205          MLA      r2,r5,r5,r0           ;71
00009a  42ba              CMP      r2,r7                 ;71
00009c  dcfa              BGT      |L1.148|
                  |L1.158|
;;;73           LCD_HL_DrawHLine (x0-x, y, x0+x);
00009e  4a2d              LDR      r2,|L1.340|
0000a0  eb080c05          ADD      r12,r8,r5
0000a4  eba80005          SUB      r0,r8,r5
0000a8  6dd2              LDR      r2,[r2,#0x5c]  ; GUI_Context
0000aa  6813              LDR      r3,[r2,#0]
0000ac  4662              MOV      r2,r12
0000ae  4798              BLX      r3
                  |L1.176|
0000b0  1c64              ADDS     r4,r4,#1              ;67
0000b2  42b4              CMP      r4,r6                 ;67
0000b4  dbe2              BLT      |L1.124|
                  |L1.182|
;;;74         }
;;;75       }
;;;76     }
0000b6  e8bd9ff0          POP      {r4-r12,pc}
;;;77     
                          ENDP

                  GL_FillCircleAA_HiRes PROC
;;;87     */
;;;88     void GL_FillCircleAA_HiRes(int x0, int y0, int r) {
0000ba  b570              PUSH     {r4-r6,lr}
0000bc  4604              MOV      r4,r0
0000be  460e              MOV      r6,r1
0000c0  4615              MOV      r5,r2
;;;89     /* Init AA Subsystem, pass horizontal limits */
;;;90       GUI_AA_Init_HiRes(x0-r, x0+r);
0000c2  1961              ADDS     r1,r4,r5
0000c4  1b60              SUBS     r0,r4,r5
0000c6  f7fffffe          BL       GUI_AA_Init_HiRes
;;;91     /* Do the actual drawing */
;;;92       FillCircle(x0, y0, r);
0000ca  462a              MOV      r2,r5
0000cc  4631              MOV      r1,r6
0000ce  4620              MOV      r0,r4
0000d0  f7fffffe          BL       FillCircle
;;;93     /* Cleanup */
;;;94       GUI_AA_Exit();
0000d4  e8bd4070          POP      {r4-r6,lr}
0000d8  f7ffbffe          B.W      GUI_AA_Exit
;;;95     }
;;;96     
                          ENDP

                  GUI_AA_FillCircle PROC
;;;100    */
;;;101    void GUI_AA_FillCircle(int x0, int y0, int r) {
0000dc  b570              PUSH     {r4-r6,lr}
0000de  b082              SUB      sp,sp,#8
0000e0  4605              MOV      r5,r0
0000e2  460e              MOV      r6,r1
0000e4  4614              MOV      r4,r2
;;;102      #if (GUI_WINSUPPORT)
;;;103        GUI_RECT Rect;
;;;104      #endif
;;;105      GUI_LOCK();
0000e6  f7fffffe          BL       GUI_Lock
;;;106      #if (GUI_WINSUPPORT)
;;;107        WM_ADDORG_AA(x0,y0);
0000ea  f7fffffe          BL       WM__GetOrgX_AA
0000ee  4405              ADD      r5,r5,r0
0000f0  f7fffffe          BL       WM__GetOrgY_AA
0000f4  4406              ADD      r6,r6,r0
;;;108      #endif
;;;109      if (!GUI_Context.AA_HiResEnable) {
0000f6  4817              LDR      r0,|L1.340|
0000f8  f8901061          LDRB     r1,[r0,#0x61]  ; GUI_Context
0000fc  b921              CBNZ     r1,|L1.264|
;;;110        x0 *= GUI_Context.AA_Factor;
0000fe  f8900060          LDRB     r0,[r0,#0x60]  ; GUI_Context
000102  4345              MULS     r5,r0,r5
;;;111        y0 *= GUI_Context.AA_Factor;
000104  4346              MULS     r6,r0,r6
;;;112        r  *= GUI_Context.AA_Factor;
000106  4344              MULS     r4,r0,r4
                  |L1.264|
;;;113      }
;;;114      #if (GUI_WINSUPPORT)
;;;115        Rect.x0 = GUI_AA_HiRes2Pixel(x0 - r);
000108  1b28              SUBS     r0,r5,r4
00010a  f7fffffe          BL       GUI_AA_HiRes2Pixel
00010e  f8ad0000          STRH     r0,[sp,#0]
;;;116        Rect.x1 = GUI_AA_HiRes2Pixel(x0 + r);
000112  1928              ADDS     r0,r5,r4
000114  f7fffffe          BL       GUI_AA_HiRes2Pixel
000118  f8ad0004          STRH     r0,[sp,#4]
;;;117        Rect.y0 = GUI_AA_HiRes2Pixel(y0 - r);
00011c  1b30              SUBS     r0,r6,r4
00011e  f7fffffe          BL       GUI_AA_HiRes2Pixel
000122  f8ad0002          STRH     r0,[sp,#2]
;;;118        Rect.y1 = GUI_AA_HiRes2Pixel(y0 + r);
000126  1930              ADDS     r0,r6,r4
000128  f7fffffe          BL       GUI_AA_HiRes2Pixel
00012c  f8ad0006          STRH     r0,[sp,#6]
;;;119        WM_ITERATE_START(&Rect); {
000130  4668              MOV      r0,sp
000132  f7fffffe          BL       WM__InitIVRSearch
000136  b140              CBZ      r0,|L1.330|
                  |L1.312|
;;;120      #endif
;;;121      GL_FillCircleAA_HiRes(x0, y0, r);
000138  4622              MOV      r2,r4
00013a  4631              MOV      r1,r6
00013c  4628              MOV      r0,r5
00013e  f7fffffe          BL       GL_FillCircleAA_HiRes
;;;122      #if (GUI_WINSUPPORT)
;;;123        } WM_ITERATE_END();
000142  f7fffffe          BL       WM__GetNextIVR
000146  2800              CMP      r0,#0
000148  d1f6              BNE      |L1.312|
                  |L1.330|
;;;124      #endif
;;;125      GUI_UNLOCK();
00014a  f7fffffe          BL       GUI_Unlock
;;;126    }
00014e  b002              ADD      sp,sp,#8
000150  bd70              POP      {r4-r6,pc}
;;;127    
                          ENDP

000152  0000              DCW      0x0000
                  |L1.340|
                          DCD      GUI_Context
