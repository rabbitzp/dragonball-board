; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\user_task_lcd.o --depend=.\rvmdk\user_task_lcd.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\user_task_lcd.crf ..\..\..\..\..\User\user_task_lcd.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  ULCD_EventLoop PROC
;;;66     
;;;67     void ULCD_EventLoop(void)
000000  b082              SUB      sp,sp,#8
;;;68     {
;;;69         INT8U           err     = 0;    
000002  2600              MOVS     r6,#0
000004  9601              STR      r6,[sp,#4]
;;;70         UCORE_MSG_S     *pMsg   = NULL;   	
;;;71         
;;;72         while (1)
;;;73         {
;;;74             pMsg = OSMboxPend(g_QMboxUIMsg, 0, &err); 
000006  4d2e              LDR      r5,|L1.192|
                  |L1.8|
000008  aa01              ADD      r2,sp,#4
00000a  2100              MOVS     r1,#0
00000c  6828              LDR      r0,[r5,#0]  ; g_QMboxUIMsg
00000e  f7fffffe          BL       OSMboxPend
000012  4604              MOV      r4,r0
;;;75             if ((OS_NO_ERR == err) && (NULL != pMsg))
000014  f89d0004          LDRB     r0,[sp,#4]
000018  2800              CMP      r0,#0
00001a  d1f5              BNE      |L1.8|
00001c  2c00              CMP      r4,#0
00001e  d0f3              BEQ      |L1.8|
;;;76             {
;;;77                 switch (pMsg->usMsgType)
000020  8821              LDRH     r1,[r4,#0]
000022  f1a10064          SUB      r0,r1,#0x64
000026  2805              CMP      r0,#5
000028  d218              BCS      |L1.92|
00002a  e8dff000          TBB      [pc,r0]
00002e  0307              DCB      0x03,0x07
000030  0b0f1300          DCB      0x0b,0x0f,0x13,0x00
;;;78                 {
;;;79                     case UCORE_MESSAGE_TYPE_KEY_HOME:
;;;80                         {
;;;81                             printf("Key press:HOME.\r\n");
000034  a023              ADR      r0,|L1.196|
000036  f7fffffe          BL       __2printf
;;;82                             //LCD_ClrScr(CL_BLACK);
;;;83                         	//LCD_TextOut(110, 120, "HOME", TRANSP);
;;;84                         }
;;;85                         break;
00003a  e012              B        |L1.98|
;;;86                     case UCORE_MESSAGE_TYPE_KEY_OK:
;;;87                         {
;;;88                             printf("Key press:OK.\r\n");
00003c  a026              ADR      r0,|L1.216|
00003e  f7fffffe          BL       __2printf
;;;89                             //LCD_ClrScr(CL_BLACK);
;;;90                             //LCD_TextOut(110, 120, "OK", TRANSP);
;;;91                         }
;;;92                         break;
000042  e00e              B        |L1.98|
;;;93                     case UCORE_MESSAGE_TYPE_KEY_UP:
;;;94                         {
;;;95                             printf("Key press:UP.\r\n");
000044  a028              ADR      r0,|L1.232|
000046  f7fffffe          BL       __2printf
;;;96                             //LCD_ClrScr(CL_BLACK);
;;;97                             //LCD_TextOut(110, 120, "UP", TRANSP);
;;;98                         }
;;;99                         break;
00004a  e00a              B        |L1.98|
;;;100                    case UCORE_MESSAGE_TYPE_KEY_DOWN:
;;;101                        {
;;;102                            printf("Key press:DOWN.\r\n");
00004c  a02a              ADR      r0,|L1.248|
00004e  f7fffffe          BL       __2printf
;;;103                            //LCD_ClrScr(CL_BLACK);
;;;104                            //LCD_TextOut(110, 120, "DOWN", TRANSP);
;;;105                        }
;;;106                        break;
000052  e006              B        |L1.98|
;;;107                    case UCORE_MESSAGE_TYPE_KEY_RETURN:
;;;108                        {
;;;109                            printf("Key press:RETURN.\r\n");
000054  a02d              ADR      r0,|L1.268|
000056  f7fffffe          BL       __2printf
;;;110                            //LCD_ClrScr(CL_BLACK);
;;;111                            //LCD_TextOut(110, 120, "RETURN", TRANSP);
;;;112                        }
;;;113                        break;                                      
00005a  e002              B        |L1.98|
                  |L1.92|
;;;114                    default:
;;;115                        printf("Unknown message type:%d\r\n", pMsg->usMsgType);
00005c  a030              ADR      r0,|L1.288|
00005e  f7fffffe          BL       __2printf
                  |L1.98|
;;;116                        break;
;;;117                }
;;;118    
;;;119                /* release message buff */
;;;120                UCORE_DEL_MESSAGE(pMsg);
000062  6860              LDR      r0,[r4,#4]
000064  b110              CBZ      r0,|L1.108|
000066  f7fffffe          BL       free
00006a  6066              STR      r6,[r4,#4]
                  |L1.108|
00006c  4620              MOV      r0,r4
00006e  f7fffffe          BL       free
000072  e7c9              B        |L1.8|
;;;121            }
;;;122        }
;;;123    }
;;;124    
                          ENDP

                  ULCD_Init PROC
;;;59     
;;;60     void ULCD_Init(void)
000074  b510              PUSH     {r4,lr}
;;;61     {
;;;62         g_QMboxUIMsg = OSMboxCreate((void *)0);
000076  2000              MOVS     r0,#0
000078  f7fffffe          BL       OSMboxCreate
00007c  4910              LDR      r1,|L1.192|
00007e  6008              STR      r0,[r1,#0]  ; g_QMboxUIMsg
;;;63     
;;;64         printf("User task lcd init finished.\r\n");
000080  e8bd4010          POP      {r4,lr}
000084  a02d              ADR      r0,|L1.316|
000086  f7ffbffe          B.W      __2printf
;;;65     }
;;;66     
                          ENDP

                  ULCD_TaskProc PROC
;;;46     
;;;47     void ULCD_TaskProc(void *p_arg)
00008a  a034              ADR      r0,|L1.348|
;;;48     {
;;;49         printf("User Task lcd Start.\r\n");
00008c  f7fffffe          BL       __2printf
;;;50     
;;;51         /* call init */
;;;52         ULCD_Init();
000090  f7fffffe          BL       ULCD_Init
;;;53     
;;;54         /* enter event loop */
;;;55         ULCD_EventLoop();
000094  f7fffffe          BL       ULCD_EventLoop
;;;56     
;;;57         printf("User Task lcd Exit.\r\n");
;;;58     }
;;;59     
                          ENDP

                  ULCD_Start PROC
;;;28     
;;;29     u8 ULCD_Start(void)
000098  b510              PUSH     {r4,lr}
;;;30     {
;;;31         u8          ucResult    = UCORE_ERR_COMMON_FAILED;
;;;32     
;;;33         printf("starting user task lcd...\r\n");
00009a  a036              ADR      r0,|L1.372|
00009c  f7fffffe          BL       __2printf
;;;34     
;;;35         ucResult = OSTaskCreate(ULCD_TaskProc, (void *)0, (OS_STK *)&g_UserTaskLcdSTK[DEFAULT_USER_LCD_STK_SIZE - 1], DEFAULT_USER_TASK_LCD_PRIO);
0000a0  230d              MOVS     r3,#0xd
0000a2  4a3b              LDR      r2,|L1.400|
0000a4  2100              MOVS     r1,#0
0000a6  483b              LDR      r0,|L1.404|
0000a8  f7fffffe          BL       OSTaskCreate
;;;36     
;;;37         if (OS_ERR_NONE == ucResult)
0000ac  b128              CBZ      r0,|L1.186|
;;;38         {
;;;39             return UCORE_ERR_SUCCESS;
;;;40         }
;;;41     
;;;42         printf("User task lcd Failed value:%d.\r\n", ucResult);
0000ae  4601              MOV      r1,r0
0000b0  a039              ADR      r0,|L1.408|
0000b2  f7fffffe          BL       __2printf
;;;43     
;;;44         return UCORE_ERR_CREATE_TASK_FAILED;
0000b6  2004              MOVS     r0,#4
;;;45     }
0000b8  bd10              POP      {r4,pc}
                  |L1.186|
0000ba  2000              MOVS     r0,#0                 ;39
0000bc  bd10              POP      {r4,pc}
;;;46     
                          ENDP

0000be  0000              DCW      0x0000
                  |L1.192|
                          DCD      ||.data||
                  |L1.196|
0000c4  4b657920          DCB      "Key press:HOME.\r\n",0
0000c8  70726573
0000cc  733a484f
0000d0  4d452e0d
0000d4  0a00    
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L1.216|
0000d8  4b657920          DCB      "Key press:OK.\r\n",0
0000dc  70726573
0000e0  733a4f4b
0000e4  2e0d0a00
                  |L1.232|
0000e8  4b657920          DCB      "Key press:UP.\r\n",0
0000ec  70726573
0000f0  733a5550
0000f4  2e0d0a00
                  |L1.248|
0000f8  4b657920          DCB      "Key press:DOWN.\r\n",0
0000fc  70726573
000100  733a444f
000104  574e2e0d
000108  0a00    
00010a  00                DCB      0
00010b  00                DCB      0
                  |L1.268|
00010c  4b657920          DCB      "Key press:RETURN.\r\n",0
000110  70726573
000114  733a5245
000118  5455524e
00011c  2e0d0a00
                  |L1.288|
000120  556e6b6e          DCB      "Unknown message type:%d\r\n",0
000124  6f776e20
000128  6d657373
00012c  61676520
000130  74797065
000134  3a25640d
000138  0a00    
00013a  00                DCB      0
00013b  00                DCB      0
                  |L1.316|
00013c  55736572          DCB      "User task lcd init finished.\r\n",0
000140  20746173
000144  6b206c63
000148  6420696e
00014c  69742066
000150  696e6973
000154  6865642e
000158  0d0a00  
00015b  00                DCB      0
                  |L1.348|
00015c  55736572          DCB      "User Task lcd Start.\r\n",0
000160  20546173
000164  6b206c63
000168  64205374
00016c  6172742e
000170  0d0a00  
000173  00                DCB      0
                  |L1.372|
000174  73746172          DCB      "starting user task lcd...\r\n",0
000178  74696e67
00017c  20757365
000180  72207461
000184  736b206c
000188  63642e2e
00018c  2e0d0a00
                  |L1.400|
                          DCD      ||.bss||+0xfc
                  |L1.404|
                          DCD      ULCD_TaskProc
                  |L1.408|
000198  55736572          DCB      "User task lcd Failed value:%d.\r\n",0
00019c  20746173
0001a0  6b206c63
0001a4  64204661
0001a8  696c6564
0001ac  2076616c
0001b0  75653a25
0001b4  642e0d0a
0001b8  00      
0001b9  00                DCB      0
0001ba  00                DCB      0
0001bb  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  g_UserTaskLcdSTK
                          %        256

                          AREA ||.data||, DATA, ALIGN=2

                  g_QMboxUIMsg
                          DCD      0x00000000
