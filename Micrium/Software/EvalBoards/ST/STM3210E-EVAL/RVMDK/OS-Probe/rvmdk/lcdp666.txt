; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\lcdp666.o --depend=.\rvmdk\lcdp666.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\lcdp666.crf ..\..\..\..\..\uCGUI\GUI\ConvertColor\LCDP666.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_Color2Index_666 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_666(LCD_COLOR Color) {
000000  f3c00185          UBFX     r1,r0,#2,#6
;;;35       unsigned r, g, b;
;;;36       r = (Color >>  2) & 0x3f;
;;;37       g = (Color >> 10) & 0x3f;
000004  f3c02285          UBFX     r2,r0,#10,#6
;;;38       b = (Color >> 18) & 0x3f;
000008  f3c04085          UBFX     r0,r0,#18,#6
;;;39       return r + (g << 6) + (b << 12);
00000c  eb011182          ADD      r1,r1,r2,LSL #6
000010  eb013000          ADD      r0,r1,r0,LSL #12
;;;40     }
000014  4770              BX       lr
;;;41     
                          ENDP

                  LCD_Index2Color_666 PROC
;;;45     */
;;;46     LCD_COLOR LCD_Index2Color_666(int Index) {
000016  0681              LSLS     r1,r0,#26
;;;47       unsigned r, g, b;
;;;48       r = (Index & 0x00003f) <<  2;
000018  0e09              LSRS     r1,r1,#24
;;;49       g = (Index & 0x000fc0) >>  4; 
00001a  f400627c          AND      r2,r0,#0xfc0
00001e  0912              LSRS     r2,r2,#4
;;;50       b = (Index & 0x03f000) >> 10; 
000020  f400307c          AND      r0,r0,#0x3f000
000024  0a80              LSRS     r0,r0,#10
;;;51       return r + (g << 8) + (((U32)b) << 16);
000026  eb012102          ADD      r1,r1,r2,LSL #8
00002a  eb014000          ADD      r0,r1,r0,LSL #16
;;;52     }
00002e  4770              BX       lr
;;;53     
                          ENDP

                  LCD_GetIndexMask_666 PROC
;;;57     */
;;;58     unsigned LCD_GetIndexMask_666(void) {
000030  4800              LDR      r0,|L1.52|
;;;59       return (unsigned)0x3ffff;
;;;60     }
000032  4770              BX       lr
;;;61     
                          ENDP

                  |L1.52|
                          DCD      0x0003ffff
