; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\lcdp444_12.o --depend=.\rvmdk\lcdp444_12.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\lcdp444_12.crf ..\..\..\..\..\uCGUI\GUI\ConvertColor\LCDP444_12.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_Color2Index_444_12 PROC
;;;33     */
;;;34     unsigned LCD_Color2Index_444_12(LCD_COLOR Color) {
000000  b2c3              UXTB     r3,r0
;;;35       unsigned int r,g,b;
;;;36       r = Color         & 255;
;;;37       g = (Color >> 8)  & 255;
000002  f3c02107          UBFX     r1,r0,#8,#8
;;;38       b = (Color >> 16) & 255;
000006  f3c04207          UBFX     r2,r0,#16,#8
;;;39       r = (r + 8) / 17;
00000a  f1030008          ADD      r0,r3,#8
00000e  4b12              LDR      r3,|L1.88|
000010  fba3c000          UMULL    r12,r0,r3,r0
000014  0900              LSRS     r0,r0,#4
;;;40       g = (g + 8) / 17;
000016  3108              ADDS     r1,r1,#8
000018  fba3c101          UMULL    r12,r1,r3,r1
00001c  0909              LSRS     r1,r1,#4
;;;41       b = (b + 8) / 17;
00001e  3208              ADDS     r2,r2,#8
000020  fba33202          UMULL    r3,r2,r3,r2
000024  0912              LSRS     r2,r2,#4
;;;42       return r + (g << 4) + (b << 8);
000026  eb001001          ADD      r0,r0,r1,LSL #4
00002a  eb002002          ADD      r0,r0,r2,LSL #8
;;;43     }
00002e  4770              BX       lr
;;;44     
                          ENDP

                  LCD_Index2Color_444_12 PROC
;;;48     */
;;;49     LCD_COLOR LCD_Index2Color_444_12(int Index) {
000030  f000010f          AND      r1,r0,#0xf
;;;50       unsigned int r,g,b;
;;;51       /* Seperate the color masks */
;;;52       r = Index & 0xf;
;;;53       g = (Index >> 4) & 0xf;
000034  f3c01203          UBFX     r2,r0,#4,#4
;;;54       b = ((unsigned)Index >> 8) & 0xf;
000038  f3c02003          UBFX     r0,r0,#8,#4
;;;55       /* Convert the color masks */
;;;56       r = r * 17;
00003c  eb011101          ADD      r1,r1,r1,LSL #4
;;;57       g = g * 17;
000040  eb021202          ADD      r2,r2,r2,LSL #4
;;;58       b = b * 17;
000044  eb001000          ADD      r0,r0,r0,LSL #4
;;;59       return r + (g<<8) + (((U32)b)<<16);
000048  eb012102          ADD      r1,r1,r2,LSL #8
00004c  eb014000          ADD      r0,r1,r0,LSL #16
;;;60     }
000050  4770              BX       lr
;;;61     
                          ENDP

                  LCD_GetIndexMask_444_12 PROC
;;;65     */
;;;66     unsigned LCD_GetIndexMask_444_12(void) {
000052  f64070ff          MOV      r0,#0xfff
;;;67       return 0x0fff;
;;;68     }
000056  4770              BX       lr
;;;69     
                          ENDP

                  |L1.88|
                          DCD      0xf0f0f0f1
