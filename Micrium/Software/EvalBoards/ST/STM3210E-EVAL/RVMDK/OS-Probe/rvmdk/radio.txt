; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\radio.o --depend=.\rvmdk\radio.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\radio.crf ..\..\..\..\..\uCGUI\GUI\Widget\RADIO.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _OnPaint PROC
;;;113    */
;;;114    static void _OnPaint(RADIO_Handle hObj, RADIO_Obj* pObj) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4605              MOV      r5,r0
000008  460c              MOV      r4,r1
;;;115      const GUI_BITMAP* pBmRadio;
;;;116      const GUI_BITMAP* pBmCheck;
;;;117      const char* pText;
;;;118      GUI_FONTINFO FontInfo;
;;;119      GUI_RECT Rect, r, rFocus = {0};
00000a  2000              MOVS     r0,#0
00000c  9002              STR      r0,[sp,#8]
00000e  9003              STR      r0,[sp,#0xc]
;;;120      int i, y, HasFocus, FontDistY;
;;;121      U8 SpaceAbove, CHeight, FocusBorder;
;;;122    
;;;123      /* Init some data */
;;;124      WIDGET__GetClientRect(&pObj->Widget, &rFocus);
000010  a902              ADD      r1,sp,#8
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       WIDGET__GetClientRect
;;;125      HasFocus  = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? 1 : 0;
000018  8ce0              LDRH     r0,[r4,#0x26]
00001a  f0000901          AND      r9,r0,#1
;;;126      pBmRadio  = pObj->Props.apBmRadio[WM__IsEnabled(hObj)];
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       WM__IsEnabled
000024  eb040080          ADD      r0,r4,r0,LSL #2
000028  6b86              LDR      r6,[r0,#0x38]
;;;127      pBmCheck  = pObj->Props.pBmCheck;
00002a  f8d48040          LDR      r8,[r4,#0x40]
;;;128      rFocus.x1 = pBmRadio->XSize + RADIO_BORDER * 2 - 1;
00002e  8830              LDRH     r0,[r6,#0]
000030  1cc0              ADDS     r0,r0,#3
000032  f8ad000c          STRH     r0,[sp,#0xc]
;;;129      rFocus.y1 = pObj->Height + ((pObj->NumItems - 1) * pObj->Spacing) - 1;
000036  f8b4104e          LDRH     r1,[r4,#0x4e]
00003a  f8b4004c          LDRH     r0,[r4,#0x4c]
00003e  f8b4204a          LDRH     r2,[r4,#0x4a]
000042  1e49              SUBS     r1,r1,#1
000044  fb010002          MLA      r0,r1,r2,r0
000048  1e40              SUBS     r0,r0,#1
00004a  f8ad000e          STRH     r0,[sp,#0xe]
;;;130    
;;;131      /* Select font and text color */
;;;132      LCD_SetColor(pObj->Props.TextColor);
00004e  6ae0              LDR      r0,[r4,#0x2c]
000050  f7fffffe          BL       LCD_SetColor
;;;133      GUI_SetFont(pObj->Props.pFont);
000054  6b60              LDR      r0,[r4,#0x34]
000056  f7fffffe          BL       GUI_SetFont
;;;134      GUI_SetTextMode(GUI_TM_TRANS);
00005a  2002              MOVS     r0,#2
00005c  f7fffffe          BL       GUI_SetTextMode
;;;135    
;;;136      /* Get font infos */
;;;137      GUI_GetFontInfo(pObj->Props.pFont, &FontInfo);
000060  a908              ADD      r1,sp,#0x20
000062  6b60              LDR      r0,[r4,#0x34]
000064  f7fffffe          BL       GUI_GetFontInfo
;;;138      FontDistY   = GUI_GetFontDistY();
000068  f7fffffe          BL       GUI_GetFontDistY
00006c  4602              MOV      r2,r0
;;;139      CHeight     = FontInfo.CHeight;
00006e  f89d0024          LDRB     r0,[sp,#0x24]
;;;140      SpaceAbove  = FontInfo.Baseline - CHeight;
000072  f89d1022          LDRB     r1,[sp,#0x22]
000076  1a09              SUBS     r1,r1,r0
000078  b2c9              UXTB     r1,r1
00007a  9101              STR      r1,[sp,#4]
;;;141      Rect.x0     = pBmRadio->XSize + RADIO_BORDER * 2 + 2;
00007c  8831              LDRH     r1,[r6,#0]
00007e  1d89              ADDS     r1,r1,#6
000080  f8ad1018          STRH     r1,[sp,#0x18]
;;;142      Rect.y0     = (CHeight <= pObj->Height) ? ((pObj->Height - CHeight) / 2) : 0;
000084  f8b4104c          LDRH     r1,[r4,#0x4c]
000088  4281              CMP      r1,r0
00008a  d304              BCC      |L1.150|
00008c  1a09              SUBS     r1,r1,r0
00008e  eb0171d1          ADD      r1,r1,r1,LSR #31
000092  1049              ASRS     r1,r1,#1
000094  e000              B        |L1.152|
                  |L1.150|
000096  2100              MOVS     r1,#0
                  |L1.152|
000098  b209              SXTH     r1,r1
00009a  f8ad101a          STRH     r1,[sp,#0x1a]
;;;143      Rect.y1     = Rect.y0 + CHeight - 1;
00009e  1e40              SUBS     r0,r0,#1
0000a0  4408              ADD      r0,r0,r1
0000a2  f8ad001e          STRH     r0,[sp,#0x1e]
;;;144      FocusBorder = (FontDistY <= 12) ? 2 : 3;
0000a6  2a0c              CMP      r2,#0xc
0000a8  dc01              BGT      |L1.174|
0000aa  2702              MOVS     r7,#2
0000ac  e000              B        |L1.176|
                  |L1.174|
0000ae  2703              MOVS     r7,#3
                  |L1.176|
;;;145      if (Rect.y0 < FocusBorder) {
0000b0  42b9              CMP      r1,r7
0000b2  da00              BGE      |L1.182|
;;;146        FocusBorder = Rect.y0;
0000b4  b2cf              UXTB     r7,r1
                  |L1.182|
;;;147      }
;;;148    
;;;149      /* Clear inside ... Just in case      */
;;;150      /* Fill with parents background color */
;;;151    #if WM_SUPPORT_TRANSPARENCY
;;;152      if (!WM_GetHasTrans(hObj))
0000b6  4628              MOV      r0,r5
0000b8  f7fffffe          BL       WM_GetHasTrans
0000bc  b960              CBNZ     r0,|L1.216|
;;;153    #endif
;;;154      {
;;;155        if (pObj->Props.BkColor != GUI_INVALID_COLOR) {
0000be  6aa0              LDR      r0,[r4,#0x28]
0000c0  f06f4170          MVN      r1,#0xf0000000
0000c4  4288              CMP      r0,r1
0000c6  d002              BEQ      |L1.206|
;;;156          LCD_SetBkColor(pObj->Props.BkColor);
0000c8  f7fffffe          BL       LCD_SetBkColor
0000cc  e002              B        |L1.212|
                  |L1.206|
;;;157        } else {
;;;158          LCD_SetBkColor(RADIO_DEFAULT_BKCOLOR);
0000ce  48de              LDR      r0,|L1.1096|
0000d0  f7fffffe          BL       LCD_SetBkColor
                  |L1.212|
;;;159        }
;;;160        GUI_Clear();
0000d4  f7fffffe          BL       GUI_Clear
                  |L1.216|
;;;161      }
;;;162    
;;;163      /* Iterate over all items */
;;;164      for (i = 0; i < pObj->NumItems; i++) {
0000d8  2500              MOVS     r5,#0
0000da  f8b4004e          LDRH     r0,[r4,#0x4e]
0000de  2800              CMP      r0,#0
0000e0  dd5b              BLE      |L1.410|
;;;165        y = i * pObj->Spacing;
;;;166        /* Draw the radio button bitmap */
;;;167        GUI_DrawBitmap(pBmRadio, RADIO_BORDER, RADIO_BORDER + y);
;;;168        /* Draw the check bitmap */
;;;169        if (pObj->Sel == i) {
;;;170          GUI_DrawBitmap(pBmCheck, RADIO_BORDER +  (pBmRadio->XSize - pBmCheck->XSize) / 2, 
;;;171                                   RADIO_BORDER + ((pBmRadio->YSize - pBmCheck->YSize) / 2) + y);
;;;172        }
;;;173        /* Draw text if available */
;;;174        pText = (const char*)GUI_ARRAY_GetpItem(&pObj->TextArray, i);
;;;175        if (pText) {
;;;176          if (*pText) {
;;;177            r = Rect;
;;;178            r.x1 = r.x0 + GUI_GetStringDistX(pText) - 2;
;;;179            GUI_MoveRect(&r, 0, y);
;;;180            GUI_DispStringAt(pText, r.x0, r.y0 - SpaceAbove);
;;;181            /* Calculate focus rect */
;;;182            if (HasFocus && (pObj->Sel == i)) {
;;;183              GUI__ReduceRect(&rFocus, &r, -FocusBorder);
0000e2  f1c70a00          RSB      r10,r7,#0
                  |L1.230|
0000e6  f8b4004a          LDRH     r0,[r4,#0x4a]         ;165
0000ea  fb00f705          MUL      r7,r0,r5              ;165
0000ee  1cba              ADDS     r2,r7,#2              ;167
0000f0  2102              MOVS     r1,#2                 ;167
0000f2  4630              MOV      r0,r6                 ;167
0000f4  f7fffffe          BL       GUI_DrawBitmap
0000f8  f9b40048          LDRSH    r0,[r4,#0x48]         ;169
0000fc  42a8              CMP      r0,r5                 ;169
0000fe  d114              BNE      |L1.298|
000100  8830              LDRH     r0,[r6,#0]            ;170
000102  f8b81000          LDRH     r1,[r8,#0]            ;170
000106  f8b82002          LDRH     r2,[r8,#2]            ;170
00010a  1a41              SUBS     r1,r0,r1              ;170
00010c  8870              LDRH     r0,[r6,#2]            ;170
00010e  eb0171d1          ADD      r1,r1,r1,LSR #31      ;170
000112  1a80              SUBS     r0,r0,r2              ;170
000114  eb0072d0          ADD      r2,r0,r0,LSR #31      ;170
000118  2002              MOVS     r0,#2                 ;170
00011a  eb000262          ADD      r2,r0,r2,ASR #1       ;170
00011e  eb000161          ADD      r1,r0,r1,ASR #1       ;170
000122  443a              ADD      r2,r2,r7              ;170
000124  4640              MOV      r0,r8                 ;170
000126  f7fffffe          BL       GUI_DrawBitmap
                  |L1.298|
00012a  4629              MOV      r1,r5                 ;174
00012c  f1040044          ADD      r0,r4,#0x44           ;174
000130  f7fffffe          BL       GUI_ARRAY_GetpItem
000134  4683              MOV      r11,r0                ;174
000136  f1bb0f00          CMP      r11,#0                ;175
00013a  d029              BEQ      |L1.400|
00013c  f89b0000          LDRB     r0,[r11,#0]           ;176
000140  b330              CBZ      r0,|L1.400|
000142  9907              LDR      r1,[sp,#0x1c]         ;177
000144  9806              LDR      r0,[sp,#0x18]         ;177
000146  9105              STR      r1,[sp,#0x14]         ;177
000148  9004              STR      r0,[sp,#0x10]         ;177
00014a  4658              MOV      r0,r11                ;178
00014c  f7fffffe          BL       GUI_GetStringDistX
000150  f8bd1010          LDRH     r1,[sp,#0x10]         ;178
000154  1e80              SUBS     r0,r0,#2              ;178
000156  4408              ADD      r0,r0,r1              ;178
000158  f8ad0014          STRH     r0,[sp,#0x14]         ;178
00015c  463a              MOV      r2,r7                 ;179
00015e  2100              MOVS     r1,#0                 ;179
000160  a804              ADD      r0,sp,#0x10           ;179
000162  f7fffffe          BL       GUI_MoveRect
000166  f9bd1012          LDRSH    r1,[sp,#0x12]         ;180
00016a  9801              LDR      r0,[sp,#4]            ;180
00016c  1a0a              SUBS     r2,r1,r0              ;180
00016e  f9bd1010          LDRSH    r1,[sp,#0x10]         ;180
000172  4658              MOV      r0,r11                ;180
000174  f7fffffe          BL       GUI_DispStringAt
000178  f1b90f00          CMP      r9,#0                 ;182
00017c  d008              BEQ      |L1.400|
00017e  f9b40048          LDRSH    r0,[r4,#0x48]         ;182
000182  42a8              CMP      r0,r5                 ;182
000184  d104              BNE      |L1.400|
000186  4652              MOV      r2,r10
000188  a904              ADD      r1,sp,#0x10
00018a  a802              ADD      r0,sp,#8
00018c  f7fffffe          BL       GUI__ReduceRect
                  |L1.400|
000190  1c6d              ADDS     r5,r5,#1              ;164
000192  f8b4004e          LDRH     r0,[r4,#0x4e]         ;164
000196  42a8              CMP      r0,r5                 ;164
000198  dca5              BGT      |L1.230|
                  |L1.410|
;;;184            }
;;;185          }
;;;186        }
;;;187      }
;;;188    
;;;189      /* Draw the focus rect */
;;;190      if (HasFocus) {
00019a  f1b90f00          CMP      r9,#0
00019e  d006              BEQ      |L1.430|
;;;191        LCD_SetColor(pObj->Props.FocusColor);
0001a0  6b20              LDR      r0,[r4,#0x30]
0001a2  f7fffffe          BL       LCD_SetColor
;;;192        GUI_DrawFocusRect(&rFocus, 0);
0001a6  2100              MOVS     r1,#0
0001a8  a802              ADD      r0,sp,#8
0001aa  f7fffffe          BL       GUI_DrawFocusRect
                  |L1.430|
;;;193      }
;;;194    }
0001ae  b00b              ADD      sp,sp,#0x2c
0001b0  e8bd8ff0          POP      {r4-r11,pc}
;;;195    
                          ENDP

                  RADIO__SetValue PROC
;;;286    */
;;;287    void RADIO__SetValue(RADIO_Handle hObj, RADIO_Obj* pObj, int v) {
0001b4  b510              PUSH     {r4,lr}
0001b6  4604              MOV      r4,r0
;;;288      if (v >= (int)pObj->NumItems) {
0001b8  f8b1304e          LDRH     r3,[r1,#0x4e]
0001bc  4293              CMP      r3,r2
0001be  dc00              BGT      |L1.450|
;;;289        v = pObj->NumItems - 1;
0001c0  1e5a              SUBS     r2,r3,#1
                  |L1.450|
;;;290      }
;;;291      if (v != pObj->Sel) {
0001c2  f9b10048          LDRSH    r0,[r1,#0x48]
0001c6  4290              CMP      r0,r2
0001c8  d00a              BEQ      |L1.480|
;;;292        pObj->Sel = v;
0001ca  f8a12048          STRH     r2,[r1,#0x48]
;;;293        WM_InvalidateWindow(hObj);
0001ce  4620              MOV      r0,r4
0001d0  f7fffffe          BL       WM_InvalidateWindow
;;;294        WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0001d4  4620              MOV      r0,r4
0001d6  e8bd4010          POP      {r4,lr}
0001da  2105              MOVS     r1,#5
0001dc  f7ffbffe          B.W      WM_NotifyParent
                  |L1.480|
;;;295      }
;;;296    }
0001e0  bd10              POP      {r4,pc}
;;;297    
                          ENDP

                  RADIO_SetValue PROC
;;;437    */
;;;438    void RADIO_SetValue(RADIO_Handle hObj, int v) {
0001e2  b570              PUSH     {r4-r6,lr}
0001e4  4605              MOV      r5,r0
0001e6  460c              MOV      r4,r1
;;;439      if (hObj) {
0001e8  2d00              CMP      r5,#0
0001ea  d01b              BEQ      |L1.548|
;;;440        RADIO_Obj* pObj;
;;;441        WM_LOCK();
0001ec  f7fffffe          BL       GUI_Lock
;;;442        pObj = RADIO_H2P(hObj);
0001f0  4628              MOV      r0,r5
0001f2  f7fffffe          BL       GUI_ALLOC_h2p
;;;443        if (pObj->GroupId && RADIO__pfHandleSetValue) {
0001f6  f8901050          LDRB     r1,[r0,#0x50]
0001fa  b139              CBZ      r1,|L1.524|
0001fc  4993              LDR      r1,|L1.1100|
0001fe  680b              LDR      r3,[r1,#0]  ; RADIO__pfHandleSetValue
000200  b123              CBZ      r3,|L1.524|
;;;444          (*RADIO__pfHandleSetValue)(hObj, pObj, v);
000202  4601              MOV      r1,r0
000204  4622              MOV      r2,r4
000206  4628              MOV      r0,r5
000208  4798              BLX      r3
00020a  e007              B        |L1.540|
                  |L1.524|
;;;445        } else {
;;;446          if (v < 0) {
00020c  2c00              CMP      r4,#0
00020e  da00              BGE      |L1.530|
;;;447            v = 0;
000210  2400              MOVS     r4,#0
                  |L1.530|
;;;448          }
;;;449          RADIO__SetValue(hObj, pObj, v);
000212  4601              MOV      r1,r0
000214  4622              MOV      r2,r4
000216  4628              MOV      r0,r5
000218  f7fffffe          BL       RADIO__SetValue
                  |L1.540|
;;;450        }
;;;451        WM_UNLOCK();
00021c  e8bd4070          POP      {r4-r6,lr}
000220  f7ffbffe          B.W      GUI_Unlock
                  |L1.548|
;;;452      }
;;;453    }
000224  bd70              POP      {r4-r6,pc}
;;;454    
                          ENDP

                  _OnTouch PROC
;;;199    */
;;;200    static void _OnTouch(RADIO_Handle hObj, RADIO_Obj* pObj, WM_MESSAGE*pMsg) {
000226  b570              PUSH     {r4-r6,lr}
000228  4606              MOV      r6,r0
00022a  460c              MOV      r4,r1
;;;201      int Notification;
;;;202      int Hit = 0;
00022c  2500              MOVS     r5,#0
;;;203      GUI_PID_STATE* pState = (GUI_PID_STATE*)pMsg->Data.p;
00022e  6891              LDR      r1,[r2,#8]
;;;204      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000230  b1e1              CBZ      r1,|L1.620|
;;;205        if (pState->Pressed) {
000232  7a08              LDRB     r0,[r1,#8]
000234  b1b8              CBZ      r0,|L1.614|
;;;206          int y, Sel;
;;;207          y   = pState->y;
000236  6849              LDR      r1,[r1,#4]
;;;208          Sel = y   / pObj->Spacing;
000238  f8b4204a          LDRH     r2,[r4,#0x4a]
00023c  fb91f0f2          SDIV     r0,r1,r2
;;;209          y  -= Sel * pObj->Spacing;
000240  fb001112          MLS      r1,r0,r2,r1
;;;210          if (y <= pObj->Height) {
000244  f8b4204c          LDRH     r2,[r4,#0x4c]
000248  428a              CMP      r2,r1
00024a  db03              BLT      |L1.596|
;;;211            RADIO_SetValue(hObj, Sel);
00024c  4601              MOV      r1,r0
00024e  4630              MOV      r0,r6
000250  f7fffffe          BL       RADIO_SetValue
                  |L1.596|
;;;212          }
;;;213          if (WM_IsFocussable(hObj)) {
000254  4630              MOV      r0,r6
000256  f7fffffe          BL       WM_IsFocussable
00025a  b110              CBZ      r0,|L1.610|
;;;214            WM_SetFocus(hObj);
00025c  4630              MOV      r0,r6
00025e  f7fffffe          BL       WM_SetFocus
                  |L1.610|
;;;215          }
;;;216          Notification = WM_NOTIFICATION_CLICKED;
000262  2101              MOVS     r1,#1
;;;217        } else {
000264  e003              B        |L1.622|
                  |L1.614|
;;;218          Hit = 1;
000266  2501              MOVS     r5,#1
;;;219          Notification = WM_NOTIFICATION_RELEASED;
000268  2102              MOVS     r1,#2
00026a  e000              B        |L1.622|
                  |L1.620|
;;;220        }
;;;221      } else {
;;;222        Notification = WM_NOTIFICATION_MOVED_OUT;
00026c  2103              MOVS     r1,#3
                  |L1.622|
;;;223      }
;;;224      WM_NotifyParent(hObj, Notification);
00026e  4630              MOV      r0,r6
000270  f7fffffe          BL       WM_NotifyParent
;;;225      if (Hit == 1) {
000274  2d01              CMP      r5,#1
000276  d105              BNE      |L1.644|
;;;226        GUI_DEBUG_LOG("RADIO: Hit\n");
;;;227        GUI_StoreKey(pObj->Widget.Id);
000278  f9b40024          LDRSH    r0,[r4,#0x24]
00027c  e8bd4070          POP      {r4-r6,lr}
000280  f7ffbffe          B.W      GUI_StoreKey
                  |L1.644|
;;;228      }
;;;229    }
000284  bd70              POP      {r4-r6,pc}
;;;230    
                          ENDP

                  RADIO_AddValue PROC
;;;407    */
;;;408    void RADIO_AddValue(RADIO_Handle hObj, int Add) {
000286  b570              PUSH     {r4-r6,lr}
000288  4604              MOV      r4,r0
00028a  460d              MOV      r5,r1
;;;409      if (hObj) {
00028c  2c00              CMP      r4,#0
00028e  d00e              BEQ      |L1.686|
;;;410        RADIO_Obj* pObj;
;;;411        WM_LOCK();
000290  f7fffffe          BL       GUI_Lock
;;;412        pObj = RADIO_H2P(hObj);
000294  4620              MOV      r0,r4
000296  f7fffffe          BL       GUI_ALLOC_h2p
;;;413        RADIO_SetValue(hObj, pObj->Sel + Add);
00029a  f9b00048          LDRSH    r0,[r0,#0x48]
00029e  1941              ADDS     r1,r0,r5
0002a0  4620              MOV      r0,r4
0002a2  f7fffffe          BL       RADIO_SetValue
;;;414        WM_UNLOCK();
0002a6  e8bd4070          POP      {r4-r6,lr}
0002aa  f7ffbffe          B.W      GUI_Unlock
                  |L1.686|
;;;415      }
;;;416    }
0002ae  bd70              POP      {r4-r6,pc}
;;;417    
                          ENDP

                  RADIO_Dec PROC
;;;421    */
;;;422    void RADIO_Dec(RADIO_Handle hObj) {
0002b0  f04f31ff          MOV      r1,#0xffffffff
;;;423      RADIO_AddValue(hObj, -1);
0002b4  e7fe              B        RADIO_AddValue
;;;424    }
;;;425    
                          ENDP

                  RADIO_Inc PROC
;;;429    */
;;;430    void RADIO_Inc(RADIO_Handle hObj) {
0002b6  2101              MOVS     r1,#1
;;;431      RADIO_AddValue(hObj,  1);
0002b8  e7fe              B        RADIO_AddValue
;;;432    }
;;;433    
                          ENDP

                  _OnKey PROC
;;;234    */
;;;235    static void  _OnKey(RADIO_Handle hObj, WM_MESSAGE* pMsg) {
0002ba  6889              LDR      r1,[r1,#8]
;;;236      WM_KEY_INFO* pKeyInfo;
;;;237      pKeyInfo = (WM_KEY_INFO*)(pMsg->Data.p);
;;;238      if (pKeyInfo->PressedCnt > 0) {
0002bc  684a              LDR      r2,[r1,#4]
0002be  2a00              CMP      r2,#0
0002c0  dd0a              BLE      |L1.728|
;;;239        switch (pKeyInfo->Key) {
0002c2  6809              LDR      r1,[r1,#0]
0002c4  2910              CMP      r1,#0x10
0002c6  d006              BEQ      |L1.726|
0002c8  2911              CMP      r1,#0x11
0002ca  d004              BEQ      |L1.726|
0002cc  2912              CMP      r1,#0x12
0002ce  d001              BEQ      |L1.724|
0002d0  2913              CMP      r1,#0x13
0002d2  d101              BNE      |L1.728|
                  |L1.724|
;;;240        case GUI_KEY_RIGHT:
;;;241        case GUI_KEY_DOWN:
;;;242          RADIO_Inc(hObj);
0002d4  e7fe              B        RADIO_Inc
                  |L1.726|
;;;243          break;                    /* Send to parent by not doing anything */
;;;244        case GUI_KEY_LEFT:
;;;245        case GUI_KEY_UP:
;;;246          RADIO_Dec(hObj);
0002d6  e7fe              B        RADIO_Dec
                  |L1.728|
;;;247          break;                    /* Send to parent by not doing anything */
;;;248        default:
;;;249          return;
;;;250        }
;;;251      }
;;;252    }
0002d8  4770              BX       lr
;;;253    
                          ENDP

                  RADIO_Callback PROC
;;;307    */
;;;308    void RADIO_Callback (WM_MESSAGE* pMsg) {
0002da  b570              PUSH     {r4-r6,lr}
0002dc  4604              MOV      r4,r0
;;;309      RADIO_Handle hObj;
;;;310      RADIO_Obj*   pObj;
;;;311      hObj = pMsg->hWin;
0002de  f9b46004          LDRSH    r6,[r4,#4]
;;;312      pObj = (RADIO_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0002e2  4630              MOV      r0,r6
0002e4  f7fffffe          BL       GUI_ALLOC_h2p
0002e8  4605              MOV      r5,r0
;;;313      /* Let widget handle the standard messages */
;;;314      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0002ea  4621              MOV      r1,r4
0002ec  4630              MOV      r0,r6
0002ee  f7fffffe          BL       WIDGET_HandleActive
0002f2  2800              CMP      r0,#0
0002f4  d015              BEQ      |L1.802|
;;;315        return;
;;;316      }
;;;317      switch (pMsg->MsgId) {
0002f6  6820              LDR      r0,[r4,#0]
0002f8  280e              CMP      r0,#0xe
0002fa  d019              BEQ      |L1.816|
0002fc  dc04              BGT      |L1.776|
0002fe  280b              CMP      r0,#0xb
000300  d01b              BEQ      |L1.826|
000302  280c              CMP      r0,#0xc
000304  d11d              BNE      |L1.834|
000306  e00d              B        |L1.804|
                  |L1.776|
000308  280f              CMP      r0,#0xf
00030a  d002              BEQ      |L1.786|
00030c  282b              CMP      r0,#0x2b
00030e  d118              BNE      |L1.834|
000310  e004              B        |L1.796|
                  |L1.786|
;;;318      case WM_PAINT:
;;;319        GUI_DEBUG_LOG("RADIO: _Callback(WM_PAINT)\n");
;;;320        _OnPaint(hObj, pObj);
000312  4629              MOV      r1,r5
000314  4630              MOV      r0,r6
000316  e8bd4070          POP      {r4-r6,lr}
00031a  e7fe              B        _OnPaint
                  |L1.796|
;;;321        return;
;;;322      case WM_GET_RADIOGROUP:
;;;323        pMsg->Data.v = pObj->GroupId;
00031c  f8950050          LDRB     r0,[r5,#0x50]
000320  60a0              STR      r0,[r4,#8]
                  |L1.802|
;;;324        return;
;;;325      case WM_TOUCH:
;;;326        _OnTouch(hObj, pObj, pMsg);
;;;327        break;
;;;328      case WM_KEY:
;;;329        _OnKey(hObj, pMsg);
;;;330        break;
;;;331      case WM_DELETE:
;;;332        GUI_ARRAY_Delete(&pObj->TextArray);
;;;333        break;
;;;334      }
;;;335      WM_DefaultProc(pMsg);
;;;336    }
000322  bd70              POP      {r4-r6,pc}
                  |L1.804|
000324  4622              MOV      r2,r4                 ;326
000326  4629              MOV      r1,r5                 ;326
000328  4630              MOV      r0,r6                 ;326
00032a  f7fffffe          BL       _OnTouch
00032e  e008              B        |L1.834|
                  |L1.816|
000330  4621              MOV      r1,r4                 ;329
000332  4630              MOV      r0,r6                 ;329
000334  f7fffffe          BL       _OnKey
000338  e003              B        |L1.834|
                  |L1.826|
00033a  f1050044          ADD      r0,r5,#0x44           ;332
00033e  f7fffffe          BL       GUI_ARRAY_Delete
                  |L1.834|
000342  4620              MOV      r0,r4                 ;335
000344  e8bd4070          POP      {r4-r6,lr}            ;335
000348  f7ffbffe          B.W      WM_DefaultProc
;;;337    
                          ENDP

                  RADIO_CreateEx PROC
;;;351    */
;;;352    RADIO_Handle RADIO_CreateEx(int x0, int y0, int xSize, int ySize, WM_HWIN hParent,
00034c  e92d4fff          PUSH     {r0-r11,lr}
;;;353                                int WinFlags, int ExFlags, int Id, int NumItems, int Spacing)
;;;354    {
000350  b085              SUB      sp,sp,#0x14
000352  4614              MOV      r4,r2
000354  4698              MOV      r8,r3
000356  f8ddb050          LDR      r11,[sp,#0x50]
00035a  f8dda04c          LDR      r10,[sp,#0x4c]
00035e  f8dd9048          LDR      r9,[sp,#0x48]
000362  9e17              LDR      r6,[sp,#0x5c]
000364  9d16              LDR      r5,[sp,#0x58]
;;;355      RADIO_Handle hObj;
;;;356      int Height, i;
;;;357      WM_LOCK();
000366  f7fffffe          BL       GUI_Lock
;;;358      /* Calculate helper variables */
;;;359      Height   = RADIO__DefaultProps.apBmRadio[0]->YSize + RADIO_BORDER * 2;
00036a  4839              LDR      r0,|L1.1104|
00036c  6900              LDR      r0,[r0,#0x10]  ; RADIO__DefaultProps
00036e  8841              LDRH     r1,[r0,#2]
000370  1d0f              ADDS     r7,r1,#4
;;;360      Spacing  = (Spacing  <= 0) ? RADIO_SPACING_DEFAULT : Spacing;
000372  2e00              CMP      r6,#0
000374  dc00              BGT      |L1.888|
000376  2614              MOVS     r6,#0x14
                  |L1.888|
;;;361      NumItems = (NumItems <= 0) ? 2                     : NumItems;
000378  2d00              CMP      r5,#0
00037a  dc00              BGT      |L1.894|
00037c  2502              MOVS     r5,#2
                  |L1.894|
;;;362      if (ySize == 0) {
00037e  f1b80f00          CMP      r8,#0
000382  d102              BNE      |L1.906|
;;;363        ySize  = Height + ((NumItems - 1) * Spacing);
000384  1e69              SUBS     r1,r5,#1
000386  fb017806          MLA      r8,r1,r6,r7
                  |L1.906|
;;;364      }
;;;365      if (xSize == 0) {
00038a  b90c              CBNZ     r4,|L1.912|
;;;366        xSize  = RADIO__DefaultProps.apBmRadio[0]->XSize + RADIO_BORDER * 2;
00038c  8800              LDRH     r0,[r0,#0]
00038e  1d04              ADDS     r4,r0,#4
                  |L1.912|
;;;367      }
;;;368    #if WM_SUPPORT_TRANSPARENCY
;;;369      WinFlags |= WM_CF_HASTRANS;
000390  f04a0001          ORR      r0,r10,#1
;;;370    #endif
;;;371      /* Create the window */
;;;372      hObj = WM_CreateWindowAsChild(x0, y0, xSize, ySize, hParent, WinFlags, RADIO_Callback, sizeof(RADIO_Obj) - sizeof(WM_Obj));
000394  2334              MOVS     r3,#0x34
000396  f2af02bd          ADR      r2,RADIO_Callback + 1
00039a  b281              UXTH     r1,r0
00039c  f8cd9000          STR      r9,[sp,#0]
0003a0  9303              STR      r3,[sp,#0xc]
0003a2  9202              STR      r2,[sp,#8]
0003a4  9101              STR      r1,[sp,#4]
0003a6  4643              MOV      r3,r8
0003a8  4622              MOV      r2,r4
0003aa  9906              LDR      r1,[sp,#0x18]
0003ac  9805              LDR      r0,[sp,#0x14]
0003ae  f7fffffe          BL       WM_CreateWindowAsChild
0003b2  4680              MOV      r8,r0
;;;373      if (hObj) {
0003b4  f1b80f00          CMP      r8,#0
0003b8  d031              BEQ      |L1.1054|
;;;374        RADIO_Obj* pObj;
;;;375        pObj = (RADIO_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0003ba  4640              MOV      r0,r8
0003bc  f7fffffe          BL       GUI_ALLOC_h2p
0003c0  4604              MOV      r4,r0
;;;376        /* Init sub-classes */
;;;377        GUI_ARRAY_CREATE(&pObj->TextArray);
;;;378        for (i = 0; i < NumItems; i++) {
0003c2  f04f0a00          MOV      r10,#0
0003c6  2d00              CMP      r5,#0
0003c8  dd09              BLE      |L1.990|
                  |L1.970|
;;;379          GUI_ARRAY_AddItem(&pObj->TextArray, NULL, 0);
0003ca  2200              MOVS     r2,#0
0003cc  4611              MOV      r1,r2
0003ce  f1040044          ADD      r0,r4,#0x44
0003d2  f7fffffe          BL       GUI_ARRAY_AddItem
0003d6  f10a0a01          ADD      r10,r10,#1            ;378
0003da  45aa              CMP      r10,r5                ;378
0003dc  dbf5              BLT      |L1.970|
                  |L1.990|
;;;380        }
;;;381        /* Init widget specific variables */
;;;382        ExFlags &= RADIO_TEXTPOS_LEFT;
0003de  f40b7080          AND      r0,r11,#0x100
;;;383        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | ExFlags);
0003e2  f0400210          ORR      r2,r0,#0x10
0003e6  4620              MOV      r0,r4
0003e8  9915              LDR      r1,[sp,#0x54]
0003ea  f7fffffe          BL       WIDGET__Init
;;;384        /* Init member variables */
;;;385        RADIO_INIT_ID(pObj);
;;;386        pObj->Props = RADIO__DefaultProps;
0003ee  4917              LDR      r1,|L1.1100|
0003f0  1d08              ADDS     r0,r1,#4
0003f2  e890100d          LDM      r0,{r0,r2,r3,r12}
0003f6  e9c43c0c          STRD     r3,r12,[r4,#0x30]
0003fa  62e2              STR      r2,[r4,#0x2c]
0003fc  62a0              STR      r0,[r4,#0x28]
0003fe  698a              LDR      r2,[r1,#0x18]  ; RADIO__DefaultProps
000400  6948              LDR      r0,[r1,#0x14]  ; RADIO__DefaultProps
000402  69c9              LDR      r1,[r1,#0x1c]  ; RADIO__DefaultProps
000404  63e2              STR      r2,[r4,#0x3c]
000406  6421              STR      r1,[r4,#0x40]
000408  63a0              STR      r0,[r4,#0x38]
;;;387        pObj->Props.BkColor= WM_GetBkColor(hParent);
00040a  4648              MOV      r0,r9
00040c  f7fffffe          BL       WM_GetBkColor
000410  62a0              STR      r0,[r4,#0x28]
;;;388        pObj->NumItems     = NumItems;
000412  f8a4504e          STRH     r5,[r4,#0x4e]
;;;389        pObj->Spacing      = Spacing;
000416  f8a4604a          STRH     r6,[r4,#0x4a]
;;;390        pObj->Height       = Height;
00041a  f8a4704c          STRH     r7,[r4,#0x4c]
                  |L1.1054|
;;;391      } else {
;;;392        GUI_DEBUG_ERROROUT_IF(hObj==0, "RADIO_Create failed")
;;;393      }
;;;394      WM_UNLOCK();
00041e  f7fffffe          BL       GUI_Unlock
;;;395      return hObj;
;;;396    }
000422  b009              ADD      sp,sp,#0x24
000424  4640              MOV      r0,r8                 ;395
000426  e8bd8ff0          POP      {r4-r11,pc}
;;;397    
                          ENDP

                  RADIO_GetValue PROC
;;;464    */
;;;465    int RADIO_GetValue(RADIO_Handle hObj) {
00042a  b570              PUSH     {r4-r6,lr}
00042c  4605              MOV      r5,r0
;;;466      int r = 0;
00042e  2400              MOVS     r4,#0
;;;467      if (hObj) {
000430  b145              CBZ      r5,|L1.1092|
;;;468        RADIO_Obj* pObj;
;;;469        WM_LOCK();
000432  f7fffffe          BL       GUI_Lock
;;;470        pObj = RADIO_H2P(hObj);
000436  4628              MOV      r0,r5
000438  f7fffffe          BL       GUI_ALLOC_h2p
;;;471        r = pObj->Sel;
00043c  f9b04048          LDRSH    r4,[r0,#0x48]
;;;472        WM_UNLOCK();
000440  f7fffffe          BL       GUI_Unlock
                  |L1.1092|
;;;473      }
;;;474      return r;
000444  4620              MOV      r0,r4
;;;475    }
000446  bd70              POP      {r4-r6,pc}
;;;476    
                          ENDP

                  |L1.1096|
                          DCD      0x00c0c0c0
                  |L1.1100|
                          DCD      ||.data||
                  |L1.1104|
                          DCD      ||.data||+0x4

                          AREA ||.data||, DATA, ALIGN=2

                  RADIO__pfHandleSetValue
                          DCD      0x00000000
                  RADIO__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      GUI_Font13_1
                          DCD      RADIO__abmRadio
                          DCD      RADIO__abmRadio+0x14
                          DCD      RADIO__bmCheck
