; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guiarc.o --depend=.\rvmdk\guiarc.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guiarc.crf ..\..\..\..\..\uCGUI\GUI\Core\GUIArc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _CalcX PROC
;;;45     */
;;;46     static void _CalcX(int*px, int y, U32 r2) {
000000  6803              LDR      r3,[r0,#0]
;;;47       int x =*px;
;;;48       U32 y2 = (U32)y*(U32)y;
000002  4349              MULS     r1,r1,r1
;;;49       U32 r2y2 = r2-y2;
000004  eba20c01          SUB      r12,r2,r1
;;;50       U32 x2;
;;;51       if (y2>=r2) {
000008  4291              CMP      r1,r2
00000a  d302              BCC      |L1.18|
;;;52         *px=0;
00000c  2100              MOVS     r1,#0
00000e  6001              STR      r1,[r0,#0]
;;;53     		return;
;;;54     	}
;;;55       /* x2 = r2-y2 */
;;;56       do {
;;;57         x++;
;;;58         x2 =(U32)x*(U32)x;
;;;59     	} while (x2 < r2y2);
;;;60     	*px = x-1;
;;;61     }
000010  4770              BX       lr
                  |L1.18|
000012  1c5b              ADDS     r3,r3,#1              ;57
000014  fb03f103          MUL      r1,r3,r3              ;58
000018  4561              CMP      r1,r12                ;59
00001a  d3fa              BCC      |L1.18|
00001c  1e59              SUBS     r1,r3,#1              ;60
00001e  6001              STR      r1,[r0,#0]            ;60
000020  4770              BX       lr
;;;62     
                          ENDP

                  _CalcInterSectLin PROC
;;;66     */
;;;67     static float _CalcInterSectLin(float y, float y0, float y1, float x0, float x1) {
000022  e92d41f0          PUSH     {r4-r8,lr}
000026  4680              MOV      r8,r0
000028  9c06              LDR      r4,[sp,#0x18]
00002a  460d              MOV      r5,r1
00002c  4617              MOV      r7,r2
00002e  461e              MOV      r6,r3
;;;68       if (y1==y0) {
000030  4629              MOV      r1,r5
000032  4638              MOV      r0,r7
000034  f7fffffe          BL       __aeabi_cfcmpeq
000038  d102              BNE      |L1.64|
;;;69     	  return y0;
00003a  4628              MOV      r0,r5
;;;70     	} else {
;;;71         float Slope = (x1-x0)/(y1-y0);
;;;72        return (y-y0)*Slope+x0;
;;;73     	}
;;;74     }
00003c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.64|
000040  4629              MOV      r1,r5                 ;71
000042  4638              MOV      r0,r7                 ;71
000044  f7fffffe          BL       __aeabi_fsub
000048  4607              MOV      r7,r0                 ;71
00004a  4631              MOV      r1,r6                 ;71
00004c  4620              MOV      r0,r4                 ;71
00004e  f7fffffe          BL       __aeabi_fsub
000052  4639              MOV      r1,r7                 ;71
000054  f7fffffe          BL       __aeabi_fdiv
000058  4604              MOV      r4,r0                 ;71
00005a  4629              MOV      r1,r5                 ;72
00005c  4640              MOV      r0,r8                 ;72
00005e  f7fffffe          BL       __aeabi_fsub
000062  4621              MOV      r1,r4                 ;72
000064  f7fffffe          BL       __aeabi_fmul
000068  4631              MOV      r1,r6                 ;72
00006a  e8bd41f0          POP      {r4-r8,lr}            ;72
00006e  f7ffbffe          B.W      __aeabi_fadd
;;;75     
                          ENDP

                  _DrawArc PROC
;;;79     */
;;;80     static void _DrawArc(int x0, int y0, int rx, int ry, int Angle0, int Angle1, int xMul, int yMul) {
000072  e92d4fff          PUSH     {r0-r11,lr}
000076  b093              SUB      sp,sp,#0x4c
000078  4681              MOV      r9,r0
00007a  f8ddb088          LDR      r11,[sp,#0x88]
00007e  f8dda08c          LDR      r10,[sp,#0x8c]
000082  4688              MOV      r8,r1
000084  4616              MOV      r6,r2
;;;81       float afx[4];
;;;82       float afy[4];
;;;83     	float ri = rx-(GUI_Context.PenSize+1.5)/2;
000086  48eb              LDR      r0,|L1.1076|
000088  7e00              LDRB     r0,[r0,#0x18]  ; GUI_Context
00008a  f7fffffe          BL       __aeabi_ui2d
00008e  2200              MOVS     r2,#0
000090  4be9              LDR      r3,|L1.1080|
000092  f7fffffe          BL       __aeabi_dadd
000096  f04f32ff          MOV      r2,#0xffffffff
00009a  f7fffffe          BL       __ARM_scalbn
00009e  4604              MOV      r4,r0
0000a0  460d              MOV      r5,r1
0000a2  4630              MOV      r0,r6
0000a4  f7fffffe          BL       __aeabi_i2d
0000a8  4606              MOV      r6,r0
0000aa  460f              MOV      r7,r1
0000ac  4622              MOV      r2,r4
0000ae  462b              MOV      r3,r5
0000b0  f7fffffe          BL       __aeabi_dsub
0000b4  f7fffffe          BL       __aeabi_d2f
0000b8  9009              STR      r0,[sp,#0x24]
;;;84     	float ro = rx+(GUI_Context.PenSize+1.5)/2;
0000ba  4622              MOV      r2,r4
0000bc  462b              MOV      r3,r5
0000be  4630              MOV      r0,r6
0000c0  4639              MOV      r1,r7
0000c2  f7fffffe          BL       __aeabi_dadd
0000c6  f7fffffe          BL       __aeabi_d2f
0000ca  9008              STR      r0,[sp,#0x20]
;;;85       float fAngle0 = Angle0*3.1415926/180;
0000cc  9820              LDR      r0,[sp,#0x80]
0000ce  f7fffffe          BL       __aeabi_i2d
0000d2  4dda              LDR      r5,|L1.1084|
0000d4  4eda              LDR      r6,|L1.1088|
0000d6  462a              MOV      r2,r5
0000d8  4633              MOV      r3,r6
0000da  f7fffffe          BL       __aeabi_dmul
0000de  4fd9              LDR      r7,|L1.1092|
0000e0  2200              MOVS     r2,#0
0000e2  463b              MOV      r3,r7
0000e4  f7fffffe          BL       __aeabi_ddiv
0000e8  f7fffffe          BL       __aeabi_d2f
0000ec  4604              MOV      r4,r0
;;;86       float fAngle1 = Angle1*3.1415926/180;
0000ee  9821              LDR      r0,[sp,#0x84]
0000f0  f7fffffe          BL       __aeabi_i2d
0000f4  462a              MOV      r2,r5
0000f6  4633              MOV      r3,r6
0000f8  f7fffffe          BL       __aeabi_dmul
0000fc  2200              MOVS     r2,#0
0000fe  463b              MOV      r3,r7
000100  f7fffffe          BL       __aeabi_ddiv
000104  f7fffffe          BL       __aeabi_d2f
000108  4606              MOV      r6,r0
;;;87       float sin0 = sin(fAngle0); 
00010a  4620              MOV      r0,r4
00010c  f7fffffe          BL       __aeabi_f2d
000110  4604              MOV      r4,r0
000112  460d              MOV      r5,r1
000114  f7fffffe          BL       ||sin||
000118  f7fffffe          BL       __aeabi_d2f
00011c  9007              STR      r0,[sp,#0x1c]
;;;88       float sin1 = sin(fAngle1); 
00011e  4630              MOV      r0,r6
000120  f7fffffe          BL       __aeabi_f2d
000124  4606              MOV      r6,r0
000126  460f              MOV      r7,r1
000128  f7fffffe          BL       ||sin||
00012c  f7fffffe          BL       __aeabi_d2f
000130  9006              STR      r0,[sp,#0x18]
;;;89       float cos0 = cos(fAngle0); 
000132  4620              MOV      r0,r4
000134  4629              MOV      r1,r5
000136  f7fffffe          BL       ||cos||
00013a  f7fffffe          BL       __aeabi_d2f
00013e  4604              MOV      r4,r0
;;;90       float cos1 = cos(fAngle1); 
000140  4630              MOV      r0,r6
000142  4639              MOV      r1,r7
000144  f7fffffe          BL       ||cos||
000148  f7fffffe          BL       __aeabi_d2f
00014c  4605              MOV      r5,r0
;;;91       U32   ri2 = ri*ri;
00014e  9909              LDR      r1,[sp,#0x24]
000150  4608              MOV      r0,r1
000152  f7fffffe          BL       __aeabi_fmul
000156  f7fffffe          BL       __aeabi_f2uiz
00015a  9005              STR      r0,[sp,#0x14]
;;;92       U32   ro2 = ro*ro;
00015c  9908              LDR      r1,[sp,#0x20]
00015e  4608              MOV      r0,r1
000160  f7fffffe          BL       __aeabi_fmul
000164  f7fffffe          BL       __aeabi_f2uiz
000168  9004              STR      r0,[sp,#0x10]
;;;93     	int y, yMax, yMin;
;;;94     	afy[0] = ri*sin0;
00016a  9907              LDR      r1,[sp,#0x1c]
00016c  9809              LDR      r0,[sp,#0x24]
00016e  f7fffffe          BL       __aeabi_fmul
000172  4607              MOV      r7,r0
000174  900a              STR      r0,[sp,#0x28]
;;;95     	afy[1] = ro*sin0;
000176  9907              LDR      r1,[sp,#0x1c]
000178  9808              LDR      r0,[sp,#0x20]
00017a  f7fffffe          BL       __aeabi_fmul
00017e  900b              STR      r0,[sp,#0x2c]
;;;96     	afy[2] = ri*sin1;
000180  9906              LDR      r1,[sp,#0x18]
000182  9809              LDR      r0,[sp,#0x24]
000184  f7fffffe          BL       __aeabi_fmul
000188  900c              STR      r0,[sp,#0x30]
;;;97     	afy[3] = ro*sin1;
00018a  9906              LDR      r1,[sp,#0x18]
00018c  9808              LDR      r0,[sp,#0x20]
00018e  f7fffffe          BL       __aeabi_fmul
000192  4606              MOV      r6,r0
000194  900d              STR      r0,[sp,#0x34]
;;;98     	afx[0] = ri*cos0;
000196  4621              MOV      r1,r4
000198  9809              LDR      r0,[sp,#0x24]
00019a  f7fffffe          BL       __aeabi_fmul
00019e  900e              STR      r0,[sp,#0x38]
;;;99     	afx[1] = ro*cos0;
0001a0  4621              MOV      r1,r4
0001a2  9808              LDR      r0,[sp,#0x20]
0001a4  f7fffffe          BL       __aeabi_fmul
0001a8  900f              STR      r0,[sp,#0x3c]
;;;100    	afx[2] = ri*cos1;
0001aa  4629              MOV      r1,r5
0001ac  9809              LDR      r0,[sp,#0x24]
0001ae  f7fffffe          BL       __aeabi_fmul
0001b2  9010              STR      r0,[sp,#0x40]
;;;101    	afx[3] = ro*cos1;
0001b4  4629              MOV      r1,r5
0001b6  9808              LDR      r0,[sp,#0x20]
0001b8  f7fffffe          BL       __aeabi_fmul
0001bc  9011              STR      r0,[sp,#0x44]
;;;102    	yMin = ceil(afy[0]);
0001be  4638              MOV      r0,r7
0001c0  f7fffffe          BL       __aeabi_f2d
0001c4  f7fffffe          BL       ceil
0001c8  f7fffffe          BL       __aeabi_d2iz
0001cc  4605              MOV      r5,r0
;;;103      yMax = floor(afy[3]);
0001ce  4630              MOV      r0,r6
0001d0  f7fffffe          BL       __aeabi_f2d
0001d4  f7fffffe          BL       floor
0001d8  f7fffffe          BL       __aeabi_d2iz
;;;104      /* Use Clipping rect to reduce calculation (if possible) */
;;;105      if (GUI_Context.pClipRect_HL) {
0001dc  4995              LDR      r1,|L1.1076|
0001de  6949              LDR      r1,[r1,#0x14]  ; GUI_Context
0001e0  b309              CBZ      r1,|L1.550|
;;;106        if (yMul ==1) {
0001e2  f1ba0f01          CMP      r10,#1
0001e6  d10d              BNE      |L1.516|
;;;107          if (yMax > (GUI_Context.pClipRect_HL->y1 -y0))
0001e8  f9b12006          LDRSH    r2,[r1,#6]
0001ec  eba20208          SUB      r2,r2,r8
0001f0  4282              CMP      r2,r0
0001f2  da00              BGE      |L1.502|
;;;108            yMax = (GUI_Context.pClipRect_HL->y1 -y0);
0001f4  4610              MOV      r0,r2
                  |L1.502|
;;;109          if (yMin < (GUI_Context.pClipRect_HL->y0 -y0))
0001f6  f9b12002          LDRSH    r2,[r1,#2]
0001fa  eba20208          SUB      r2,r2,r8
0001fe  42aa              CMP      r2,r5
000200  dd00              BLE      |L1.516|
;;;110            yMin = (GUI_Context.pClipRect_HL->y0 -y0);
000202  4615              MOV      r5,r2
                  |L1.516|
;;;111        }
;;;112        if (yMul == -1) {
000204  f11a0201          ADDS     r2,r10,#1
000208  d10d              BNE      |L1.550|
;;;113          if (yMin > (GUI_Context.pClipRect_HL->y1 -y0))
00020a  f9b12006          LDRSH    r2,[r1,#6]
00020e  eba20208          SUB      r2,r2,r8
000212  42aa              CMP      r2,r5
000214  da00              BGE      |L1.536|
;;;114            yMin = (GUI_Context.pClipRect_HL->y1 -y0);
000216  4615              MOV      r5,r2
                  |L1.536|
;;;115          if (yMax < (GUI_Context.pClipRect_HL->y0 -y0))
000218  f9b11002          LDRSH    r1,[r1,#2]
00021c  eba10108          SUB      r1,r1,r8
000220  4281              CMP      r1,r0
000222  dd00              BLE      |L1.550|
;;;116            yMax = (GUI_Context.pClipRect_HL->y0 -y0);
000224  4608              MOV      r0,r1
                  |L1.550|
;;;117        }
;;;118      }
;;;119      /* Start drawing lines ... */
;;;120      {
;;;121      int xMinDisp, xMaxDisp, xMin=0,xMax=0;
000226  2100              MOVS     r1,#0
000228  9103              STR      r1,[sp,#0xc]
00022a  9102              STR      r1,[sp,#8]
;;;122        for (y=yMax; y>=yMin; y--) {
00022c  4604              MOV      r4,r0
00022e  42ac              CMP      r4,r5
000230  db48              BLT      |L1.708|
000232  4f80              LDR      r7,|L1.1076|
                  |L1.564|
;;;123          _CalcX(&xMin, y, ri2);
000234  4621              MOV      r1,r4
000236  a803              ADD      r0,sp,#0xc
000238  9a05              LDR      r2,[sp,#0x14]
00023a  f7fffffe          BL       _CalcX
;;;124          _CalcX(&xMax, y, ro2);
00023e  4621              MOV      r1,r4
000240  a802              ADD      r0,sp,#8
000242  9a04              LDR      r2,[sp,#0x10]
000244  f7fffffe          BL       _CalcX
;;;125          if ((float)y< afy[1]) {
000248  4620              MOV      r0,r4
00024a  f7fffffe          BL       __aeabi_i2f
00024e  9012              STR      r0,[sp,#0x48]
000250  990b              LDR      r1,[sp,#0x2c]
000252  f7fffffe          BL       __aeabi_cfcmple
000256  d20b              BCS      |L1.624|
;;;126            xMaxDisp = _CalcInterSectLin(y,afy[0], afy[1], afx[0], afx[1]);
000258  9b0f              LDR      r3,[sp,#0x3c]
00025a  9300              STR      r3,[sp,#0]
00025c  9b0e              LDR      r3,[sp,#0x38]
00025e  9a0b              LDR      r2,[sp,#0x2c]
000260  990a              LDR      r1,[sp,#0x28]
000262  9812              LDR      r0,[sp,#0x48]
000264  f7fffffe          BL       _CalcInterSectLin
000268  f7fffffe          BL       __aeabi_f2iz
00026c  4606              MOV      r6,r0
00026e  e000              B        |L1.626|
                  |L1.624|
;;;127    			} else {
;;;128            xMaxDisp = xMax;			
000270  9e02              LDR      r6,[sp,#8]
                  |L1.626|
;;;129    			}
;;;130          if ((float)y > afy[2]) {
000272  990c              LDR      r1,[sp,#0x30]
000274  9812              LDR      r0,[sp,#0x48]
000276  f7fffffe          BL       __aeabi_cfrcmple
00027a  d20a              BCS      |L1.658|
;;;131            xMinDisp = _CalcInterSectLin(y,afy[2], afy[3], afx[2], afx[3]);
00027c  9b11              LDR      r3,[sp,#0x44]
00027e  9300              STR      r3,[sp,#0]
000280  9b10              LDR      r3,[sp,#0x40]
000282  9a0d              LDR      r2,[sp,#0x34]
000284  990c              LDR      r1,[sp,#0x30]
000286  9812              LDR      r0,[sp,#0x48]
000288  f7fffffe          BL       _CalcInterSectLin
00028c  f7fffffe          BL       __aeabi_f2iz
000290  e000              B        |L1.660|
                  |L1.658|
;;;132    			} else {
;;;133            xMinDisp = xMin;			
000292  9803              LDR      r0,[sp,#0xc]
                  |L1.660|
;;;134    			}
;;;135          if (xMul>0)
000294  f1bb0f00          CMP      r11,#0
000298  dd08              BLE      |L1.684|
;;;136            LCD_HL_DrawHLine(xMinDisp+x0, yMul*y+y0, xMaxDisp+x0);
00029a  6dfb              LDR      r3,[r7,#0x5c]  ; GUI_Context
00029c  fb0a8104          MLA      r1,r10,r4,r8
0002a0  681b              LDR      r3,[r3,#0]
0002a2  eb060209          ADD      r2,r6,r9
0002a6  4448              ADD      r0,r0,r9
0002a8  4798              BLX      r3
0002aa  e008              B        |L1.702|
                  |L1.684|
;;;137          else
;;;138            LCD_HL_DrawHLine(-xMaxDisp+x0, yMul*y+y0, -xMinDisp+x0);
0002ac  6dfb              LDR      r3,[r7,#0x5c]  ; GUI_Context
0002ae  eba90200          SUB      r2,r9,r0
0002b2  fb0a8104          MLA      r1,r10,r4,r8
0002b6  681b              LDR      r3,[r3,#0]
0002b8  eba90006          SUB      r0,r9,r6
0002bc  4798              BLX      r3
                  |L1.702|
0002be  1e64              SUBS     r4,r4,#1              ;122
0002c0  42ac              CMP      r4,r5                 ;122
0002c2  dab7              BGE      |L1.564|
                  |L1.708|
;;;139        }
;;;140    	}
;;;141    #if 0  /* Test code */
;;;142    {
;;;143      int i;
;;;144      GUI_SetColor( GUI_WHITE ); 
;;;145    	for (i=0; i<4; i++)
;;;146        LCD_HL_DrawPixel(afx[i]+x0, afy[i]+y0);
;;;147    }
;;;148    #endif
;;;149      GUI_USE_PARA(ry);
;;;150    }
0002c4  b017              ADD      sp,sp,#0x5c
0002c6  e8bd8ff0          POP      {r4-r11,pc}
;;;151    
                          ENDP

                  GL_DrawArc PROC
;;;161    */
;;;162    void GL_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
0002ca  e92d43f0          PUSH     {r4-r9,lr}
0002ce  b085              SUB      sp,sp,#0x14
0002d0  4606              MOV      r6,r0
0002d2  460f              MOV      r7,r1
0002d4  990c              LDR      r1,[sp,#0x30]
0002d6  980d              LDR      r0,[sp,#0x34]
0002d8  4690              MOV      r8,r2
0002da  4699              MOV      r9,r3
;;;163      int aEnd;
;;;164      a0+=360;
0002dc  f50174b4          ADD      r4,r1,#0x168
;;;165    	a1+=360;
0002e0  f50075b4          ADD      r5,r0,#0x168
;;;166    	while (a0>=360) {
0002e4  f5b47fb4          CMP      r4,#0x168
0002e8  db06              BLT      |L1.760|
                  |L1.746|
;;;167        a0 -= 360;
0002ea  f5a474b4          SUB      r4,r4,#0x168
;;;168        a1 -= 360;
0002ee  f5a575b4          SUB      r5,r5,#0x168
0002f2  f5b47fb4          CMP      r4,#0x168             ;166
0002f6  daf8              BGE      |L1.746|
                  |L1.760|
;;;169    	}
;;;170    /* Do first quadrant 0-90 degree */
;;;171    DoFirst:
;;;172      if (a1<=0)
0002f8  2d00              CMP      r5,#0
0002fa  dd6e              BLE      |L1.986|
;;;173    	  return;
;;;174    	if (a0<90) {
0002fc  2c5a              CMP      r4,#0x5a
0002fe  da14              BGE      |L1.810|
;;;175        if (a0<0)
000300  2c00              CMP      r4,#0
000302  da00              BGE      |L1.774|
;;;176    		  a0=0;
000304  2400              MOVS     r4,#0
                  |L1.774|
;;;177        aEnd = (a1<90) ? a1 : 90;
000306  2d5a              CMP      r5,#0x5a
000308  da01              BGE      |L1.782|
00030a  4629              MOV      r1,r5
00030c  e000              B        |L1.784|
                  |L1.782|
00030e  215a              MOVS     r1,#0x5a
                  |L1.784|
;;;178        _DrawArc(x0,y0,rx,ry,a0,aEnd, 1, -1);
000310  f04f33ff          MOV      r3,#0xffffffff
000314  2201              MOVS     r2,#1
000316  9303              STR      r3,[sp,#0xc]
000318  9202              STR      r2,[sp,#8]
00031a  9101              STR      r1,[sp,#4]
00031c  9400              STR      r4,[sp,#0]
00031e  464b              MOV      r3,r9
000320  4642              MOV      r2,r8
000322  4639              MOV      r1,r7
000324  4630              MOV      r0,r6
000326  f7fffffe          BL       _DrawArc
                  |L1.810|
;;;179    	}
;;;180      a1-=90;
00032a  3d5a              SUBS     r5,r5,#0x5a
;;;181    	a0-=90;
00032c  3c5a              SUBS     r4,r4,#0x5a
;;;182    /* Do second quadrant 90-180 degree */
;;;183      if (a1<=0)
00032e  2d00              CMP      r5,#0
000330  dd53              BLE      |L1.986|
;;;184    	  return;
;;;185    	if (a0<90) {
000332  2c5a              CMP      r4,#0x5a
000334  da17              BGE      |L1.870|
;;;186        if (a0<0)
000336  2c00              CMP      r4,#0
000338  da00              BGE      |L1.828|
;;;187    		  a0=0;
00033a  2400              MOVS     r4,#0
                  |L1.828|
;;;188        aEnd = (a1<90) ? a1 : 90;
00033c  2d5a              CMP      r5,#0x5a
00033e  da01              BGE      |L1.836|
000340  4628              MOV      r0,r5
000342  e000              B        |L1.838|
                  |L1.836|
000344  205a              MOVS     r0,#0x5a
                  |L1.838|
;;;189        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,-1,-1);
000346  f04f33ff          MOV      r3,#0xffffffff
00034a  f1c4015a          RSB      r1,r4,#0x5a
00034e  f1c0005a          RSB      r0,r0,#0x5a
000352  9302              STR      r3,[sp,#8]
000354  9303              STR      r3,[sp,#0xc]
000356  9101              STR      r1,[sp,#4]
000358  9000              STR      r0,[sp,#0]
00035a  464b              MOV      r3,r9
00035c  4642              MOV      r2,r8
00035e  4639              MOV      r1,r7
000360  4630              MOV      r0,r6
000362  f7fffffe          BL       _DrawArc
                  |L1.870|
;;;190    	}
;;;191      a1-=90;
000366  3d5a              SUBS     r5,r5,#0x5a
;;;192    	a0-=90;
000368  3c5a              SUBS     r4,r4,#0x5a
;;;193    /* Do third quadrant 180-270 degree */
;;;194      if (a1<=0)
00036a  2d00              CMP      r5,#0
00036c  dd35              BLE      |L1.986|
;;;195    	  return;
;;;196    	if (a0<90) {
00036e  2c5a              CMP      r4,#0x5a
000370  da13              BGE      |L1.922|
;;;197        if (a0<0)
000372  2c00              CMP      r4,#0
000374  da00              BGE      |L1.888|
;;;198    		  a0=0;
000376  2400              MOVS     r4,#0
                  |L1.888|
;;;199        aEnd = (a1<90) ? a1 : 90;
000378  2d5a              CMP      r5,#0x5a
00037a  da01              BGE      |L1.896|
00037c  4629              MOV      r1,r5
00037e  e000              B        |L1.898|
                  |L1.896|
000380  215a              MOVS     r1,#0x5a
                  |L1.898|
;;;200        _DrawArc(x0,y0,rx,ry,a0,aEnd, -1, 1);
000382  2301              MOVS     r3,#1
000384  1e9a              SUBS     r2,r3,#2
000386  9303              STR      r3,[sp,#0xc]
000388  9202              STR      r2,[sp,#8]
00038a  9101              STR      r1,[sp,#4]
00038c  9400              STR      r4,[sp,#0]
00038e  464b              MOV      r3,r9
000390  4642              MOV      r2,r8
000392  4639              MOV      r1,r7
000394  4630              MOV      r0,r6
000396  f7fffffe          BL       _DrawArc
                  |L1.922|
;;;201    	}
;;;202      a1-=90;
00039a  3d5a              SUBS     r5,r5,#0x5a
;;;203    	a0-=90;
00039c  3c5a              SUBS     r4,r4,#0x5a
;;;204    /* Do last quadrant 270-360 degree */
;;;205      if (a1<=0)
00039e  2d00              CMP      r5,#0
0003a0  dd1b              BLE      |L1.986|
;;;206    	  return;
;;;207    	if (a0<90) {
0003a2  2c5a              CMP      r4,#0x5a
0003a4  da16              BGE      |L1.980|
;;;208        if (a0<0)
0003a6  2c00              CMP      r4,#0
0003a8  da00              BGE      |L1.940|
;;;209    		  a0=0;
0003aa  2400              MOVS     r4,#0
                  |L1.940|
;;;210        aEnd = (a1<90) ? a1 : 90;
0003ac  2d5a              CMP      r5,#0x5a
0003ae  da01              BGE      |L1.948|
0003b0  4628              MOV      r0,r5
0003b2  e000              B        |L1.950|
                  |L1.948|
0003b4  205a              MOVS     r0,#0x5a
                  |L1.950|
;;;211        _DrawArc(x0,y0,rx,ry,90-aEnd, 90-a0,1,1);
0003b6  2301              MOVS     r3,#1
0003b8  f1c4015a          RSB      r1,r4,#0x5a
0003bc  f1c0005a          RSB      r0,r0,#0x5a
0003c0  9302              STR      r3,[sp,#8]
0003c2  9303              STR      r3,[sp,#0xc]
0003c4  9101              STR      r1,[sp,#4]
0003c6  9000              STR      r0,[sp,#0]
0003c8  464b              MOV      r3,r9
0003ca  4642              MOV      r2,r8
0003cc  4639              MOV      r1,r7
0003ce  4630              MOV      r0,r6
0003d0  f7fffffe          BL       _DrawArc
                  |L1.980|
;;;212    	}
;;;213      a1-=90;
0003d4  3d5a              SUBS     r5,r5,#0x5a
;;;214    	a0-=90;
0003d6  3c5a              SUBS     r4,r4,#0x5a
;;;215    goto DoFirst;
0003d8  e78e              B        |L1.760|
                  |L1.986|
;;;216    }
0003da  b005              ADD      sp,sp,#0x14
0003dc  e8bd83f0          POP      {r4-r9,pc}
;;;217    
                          ENDP

                  GUI_DrawArc PROC
;;;221    */
;;;222    void GUI_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
0003e0  e92d47f0          PUSH     {r4-r10,lr}
0003e4  b082              SUB      sp,sp,#8
0003e6  4604              MOV      r4,r0
0003e8  468a              MOV      r10,r1
0003ea  4617              MOV      r7,r2
0003ec  4698              MOV      r8,r3
0003ee  9e0b              LDR      r6,[sp,#0x2c]
0003f0  9d0a              LDR      r5,[sp,#0x28]
;;;223      GUI_LOCK();
0003f2  f7fffffe          BL       GUI_Lock
;;;224      #if (GUI_WINSUPPORT)
;;;225        WM_ADDORG(x0,y0);
0003f6  f8dfc03c          LDR      r12,|L1.1076|
0003fa  f8dc0044          LDR      r0,[r12,#0x44]  ; GUI_Context
0003fe  eb000904          ADD      r9,r0,r4
000402  f8dc0048          LDR      r0,[r12,#0x48]  ; GUI_Context
000406  eb00040a          ADD      r4,r0,r10
;;;226        WM_ITERATE_START(NULL) {
00040a  2000              MOVS     r0,#0
00040c  f7fffffe          BL       WM__InitIVRSearch
000410  b158              CBZ      r0,|L1.1066|
                  |L1.1042|
;;;227      #endif
;;;228      GL_DrawArc( x0, y0, rx, ry, a0, a1);
000412  4643              MOV      r3,r8
000414  463a              MOV      r2,r7
000416  4621              MOV      r1,r4
000418  4648              MOV      r0,r9
00041a  9601              STR      r6,[sp,#4]
00041c  9500              STR      r5,[sp,#0]
00041e  f7fffffe          BL       GL_DrawArc
;;;229      #if (GUI_WINSUPPORT)
;;;230        } WM_ITERATE_END();
000422  f7fffffe          BL       WM__GetNextIVR
000426  2800              CMP      r0,#0
000428  d1f3              BNE      |L1.1042|
                  |L1.1066|
;;;231      #endif
;;;232      GUI_UNLOCK();
00042a  b002              ADD      sp,sp,#8
00042c  e8bd47f0          POP      {r4-r10,lr}
000430  f7ffbffe          B.W      GUI_Unlock
;;;233    }
;;;234    
                          ENDP

                  |L1.1076|
                          DCD      GUI_Context
                  |L1.1080|
                          DCD      0x3ff80000
                  |L1.1084|
                          DCD      0x4d12d84a
                  |L1.1088|
                          DCD      0x400921fb
                  |L1.1092|
                          DCD      0x40668000
