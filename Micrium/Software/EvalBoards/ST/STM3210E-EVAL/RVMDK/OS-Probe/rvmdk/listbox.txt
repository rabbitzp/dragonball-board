; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\listbox.o --depend=.\rvmdk\listbox.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\listbox.crf ..\..\..\..\..\uCGUI\GUI\Widget\LISTBOX.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LISTBOX__GetpString PROC
;;;811    */
;;;812    const char* LISTBOX__GetpString(const LISTBOX_Obj* pObj, int Index) {
000000  b510              PUSH     {r4,lr}
;;;813      const char* s = NULL;
000002  2400              MOVS     r4,#0
;;;814      LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000004  3028              ADDS     r0,r0,#0x28
000006  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;815      if (pItem) {
00000a  b100              CBZ      r0,|L1.14|
;;;816        s = pItem->acText;
00000c  1d44              ADDS     r4,r0,#5
                  |L1.14|
;;;817      }
;;;818      return s;
00000e  4620              MOV      r0,r4
;;;819    }
000010  bd10              POP      {r4,pc}
;;;820    
                          ENDP

                  LISTBOX_OwnerDraw PROC
;;;320    */
;;;321    int LISTBOX_OwnerDraw(const WIDGET_ITEM_DRAW_INFO* pDrawItemInfo) {
000012  e92d47f0          PUSH     {r4-r10,lr}
000016  b086              SUB      sp,sp,#0x18
000018  4604              MOV      r4,r0
;;;322      switch (pDrawItemInfo->Cmd) {
00001a  6860              LDR      r0,[r4,#4]
00001c  b360              CBZ      r0,|L1.120|
00001e  2801              CMP      r0,#1
000020  d005              BEQ      |L1.46|
000022  2802              CMP      r0,#2
000024  d01a              BEQ      |L1.92|
;;;323        case WIDGET_ITEM_GET_XSIZE: {
;;;324          LISTBOX_Obj* pObj;
;;;325          const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;326          const char* s;
;;;327          int DistX;
;;;328          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;329          pOldFont = GUI_SetFont(pObj->Props.pFont);
;;;330          s = LISTBOX__GetpString(pObj, pDrawItemInfo->ItemIndex);
;;;331          DistX = GUI_GetStringDistX(s);
;;;332          GUI_SetFont(pOldFont);
;;;333          return DistX;
;;;334        }
;;;335        case WIDGET_ITEM_GET_YSIZE: {
;;;336          LISTBOX_Obj* pObj;
;;;337          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;338          return GUI_GetYDistOfFont(pObj->Props.pFont) + pObj->ItemSpacing;
;;;339        }
;;;340        case WIDGET_ITEM_DRAW: {
;;;341          LISTBOX_Obj* pObj;
;;;342          LISTBOX_ITEM* pItem;
;;;343          WM_HMEM hItem;
;;;344          GUI_RECT r, rText;
;;;345          int FontDistY;
;;;346          int ItemIndex = pDrawItemInfo->ItemIndex;
;;;347          const char* s;
;;;348          int ColorIndex;
;;;349          char IsDisabled;
;;;350          char IsSelected;
;;;351          pObj = LISTBOX_H2P(pDrawItemInfo->hWin);
;;;352          hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, ItemIndex);
;;;353          pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
;;;354          WM_GetInsideRect(&r);
;;;355          FontDistY = GUI_GetFontDistY();
;;;356          /* Calculate color index */
;;;357          IsDisabled = (pItem->Status & LISTBOX_ITEM_DISABLED) ? 1 : 0;
;;;358          IsSelected = (pItem->Status & LISTBOX_ITEM_SELECTED) ? 1 : 0;
;;;359          if (pObj->Flags & LISTBOX_SF_MULTISEL) {
;;;360            if (IsDisabled) {
;;;361              ColorIndex = LISTBOX_CI_DISABLED;
;;;362            } else {
;;;363              ColorIndex = (IsSelected) ? LISTBOX_CI_SELFOCUS : LISTBOX_CI_UNSEL;
;;;364            }
;;;365          } else {
;;;366            if (IsDisabled) {
;;;367              ColorIndex = LISTBOX_CI_DISABLED;
;;;368            } else {
;;;369              if (ItemIndex == pObj->Sel) {
;;;370                ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? LISTBOX_CI_SELFOCUS : LISTBOX_CI_SEL;
;;;371              } else {
;;;372                ColorIndex = LISTBOX_CI_UNSEL;
;;;373              }
;;;374            }
;;;375          }
;;;376          /* Display item */
;;;377          LCD_SetBkColor(pObj->Props.aBackColor[ColorIndex]);
;;;378          LCD_SetColor  (pObj->Props.aTextColor[ColorIndex]);
;;;379          s = LISTBOX__GetpString(pObj, ItemIndex);
;;;380          GUI_SetTextMode(GUI_TM_TRANS);
;;;381          GUI_Clear();
;;;382          rText.y0 = pDrawItemInfo->y0;
;;;383          rText.x0 = pDrawItemInfo->x0 + 1;
;;;384          rText.y1 = rText.y0 + pItem->ySize - 1;
;;;385          if (pObj->Props.Align & (GUI_TA_RIGHT | GUI_TA_CENTER)) {
;;;386            GUI_RECT Rect;
;;;387            WM_GetInsideRectExScrollbar(pDrawItemInfo->hWin, &Rect);
;;;388            rText.x1 = rText.x0 + Rect.x1 - Rect.x0 - pObj->Widget.pEffect->EffectSize;
;;;389          } else {
;;;390            rText.x1 = rText.x0 + pItem->xSize - 1;
;;;391          }
;;;392          GUI_DispStringInRect(s, &rText, pObj->Props.Align);
;;;393          /* Display focus rectangle */
;;;394          if ((pObj->Flags & LISTBOX_SF_MULTISEL) && (ItemIndex == pObj->Sel)) {
;;;395            GUI_RECT rFocus;
;;;396            rFocus.x0 = pDrawItemInfo->x0;
;;;397            rFocus.x1 = r.x1;
;;;398            switch (pObj->Props.Align & GUI_TA_VERTICAL) {
;;;399            case GUI_TA_TOP:
;;;400              rFocus.y0 = pDrawItemInfo->y0;
;;;401              rFocus.y1 = pDrawItemInfo->y0 + FontDistY - 1;
;;;402              break;
;;;403            case GUI_TA_VCENTER:
;;;404              rFocus.y0 = pDrawItemInfo->y0 + (GUI_Context.WM__pUserClipRect->y1 - GUI_Context.WM__pUserClipRect->y0 - FontDistY) / 2;
;;;405              rFocus.y1 = rFocus.y0 + FontDistY - 1;
;;;406              break;
;;;407            case GUI_TA_BOTTOM:
;;;408              rFocus.y1 = pDrawItemInfo->y0 + (GUI_Context.WM__pUserClipRect->y1 - GUI_Context.WM__pUserClipRect->y0);
;;;409              rFocus.y0 = rFocus.y1 - FontDistY + 1;
;;;410              break;
;;;411            }
;;;412            LCD_SetColor(GUI_WHITE - pObj->Props.aBackColor[ColorIndex]);
;;;413            GUI_DrawFocusRect(&rFocus, 0);
;;;414          }
;;;415          return 0;
;;;416        }
;;;417      }
;;;418      return 0;
;;;419    }
000026  b006              ADD      sp,sp,#0x18
000028  2000              MOVS     r0,#0                 ;418
00002a  e8bd87f0          POP      {r4-r10,pc}
                  |L1.46|
00002e  f9b40000          LDRSH    r0,[r4,#0]            ;328
000032  f7fffffe          BL       GUI_ALLOC_h2p
000036  4605              MOV      r5,r0                 ;328
000038  6ca8              LDR      r0,[r5,#0x48]         ;329
00003a  f7fffffe          BL       GUI_SetFont
00003e  4606              MOV      r6,r0                 ;329
000040  4628              MOV      r0,r5                 ;330
000042  68a1              LDR      r1,[r4,#8]            ;330
000044  f7fffffe          BL       LISTBOX__GetpString
000048  f7fffffe          BL       GUI_GetStringDistX
00004c  4604              MOV      r4,r0                 ;331
00004e  4630              MOV      r0,r6                 ;332
000050  f7fffffe          BL       GUI_SetFont
000054  b006              ADD      sp,sp,#0x18
000056  4620              MOV      r0,r4                 ;333
000058  e8bd87f0          POP      {r4-r10,pc}
                  |L1.92|
00005c  f9b40000          LDRSH    r0,[r4,#0]            ;337
000060  f7fffffe          BL       GUI_ALLOC_h2p
000064  4604              MOV      r4,r0                 ;337
000066  6ca0              LDR      r0,[r4,#0x48]         ;338
000068  f7fffffe          BL       GUI_GetYDistOfFont
00006c  f8b41086          LDRH     r1,[r4,#0x86]         ;338
000070  b006              ADD      sp,sp,#0x18
000072  4408              ADD      r0,r0,r1              ;338
000074  e8bd87f0          POP      {r4-r10,pc}
                  |L1.120|
000078  f8d49008          LDR      r9,[r4,#8]            ;346
00007c  f9b40000          LDRSH    r0,[r4,#0]            ;351
000080  f7fffffe          BL       GUI_ALLOC_h2p
000084  4605              MOV      r5,r0                 ;351
000086  4649              MOV      r1,r9                 ;352
000088  f1050028          ADD      r0,r5,#0x28           ;352
00008c  f7fffffe          BL       GUI_ARRAY_GethItem
000090  f7fffffe          BL       GUI_ALLOC_h2p
000094  4680              MOV      r8,r0                 ;353
000096  a804              ADD      r0,sp,#0x10           ;354
000098  f7fffffe          BL       WM_GetInsideRect
00009c  f7fffffe          BL       GUI_GetFontDistY
0000a0  4606              MOV      r6,r0                 ;355
0000a2  f8981004          LDRB     r1,[r8,#4]            ;357
0000a6  f3c10040          UBFX     r0,r1,#1,#1           ;357
0000aa  f0010101          AND      r1,r1,#1              ;358
0000ae  f8952084          LDRB     r2,[r5,#0x84]         ;359
0000b2  f0120f04          TST      r2,#4                 ;359
0000b6  d007              BEQ      |L1.200|
0000b8  b108              CBZ      r0,|L1.190|
0000ba  2003              MOVS     r0,#3                 ;361
0000bc  e014              B        |L1.232|
                  |L1.190|
0000be  b109              CBZ      r1,|L1.196|
0000c0  2002              MOVS     r0,#2                 ;363
0000c2  e011              B        |L1.232|
                  |L1.196|
0000c4  2000              MOVS     r0,#0                 ;363
0000c6  e00f              B        |L1.232|
                  |L1.200|
0000c8  b108              CBZ      r0,|L1.206|
0000ca  2003              MOVS     r0,#3                 ;367
0000cc  e00c              B        |L1.232|
                  |L1.206|
0000ce  f9b50082          LDRSH    r0,[r5,#0x82]         ;369
0000d2  4548              CMP      r0,r9                 ;369
0000d4  d107              BNE      |L1.230|
0000d6  8ce8              LDRH     r0,[r5,#0x26]         ;370
0000d8  f0100f01          TST      r0,#1                 ;370
0000dc  d001              BEQ      |L1.226|
0000de  2002              MOVS     r0,#2                 ;370
0000e0  e002              B        |L1.232|
                  |L1.226|
0000e2  2001              MOVS     r0,#1                 ;370
0000e4  e000              B        |L1.232|
                  |L1.230|
0000e6  2000              MOVS     r0,#0                 ;372
                  |L1.232|
0000e8  eb050780          ADD      r7,r5,r0,LSL #2       ;377
0000ec  6d38              LDR      r0,[r7,#0x50]         ;377
0000ee  f7fffffe          BL       LCD_SetBkColor
0000f2  6e38              LDR      r0,[r7,#0x60]         ;378
0000f4  f7fffffe          BL       LCD_SetColor
0000f8  4649              MOV      r1,r9                 ;379
0000fa  4628              MOV      r0,r5                 ;379
0000fc  f7fffffe          BL       LISTBOX__GetpString
000100  4682              MOV      r10,r0                ;379
000102  2002              MOVS     r0,#2                 ;380
000104  f7fffffe          BL       GUI_SetTextMode
000108  f7fffffe          BL       GUI_Clear
00010c  6920              LDR      r0,[r4,#0x10]         ;382
00010e  f8ad000a          STRH     r0,[sp,#0xa]          ;382
000112  68e1              LDR      r1,[r4,#0xc]          ;383
000114  1c49              ADDS     r1,r1,#1              ;383
000116  b209              SXTH     r1,r1                 ;383
000118  f8ad1008          STRH     r1,[sp,#8]            ;383
00011c  f8b82002          LDRH     r2,[r8,#2]            ;384
000120  4410              ADD      r0,r0,r2              ;384
000122  1e40              SUBS     r0,r0,#1              ;384
000124  f8ad000e          STRH     r0,[sp,#0xe]          ;384
000128  f8b5007c          LDRH     r0,[r5,#0x7c]         ;385
00012c  f0100f03          TST      r0,#3                 ;385
000130  d012              BEQ      |L1.344|
000132  f9b40000          LDRSH    r0,[r4,#0]            ;387
000136  4669              MOV      r1,sp                 ;387
000138  f7fffffe          BL       WM_GetInsideRectExScrollbar
00013c  f8bd0008          LDRH     r0,[sp,#8]            ;388
000140  f8bd1004          LDRH     r1,[sp,#4]            ;388
000144  4408              ADD      r0,r0,r1              ;388
000146  f8bd1000          LDRH     r1,[sp,#0]            ;388
00014a  1a40              SUBS     r0,r0,r1              ;388
00014c  6a29              LDR      r1,[r5,#0x20]         ;388
00014e  6949              LDR      r1,[r1,#0x14]         ;388
000150  1a40              SUBS     r0,r0,r1              ;388
000152  f8ad000c          STRH     r0,[sp,#0xc]          ;388
000156  e005              B        |L1.356|
                  |L1.344|
000158  f8b80000          LDRH     r0,[r8,#0]            ;390
00015c  4408              ADD      r0,r0,r1              ;390
00015e  1e40              SUBS     r0,r0,#1              ;390
000160  f8ad000c          STRH     r0,[sp,#0xc]          ;390
                  |L1.356|
000164  f9b5207c          LDRSH    r2,[r5,#0x7c]         ;392
000168  a902              ADD      r1,sp,#8              ;392
00016a  4650              MOV      r0,r10                ;392
00016c  f7fffffe          BL       GUI_DispStringInRect
000170  f8950084          LDRB     r0,[r5,#0x84]         ;394
000174  f0100f04          TST      r0,#4                 ;394
000178  d047              BEQ      |L1.522|
00017a  f9b50082          LDRSH    r0,[r5,#0x82]         ;394
00017e  4548              CMP      r0,r9                 ;394
000180  d143              BNE      |L1.522|
000182  68e0              LDR      r0,[r4,#0xc]          ;396
000184  f8ad0000          STRH     r0,[sp,#0]            ;396
000188  f8bd0014          LDRH     r0,[sp,#0x14]         ;397
00018c  f8ad0004          STRH     r0,[sp,#4]            ;397
000190  f8b5007c          LDRH     r0,[r5,#0x7c]         ;398
000194  f010000c          ANDS     r0,r0,#0xc            ;398
000198  d005              BEQ      |L1.422|
00019a  49ff              LDR      r1,|L1.1432|
00019c  2804              CMP      r0,#4                 ;398
00019e  d01e              BEQ      |L1.478|
0001a0  280c              CMP      r0,#0xc               ;398
0001a2  d128              BNE      |L1.502|
0001a4  e008              B        |L1.440|
                  |L1.422|
0001a6  6920              LDR      r0,[r4,#0x10]         ;400
0001a8  f8ad0002          STRH     r0,[sp,#2]            ;400
0001ac  6920              LDR      r0,[r4,#0x10]         ;401
0001ae  1e71              SUBS     r1,r6,#1              ;401
0001b0  4408              ADD      r0,r0,r1              ;401
0001b2  f8ad0006          STRH     r0,[sp,#6]            ;401
0001b6  e01e              B        |L1.502|
                  |L1.440|
0001b8  6bc8              LDR      r0,[r1,#0x3c]         ;404  ; GUI_Context
0001ba  f9b01006          LDRSH    r1,[r0,#6]            ;404
0001be  f9b00002          LDRSH    r0,[r0,#2]            ;404
0001c2  1a08              SUBS     r0,r1,r0              ;404
0001c4  1b80              SUBS     r0,r0,r6              ;404
0001c6  6921              LDR      r1,[r4,#0x10]         ;404
0001c8  eb0070d0          ADD      r0,r0,r0,LSR #31      ;404
0001cc  eb010060          ADD      r0,r1,r0,ASR #1       ;404
0001d0  f8ad0002          STRH     r0,[sp,#2]            ;404
0001d4  1e71              SUBS     r1,r6,#1              ;405
0001d6  4408              ADD      r0,r0,r1              ;405
0001d8  f8ad0006          STRH     r0,[sp,#6]            ;405
0001dc  e00b              B        |L1.502|
                  |L1.478|
0001de  6bc8              LDR      r0,[r1,#0x3c]         ;408  ; GUI_Context
0001e0  88c1              LDRH     r1,[r0,#6]            ;408
0001e2  8840              LDRH     r0,[r0,#2]            ;408
0001e4  1a08              SUBS     r0,r1,r0              ;408
0001e6  6921              LDR      r1,[r4,#0x10]         ;408
0001e8  4408              ADD      r0,r0,r1              ;408
0001ea  f8ad0006          STRH     r0,[sp,#6]            ;408
0001ee  1b80              SUBS     r0,r0,r6              ;409
0001f0  1c40              ADDS     r0,r0,#1              ;409
0001f2  f8ad0002          STRH     r0,[sp,#2]            ;409
                  |L1.502|
0001f6  6d38              LDR      r0,[r7,#0x50]         ;412
0001f8  f06f417f          MVN      r1,#0xff000000        ;412
0001fc  1a08              SUBS     r0,r1,r0              ;412
0001fe  f7fffffe          BL       LCD_SetColor
000202  2100              MOVS     r1,#0                 ;413
000204  4668              MOV      r0,sp                 ;413
000206  f7fffffe          BL       GUI_DrawFocusRect
                  |L1.522|
00020a  b006              ADD      sp,sp,#0x18
00020c  2000              MOVS     r0,#0                 ;415
00020e  e8bd87f0          POP      {r4-r10,pc}
;;;420    
                          ENDP

                  _CallOwnerDraw PROC
;;;127    */
;;;128    static int _CallOwnerDraw(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Cmd, int ItemIndex) {
000212  b500              PUSH     {lr}
000214  b085              SUB      sp,sp,#0x14
;;;129      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;130      int r;
;;;131      ItemInfo.Cmd       = Cmd;
000216  9201              STR      r2,[sp,#4]
;;;132      ItemInfo.hWin      = hObj;
000218  f8ad0000          STRH     r0,[sp,#0]
;;;133      ItemInfo.ItemIndex = ItemIndex;
00021c  9302              STR      r3,[sp,#8]
;;;134      if (pObj->pfDrawItem) {
00021e  6ac9              LDR      r1,[r1,#0x2c]
000220  b119              CBZ      r1,|L1.554|
;;;135        r = pObj->pfDrawItem(&ItemInfo);
000222  4668              MOV      r0,sp
000224  4788              BLX      r1
;;;136      } else {
;;;137        r = LISTBOX_OwnerDraw(&ItemInfo);
;;;138      }
;;;139      return r;
;;;140    }
000226  b005              ADD      sp,sp,#0x14
000228  bd00              POP      {pc}
                  |L1.554|
00022a  4668              MOV      r0,sp                 ;137
00022c  f7fffffe          BL       LISTBOX_OwnerDraw
000230  b005              ADD      sp,sp,#0x14
000232  bd00              POP      {pc}
;;;141    
                          ENDP

                  _GetYSize PROC
;;;145    */
;;;146    static int _GetYSize(LISTBOX_Handle hObj) {
000234  b500              PUSH     {lr}
000236  b083              SUB      sp,sp,#0xc
;;;147      GUI_RECT Rect;
;;;148      WM_GetInsideRectExScrollbar(hObj, &Rect);
000238  4669              MOV      r1,sp
00023a  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;149      return (Rect.y1 - Rect.y0 + 1);
00023e  f9bd0006          LDRSH    r0,[sp,#6]
000242  f9bd1002          LDRSH    r1,[sp,#2]
;;;150    }
000246  b003              ADD      sp,sp,#0xc
000248  1a40              SUBS     r0,r0,r1              ;149
00024a  1c40              ADDS     r0,r0,#1              ;149
00024c  bd00              POP      {pc}
;;;151    
                          ENDP

                  _GetItemSizeX PROC
;;;155    */
;;;156    static int _GetItemSizeX(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
00024e  e92d47f0          PUSH     {r4-r10,lr}
000252  4680              MOV      r8,r0
000254  460e              MOV      r6,r1
000256  4617              MOV      r7,r2
;;;157      LISTBOX_ITEM* pItem;
;;;158      int xSize = 0;
000258  2400              MOVS     r4,#0
;;;159      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00025a  4639              MOV      r1,r7
00025c  f1060028          ADD      r0,r6,#0x28
000260  f7fffffe          BL       GUI_ARRAY_GetpItem
000264  4605              MOV      r5,r0
;;;160      if (pItem) {
000266  b105              CBZ      r5,|L1.618|
;;;161        xSize = pItem->xSize;
000268  882c              LDRH     r4,[r5,#0]
                  |L1.618|
;;;162      }
;;;163      if (xSize == 0) {
00026a  b96c              CBNZ     r4,|L1.648|
;;;164        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;165        pOldFont = GUI_SetFont(pObj->Props.pFont);
00026c  6cb0              LDR      r0,[r6,#0x48]
00026e  f7fffffe          BL       GUI_SetFont
000272  4681              MOV      r9,r0
;;;166        xSize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_XSIZE, Index);
000274  463b              MOV      r3,r7
000276  2201              MOVS     r2,#1
000278  4631              MOV      r1,r6
00027a  4640              MOV      r0,r8
00027c  f7fffffe          BL       _CallOwnerDraw
000280  4604              MOV      r4,r0
;;;167        GUI_SetFont(pOldFont);
000282  4648              MOV      r0,r9
000284  f7fffffe          BL       GUI_SetFont
                  |L1.648|
;;;168      }
;;;169      if (pItem) {
000288  b105              CBZ      r5,|L1.652|
;;;170        pItem->xSize = xSize;
00028a  802c              STRH     r4,[r5,#0]
                  |L1.652|
;;;171      }
;;;172      return xSize;
00028c  4620              MOV      r0,r4
;;;173    }
00028e  e8bd87f0          POP      {r4-r10,pc}
;;;174    
                          ENDP

                  _GetItemSizeY PROC
;;;178    */
;;;179    static int _GetItemSizeY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
000292  e92d47f0          PUSH     {r4-r10,lr}
000296  4680              MOV      r8,r0
000298  460e              MOV      r6,r1
00029a  4617              MOV      r7,r2
;;;180      LISTBOX_ITEM* pItem;
;;;181      int ySize = 0;
00029c  2400              MOVS     r4,#0
;;;182      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
00029e  4639              MOV      r1,r7
0002a0  f1060028          ADD      r0,r6,#0x28
0002a4  f7fffffe          BL       GUI_ARRAY_GetpItem
0002a8  4605              MOV      r5,r0
;;;183      if (pItem) {
0002aa  b105              CBZ      r5,|L1.686|
;;;184        ySize = pItem->ySize;
0002ac  886c              LDRH     r4,[r5,#2]
                  |L1.686|
;;;185      }
;;;186      if (ySize == 0) {
0002ae  b96c              CBNZ     r4,|L1.716|
;;;187        const GUI_FONT GUI_UNI_PTR* pOldFont;
;;;188        pOldFont = GUI_SetFont(pObj->Props.pFont);
0002b0  6cb0              LDR      r0,[r6,#0x48]
0002b2  f7fffffe          BL       GUI_SetFont
0002b6  4681              MOV      r9,r0
;;;189        ySize    = _CallOwnerDraw(hObj, pObj, WIDGET_ITEM_GET_YSIZE, Index);
0002b8  463b              MOV      r3,r7
0002ba  2202              MOVS     r2,#2
0002bc  4631              MOV      r1,r6
0002be  4640              MOV      r0,r8
0002c0  f7fffffe          BL       _CallOwnerDraw
0002c4  4604              MOV      r4,r0
;;;190        GUI_SetFont(pOldFont);
0002c6  4648              MOV      r0,r9
0002c8  f7fffffe          BL       GUI_SetFont
                  |L1.716|
;;;191      }
;;;192      if (pItem) {
0002cc  b105              CBZ      r5,|L1.720|
;;;193        pItem->ySize = ySize;
0002ce  806c              STRH     r4,[r5,#2]
                  |L1.720|
;;;194      }
;;;195      return ySize;
0002d0  4620              MOV      r0,r4
;;;196    }
0002d2  e8bd87f0          POP      {r4-r10,pc}
;;;197    
                          ENDP

                  LISTBOX__GetNumItems PROC
;;;800    */
;;;801    unsigned LISTBOX__GetNumItems(const LISTBOX_Obj* pObj) {
0002d6  3028              ADDS     r0,r0,#0x28
;;;802      return GUI_ARRAY_GetNumItems(&pObj->ItemArray);
0002d8  f7ffbffe          B.W      GUI_ARRAY_GetNumItems
;;;803    }
;;;804    
                          ENDP

                  _GetContentsSizeX PROC
;;;201    */
;;;202    static int _GetContentsSizeX(LISTBOX_Handle hObj) {
0002dc  e92d41f0          PUSH     {r4-r8,lr}
0002e0  4607              MOV      r7,r0
;;;203      LISTBOX_Obj* pObj;
;;;204      int i, NumItems, SizeX;
;;;205      int Result = 0;
0002e2  2500              MOVS     r5,#0
;;;206      pObj = LISTBOX_H2P(hObj);
0002e4  4638              MOV      r0,r7
0002e6  f7fffffe          BL       GUI_ALLOC_h2p
0002ea  4680              MOV      r8,r0
;;;207      NumItems = LISTBOX__GetNumItems(pObj);
0002ec  4640              MOV      r0,r8
0002ee  f7fffffe          BL       LISTBOX__GetNumItems
0002f2  4606              MOV      r6,r0
;;;208      for (i = 0; i < NumItems; i++) {
0002f4  2400              MOVS     r4,#0
0002f6  2e00              CMP      r6,#0
0002f8  dd0a              BLE      |L1.784|
                  |L1.762|
;;;209        SizeX = _GetItemSizeX(hObj, pObj, i);
0002fa  4622              MOV      r2,r4
0002fc  4641              MOV      r1,r8
0002fe  4638              MOV      r0,r7
000300  f7fffffe          BL       _GetItemSizeX
;;;210        if (Result < SizeX) {
000304  4285              CMP      r5,r0
000306  da00              BGE      |L1.778|
;;;211          Result = SizeX;
000308  4605              MOV      r5,r0
                  |L1.778|
00030a  1c64              ADDS     r4,r4,#1              ;208
00030c  42b4              CMP      r4,r6                 ;208
00030e  dbf4              BLT      |L1.762|
                  |L1.784|
;;;212        }
;;;213      }
;;;214      return Result;
000310  4628              MOV      r0,r5
;;;215    }
000312  e8bd81f0          POP      {r4-r8,pc}
;;;216    
                          ENDP

                  _GetItemPosY PROC
;;;220    */
;;;221    static int _GetItemPosY(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, unsigned Index) {
000316  e92d41f0          PUSH     {r4-r8,lr}
00031a  4680              MOV      r8,r0
00031c  460f              MOV      r7,r1
00031e  4616              MOV      r6,r2
;;;222      if (Index < LISTBOX__GetNumItems(pObj)) {
000320  4638              MOV      r0,r7
000322  f7fffffe          BL       LISTBOX__GetNumItems
000326  42b0              CMP      r0,r6
000328  d911              BLS      |L1.846|
;;;223        if ((int)Index >= pObj->ScrollStateV.v) {
00032a  6b7c              LDR      r4,[r7,#0x34]
00032c  42b4              CMP      r4,r6
00032e  dc0e              BGT      |L1.846|
;;;224          unsigned i;
;;;225          int PosY = 0;
000330  f04f0500          MOV      r5,#0
;;;226          for (i = pObj->ScrollStateV.v; i < Index; i++) {
000334  d208              BCS      |L1.840|
                  |L1.822|
;;;227            PosY += _GetItemSizeY(hObj, pObj, i);
000336  4622              MOV      r2,r4
000338  4639              MOV      r1,r7
00033a  4640              MOV      r0,r8
00033c  f7fffffe          BL       _GetItemSizeY
000340  4405              ADD      r5,r5,r0
000342  1c64              ADDS     r4,r4,#1              ;226
000344  42b4              CMP      r4,r6                 ;226
000346  d3f6              BCC      |L1.822|
                  |L1.840|
;;;228          }
;;;229          return PosY;
000348  4628              MOV      r0,r5
;;;230        }
;;;231      }
;;;232      return -1;
;;;233    }
00034a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.846|
00034e  f04f30ff          MOV      r0,#0xffffffff        ;232
000352  e8bd81f0          POP      {r4-r8,pc}
;;;234    
                          ENDP

                  _IsPartiallyVis PROC
;;;238    */
;;;239    static int _IsPartiallyVis(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000356  e92d41f0          PUSH     {r4-r8,lr}
00035a  4607              MOV      r7,r0
00035c  460d              MOV      r5,r1
;;;240      int Index;
;;;241      Index = pObj->Sel;
00035e  f9b54082          LDRSH    r4,[r5,#0x82]
;;;242      if (Index < (int)LISTBOX__GetNumItems(pObj)) {
000362  4628              MOV      r0,r5
000364  f7fffffe          BL       LISTBOX__GetNumItems
000368  42a0              CMP      r0,r4
00036a  dd16              BLE      |L1.922|
;;;243        if (Index >= pObj->ScrollStateV.v) {
00036c  6b68              LDR      r0,[r5,#0x34]
00036e  42a0              CMP      r0,r4
000370  dc13              BGT      |L1.922|
;;;244          int y;
;;;245          y  = _GetItemPosY (hObj, pObj, Index);
000372  4622              MOV      r2,r4
000374  4629              MOV      r1,r5
000376  4638              MOV      r0,r7
000378  f7fffffe          BL       _GetItemPosY
00037c  4606              MOV      r6,r0
;;;246          y += _GetItemSizeY(hObj, pObj, Index);
00037e  4622              MOV      r2,r4
000380  4629              MOV      r1,r5
000382  4638              MOV      r0,r7
000384  f7fffffe          BL       _GetItemSizeY
000388  1984              ADDS     r4,r0,r6
;;;247          if (y > _GetYSize(hObj)) {
00038a  4638              MOV      r0,r7
00038c  f7fffffe          BL       _GetYSize
000390  42a0              CMP      r0,r4
000392  da02              BGE      |L1.922|
;;;248            return 1;
000394  2001              MOVS     r0,#1
;;;249          }
;;;250        }
;;;251      }
;;;252      return 0;
;;;253    }
000396  e8bd81f0          POP      {r4-r8,pc}
                  |L1.922|
00039a  2000              MOVS     r0,#0                 ;252
00039c  e8bd81f0          POP      {r4-r8,pc}
;;;254    
                          ENDP

                  _GetNumVisItems PROC
;;;261    */
;;;262    static unsigned _GetNumVisItems(const LISTBOX_Obj* pObj, LISTBOX_Handle hObj) {
0003a0  e92d47f0          PUSH     {r4-r10,lr}
0003a4  4680              MOV      r8,r0
0003a6  4689              MOV      r9,r1
;;;263      int NumItems, r = 1;
0003a8  2401              MOVS     r4,#1
;;;264      NumItems = LISTBOX__GetNumItems(pObj);
0003aa  4640              MOV      r0,r8
0003ac  f7fffffe          BL       LISTBOX__GetNumItems
0003b0  4606              MOV      r6,r0
;;;265      if (NumItems > 1) {
0003b2  2e01              CMP      r6,#1
0003b4  dd19              BLE      |L1.1002|
;;;266        int i, ySize, DistY = 0;
0003b6  2500              MOVS     r5,#0
;;;267        ySize = _GetYSize(hObj);
0003b8  4648              MOV      r0,r9
0003ba  f7fffffe          BL       _GetYSize
0003be  4607              MOV      r7,r0
;;;268        for (i = NumItems - 1; i >= 0; i--) {
0003c0  1e74              SUBS     r4,r6,#1
0003c2  2c00              CMP      r4,#0
0003c4  db0a              BLT      |L1.988|
                  |L1.966|
;;;269          DistY += _GetItemSizeY(hObj, pObj, i);
0003c6  4622              MOV      r2,r4
0003c8  4641              MOV      r1,r8
0003ca  4648              MOV      r0,r9
0003cc  f7fffffe          BL       _GetItemSizeY
0003d0  4405              ADD      r5,r5,r0
;;;270          if (DistY > ySize) {
0003d2  42bd              CMP      r5,r7
0003d4  dc02              BGT      |L1.988|
0003d6  1e64              SUBS     r4,r4,#1              ;268
0003d8  2c00              CMP      r4,#0                 ;268
0003da  daf4              BGE      |L1.966|
                  |L1.988|
;;;271            break;
;;;272          }
;;;273        }
;;;274        r = NumItems - i - 1;
0003dc  1b30              SUBS     r0,r6,r4
0003de  1e44              SUBS     r4,r0,#1
;;;275        if (r < 1) {
0003e0  2c01              CMP      r4,#1
0003e2  da02              BGE      |L1.1002|
;;;276          return 1;
0003e4  2001              MOVS     r0,#1
;;;277        }
;;;278      }
;;;279      return r;
;;;280    }
0003e6  e8bd87f0          POP      {r4-r10,pc}
                  |L1.1002|
0003ea  4620              MOV      r0,r4                 ;279
0003ec  e8bd87f0          POP      {r4-r10,pc}
;;;281    
                          ENDP

                  _NotifyOwner PROC
;;;289    */
;;;290    static void _NotifyOwner(WM_HWIN hObj, int Notification) {
0003f0  b530              PUSH     {r4,r5,lr}
0003f2  b083              SUB      sp,sp,#0xc
0003f4  4604              MOV      r4,r0
0003f6  460d              MOV      r5,r1
;;;291      WM_MESSAGE Msg = {0};
0003f8  2000              MOVS     r0,#0
0003fa  9000              STR      r0,[sp,#0]
0003fc  9001              STR      r0,[sp,#4]
0003fe  9002              STR      r0,[sp,#8]
;;;292      WM_HWIN hOwner;
;;;293      LISTBOX_Obj* pObj    = LISTBOX_H2P(hObj);
000400  4620              MOV      r0,r4
000402  f7fffffe          BL       GUI_ALLOC_h2p
;;;294      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000406  f9b00080          LDRSH    r0,[r0,#0x80]
00040a  b910              CBNZ     r0,|L1.1042|
00040c  4620              MOV      r0,r4
00040e  f7fffffe          BL       WM_GetParent
                  |L1.1042|
;;;295      Msg.MsgId  = WM_NOTIFY_PARENT;
000412  2126              MOVS     r1,#0x26
000414  9100              STR      r1,[sp,#0]
;;;296      Msg.Data.v = Notification;
000416  9502              STR      r5,[sp,#8]
;;;297      Msg.hWinSrc= hObj;
000418  f8ad4006          STRH     r4,[sp,#6]
;;;298      WM__SendMessage(hOwner, &Msg);
00041c  4669              MOV      r1,sp
00041e  f7fffffe          BL       WM__SendMessage
;;;299    }
000422  b003              ADD      sp,sp,#0xc
000424  bd30              POP      {r4,r5,pc}
;;;300    
                          ENDP

                  _SendToOwner PROC
;;;308    */
;;;309    static void _SendToOwner(WM_HWIN hObj, WM_MESSAGE * pMsg) {
000426  b570              PUSH     {r4-r6,lr}
000428  4604              MOV      r4,r0
00042a  460d              MOV      r5,r1
;;;310      WM_HWIN hOwner;
;;;311      LISTBOX_Obj * pObj = LISTBOX_H2P(hObj);
00042c  4620              MOV      r0,r4
00042e  f7fffffe          BL       GUI_ALLOC_h2p
;;;312      hOwner = pObj->hOwner ? pObj->hOwner : WM_GetParent(hObj);
000432  f9b00080          LDRSH    r0,[r0,#0x80]
000436  b910              CBNZ     r0,|L1.1086|
000438  4620              MOV      r0,r4
00043a  f7fffffe          BL       WM_GetParent
                  |L1.1086|
;;;313      pMsg->hWinSrc= hObj;
00043e  80ec              STRH     r4,[r5,#6]
;;;314      WM__SendMessage(hOwner, pMsg);
000440  4629              MOV      r1,r5
000442  e8bd4070          POP      {r4-r6,lr}
000446  f7ffbffe          B.W      WM__SendMessage
;;;315    }
;;;316    
                          ENDP

                  _UpdateScrollPos PROC
;;;432    */
;;;433    static int _UpdateScrollPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj) {
00044a  b570              PUSH     {r4-r6,lr}
00044c  4606              MOV      r6,r0
00044e  460c              MOV      r4,r1
;;;434      int PrevScrollStateV;
;;;435      PrevScrollStateV = pObj->ScrollStateV.v;
000450  6b65              LDR      r5,[r4,#0x34]
;;;436      if (pObj->Sel >= 0) {
000452  f9b40082          LDRSH    r0,[r4,#0x82]
000456  2800              CMP      r0,#0
000458  db10              BLT      |L1.1148|
;;;437        /* Check upper limit */
;;;438        if (_IsPartiallyVis(hObj, pObj)) {
00045a  4621              MOV      r1,r4
00045c  4630              MOV      r0,r6
00045e  f7fffffe          BL       _IsPartiallyVis
000462  b128              CBZ      r0,|L1.1136|
;;;439          pObj->ScrollStateV.v = pObj->Sel - (pObj->ScrollStateV.PageSize - 1);
000464  f9b40082          LDRSH    r0,[r4,#0x82]
000468  6ba1              LDR      r1,[r4,#0x38]
00046a  1a40              SUBS     r0,r0,r1
00046c  1c40              ADDS     r0,r0,#1
00046e  6360              STR      r0,[r4,#0x34]
                  |L1.1136|
;;;440        }
;;;441        /* Check lower limit */
;;;442        if (pObj->Sel < pObj->ScrollStateV.v) {
000470  f9b40082          LDRSH    r0,[r4,#0x82]
000474  6b61              LDR      r1,[r4,#0x34]
000476  4288              CMP      r0,r1
000478  da00              BGE      |L1.1148|
;;;443          pObj->ScrollStateV.v = pObj->Sel;
00047a  6360              STR      r0,[r4,#0x34]
                  |L1.1148|
;;;444        }
;;;445      }
;;;446      WM_CheckScrollBounds(&pObj->ScrollStateV);
00047c  f1040030          ADD      r0,r4,#0x30
000480  f7fffffe          BL       WM_CheckScrollBounds
;;;447      WM_CheckScrollBounds(&pObj->ScrollStateH);
000484  f104003c          ADD      r0,r4,#0x3c
000488  f7fffffe          BL       WM_CheckScrollBounds
;;;448      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
00048c  f104023c          ADD      r2,r4,#0x3c
000490  f1040130          ADD      r1,r4,#0x30
000494  4630              MOV      r0,r6
000496  f7fffffe          BL       WIDGET__SetScrollState
;;;449      return pObj->ScrollStateV.v - PrevScrollStateV;
00049a  6b60              LDR      r0,[r4,#0x34]
00049c  1b40              SUBS     r0,r0,r5
;;;450    }
00049e  bd70              POP      {r4-r6,pc}
;;;451    
                          ENDP

                  _CalcScrollParas PROC
;;;455    */
;;;456    static int _CalcScrollParas(LISTBOX_Handle hObj) {
0004a0  b530              PUSH     {r4,r5,lr}
0004a2  b083              SUB      sp,sp,#0xc
0004a4  4605              MOV      r5,r0
;;;457      GUI_RECT Rect;
;;;458      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
0004a6  4628              MOV      r0,r5
0004a8  f7fffffe          BL       GUI_ALLOC_h2p
0004ac  4604              MOV      r4,r0
;;;459      /* Calc vertical scroll parameters */
;;;460      pObj->ScrollStateV.NumItems = LISTBOX__GetNumItems(pObj);
0004ae  4620              MOV      r0,r4
0004b0  f7fffffe          BL       LISTBOX__GetNumItems
0004b4  6320              STR      r0,[r4,#0x30]
;;;461      pObj->ScrollStateV.PageSize = _GetNumVisItems(pObj, hObj);
0004b6  4629              MOV      r1,r5
0004b8  4620              MOV      r0,r4
0004ba  f7fffffe          BL       _GetNumVisItems
0004be  63a0              STR      r0,[r4,#0x38]
;;;462      /* Calc horizontal scroll parameters */
;;;463      WM_GetInsideRectExScrollbar(hObj, &Rect);
0004c0  4669              MOV      r1,sp
0004c2  4628              MOV      r0,r5
0004c4  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;464      pObj->ScrollStateH.NumItems = _GetContentsSizeX(hObj);
0004c8  4628              MOV      r0,r5
0004ca  f7fffffe          BL       _GetContentsSizeX
0004ce  63e0              STR      r0,[r4,#0x3c]
;;;465      pObj->ScrollStateH.PageSize = Rect.x1 - Rect.x0 + 1;
0004d0  f9bd0004          LDRSH    r0,[sp,#4]
0004d4  f9bd1000          LDRSH    r1,[sp,#0]
0004d8  1a40              SUBS     r0,r0,r1
0004da  1c40              ADDS     r0,r0,#1
0004dc  6460              STR      r0,[r4,#0x44]
;;;466      return _UpdateScrollPos(hObj, pObj);
0004de  4621              MOV      r1,r4
0004e0  4628              MOV      r0,r5
0004e2  f7fffffe          BL       _UpdateScrollPos
;;;467    }
0004e6  b003              ADD      sp,sp,#0xc
0004e8  bd30              POP      {r4,r5,pc}
;;;468    
                          ENDP

                  LISTBOX__SetScrollbarColor PROC
;;;901    */
;;;902    void LISTBOX__SetScrollbarColor(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
0004ea  e92d47f0          PUSH     {r4-r10,lr}
0004ee  4604              MOV      r4,r0
0004f0  460e              MOV      r6,r1
;;;903      WM_HWIN hBarH, hBarV;
;;;904      int i;
;;;905      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
0004f2  21ff              MOVS     r1,#0xff
0004f4  4620              MOV      r0,r4
0004f6  f7fffffe          BL       WM_GetDialogItem
0004fa  4680              MOV      r8,r0
;;;906      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
0004fc  21fe              MOVS     r1,#0xfe
0004fe  4620              MOV      r0,r4
000500  f7fffffe          BL       WM_GetDialogItem
000504  4681              MOV      r9,r0
;;;907      if (hBarH || hBarV) {
000506  ea580009          ORRS     r0,r8,r9
00050a  d013              BEQ      |L1.1332|
;;;908        for (i = 0; i < GUI_COUNTOF(pObj->Props.aScrollbarColor); i++) {
00050c  2400              MOVS     r4,#0
;;;909          if (pObj->Props.aScrollbarColor[i] != GUI_INVALID_COLOR) {
00050e  f06f4770          MVN      r7,#0xf0000000
                  |L1.1298|
000512  eb060584          ADD      r5,r6,r4,LSL #2
000516  6f2a              LDR      r2,[r5,#0x70]
000518  42ba              CMP      r2,r7
00051a  d008              BEQ      |L1.1326|
;;;910            SCROLLBAR_SetColor(hBarH, i, pObj->Props.aScrollbarColor[i]);
00051c  4621              MOV      r1,r4
00051e  4640              MOV      r0,r8
000520  f7fffffe          BL       SCROLLBAR_SetColor
;;;911            SCROLLBAR_SetColor(hBarV, i, pObj->Props.aScrollbarColor[i]);
000524  4621              MOV      r1,r4
000526  4648              MOV      r0,r9
000528  6f2a              LDR      r2,[r5,#0x70]
00052a  f7fffffe          BL       SCROLLBAR_SetColor
                  |L1.1326|
00052e  1c64              ADDS     r4,r4,#1              ;908
000530  2c03              CMP      r4,#3                 ;908
000532  d3ee              BCC      |L1.1298|
                  |L1.1332|
;;;912          }
;;;913        }
;;;914      }
;;;915    }
000534  e8bd87f0          POP      {r4-r10,pc}
;;;916    
                          ENDP

                  LISTBOX__SetScrollbarWidth PROC
;;;884    */
;;;885    void LISTBOX__SetScrollbarWidth(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj) {
000538  b570              PUSH     {r4-r6,lr}
00053a  4605              MOV      r5,r0
;;;886      WM_HWIN hBarH, hBarV;
;;;887      int Width;
;;;888      Width = pObj->ScrollbarWidth;
00053c  f8914085          LDRB     r4,[r1,#0x85]
;;;889      if (Width == 0) {
000540  b914              CBNZ     r4,|L1.1352|
;;;890        Width = SCROLLBAR_GetDefaultWidth();
000542  f7fffffe          BL       SCROLLBAR_GetDefaultWidth
000546  4604              MOV      r4,r0
                  |L1.1352|
;;;891      }
;;;892      hBarH = WM_GetDialogItem(hObj, GUI_ID_HSCROLL);
000548  21ff              MOVS     r1,#0xff
00054a  4628              MOV      r0,r5
00054c  f7fffffe          BL       WM_GetDialogItem
000550  4606              MOV      r6,r0
;;;893      hBarV = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
000552  21fe              MOVS     r1,#0xfe
000554  4628              MOV      r0,r5
000556  f7fffffe          BL       WM_GetDialogItem
00055a  4605              MOV      r5,r0
;;;894      SCROLLBAR_SetWidth(hBarH, Width);
00055c  4621              MOV      r1,r4
00055e  4630              MOV      r0,r6
000560  f7fffffe          BL       SCROLLBAR_SetWidth
;;;895      SCROLLBAR_SetWidth(hBarV, Width);
000564  4621              MOV      r1,r4
000566  4628              MOV      r0,r5
000568  e8bd4070          POP      {r4-r6,lr}
00056c  f7ffbffe          B.W      SCROLLBAR_SetWidth
;;;896    }
;;;897    
                          ENDP

                  _ManageAutoScroll PROC
;;;472    */
;;;473    static void _ManageAutoScroll(LISTBOX_Handle hObj) {
000570  b570              PUSH     {r4-r6,lr}
000572  b082              SUB      sp,sp,#8
000574  4605              MOV      r5,r0
;;;474      char IsRequired;
;;;475      LISTBOX_Obj* pObj = LISTBOX_H2P(hObj);
000576  4628              MOV      r0,r5
000578  f7fffffe          BL       GUI_ALLOC_h2p
00057c  4604              MOV      r4,r0
;;;476      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_V) {
00057e  f8940084          LDRB     r0,[r4,#0x84]
000582  f0100f02          TST      r0,#2
000586  d013              BEQ      |L1.1456|
;;;477        IsRequired = (_GetNumVisItems(pObj, hObj) < LISTBOX__GetNumItems(pObj));
000588  4629              MOV      r1,r5
00058a  4620              MOV      r0,r4
00058c  f7fffffe          BL       _GetNumVisItems
000590  4606              MOV      r6,r0
000592  4620              MOV      r0,r4
000594  e002              B        |L1.1436|
000596  0000              DCW      0x0000
                  |L1.1432|
                          DCD      GUI_Context
                  |L1.1436|
00059c  f7fffffe          BL       LISTBOX__GetNumItems
0005a0  4286              CMP      r6,r0
0005a2  d201              BCS      |L1.1448|
0005a4  2101              MOVS     r1,#1
0005a6  e000              B        |L1.1450|
                  |L1.1448|
0005a8  2100              MOVS     r1,#0
                  |L1.1450|
;;;478        WM_SetScrollbarV(hObj, IsRequired);
0005aa  4628              MOV      r0,r5
0005ac  f7fffffe          BL       WM_SetScrollbarV
                  |L1.1456|
;;;479      }
;;;480      if (pObj->Flags & LISTBOX_SF_AUTOSCROLLBAR_H) {
0005b0  f8940084          LDRB     r0,[r4,#0x84]
0005b4  f0100f01          TST      r0,#1
0005b8  d015              BEQ      |L1.1510|
;;;481        GUI_RECT Rect;
;;;482        int xSize, xSizeContents;
;;;483        xSizeContents = _GetContentsSizeX(hObj);
0005ba  4628              MOV      r0,r5
0005bc  f7fffffe          BL       _GetContentsSizeX
0005c0  4606              MOV      r6,r0
;;;484        WM_GetInsideRectExScrollbar(hObj, &Rect);
0005c2  4669              MOV      r1,sp
0005c4  4628              MOV      r0,r5
0005c6  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;485        xSize = Rect.x1 - Rect.x0 + 1;
0005ca  f9bd0004          LDRSH    r0,[sp,#4]
0005ce  f9bd1000          LDRSH    r1,[sp,#0]
0005d2  1a40              SUBS     r0,r0,r1
0005d4  1c40              ADDS     r0,r0,#1
;;;486        IsRequired = (xSizeContents > xSize);
0005d6  4286              CMP      r6,r0
0005d8  dd01              BLE      |L1.1502|
0005da  2101              MOVS     r1,#1
0005dc  e000              B        |L1.1504|
                  |L1.1502|
0005de  2100              MOVS     r1,#0
                  |L1.1504|
;;;487        WM_SetScrollbarH(hObj, IsRequired);
0005e0  4628              MOV      r0,r5
0005e2  f7fffffe          BL       WM_SetScrollbarH
                  |L1.1510|
;;;488      }
;;;489      if (pObj->ScrollbarWidth) {
0005e6  f8940085          LDRB     r0,[r4,#0x85]
0005ea  b118              CBZ      r0,|L1.1524|
;;;490        LISTBOX__SetScrollbarWidth(hObj, pObj);
0005ec  4621              MOV      r1,r4
0005ee  4628              MOV      r0,r5
0005f0  f7fffffe          BL       LISTBOX__SetScrollbarWidth
                  |L1.1524|
;;;491      }
;;;492      LISTBOX__SetScrollbarColor(hObj, pObj);
0005f4  b002              ADD      sp,sp,#8
0005f6  4621              MOV      r1,r4
0005f8  4628              MOV      r0,r5
0005fa  e8bd4070          POP      {r4-r6,lr}
0005fe  e7fe              B        LISTBOX__SetScrollbarColor
;;;493    }
;;;494    
                          ENDP

                  LISTBOX_UpdateScrollers PROC
;;;498    */
;;;499    int LISTBOX_UpdateScrollers(LISTBOX_Handle hObj) {
000600  b510              PUSH     {r4,lr}
000602  4604              MOV      r4,r0
;;;500      _ManageAutoScroll(hObj);
000604  4620              MOV      r0,r4
000606  f7fffffe          BL       _ManageAutoScroll
;;;501      return _CalcScrollParas(hObj);
00060a  4620              MOV      r0,r4
00060c  e8bd4010          POP      {r4,lr}
000610  e7fe              B        _CalcScrollParas
;;;502    }
;;;503    
                          ENDP

                  _Tolower PROC
;;;507    */
;;;508    static int _Tolower(int Key) {
000612  f1a00141          SUB      r1,r0,#0x41
;;;509      if ((Key >= 0x41) && (Key <= 0x5a)) {
000616  2919              CMP      r1,#0x19
000618  d800              BHI      |L1.1564|
;;;510        Key += 0x20;
00061a  3020              ADDS     r0,r0,#0x20
                  |L1.1564|
;;;511      }
;;;512      return Key;
;;;513    }
00061c  4770              BX       lr
;;;514    
                          ENDP

                  _IsAlphaNum PROC
;;;518    */
;;;519    static int _IsAlphaNum(int Key) {
00061e  b510              PUSH     {r4,lr}
;;;520      Key = _Tolower(Key);
000620  f7fffffe          BL       _Tolower
;;;521      if (Key >= 'a' && Key <= 'z') {
000624  f1a00161          SUB      r1,r0,#0x61
000628  2919              CMP      r1,#0x19
00062a  d801              BHI      |L1.1584|
;;;522        return 1;
00062c  2001              MOVS     r0,#1
;;;523      }
;;;524      if (Key >= '0' && Key <= '9') {
;;;525        return 1;
;;;526      }
;;;527      return 0;
;;;528    }
00062e  bd10              POP      {r4,pc}
                  |L1.1584|
000630  3830              SUBS     r0,r0,#0x30           ;524
000632  2809              CMP      r0,#9                 ;524
000634  d801              BHI      |L1.1594|
000636  2001              MOVS     r0,#1                 ;525
000638  bd10              POP      {r4,pc}
                  |L1.1594|
00063a  2000              MOVS     r0,#0                 ;527
00063c  bd10              POP      {r4,pc}
;;;529    
                          ENDP

                  LISTBOX__InvalidateItem PROC
;;;847    */
;;;848    void LISTBOX__InvalidateItem(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
00063e  b5f0              PUSH     {r4-r7,lr}
000640  b083              SUB      sp,sp,#0xc
000642  4605              MOV      r5,r0
000644  460f              MOV      r7,r1
000646  4616              MOV      r6,r2
;;;849      if (Sel >= 0) {
000648  2e00              CMP      r6,#0
00064a  db1e              BLT      |L1.1674|
;;;850        int ItemPosY;
;;;851        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
00064c  4632              MOV      r2,r6
00064e  4639              MOV      r1,r7
000650  4628              MOV      r0,r5
000652  f7fffffe          BL       _GetItemPosY
000656  4604              MOV      r4,r0
;;;852        if (ItemPosY >= 0) {
000658  2c00              CMP      r4,#0
00065a  db16              BLT      |L1.1674|
;;;853          GUI_RECT Rect;
;;;854          int ItemDistY;
;;;855          ItemDistY = _GetItemSizeY(hObj, pObj, Sel);
00065c  4632              MOV      r2,r6
00065e  4639              MOV      r1,r7
000660  4628              MOV      r0,r5
000662  f7fffffe          BL       _GetItemSizeY
000666  4606              MOV      r6,r0
;;;856          WM_GetInsideRectExScrollbar(hObj, &Rect);
000668  4669              MOV      r1,sp
00066a  4628              MOV      r0,r5
00066c  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;857          Rect.y0 += ItemPosY;
000670  f8bd0002          LDRH     r0,[sp,#2]
000674  4420              ADD      r0,r0,r4
000676  f8ad0002          STRH     r0,[sp,#2]
;;;858          Rect.y1  = Rect.y0 + ItemDistY - 1;
00067a  1e71              SUBS     r1,r6,#1
00067c  4408              ADD      r0,r0,r1
00067e  f8ad0006          STRH     r0,[sp,#6]
;;;859          WM_InvalidateRect(hObj, &Rect);
000682  4669              MOV      r1,sp
000684  4628              MOV      r0,r5
000686  f7fffffe          BL       WM_InvalidateRect
                  |L1.1674|
;;;860        }
;;;861      }
;;;862    }
00068a  b003              ADD      sp,sp,#0xc
00068c  bdf0              POP      {r4-r7,pc}
;;;863    
                          ENDP

                  LISTBOX__InvalidateInsideArea PROC
;;;837    */
;;;838    void LISTBOX__InvalidateInsideArea(LISTBOX_Handle hObj) {
00068e  b510              PUSH     {r4,lr}
000690  b082              SUB      sp,sp,#8
000692  4604              MOV      r4,r0
;;;839      GUI_RECT Rect;
;;;840      WM_GetInsideRectExScrollbar(hObj, &Rect);
000694  4669              MOV      r1,sp
000696  4620              MOV      r0,r4
000698  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;841      WM_InvalidateRect(hObj, &Rect);
00069c  4669              MOV      r1,sp
00069e  4620              MOV      r0,r4
0006a0  f7fffffe          BL       WM_InvalidateRect
;;;842    }
0006a4  b002              ADD      sp,sp,#8
0006a6  bd10              POP      {r4,pc}
;;;843    
                          ENDP

                  LISTBOX_SetSel PROC
;;;1156   */
;;;1157   void LISTBOX_SetSel (LISTBOX_Handle hObj, int NewSel) {
0006a8  e92d41f0          PUSH     {r4-r8,lr}
0006ac  4607              MOV      r7,r0
0006ae  460c              MOV      r4,r1
;;;1158     if (hObj) {
0006b0  2f00              CMP      r7,#0
0006b2  d043              BEQ      |L1.1852|
;;;1159       LISTBOX_Obj* pObj;
;;;1160       int MaxSel;
;;;1161       WM_LOCK();
0006b4  f7fffffe          BL       GUI_Lock
;;;1162       pObj = LISTBOX_H2P(hObj);
0006b8  4638              MOV      r0,r7
0006ba  f7fffffe          BL       GUI_ALLOC_h2p
0006be  4605              MOV      r5,r0
;;;1163       MaxSel = LISTBOX__GetNumItems(pObj);
0006c0  4628              MOV      r0,r5
0006c2  f7fffffe          BL       LISTBOX__GetNumItems
;;;1164       MaxSel = MaxSel ? MaxSel - 1 : 0;
0006c6  b108              CBZ      r0,|L1.1740|
0006c8  1e40              SUBS     r0,r0,#1
0006ca  e000              B        |L1.1742|
                  |L1.1740|
0006cc  2000              MOVS     r0,#0
                  |L1.1742|
;;;1165       if (NewSel > MaxSel) {
0006ce  4284              CMP      r4,r0
0006d0  dd00              BLE      |L1.1748|
;;;1166         NewSel = MaxSel;
0006d2  4604              MOV      r4,r0
                  |L1.1748|
;;;1167       }
;;;1168       if (NewSel < 0) {
0006d4  2c00              CMP      r4,#0
0006d6  da02              BGE      |L1.1758|
;;;1169         NewSel = -1;
0006d8  f04f34ff          MOV      r4,#0xffffffff
0006dc  e00d              B        |L1.1786|
                  |L1.1758|
;;;1170       } else {
;;;1171         WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, NewSel);
0006de  4621              MOV      r1,r4
0006e0  f1050028          ADD      r0,r5,#0x28
0006e4  f7fffffe          BL       GUI_ARRAY_GethItem
;;;1172         if (hItem) {
0006e8  b138              CBZ      r0,|L1.1786|
;;;1173           LISTBOX_ITEM* pItem = (LISTBOX_ITEM*)GUI_ALLOC_h2p(hItem);
0006ea  f7fffffe          BL       GUI_ALLOC_h2p
;;;1174           if (pItem->Status & LISTBOX_ITEM_DISABLED) {
0006ee  7900              LDRB     r0,[r0,#4]
0006f0  f0100f02          TST      r0,#2
0006f4  d001              BEQ      |L1.1786|
;;;1175             NewSel = -1;
0006f6  f04f34ff          MOV      r4,#0xffffffff
                  |L1.1786|
;;;1176           }
;;;1177         }
;;;1178       }
;;;1179       if (NewSel != pObj->Sel) {
0006fa  f9b56082          LDRSH    r6,[r5,#0x82]
0006fe  42a6              CMP      r6,r4
000700  d018              BEQ      |L1.1844|
;;;1180         int OldSel;
;;;1181         OldSel    = pObj->Sel;
;;;1182         pObj->Sel = NewSel;
000702  f8a54082          STRH     r4,[r5,#0x82]
;;;1183         if (_UpdateScrollPos(hObj, pObj)) {
000706  4629              MOV      r1,r5
000708  4638              MOV      r0,r7
00070a  f7fffffe          BL       _UpdateScrollPos
00070e  b118              CBZ      r0,|L1.1816|
;;;1184           LISTBOX__InvalidateInsideArea(hObj);
000710  4638              MOV      r0,r7
000712  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000716  e009              B        |L1.1836|
                  |L1.1816|
;;;1185         } else {
;;;1186           LISTBOX__InvalidateItem(hObj, pObj, OldSel);
000718  4632              MOV      r2,r6
00071a  4629              MOV      r1,r5
00071c  4638              MOV      r0,r7
00071e  f7fffffe          BL       LISTBOX__InvalidateItem
;;;1187           LISTBOX__InvalidateItem(hObj, pObj, NewSel);
000722  4622              MOV      r2,r4
000724  4629              MOV      r1,r5
000726  4638              MOV      r0,r7
000728  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.1836|
;;;1188         }
;;;1189         _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
00072c  2104              MOVS     r1,#4
00072e  4638              MOV      r0,r7
000730  f7fffffe          BL       _NotifyOwner
                  |L1.1844|
;;;1190       }
;;;1191       WM_UNLOCK();
000734  e8bd41f0          POP      {r4-r8,lr}
000738  f7ffbffe          B.W      GUI_Unlock
                  |L1.1852|
;;;1192     }
;;;1193   }
00073c  e8bd81f0          POP      {r4-r8,pc}
;;;1194   
                          ENDP

                  _SelectByKey PROC
;;;533    */
;;;534    static void _SelectByKey(LISTBOX_Handle hObj, int Key) {
000740  e92d41f0          PUSH     {r4-r8,lr}
000744  4606              MOV      r6,r0
000746  460c              MOV      r4,r1
;;;535      unsigned i;
;;;536      LISTBOX_Obj* pObj;
;;;537      pObj = LISTBOX_H2P(hObj);
000748  4630              MOV      r0,r6
00074a  f7fffffe          BL       GUI_ALLOC_h2p
00074e  4607              MOV      r7,r0
;;;538      Key = _Tolower(Key);
000750  4620              MOV      r0,r4
000752  f7fffffe          BL       _Tolower
000756  4605              MOV      r5,r0
;;;539      for (i = 0; i < LISTBOX__GetNumItems(pObj); i++) {
000758  2400              MOVS     r4,#0
00075a  4638              MOV      r0,r7
00075c  f7fffffe          BL       LISTBOX__GetNumItems
000760  2800              CMP      r0,#0
000762  d913              BLS      |L1.1932|
                  |L1.1892|
;;;540        const char* s = LISTBOX__GetpString(pObj, i);
000764  4621              MOV      r1,r4
000766  4638              MOV      r0,r7
000768  f7fffffe          BL       LISTBOX__GetpString
;;;541        if (_Tolower(*s) == Key) {
00076c  7800              LDRB     r0,[r0,#0]
00076e  f7fffffe          BL       _Tolower
000772  42a8              CMP      r0,r5
000774  d104              BNE      |L1.1920|
;;;542          LISTBOX_SetSel(hObj, i);
000776  4621              MOV      r1,r4
000778  4630              MOV      r0,r6
00077a  e8bd41f0          POP      {r4-r8,lr}
00077e  e7fe              B        LISTBOX_SetSel
                  |L1.1920|
000780  1c64              ADDS     r4,r4,#1              ;539
000782  4638              MOV      r0,r7                 ;539
000784  f7fffffe          BL       LISTBOX__GetNumItems
000788  42a0              CMP      r0,r4                 ;539
00078a  d8eb              BHI      |L1.1892|
                  |L1.1932|
;;;543          break;
;;;544        }
;;;545      }
;;;546    }
00078c  e8bd81f0          POP      {r4-r8,pc}
;;;547    
                          ENDP

                  _FreeAttached PROC
;;;551    */
;;;552    static void _FreeAttached(LISTBOX_Obj* pObj) {
000790  3028              ADDS     r0,r0,#0x28
;;;553      GUI_ARRAY_Delete(&pObj->ItemArray);
000792  f7ffbffe          B.W      GUI_ARRAY_Delete
;;;554    }
;;;555    
                          ENDP

                  _OnPaint PROC
;;;559    */
;;;560    static void _OnPaint(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, WM_MESSAGE* pMsg) {
000796  e92d41f0          PUSH     {r4-r8,lr}
00079a  b08c              SUB      sp,sp,#0x30
00079c  4680              MOV      r8,r0
00079e  460d              MOV      r5,r1
0007a0  4614              MOV      r4,r2
;;;561      WIDGET_ITEM_DRAW_INFO ItemInfo;
;;;562      GUI_RECT RectInside, RectItem, ClipRect;
;;;563      int ItemDistY, NumItems, i;
;;;564      NumItems = LISTBOX__GetNumItems(pObj);
0007a2  4628              MOV      r0,r5
0007a4  f7fffffe          BL       LISTBOX__GetNumItems
0007a8  4607              MOV      r7,r0
;;;565      GUI_SetFont(pObj->Props.pFont);
0007aa  6ca8              LDR      r0,[r5,#0x48]
0007ac  f7fffffe          BL       GUI_SetFont
;;;566      /* Calculate clipping rectangle */
;;;567      ClipRect = *(const GUI_RECT*)pMsg->Data.p;
0007b0  68a0              LDR      r0,[r4,#8]
0007b2  6801              LDR      r1,[r0,#0]
0007b4  9100              STR      r1,[sp,#0]
0007b6  6840              LDR      r0,[r0,#4]
0007b8  9001              STR      r0,[sp,#4]
;;;568      GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
0007ba  f9b50002          LDRSH    r0,[r5,#2]
0007be  4242              RSBS     r2,r0,#0
0007c0  f9b50000          LDRSH    r0,[r5,#0]
0007c4  4241              RSBS     r1,r0,#0
0007c6  4668              MOV      r0,sp
0007c8  f7fffffe          BL       GUI_MoveRect
;;;569      WM_GetInsideRectExScrollbar(hObj, &RectInside);
0007cc  a904              ADD      r1,sp,#0x10
0007ce  4640              MOV      r0,r8
0007d0  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;570      GUI__IntersectRect(&ClipRect, &RectInside);
0007d4  a904              ADD      r1,sp,#0x10
0007d6  4668              MOV      r0,sp
0007d8  f7fffffe          BL       GUI__IntersectRect
;;;571      RectItem.x0 = ClipRect.x0;
0007dc  f8bd0000          LDRH     r0,[sp,#0]
0007e0  f8ad0008          STRH     r0,[sp,#8]
;;;572      RectItem.x1 = ClipRect.x1;
0007e4  f8bd0004          LDRH     r0,[sp,#4]
0007e8  f8ad000c          STRH     r0,[sp,#0xc]
;;;573      /* Fill item info structure */
;;;574      ItemInfo.Cmd  = WIDGET_ITEM_DRAW;
0007ec  2000              MOVS     r0,#0
0007ee  9007              STR      r0,[sp,#0x1c]
;;;575      ItemInfo.hWin = hObj;
0007f0  f8ad8018          STRH     r8,[sp,#0x18]
;;;576      ItemInfo.x0   = RectInside.x0 - pObj->ScrollStateH.v;
0007f4  f9bd0010          LDRSH    r0,[sp,#0x10]
0007f8  6c29              LDR      r1,[r5,#0x40]
0007fa  1a40              SUBS     r0,r0,r1
0007fc  9009              STR      r0,[sp,#0x24]
;;;577      ItemInfo.y0   = RectInside.y0;
0007fe  f9bd0012          LDRSH    r0,[sp,#0x12]
000802  900a              STR      r0,[sp,#0x28]
;;;578      /* Do the drawing */
;;;579      for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
000804  6b6c              LDR      r4,[r5,#0x34]
000806  42bc              CMP      r4,r7
000808  da2a              BGE      |L1.2144|
                  |L1.2058|
;;;580        RectItem.y0 = ItemInfo.y0;
00080a  980a              LDR      r0,[sp,#0x28]
00080c  b200              SXTH     r0,r0
00080e  f8ad000a          STRH     r0,[sp,#0xa]
;;;581        /* Break when all other rows are outside the drawing area */
;;;582        if (RectItem.y0 > ClipRect.y1) {
000812  f9bd1006          LDRSH    r1,[sp,#6]
000816  4288              CMP      r0,r1
000818  dc22              BGT      |L1.2144|
;;;583          break;
;;;584        }
;;;585        ItemDistY = _GetItemSizeY(hObj, pObj, i);
00081a  4622              MOV      r2,r4
00081c  4629              MOV      r1,r5
00081e  4640              MOV      r0,r8
000820  f7fffffe          BL       _GetItemSizeY
000824  4606              MOV      r6,r0
;;;586        RectItem.y1 = RectItem.y0 + ItemDistY - 1;
000826  f8bd100a          LDRH     r1,[sp,#0xa]
00082a  1e70              SUBS     r0,r6,#1
00082c  4408              ADD      r0,r0,r1
00082e  b200              SXTH     r0,r0
000830  f8ad000e          STRH     r0,[sp,#0xe]
;;;587        /* Make sure that we draw only when row is in drawing area */
;;;588        if (RectItem.y1 >= ClipRect.y0) {
000834  f9bd1002          LDRSH    r1,[sp,#2]
000838  4288              CMP      r0,r1
00083a  db0b              BLT      |L1.2132|
;;;589          /* Set user clip rect */
;;;590          WM_SetUserClipArea(&RectItem);
00083c  a802              ADD      r0,sp,#8
00083e  f7fffffe          BL       WM_SetUserClipRect
;;;591          /* Fill item info structure */
;;;592          ItemInfo.ItemIndex = i;
000842  9408              STR      r4,[sp,#0x20]
;;;593          /* Draw item */
;;;594          if (pObj->pfDrawItem) {
000844  6ae9              LDR      r1,[r5,#0x2c]
000846  b111              CBZ      r1,|L1.2126|
;;;595            pObj->pfDrawItem(&ItemInfo);
000848  a806              ADD      r0,sp,#0x18
00084a  4788              BLX      r1
00084c  e002              B        |L1.2132|
                  |L1.2126|
;;;596          } else {
;;;597            LISTBOX_OwnerDraw(&ItemInfo);
00084e  a806              ADD      r0,sp,#0x18
000850  f7fffffe          BL       LISTBOX_OwnerDraw
                  |L1.2132|
;;;598          }
;;;599        }
;;;600        ItemInfo.y0 += ItemDistY;
000854  980a              LDR      r0,[sp,#0x28]
000856  4430              ADD      r0,r0,r6
000858  900a              STR      r0,[sp,#0x28]
00085a  1c64              ADDS     r4,r4,#1              ;579
00085c  42bc              CMP      r4,r7                 ;579
00085e  dbd4              BLT      |L1.2058|
                  |L1.2144|
;;;601      }
;;;602      WM_SetUserClipArea(NULL);
000860  2000              MOVS     r0,#0
000862  f7fffffe          BL       WM_SetUserClipRect
;;;603      /* Calculate & clear 'data free' area */
;;;604      RectItem.y0 = ItemInfo.y0;
000866  980a              LDR      r0,[sp,#0x28]
000868  f8ad000a          STRH     r0,[sp,#0xa]
;;;605      RectItem.y1 = RectInside.y1;
00086c  f8bd0016          LDRH     r0,[sp,#0x16]
000870  f8ad000e          STRH     r0,[sp,#0xe]
;;;606      LCD_SetBkColor(pObj->Props.aBackColor[0]);
000874  6d28              LDR      r0,[r5,#0x50]
000876  f7fffffe          BL       LCD_SetBkColor
;;;607      GUI_ClearRectEx(&RectItem);
00087a  a802              ADD      r0,sp,#8
00087c  f7fffffe          BL       GUI_ClearRectEx
;;;608      /* Draw the 3D effect (if configured) */
;;;609      WIDGET__EFFECT_DrawDown(&pObj->Widget);
000880  4628              MOV      r0,r5
000882  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;610    }
000886  b00c              ADD      sp,sp,#0x30
000888  e8bd81f0          POP      {r4-r8,pc}
;;;611    
                          ENDP

                  _ToggleMultiSel PROC
;;;615    */
;;;616    static void _ToggleMultiSel(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int Sel) {
00088c  b570              PUSH     {r4-r6,lr}
00088e  4606              MOV      r6,r0
000890  460c              MOV      r4,r1
000892  4615              MOV      r5,r2
;;;617      if (pObj->Flags & LISTBOX_SF_MULTISEL) {
000894  f8940084          LDRB     r0,[r4,#0x84]
000898  f0100f04          TST      r0,#4
00089c  d019              BEQ      |L1.2258|
;;;618        WM_HMEM hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Sel);
00089e  4629              MOV      r1,r5
0008a0  f1040028          ADD      r0,r4,#0x28
0008a4  f7fffffe          BL       GUI_ARRAY_GethItem
;;;619        if (hItem) {
0008a8  2800              CMP      r0,#0
0008aa  d012              BEQ      |L1.2258|
;;;620          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
0008ac  f7fffffe          BL       GUI_ALLOC_h2p
;;;621          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
0008b0  7901              LDRB     r1,[r0,#4]
0008b2  f0110f02          TST      r1,#2
0008b6  d10c              BNE      |L1.2258|
;;;622            pItem->Status ^= LISTBOX_ITEM_SELECTED;
0008b8  f0810101          EOR      r1,r1,#1
0008bc  7101              STRB     r1,[r0,#4]
;;;623            _NotifyOwner(hObj, WM_NOTIFICATION_SEL_CHANGED);
0008be  2104              MOVS     r1,#4
0008c0  4630              MOV      r0,r6
0008c2  f7fffffe          BL       _NotifyOwner
;;;624            LISTBOX__InvalidateItem(hObj, pObj, Sel);
0008c6  462a              MOV      r2,r5
0008c8  4621              MOV      r1,r4
0008ca  4630              MOV      r0,r6
0008cc  e8bd4070          POP      {r4-r6,lr}
0008d0  e7fe              B        LISTBOX__InvalidateItem
                  |L1.2258|
;;;625          }
;;;626        }
;;;627      }
;;;628    }
0008d2  bd70              POP      {r4-r6,pc}
;;;629    
                          ENDP

                  _GetItemFromPos PROC
;;;633    */
;;;634    static int _GetItemFromPos(LISTBOX_Handle hObj, LISTBOX_Obj* pObj, int x, int y) {
0008d4  e92d47f0          PUSH     {r4-r10,lr}
0008d8  b082              SUB      sp,sp,#8
0008da  4681              MOV      r9,r0
0008dc  4688              MOV      r8,r1
0008de  4614              MOV      r4,r2
0008e0  461e              MOV      r6,r3
;;;635      int Sel = -1;
0008e2  f04f3aff          MOV      r10,#0xffffffff
;;;636      GUI_RECT Rect;
;;;637      WM_GetInsideRectExScrollbar(hObj, &Rect);
0008e6  4669              MOV      r1,sp
0008e8  4648              MOV      r0,r9
0008ea  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;638      if ((x >= Rect.x0) && (y >= Rect.y0)) {
0008ee  f9bd0000          LDRSH    r0,[sp,#0]
0008f2  42a0              CMP      r0,r4
0008f4  dc21              BGT      |L1.2362|
0008f6  f9bd0002          LDRSH    r0,[sp,#2]
0008fa  42b0              CMP      r0,r6
0008fc  dc1d              BGT      |L1.2362|
;;;639        if ((x <= Rect.x1) && (y <= Rect.y1)) {
0008fe  f9bd0004          LDRSH    r0,[sp,#4]
000902  42a0              CMP      r0,r4
000904  db19              BLT      |L1.2362|
000906  f9bd0006          LDRSH    r0,[sp,#6]
00090a  42b0              CMP      r0,r6
00090c  db15              BLT      |L1.2362|
;;;640          int NumItems = LISTBOX__GetNumItems(pObj);
00090e  4640              MOV      r0,r8
000910  f7fffffe          BL       LISTBOX__GetNumItems
000914  4607              MOV      r7,r0
;;;641          int i, y0 = Rect.y0;
000916  f9bd5002          LDRSH    r5,[sp,#2]
;;;642          for (i = pObj->ScrollStateV.v; i < NumItems; i++) {
00091a  f8d84034          LDR      r4,[r8,#0x34]
00091e  42bc              CMP      r4,r7
000920  da0b              BGE      |L1.2362|
                  |L1.2338|
;;;643            if (y >= y0) {
000922  42ae              CMP      r6,r5
000924  db00              BLT      |L1.2344|
;;;644              Sel = i;
000926  46a2              MOV      r10,r4
                  |L1.2344|
;;;645            }
;;;646            y0 += _GetItemSizeY(hObj, pObj, i);
000928  4622              MOV      r2,r4
00092a  4641              MOV      r1,r8
00092c  4648              MOV      r0,r9
00092e  f7fffffe          BL       _GetItemSizeY
000932  4405              ADD      r5,r5,r0
000934  1c64              ADDS     r4,r4,#1              ;642
000936  42bc              CMP      r4,r7                 ;642
000938  dbf3              BLT      |L1.2338|
                  |L1.2362|
;;;647          }
;;;648        }
;;;649      }
;;;650      return Sel;
;;;651    }
00093a  b002              ADD      sp,sp,#8
00093c  4650              MOV      r0,r10                ;650
00093e  e8bd87f0          POP      {r4-r10,pc}
;;;652    
                          ENDP

                  _OnTouch PROC
;;;656    */
;;;657    static void _OnTouch(LISTBOX_Handle hObj, WM_MESSAGE* pMsg) {
000942  6889              LDR      r1,[r1,#8]
;;;658      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
;;;659      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000944  b121              CBZ      r1,|L1.2384|
;;;660        if (pState->Pressed == 0) {
000946  7a09              LDRB     r1,[r1,#8]
000948  2900              CMP      r1,#0
00094a  d103              BNE      |L1.2388|
;;;661          _NotifyOwner(hObj, WM_NOTIFICATION_RELEASED);
00094c  2102              MOVS     r1,#2
00094e  e7fe              B        _NotifyOwner
                  |L1.2384|
;;;662        }
;;;663      } else {     /* Mouse moved out */
;;;664        _NotifyOwner(hObj, WM_NOTIFICATION_MOVED_OUT);
000950  2103              MOVS     r1,#3
000952  e7fe              B        _NotifyOwner
                  |L1.2388|
;;;665      }
;;;666    }
000954  4770              BX       lr
;;;667    
                          ENDP

                  LISTBOX_GetSel PROC
;;;1198   */
;;;1199   int  LISTBOX_GetSel (LISTBOX_Handle hObj) {
000956  b570              PUSH     {r4-r6,lr}
000958  4605              MOV      r5,r0
;;;1200     int r = -1;
00095a  f04f34ff          MOV      r4,#0xffffffff
;;;1201     LISTBOX_Obj* pObj;
;;;1202     if (hObj) {
00095e  b145              CBZ      r5,|L1.2418|
;;;1203       WM_LOCK();
000960  f7fffffe          BL       GUI_Lock
;;;1204       pObj = LISTBOX_H2P(hObj);
000964  4628              MOV      r0,r5
000966  f7fffffe          BL       GUI_ALLOC_h2p
;;;1205       r = pObj->Sel;
00096a  f9b04082          LDRSH    r4,[r0,#0x82]
;;;1206       WM_UNLOCK();
00096e  f7fffffe          BL       GUI_Unlock
                  |L1.2418|
;;;1207     }
;;;1208     return r;
000972  4620              MOV      r0,r4
;;;1209   }
000974  bd70              POP      {r4-r6,pc}
;;;1210   
                          ENDP

                  _MoveSel PROC
;;;695    */
;;;696    static void _MoveSel(LISTBOX_Handle hObj, int Dir) {
000976  e92d47f0          PUSH     {r4-r10,lr}
00097a  4681              MOV      r9,r0
00097c  460f              MOV      r7,r1
;;;697      int Index, NewSel = -1, NumItems;
00097e  f04f36ff          MOV      r6,#0xffffffff
;;;698      LISTBOX_Obj * pObj;
;;;699      pObj = LISTBOX_H2P(hObj);
000982  4648              MOV      r0,r9
000984  f7fffffe          BL       GUI_ALLOC_h2p
000988  4605              MOV      r5,r0
;;;700      Index = LISTBOX_GetSel(hObj);
00098a  4648              MOV      r0,r9
00098c  f7fffffe          BL       LISTBOX_GetSel
000990  4604              MOV      r4,r0
;;;701      NumItems = LISTBOX__GetNumItems(pObj);
000992  4628              MOV      r0,r5
000994  f7fffffe          BL       LISTBOX__GetNumItems
000998  4680              MOV      r8,r0
                  |L1.2458|
;;;702      do {
;;;703        WM_HMEM hItem;
;;;704        Index += Dir;
00099a  443c              ADD      r4,r4,r7
;;;705        if ((Index < 0) || (Index >= NumItems)) {
00099c  2c00              CMP      r4,#0
00099e  db10              BLT      |L1.2498|
0009a0  4544              CMP      r4,r8
0009a2  da0e              BGE      |L1.2498|
;;;706          break;
;;;707        }
;;;708        hItem = GUI_ARRAY_GethItem(&pObj->ItemArray, Index);
0009a4  4621              MOV      r1,r4
0009a6  f1050028          ADD      r0,r5,#0x28
0009aa  f7fffffe          BL       GUI_ARRAY_GethItem
;;;709        if (hItem) {
0009ae  b130              CBZ      r0,|L1.2494|
;;;710          LISTBOX_ITEM * pItem = (LISTBOX_ITEM *)GUI_ALLOC_h2p(hItem);
0009b0  f7fffffe          BL       GUI_ALLOC_h2p
;;;711          if (!(pItem->Status & LISTBOX_ITEM_DISABLED)) {
0009b4  7900              LDRB     r0,[r0,#4]
0009b6  f0100f02          TST      r0,#2
0009ba  d100              BNE      |L1.2494|
;;;712            NewSel = Index;
0009bc  4626              MOV      r6,r4
                  |L1.2494|
;;;713          }
;;;714        }
;;;715      } while(NewSel < 0);
0009be  2e00              CMP      r6,#0
0009c0  dbeb              BLT      |L1.2458|
                  |L1.2498|
;;;716      if (NewSel >= 0) {
0009c2  2e00              CMP      r6,#0
0009c4  db04              BLT      |L1.2512|
;;;717        LISTBOX_SetSel(hObj, NewSel);
0009c6  4631              MOV      r1,r6
0009c8  4648              MOV      r0,r9
0009ca  e8bd47f0          POP      {r4-r10,lr}
0009ce  e7fe              B        LISTBOX_SetSel
                  |L1.2512|
;;;718      } else {
;;;719        int PrevScrollStateV;
;;;720        PrevScrollStateV = pObj->ScrollStateV.v;
0009d0  6b6c              LDR      r4,[r5,#0x34]
;;;721        pObj->ScrollStateV.v += Dir;
0009d2  19e0              ADDS     r0,r4,r7
0009d4  6368              STR      r0,[r5,#0x34]
;;;722        WM_CheckScrollBounds(&pObj->ScrollStateV);
0009d6  f1050030          ADD      r0,r5,#0x30
0009da  f7fffffe          BL       WM_CheckScrollBounds
;;;723        if (PrevScrollStateV != pObj->ScrollStateV.v) {
0009de  6b68              LDR      r0,[r5,#0x34]
0009e0  42a0              CMP      r0,r4
0009e2  d002              BEQ      |L1.2538|
;;;724          LISTBOX__InvalidateInsideArea(hObj);
0009e4  4648              MOV      r0,r9
0009e6  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2538|
;;;725        }
;;;726        LISTBOX_UpdateScrollers(hObj);
0009ea  4648              MOV      r0,r9
0009ec  e8bd47f0          POP      {r4-r10,lr}
0009f0  e7fe              B        LISTBOX_UpdateScrollers
;;;727      }
;;;728    }
;;;729    
                          ENDP

                  LISTBOX_DecSel PROC
;;;1226   */
;;;1227   void LISTBOX_DecSel      (LISTBOX_Handle hObj) {
0009f2  b510              PUSH     {r4,lr}
0009f4  4604              MOV      r4,r0
;;;1228     if (hObj) {
0009f6  2c00              CMP      r4,#0
0009f8  d00a              BEQ      |L1.2576|
;;;1229       WM_LOCK();
0009fa  f7fffffe          BL       GUI_Lock
;;;1230       _MoveSel(hObj, -1);
0009fe  f04f31ff          MOV      r1,#0xffffffff
000a02  4620              MOV      r0,r4
000a04  f7fffffe          BL       _MoveSel
;;;1231       WM_UNLOCK();
000a08  e8bd4010          POP      {r4,lr}
000a0c  f7ffbffe          B.W      GUI_Unlock
                  |L1.2576|
;;;1232     }
;;;1233   }
000a10  bd10              POP      {r4,pc}
;;;1234   
                          ENDP

                  LISTBOX_IncSel PROC
;;;1214   */
;;;1215   void LISTBOX_IncSel      (LISTBOX_Handle hObj) {
000a12  b510              PUSH     {r4,lr}
000a14  4604              MOV      r4,r0
;;;1216     if (hObj) {
000a16  2c00              CMP      r4,#0
000a18  d009              BEQ      |L1.2606|
;;;1217       WM_LOCK();
000a1a  f7fffffe          BL       GUI_Lock
;;;1218       _MoveSel(hObj, 1);
000a1e  2101              MOVS     r1,#1
000a20  4620              MOV      r0,r4
000a22  f7fffffe          BL       _MoveSel
;;;1219       WM_UNLOCK();
000a26  e8bd4010          POP      {r4,lr}
000a2a  f7ffbffe          B.W      GUI_Unlock
                  |L1.2606|
;;;1220     }
;;;1221   }
000a2e  bd10              POP      {r4,pc}
;;;1222   
                          ENDP

                  _AddKey PROC
;;;736    */
;;;737    static int _AddKey(LISTBOX_Handle hObj, int Key) {
000a30  b570              PUSH     {r4-r6,lr}
000a32  4605              MOV      r5,r0
000a34  460c              MOV      r4,r1
;;;738      LISTBOX_Obj* pObj;
;;;739      pObj = LISTBOX_H2P(hObj);
000a36  4628              MOV      r0,r5
000a38  f7fffffe          BL       GUI_ALLOC_h2p
;;;740      switch (Key) {
000a3c  2c12              CMP      r4,#0x12
000a3e  d01b              BEQ      |L1.2680|
000a40  dc04              BGT      |L1.2636|
000a42  2c10              CMP      r4,#0x10
000a44  d028              BEQ      |L1.2712|
000a46  2c11              CMP      r4,#0x11
000a48  d104              BNE      |L1.2644|
000a4a  e03b              B        |L1.2756|
                  |L1.2636|
000a4c  2c13              CMP      r4,#0x13
000a4e  d033              BEQ      |L1.2744|
000a50  2c20              CMP      r4,#0x20
000a52  d009              BEQ      |L1.2664|
                  |L1.2644|
;;;741      case GUI_KEY_SPACE:
;;;742        _ToggleMultiSel(hObj, pObj, pObj->Sel);
;;;743        return 1;               /* Key has been consumed */
;;;744      case GUI_KEY_RIGHT:
;;;745        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v + pObj->Props.ScrollStepH)) {
;;;746          LISTBOX_UpdateScrollers(hObj);
;;;747          LISTBOX__InvalidateInsideArea(hObj);
;;;748        }
;;;749        return 1;               /* Key has been consumed */
;;;750      case GUI_KEY_LEFT:
;;;751        if (WM_SetScrollValue(&pObj->ScrollStateH, pObj->ScrollStateH.v - pObj->Props.ScrollStepH)) {
;;;752          LISTBOX_UpdateScrollers(hObj);
;;;753          LISTBOX__InvalidateInsideArea(hObj);
;;;754        }
;;;755        return 1;               /* Key has been consumed */
;;;756      case GUI_KEY_DOWN:
;;;757        LISTBOX_IncSel(hObj);
;;;758        return 1;               /* Key has been consumed */
;;;759      case GUI_KEY_UP:
;;;760        LISTBOX_DecSel(hObj);
;;;761        return 1;               /* Key has been consumed */
;;;762      default:
;;;763        if(_IsAlphaNum(Key)) {
000a54  4620              MOV      r0,r4
000a56  f7fffffe          BL       _IsAlphaNum
000a5a  b390              CBZ      r0,|L1.2754|
;;;764          _SelectByKey(hObj, Key);
000a5c  4621              MOV      r1,r4
000a5e  4628              MOV      r0,r5
000a60  f7fffffe          BL       _SelectByKey
;;;765          return 1;               /* Key has been consumed */
000a64  2001              MOVS     r0,#1
;;;766        }
;;;767      }
;;;768      return 0;
;;;769    }
000a66  bd70              POP      {r4-r6,pc}
                  |L1.2664|
000a68  f9b02082          LDRSH    r2,[r0,#0x82]         ;742
000a6c  4601              MOV      r1,r0                 ;742
000a6e  4628              MOV      r0,r5                 ;742
000a70  f7fffffe          BL       _ToggleMultiSel
000a74  2001              MOVS     r0,#1                 ;743
000a76  bd70              POP      {r4-r6,pc}
                  |L1.2680|
000a78  f8b0204c          LDRH     r2,[r0,#0x4c]         ;745
000a7c  6c01              LDR      r1,[r0,#0x40]         ;745
000a7e  303c              ADDS     r0,r0,#0x3c           ;745
000a80  4411              ADD      r1,r1,r2              ;745
000a82  f7fffffe          BL       WM_SetScrollValue
000a86  b128              CBZ      r0,|L1.2708|
000a88  4628              MOV      r0,r5                 ;746
000a8a  f7fffffe          BL       LISTBOX_UpdateScrollers
000a8e  4628              MOV      r0,r5                 ;747
000a90  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2708|
000a94  2001              MOVS     r0,#1                 ;749
000a96  bd70              POP      {r4-r6,pc}
                  |L1.2712|
000a98  f8b0204c          LDRH     r2,[r0,#0x4c]         ;751
000a9c  6c01              LDR      r1,[r0,#0x40]         ;751
000a9e  303c              ADDS     r0,r0,#0x3c           ;751
000aa0  1a89              SUBS     r1,r1,r2              ;751
000aa2  f7fffffe          BL       WM_SetScrollValue
000aa6  b128              CBZ      r0,|L1.2740|
000aa8  4628              MOV      r0,r5                 ;752
000aaa  f7fffffe          BL       LISTBOX_UpdateScrollers
000aae  4628              MOV      r0,r5                 ;753
000ab0  f7fffffe          BL       LISTBOX__InvalidateInsideArea
                  |L1.2740|
000ab4  2001              MOVS     r0,#1                 ;755
000ab6  bd70              POP      {r4-r6,pc}
                  |L1.2744|
000ab8  4628              MOV      r0,r5                 ;757
000aba  f7fffffe          BL       LISTBOX_IncSel
000abe  2001              MOVS     r0,#1                 ;758
000ac0  bd70              POP      {r4-r6,pc}
                  |L1.2754|
000ac2  e004              B        |L1.2766|
                  |L1.2756|
000ac4  4628              MOV      r0,r5                 ;760
000ac6  f7fffffe          BL       LISTBOX_DecSel
000aca  2001              MOVS     r0,#1                 ;761
000acc  bd70              POP      {r4-r6,pc}
                  |L1.2766|
000ace  2000              MOVS     r0,#0                 ;768
000ad0  bd70              POP      {r4-r6,pc}
;;;770    
                          ENDP

                  LISTBOX__InvalidateItemSize PROC
;;;824    */
;;;825    void LISTBOX__InvalidateItemSize(const LISTBOX_Obj* pObj, unsigned Index) {
000ad2  b510              PUSH     {r4,lr}
;;;826      LISTBOX_ITEM* pItem;
;;;827      pItem = (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, Index);
000ad4  3028              ADDS     r0,r0,#0x28
000ad6  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;828      if (pItem) {
000ada  2800              CMP      r0,#0
000adc  d002              BEQ      |L1.2788|
;;;829        pItem->xSize = 0;
000ade  2100              MOVS     r1,#0
000ae0  8001              STRH     r1,[r0,#0]
;;;830        pItem->ySize = 0;
000ae2  8041              STRH     r1,[r0,#2]
                  |L1.2788|
;;;831      }
;;;832    }
000ae4  bd10              POP      {r4,pc}
;;;833    
                          ENDP

                  LISTBOX__InvalidateItemAndBelow PROC
;;;867    */
;;;868    void LISTBOX__InvalidateItemAndBelow(LISTBOX_Handle hObj, const LISTBOX_Obj* pObj, int Sel) {
000ae6  b530              PUSH     {r4,r5,lr}
000ae8  b083              SUB      sp,sp,#0xc
000aea  4605              MOV      r5,r0
;;;869      if (Sel >= 0) {
000aec  2a00              CMP      r2,#0
000aee  db12              BLT      |L1.2838|
;;;870        int ItemPosY;
;;;871        ItemPosY = _GetItemPosY(hObj, pObj, Sel);
000af0  4628              MOV      r0,r5
000af2  f7fffffe          BL       _GetItemPosY
000af6  4604              MOV      r4,r0
;;;872        if (ItemPosY >= 0) {
000af8  2c00              CMP      r4,#0
000afa  db0c              BLT      |L1.2838|
;;;873          GUI_RECT Rect;
;;;874          WM_GetInsideRectExScrollbar(hObj, &Rect);
000afc  4669              MOV      r1,sp
000afe  4628              MOV      r0,r5
000b00  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;875          Rect.y0 += ItemPosY;
000b04  f8bd0002          LDRH     r0,[sp,#2]
000b08  4420              ADD      r0,r0,r4
000b0a  f8ad0002          STRH     r0,[sp,#2]
;;;876          WM_InvalidateRect(hObj, &Rect);
000b0e  4669              MOV      r1,sp
000b10  4628              MOV      r0,r5
000b12  f7fffffe          BL       WM_InvalidateRect
                  |L1.2838|
;;;877        }
;;;878      }
;;;879    }
000b16  b003              ADD      sp,sp,#0xc
000b18  bd30              POP      {r4,r5,pc}
;;;880    
                          ENDP

                  LISTBOX_AddKey PROC
;;;1101   */
;;;1102   int LISTBOX_AddKey(LISTBOX_Handle hObj, int Key) {
000b1a  b570              PUSH     {r4-r6,lr}
000b1c  4605              MOV      r5,r0
000b1e  460e              MOV      r6,r1
;;;1103     int r = 0;
000b20  2400              MOVS     r4,#0
;;;1104     if (hObj) {
000b22  b145              CBZ      r5,|L1.2870|
;;;1105       WM_LOCK();
000b24  f7fffffe          BL       GUI_Lock
;;;1106       r = _AddKey(hObj, Key);
000b28  4631              MOV      r1,r6
000b2a  4628              MOV      r0,r5
000b2c  f7fffffe          BL       _AddKey
000b30  4604              MOV      r4,r0
;;;1107       WM_UNLOCK();
000b32  f7fffffe          BL       GUI_Unlock
                  |L1.2870|
;;;1108     }
;;;1109     return r;
000b36  4620              MOV      r0,r4
;;;1110   }
000b38  bd70              POP      {r4-r6,pc}
;;;1111   
                          ENDP

                  LISTBOX_Callback PROC
;;;926    */
;;;927    void LISTBOX_Callback(WM_MESSAGE * pMsg) {
000b3a  b570              PUSH     {r4-r6,lr}
000b3c  b086              SUB      sp,sp,#0x18
000b3e  4604              MOV      r4,r0
;;;928      LISTBOX_Handle hObj;
;;;929      LISTBOX_Obj * pObj;
;;;930      WM_SCROLL_STATE ScrollState;
;;;931      WM_MESSAGE Msg;
;;;932      hObj = pMsg->hWin;
000b40  f9b45004          LDRSH    r5,[r4,#4]
;;;933      pObj = (LISTBOX_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000b44  4628              MOV      r0,r5
000b46  f7fffffe          BL       GUI_ALLOC_h2p
000b4a  4606              MOV      r6,r0
;;;934      /* Let widget handle the standard messages */
;;;935      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
000b4c  4621              MOV      r1,r4
000b4e  4628              MOV      r0,r5
000b50  f7fffffe          BL       WIDGET_HandleActive
000b54  b150              CBZ      r0,|L1.2924|
;;;936        /* Owner needs to be informed about focus change */
;;;937        if (pMsg->MsgId == WM_SET_FOCUS) {
;;;938          if (pMsg->Data.v == 0) {            /* Lost focus ? */
;;;939            _NotifyOwner(hObj, LISTBOX_NOTIFICATION_LOST_FOCUS);
;;;940          }
;;;941        }
;;;942        return;
;;;943      }
;;;944      switch (pMsg->MsgId) {
000b56  6820              LDR      r0,[r4,#0]
000b58  280e              CMP      r0,#0xe
000b5a  d07b              BEQ      |L1.3156|
000b5c  dc12              BGT      |L1.2948|
000b5e  2805              CMP      r0,#5
000b60  d072              BEQ      |L1.3144|
000b62  280b              CMP      r0,#0xb
000b64  d072              BEQ      |L1.3148|
000b66  280c              CMP      r0,#0xc
000b68  d141              BNE      |L1.3054|
000b6a  e066              B        |L1.3130|
                  |L1.2924|
000b6c  6820              LDR      r0,[r4,#0]            ;937
000b6e  281e              CMP      r0,#0x1e              ;937
000b70  d106              BNE      |L1.2944|
000b72  68a0              LDR      r0,[r4,#8]            ;938
000b74  2800              CMP      r0,#0                 ;938
000b76  d103              BNE      |L1.2944|
000b78  210b              MOVS     r1,#0xb               ;939
000b7a  4628              MOV      r0,r5                 ;939
000b7c  f7fffffe          BL       _NotifyOwner
                  |L1.2944|
;;;945      case WM_NOTIFY_PARENT:
;;;946        switch (pMsg->Data.v) {
;;;947        case WM_NOTIFICATION_VALUE_CHANGED:
;;;948          if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
;;;949            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;950            pObj->ScrollStateV.v = ScrollState.v;
;;;951            LISTBOX__InvalidateInsideArea(hObj);
;;;952            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;953          } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
;;;954            WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
;;;955            pObj->ScrollStateH.v = ScrollState.v;
;;;956            LISTBOX__InvalidateInsideArea(hObj);
;;;957            _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
;;;958          }
;;;959          break;
;;;960        case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;961          #if WIDGET_USE_PARENT_EFFECT
;;;962            WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;963          #endif
;;;964          LISTBOX_UpdateScrollers(hObj);
;;;965          break;
;;;966        }
;;;967        break;
;;;968      case WM_PAINT:
;;;969        _OnPaint(hObj, pObj, pMsg);
;;;970        break;
;;;971      case WM_PID_STATE_CHANGED:
;;;972        {
;;;973          const WM_PID_STATE_CHANGED_INFO* pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
;;;974          if (pInfo->State) {
;;;975            int Sel;
;;;976            Sel = _GetItemFromPos(hObj, pObj, pInfo->x, pInfo->y);
;;;977            if (Sel >= 0) {
;;;978              _ToggleMultiSel(hObj, pObj, Sel);
;;;979              LISTBOX_SetSel(hObj, Sel);
;;;980            }
;;;981            _NotifyOwner(hObj, WM_NOTIFICATION_CLICKED);
;;;982            return;
;;;983          }
;;;984        }
;;;985        break;
;;;986      case WM_TOUCH:
;;;987        _OnTouch(hObj, pMsg);
;;;988        return;
;;;989    #if GUI_SUPPORT_MOUSE
;;;990      case WM_MOUSEOVER:
;;;991        if (_OnMouseOver(hObj, pObj, pMsg) == 0)
;;;992          return;
;;;993        break;
;;;994    #endif
;;;995      case WM_DELETE:
;;;996        _FreeAttached(pObj);
;;;997        break;       /* No return here ... WM_DefaultProc needs to be called */
;;;998      case WM_KEY:
;;;999        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;1000         int Key;
;;;1001         Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1002         if (LISTBOX_AddKey(hObj, Key)) {
;;;1003           return;
;;;1004         }
;;;1005       }
;;;1006       /* Send a WM_NOTIFY_OWNER_KEY message with the key information to the owner window */
;;;1007       Msg = *pMsg;
;;;1008       Msg.MsgId = WM_NOTIFY_OWNER_KEY;
;;;1009       _SendToOwner(hObj, &Msg);
;;;1010       if (!WM_IsWindow(hObj)) {
;;;1011         return;
;;;1012       }
;;;1013       break;
;;;1014     case WM_SIZE:
;;;1015       LISTBOX_UpdateScrollers(hObj);
;;;1016       WM_InvalidateWindow(hObj);
;;;1017       break;
;;;1018     }
;;;1019     WM_DefaultProc(pMsg);
;;;1020   }
000b80  b006              ADD      sp,sp,#0x18
000b82  bd70              POP      {r4-r6,pc}
                  |L1.2948|
000b84  280f              CMP      r0,#0xf               ;944
000b86  d037              BEQ      |L1.3064|
000b88  2811              CMP      r0,#0x11              ;944
000b8a  d03b              BEQ      |L1.3076|
000b8c  2826              CMP      r0,#0x26              ;944
000b8e  d12e              BNE      |L1.3054|
000b90  68a0              LDR      r0,[r4,#8]            ;946
000b92  2805              CMP      r0,#5                 ;946
000b94  d002              BEQ      |L1.2972|
000b96  2806              CMP      r0,#6                 ;946
000b98  d17c              BNE      |L1.3220|
000b9a  e029              B        |L1.3056|
                  |L1.2972|
000b9c  4628              MOV      r0,r5                 ;948
000b9e  f7fffffe          BL       WM_GetScrollbarV
000ba2  4601              MOV      r1,r0                 ;948
000ba4  f9b40006          LDRSH    r0,[r4,#6]            ;948
000ba8  4281              CMP      r1,r0                 ;948
000baa  d10c              BNE      |L1.3014|
000bac  a903              ADD      r1,sp,#0xc            ;949
000bae  f7fffffe          BL       WM_GetScrollState
000bb2  9804              LDR      r0,[sp,#0x10]         ;950
000bb4  6370              STR      r0,[r6,#0x34]         ;950
000bb6  4628              MOV      r0,r5                 ;951
000bb8  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000bbc  210a              MOVS     r1,#0xa               ;952
000bbe  4628              MOV      r0,r5                 ;952
000bc0  f7fffffe          BL       _NotifyOwner
000bc4  e066              B        |L1.3220|
                  |L1.3014|
000bc6  4628              MOV      r0,r5                 ;953
000bc8  f7fffffe          BL       WM_GetScrollbarH
000bcc  4601              MOV      r1,r0                 ;953
000bce  f9b40006          LDRSH    r0,[r4,#6]            ;953
000bd2  4281              CMP      r1,r0                 ;953
000bd4  d15e              BNE      |L1.3220|
000bd6  a903              ADD      r1,sp,#0xc            ;954
000bd8  f7fffffe          BL       WM_GetScrollState
000bdc  9804              LDR      r0,[sp,#0x10]         ;955
000bde  6430              STR      r0,[r6,#0x40]         ;955
000be0  4628              MOV      r0,r5                 ;956
000be2  f7fffffe          BL       LISTBOX__InvalidateInsideArea
000be6  210a              MOVS     r1,#0xa               ;957
000be8  4628              MOV      r0,r5                 ;957
000bea  f7fffffe          BL       _NotifyOwner
                  |L1.3054|
000bee  e051              B        |L1.3220|
                  |L1.3056|
000bf0  4628              MOV      r0,r5                 ;964
000bf2  f7fffffe          BL       LISTBOX_UpdateScrollers
000bf6  e04d              B        |L1.3220|
                  |L1.3064|
000bf8  4622              MOV      r2,r4                 ;969
000bfa  4631              MOV      r1,r6                 ;969
000bfc  4628              MOV      r0,r5                 ;969
000bfe  f7fffffe          BL       _OnPaint
000c02  e047              B        |L1.3220|
                  |L1.3076|
000c04  68a0              LDR      r0,[r4,#8]            ;973
000c06  7a01              LDRB     r1,[r0,#8]            ;974
000c08  b319              CBZ      r1,|L1.3154|
000c0a  6843              LDR      r3,[r0,#4]            ;976
000c0c  6802              LDR      r2,[r0,#0]            ;976
000c0e  4631              MOV      r1,r6                 ;976
000c10  4628              MOV      r0,r5                 ;976
000c12  f7fffffe          BL       _GetItemFromPos
000c16  4604              MOV      r4,r0                 ;976
000c18  2c00              CMP      r4,#0                 ;977
000c1a  db08              BLT      |L1.3118|
000c1c  4622              MOV      r2,r4                 ;978
000c1e  4631              MOV      r1,r6                 ;978
000c20  4628              MOV      r0,r5                 ;978
000c22  f7fffffe          BL       _ToggleMultiSel
000c26  4621              MOV      r1,r4                 ;979
000c28  4628              MOV      r0,r5                 ;979
000c2a  f7fffffe          BL       LISTBOX_SetSel
                  |L1.3118|
000c2e  2101              MOVS     r1,#1                 ;981
000c30  4628              MOV      r0,r5                 ;981
000c32  f7fffffe          BL       _NotifyOwner
000c36  b006              ADD      sp,sp,#0x18
000c38  bd70              POP      {r4-r6,pc}
                  |L1.3130|
000c3a  4621              MOV      r1,r4                 ;987
000c3c  4628              MOV      r0,r5                 ;987
000c3e  f7fffffe          BL       _OnTouch
                  |L1.3138|
000c42  b006              ADD      sp,sp,#0x18
000c44  bd70              POP      {r4-r6,pc}
000c46  e005              B        |L1.3156|
                  |L1.3144|
000c48  e01e              B        |L1.3208|
000c4a  e7ff              B        |L1.3148|
                  |L1.3148|
000c4c  4630              MOV      r0,r6                 ;996
000c4e  f7fffffe          BL       _FreeAttached
                  |L1.3154|
000c52  e01f              B        |L1.3220|
                  |L1.3156|
000c54  68a0              LDR      r0,[r4,#8]            ;999
000c56  6841              LDR      r1,[r0,#4]            ;999
000c58  2900              CMP      r1,#0                 ;999
000c5a  dd05              BLE      |L1.3176|
000c5c  6801              LDR      r1,[r0,#0]            ;1001
000c5e  4628              MOV      r0,r5                 ;1002
000c60  f7fffffe          BL       LISTBOX_AddKey
000c64  2800              CMP      r0,#0                 ;1002
000c66  d1ec              BNE      |L1.3138|
                  |L1.3176|
000c68  68a1              LDR      r1,[r4,#8]            ;1007
000c6a  6860              LDR      r0,[r4,#4]            ;1007
000c6c  9102              STR      r1,[sp,#8]            ;1007
000c6e  9001              STR      r0,[sp,#4]            ;1007
000c70  2021              MOVS     r0,#0x21              ;1008
000c72  9000              STR      r0,[sp,#0]            ;1008
000c74  4669              MOV      r1,sp                 ;1009
000c76  4628              MOV      r0,r5                 ;1009
000c78  f7fffffe          BL       _SendToOwner
000c7c  4628              MOV      r0,r5                 ;1010
000c7e  f7fffffe          BL       WM_IsWindow
000c82  2800              CMP      r0,#0                 ;1010
000c84  d0dd              BEQ      |L1.3138|
000c86  e005              B        |L1.3220|
                  |L1.3208|
000c88  4628              MOV      r0,r5                 ;1015
000c8a  f7fffffe          BL       LISTBOX_UpdateScrollers
000c8e  4628              MOV      r0,r5                 ;1016
000c90  f7fffffe          BL       WM_InvalidateWindow
                  |L1.3220|
000c94  4620              MOV      r0,r4                 ;1019
000c96  f7fffffe          BL       WM_DefaultProc
000c9a  e7d2              B        |L1.3138|
;;;1021   
                          ENDP

                  LISTBOX_InvalidateItem PROC
;;;1069   */
;;;1070   void LISTBOX_InvalidateItem(LISTBOX_Handle hObj, int Index) {
000c9c  e92d41f0          PUSH     {r4-r8,lr}
000ca0  4606              MOV      r6,r0
000ca2  460c              MOV      r4,r1
;;;1071     if (hObj) {
000ca4  2e00              CMP      r6,#0
000ca6  d02e              BEQ      |L1.3334|
;;;1072       LISTBOX_Obj* pObj;
;;;1073       int NumItems;
;;;1074       WM_LOCK();
000ca8  f7fffffe          BL       GUI_Lock
;;;1075       pObj = LISTBOX_H2P(hObj);
000cac  4630              MOV      r0,r6
000cae  f7fffffe          BL       GUI_ALLOC_h2p
000cb2  4607              MOV      r7,r0
;;;1076       NumItems = LISTBOX__GetNumItems(pObj);
000cb4  4638              MOV      r0,r7
000cb6  f7fffffe          BL       LISTBOX__GetNumItems
000cba  4605              MOV      r5,r0
;;;1077       if (Index < NumItems) {
000cbc  42ac              CMP      r4,r5
000cbe  da1e              BGE      |L1.3326|
;;;1078         if (Index < 0) {
000cc0  2c00              CMP      r4,#0
000cc2  da10              BGE      |L1.3302|
;;;1079           int i;
;;;1080           for (i = 0; i < NumItems; i++) {
000cc4  2400              MOVS     r4,#0
000cc6  2d00              CMP      r5,#0
000cc8  dd06              BLE      |L1.3288|
                  |L1.3274|
;;;1081             LISTBOX__InvalidateItemSize(pObj, i);
000cca  4621              MOV      r1,r4
000ccc  4638              MOV      r0,r7
000cce  f7fffffe          BL       LISTBOX__InvalidateItemSize
000cd2  1c64              ADDS     r4,r4,#1              ;1080
000cd4  42ac              CMP      r4,r5                 ;1080
000cd6  dbf8              BLT      |L1.3274|
                  |L1.3288|
;;;1082           }
;;;1083           LISTBOX_UpdateScrollers(hObj);
000cd8  4630              MOV      r0,r6
000cda  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1084           LISTBOX__InvalidateInsideArea(hObj);
000cde  4630              MOV      r0,r6
000ce0  f7fffffe          BL       LISTBOX__InvalidateInsideArea
;;;1085         } else {
000ce4  e00b              B        |L1.3326|
                  |L1.3302|
;;;1086           LISTBOX__InvalidateItemSize(pObj, Index);
000ce6  4621              MOV      r1,r4
000ce8  4638              MOV      r0,r7
000cea  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1087           LISTBOX_UpdateScrollers(hObj);
000cee  4630              MOV      r0,r6
000cf0  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1088           LISTBOX__InvalidateItemAndBelow(hObj, pObj, Index);
000cf4  4622              MOV      r2,r4
000cf6  4639              MOV      r1,r7
000cf8  4630              MOV      r0,r6
000cfa  f7fffffe          BL       LISTBOX__InvalidateItemAndBelow
                  |L1.3326|
;;;1089         }
;;;1090       }
;;;1091       WM_UNLOCK();
000cfe  e8bd41f0          POP      {r4-r8,lr}
000d02  f7ffbffe          B.W      GUI_Unlock
                  |L1.3334|
;;;1092     }
;;;1093   }
000d06  e8bd81f0          POP      {r4-r8,pc}
;;;1094   
                          ENDP

                  LISTBOX_AddString PROC
;;;1115   */
;;;1116   void LISTBOX_AddString(LISTBOX_Handle hObj, const char* s) {
000d0a  b5f0              PUSH     {r4-r7,lr}
000d0c  b083              SUB      sp,sp,#0xc
000d0e  4607              MOV      r7,r0
000d10  460e              MOV      r6,r1
;;;1117     if (hObj && s) {
000d12  2f00              CMP      r7,#0
000d14  d030              BEQ      |L1.3448|
000d16  2e00              CMP      r6,#0
000d18  d02e              BEQ      |L1.3448|
;;;1118       LISTBOX_Obj* pObj;
;;;1119       LISTBOX_ITEM Item = {0, 0};
000d1a  2000              MOVS     r0,#0
000d1c  9001              STR      r0,[sp,#4]
000d1e  9002              STR      r0,[sp,#8]
;;;1120       WM_LOCK();
000d20  f7fffffe          BL       GUI_Lock
;;;1121       pObj = LISTBOX_H2P(hObj);
000d24  4638              MOV      r0,r7
000d26  f7fffffe          BL       GUI_ALLOC_h2p
000d2a  4604              MOV      r4,r0
;;;1122       if (GUI_ARRAY_AddItem(&pObj->ItemArray, &Item, sizeof(LISTBOX_ITEM) + strlen(s)) == 0) {
000d2c  4630              MOV      r0,r6
000d2e  f7fffffe          BL       strlen
000d32  1d82              ADDS     r2,r0,#6
000d34  a901              ADD      r1,sp,#4
000d36  f1040028          ADD      r0,r4,#0x28
000d3a  f7fffffe          BL       GUI_ARRAY_AddItem
000d3e  b9c8              CBNZ     r0,|L1.3444|
;;;1123         unsigned ItemIndex = GUI_ARRAY_GetNumItems(&pObj->ItemArray) - 1;
000d40  f1040028          ADD      r0,r4,#0x28
000d44  f7fffffe          BL       GUI_ARRAY_GetNumItems
000d48  1e45              SUBS     r5,r0,#1
;;;1124         LISTBOX_ITEM* pItem= (LISTBOX_ITEM*)GUI_ARRAY_GetpItem(&pObj->ItemArray, ItemIndex);
000d4a  4629              MOV      r1,r5
000d4c  f1040028          ADD      r0,r4,#0x28
000d50  f7fffffe          BL       GUI_ARRAY_GetpItem
;;;1125         strcpy(pItem->acText, s);
000d54  4631              MOV      r1,r6
000d56  1d40              ADDS     r0,r0,#5
000d58  f7fffffe          BL       strcpy
;;;1126         LISTBOX__InvalidateItemSize(pObj, ItemIndex);
000d5c  4629              MOV      r1,r5
000d5e  4620              MOV      r0,r4
000d60  f7fffffe          BL       LISTBOX__InvalidateItemSize
;;;1127         LISTBOX_UpdateScrollers(hObj);
000d64  4638              MOV      r0,r7
000d66  f7fffffe          BL       LISTBOX_UpdateScrollers
;;;1128         LISTBOX__InvalidateItem(hObj, pObj, ItemIndex);
000d6a  462a              MOV      r2,r5
000d6c  4621              MOV      r1,r4
000d6e  4638              MOV      r0,r7
000d70  f7fffffe          BL       LISTBOX__InvalidateItem
                  |L1.3444|
;;;1129       }
;;;1130       WM_UNLOCK();
000d74  f7fffffe          BL       GUI_Unlock
                  |L1.3448|
;;;1131     }
;;;1132   }
000d78  b003              ADD      sp,sp,#0xc
000d7a  bdf0              POP      {r4-r7,pc}
;;;1133   
                          ENDP

                  LISTBOX_SetText PROC
;;;1137   */
;;;1138   void LISTBOX_SetText(LISTBOX_Handle hObj, const GUI_ConstString* ppText) {
000d7c  b570              PUSH     {r4-r6,lr}
000d7e  4606              MOV      r6,r0
000d80  460d              MOV      r5,r1
;;;1139     if (hObj) {
000d82  2e00              CMP      r6,#0
000d84  d016              BEQ      |L1.3508|
;;;1140       int i;
;;;1141       const char* s;
;;;1142       WM_LOCK();
000d86  f7fffffe          BL       GUI_Lock
;;;1143       if (ppText) {
000d8a  b155              CBZ      r5,|L1.3490|
;;;1144         for (i = 0; (s = *(ppText+i)) != 0; i++) {
000d8c  2400              MOVS     r4,#0
000d8e  6829              LDR      r1,[r5,#0]
000d90  b139              CBZ      r1,|L1.3490|
                  |L1.3474|
;;;1145           LISTBOX_AddString(hObj, s);
000d92  4630              MOV      r0,r6
000d94  f7fffffe          BL       LISTBOX_AddString
000d98  1c64              ADDS     r4,r4,#1              ;1144
000d9a  f8551024          LDR      r1,[r5,r4,LSL #2]     ;1144
000d9e  2900              CMP      r1,#0                 ;1144
000da0  d1f7              BNE      |L1.3474|
                  |L1.3490|
;;;1146         }
;;;1147       }
;;;1148       LISTBOX_InvalidateItem(hObj, LISTBOX_ALL_ITEMS);
000da2  f04f31ff          MOV      r1,#0xffffffff
000da6  4630              MOV      r0,r6
000da8  f7fffffe          BL       LISTBOX_InvalidateItem
;;;1149       WM_UNLOCK();
000dac  e8bd4070          POP      {r4-r6,lr}
000db0  f7ffbffe          B.W      GUI_Unlock
                  |L1.3508|
;;;1150     }
;;;1151   }
000db4  bd70              POP      {r4-r6,pc}
;;;1152   
                          ENDP

                  LISTBOX_CreateEx PROC
;;;1031   */
;;;1032   LISTBOX_Handle LISTBOX_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000db6  e92d4ff0          PUSH     {r4-r11,lr}
;;;1033                                   int WinFlags, int ExFlags, int Id, const GUI_ConstString* ppText)
;;;1034   {
000dba  b085              SUB      sp,sp,#0x14
000dbc  4680              MOV      r8,r0
000dbe  4689              MOV      r9,r1
000dc0  4692              MOV      r10,r2
000dc2  469b              MOV      r11,r3
000dc4  9f11              LDR      r7,[sp,#0x44]
000dc6  9e12              LDR      r6,[sp,#0x48]
000dc8  9d0e              LDR      r5,[sp,#0x38]
000dca  9c0f              LDR      r4,[sp,#0x3c]
;;;1035     LISTBOX_Handle hObj;
;;;1036     GUI_USE_PARA(ExFlags);
;;;1037     WM_LOCK();
000dcc  f7fffffe          BL       GUI_Lock
;;;1038     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, LISTBOX_Callback,
000dd0  2368              MOVS     r3,#0x68
000dd2  f2af2299          ADR      r2,LISTBOX_Callback + 1
000dd6  b2a1              UXTH     r1,r4
000dd8  9303              STR      r3,[sp,#0xc]
000dda  9202              STR      r2,[sp,#8]
000ddc  9101              STR      r1,[sp,#4]
000dde  9500              STR      r5,[sp,#0]
000de0  465b              MOV      r3,r11
000de2  4652              MOV      r2,r10
000de4  4649              MOV      r1,r9
000de6  4640              MOV      r0,r8
000de8  f7fffffe          BL       WM_CreateWindowAsChild
000dec  4605              MOV      r5,r0
;;;1039                                   sizeof(LISTBOX_Obj) - sizeof(WM_Obj));
;;;1040     if (hObj) {
000dee  b35d              CBZ      r5,|L1.3656|
;;;1041       LISTBOX_Obj* pObj;
;;;1042       pObj = (LISTBOX_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000df0  4628              MOV      r0,r5
000df2  f7fffffe          BL       GUI_ALLOC_h2p
000df6  4604              MOV      r4,r0
;;;1043        /* Init sub-classes */
;;;1044       GUI_ARRAY_CREATE(&pObj->ItemArray);
;;;1045      /* init widget specific variables */
;;;1046       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
000df8  2210              MOVS     r2,#0x10
000dfa  4639              MOV      r1,r7
000dfc  4620              MOV      r0,r4
000dfe  f7fffffe          BL       WIDGET__Init
;;;1047       LISTBOX_INIT_ID(pObj);
;;;1048       pObj->Props = LISTBOX_DefaultProps;
000e02  4814              LDR      r0,|L1.3668|
000e04  e890100e          LDM      r0,{r1-r3,r12}
000e08  e9c43c14          STRD     r3,r12,[r4,#0x50]
000e0c  64e2              STR      r2,[r4,#0x4c]
000e0e  64a1              STR      r1,[r4,#0x48]
000e10  e9d03c06          LDRD     r3,r12,[r0,#0x18]
000e14  6942              LDR      r2,[r0,#0x14]  ; LISTBOX_DefaultProps
000e16  6901              LDR      r1,[r0,#0x10]  ; LISTBOX_DefaultProps
000e18  e9c43c18          STRD     r3,r12,[r4,#0x60]
000e1c  65e2              STR      r2,[r4,#0x5c]
000e1e  65a1              STR      r1,[r4,#0x58]
000e20  e9d03c0a          LDRD     r3,r12,[r0,#0x28]
000e24  6a42              LDR      r2,[r0,#0x24]  ; LISTBOX_DefaultProps
000e26  6a01              LDR      r1,[r0,#0x20]  ; LISTBOX_DefaultProps
000e28  e9c43c1c          STRD     r3,r12,[r4,#0x70]
000e2c  66e2              STR      r2,[r4,#0x6c]
000e2e  66a1              STR      r1,[r4,#0x68]
000e30  6b41              LDR      r1,[r0,#0x34]  ; LISTBOX_DefaultProps
000e32  6b00              LDR      r0,[r0,#0x30]  ; LISTBOX_DefaultProps
000e34  67e1              STR      r1,[r4,#0x7c]
000e36  67a0              STR      r0,[r4,#0x78]
;;;1049       if (ppText) {
000e38  b11e              CBZ      r6,|L1.3650|
;;;1050         /* init member variables */
;;;1051         /* Set non-zero attributes */
;;;1052         LISTBOX_SetText(hObj, ppText);
000e3a  4631              MOV      r1,r6
000e3c  4628              MOV      r0,r5
000e3e  f7fffffe          BL       LISTBOX_SetText
                  |L1.3650|
;;;1053       }
;;;1054       LISTBOX_UpdateScrollers(hObj);
000e42  4628              MOV      r0,r5
000e44  f7fffffe          BL       LISTBOX_UpdateScrollers
                  |L1.3656|
;;;1055     }
;;;1056     WM_UNLOCK();
000e48  f7fffffe          BL       GUI_Unlock
;;;1057     return hObj;
;;;1058   }
000e4c  b005              ADD      sp,sp,#0x14
000e4e  4628              MOV      r0,r5                 ;1057
000e50  e8bd8ff0          POP      {r4-r11,pc}
;;;1059   
                          ENDP

                  |L1.3668|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  LISTBOX_DefaultProps
                          DCD      GUI_Font13_1
000004  000a              DCW      0x000a
000006  0000              DCB      0x00,0x00
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x00ff0000
                          DCD      0x00c0c0c0
                          DCD      0x00000000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00808080
                          DCD      0x0fffffff
                          DCD      0x0fffffff
                          DCD      0x0fffffff
000034  0000              DCW      0x0000
000036  0000              DCB      0x00,0x00
