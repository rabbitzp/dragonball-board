; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\slider.o --depend=.\rvmdk\slider.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\slider.crf ..\..\..\..\..\uCGUI\GUI\Widget\SLIDER.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;74     */
;;;75     static void _Paint(SLIDER_Obj* pObj, WM_HWIN hObj) {
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  b089              SUB      sp,sp,#0x24
000006  4604              MOV      r4,r0
000008  4689              MOV      r9,r1
;;;76       GUI_RECT r, rFocus, rSlider, rSlot;
;;;77       int x0, xsize, i, Range, NumTicks;
;;;78       WIDGET__GetClientRect(&pObj->Widget, &rFocus);
00000a  a904              ADD      r1,sp,#0x10
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       WIDGET__GetClientRect
;;;79       GUI__ReduceRect(&r, &rFocus, 1);
000012  2201              MOVS     r2,#1
000014  a904              ADD      r1,sp,#0x10
000016  a806              ADD      r0,sp,#0x18
000018  f7fffffe          BL       GUI__ReduceRect
;;;80       NumTicks = pObj->NumTicks;
00001c  6c65              LDR      r5,[r4,#0x44]
;;;81       xsize    = r.x1 - r.x0  + 1 - pObj->Width;
00001e  f9bd101c          LDRSH    r1,[sp,#0x1c]
000022  f9bd0018          LDRSH    r0,[sp,#0x18]
000026  f9b42048          LDRSH    r2,[r4,#0x48]
00002a  1a09              SUBS     r1,r1,r0
00002c  1a89              SUBS     r1,r1,r2
00002e  f1010801          ADD      r8,r1,#1
;;;82       x0       = r.x0 + pObj->Width / 2;
000032  eb0271d2          ADD      r1,r2,r2,LSR #31
000036  eb000761          ADD      r7,r0,r1,ASR #1
;;;83       Range    = pObj->Max - pObj->Min;
00003a  6b61              LDR      r1,[r4,#0x34]
00003c  6ba0              LDR      r0,[r4,#0x38]
00003e  1a46              SUBS     r6,r0,r1
;;;84       if (Range == 0) {
000040  b906              CBNZ     r6,|L1.68|
;;;85         Range = 1;
000042  2601              MOVS     r6,#1
                  |L1.68|
;;;86       }
;;;87       /* Fill with parents background color */
;;;88       #if !SLIDER_SUPPORT_TRANSPARENCY   /* Not needed any more, since window is transparent*/
;;;89         if (pObj->Props.BkColor == GUI_INVALID_COLOR) {
;;;90           LCD_SetBkColor(WIDGET__GetBkColor(hObj));
;;;91         } else {
;;;92           LCD_SetBkColor(pObj->Props.BkColor);
;;;93         }
;;;94         GUI_Clear();
;;;95       #else
;;;96         if (!WM_GetHasTrans(hObj)) {
000044  4648              MOV      r0,r9
000046  f7fffffe          BL       WM_GetHasTrans
00004a  b920              CBNZ     r0,|L1.86|
;;;97           LCD_SetBkColor(pObj->Props.BkColor);
00004c  6aa0              LDR      r0,[r4,#0x28]
00004e  f7fffffe          BL       LCD_SetBkColor
;;;98           GUI_Clear();
000052  f7fffffe          BL       GUI_Clear
                  |L1.86|
;;;99         }
;;;100      #endif
;;;101      /* Calculate Slider position */
;;;102      rSlider    = r;
000056  9907              LDR      r1,[sp,#0x1c]
000058  9806              LDR      r0,[sp,#0x18]
00005a  9103              STR      r1,[sp,#0xc]
00005c  9002              STR      r0,[sp,#8]
;;;103      rSlider.y0 = 5;
00005e  2005              MOVS     r0,#5
000060  f8ad000a          STRH     r0,[sp,#0xa]
;;;104      rSlider.x0 = x0 + (U32)xsize * (U32)(pObj->v - pObj->Min) / Range - pObj->Width / 2;
000064  6b61              LDR      r1,[r4,#0x34]
000066  6be0              LDR      r0,[r4,#0x3c]
000068  1a40              SUBS     r0,r0,r1
00006a  fb00f008          MUL      r0,r0,r8
00006e  fbb0f0f6          UDIV     r0,r0,r6
000072  19c1              ADDS     r1,r0,r7
000074  f9b40048          LDRSH    r0,[r4,#0x48]
000078  eb0072d0          ADD      r2,r0,r0,LSR #31
00007c  eba10162          SUB      r1,r1,r2,ASR #1
000080  f8ad1008          STRH     r1,[sp,#8]
;;;105      rSlider.x1 = rSlider.x0 + pObj->Width;
000084  4408              ADD      r0,r0,r1
000086  f8ad000c          STRH     r0,[sp,#0xc]
;;;106      /* Calculate Slot position */
;;;107      rSlot.x0 = x0;
00008a  f8ad7000          STRH     r7,[sp,#0]
;;;108      rSlot.x1 = x0 + xsize;
00008e  eb070008          ADD      r0,r7,r8
000092  f8ad0004          STRH     r0,[sp,#4]
;;;109      rSlot.y0 = (rSlider.y0 + rSlider.y1) / 2 - 1;
000096  f9bd000e          LDRSH    r0,[sp,#0xe]
00009a  f04f31ff          MOV      r1,#0xffffffff
00009e  1d40              ADDS     r0,r0,#5
0000a0  eb0070d0          ADD      r0,r0,r0,LSR #31
0000a4  eb010060          ADD      r0,r1,r0,ASR #1
0000a8  f8ad0002          STRH     r0,[sp,#2]
;;;110      rSlot.y1 = rSlot.y0 + 3;
0000ac  1cc0              ADDS     r0,r0,#3
0000ae  f8ad0006          STRH     r0,[sp,#6]
;;;111      WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rSlot);        /* Draw slot */
0000b2  4669              MOV      r1,sp
0000b4  4620              MOV      r0,r4
0000b6  f7fffffe          BL       WIDGET__EFFECT_DrawDownRect
;;;112      /* Draw the ticks */
;;;113      if (NumTicks < 0) {
0000ba  2d00              CMP      r5,#0
0000bc  da09              BGE      |L1.210|
;;;114        NumTicks = Range + 1;
0000be  1c75              ADDS     r5,r6,#1
;;;115        if (NumTicks > (xsize / 5)) {
0000c0  48fb              LDR      r0,|L1.1200|
0000c2  fb801008          SMULL    r1,r0,r0,r8
0000c6  1041              ASRS     r1,r0,#1
0000c8  eba170e0          SUB      r0,r1,r0,ASR #31
0000cc  42a8              CMP      r0,r5
0000ce  da00              BGE      |L1.210|
;;;116          NumTicks = 11;
0000d0  250b              MOVS     r5,#0xb
                  |L1.210|
;;;117        }
;;;118      }
;;;119      if (NumTicks > 1) {
0000d2  2d01              CMP      r5,#1
0000d4  dd12              BLE      |L1.252|
;;;120        LCD_SetColor(GUI_BLACK);
0000d6  2000              MOVS     r0,#0
0000d8  f7fffffe          BL       LCD_SetColor
;;;121        for (i = 0; i < NumTicks; i++) {
0000dc  2600              MOVS     r6,#0
;;;122          int x = x0 + xsize * i / (NumTicks - 1);
0000de  f1a50901          SUB      r9,r5,#1
                  |L1.226|
0000e2  fb08f006          MUL      r0,r8,r6
0000e6  fb90f0f9          SDIV     r0,r0,r9
0000ea  19c1              ADDS     r1,r0,r7
;;;123          WIDGET__DrawVLine(&pObj->Widget, x, 1, 3);
0000ec  2303              MOVS     r3,#3
0000ee  2201              MOVS     r2,#1
0000f0  4620              MOV      r0,r4
0000f2  f7fffffe          BL       WIDGET__DrawVLine
0000f6  1c76              ADDS     r6,r6,#1              ;121
0000f8  42ae              CMP      r6,r5                 ;121
0000fa  dbf2              BLT      |L1.226|
                  |L1.252|
;;;124        }
;;;125      }
;;;126      /* Draw the slider itself */
;;;127      LCD_SetColor(pObj->Props.Color);
0000fc  6ae0              LDR      r0,[r4,#0x2c]
0000fe  f7fffffe          BL       LCD_SetColor
;;;128      WIDGET__FillRectEx(&pObj->Widget, &rSlider);
000102  a902              ADD      r1,sp,#8
000104  4620              MOV      r0,r4
000106  f7fffffe          BL       WIDGET__FillRectEx
;;;129      LCD_SetColor(GUI_BLACK);
00010a  2000              MOVS     r0,#0
00010c  f7fffffe          BL       LCD_SetColor
;;;130      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &rSlider);
000110  a902              ADD      r1,sp,#8
000112  4620              MOV      r0,r4
000114  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;131      /* Draw focus */
;;;132      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
000118  8ce0              LDRH     r0,[r4,#0x26]
00011a  f0100f01          TST      r0,#1
00011e  d007              BEQ      |L1.304|
;;;133        LCD_SetColor(pObj->Props.FocusColor);
000120  6b20              LDR      r0,[r4,#0x30]
000122  f7fffffe          BL       LCD_SetColor
;;;134        WIDGET__DrawFocusRect(&pObj->Widget, &rFocus, 0);
000126  2200              MOVS     r2,#0
000128  a904              ADD      r1,sp,#0x10
00012a  4620              MOV      r0,r4
00012c  f7fffffe          BL       WIDGET__DrawFocusRect
                  |L1.304|
;;;135      }
;;;136    }
000130  b009              ADD      sp,sp,#0x24
000132  e8bd83f0          POP      {r4-r9,pc}
;;;137    
                          ENDP

                  _SliderPressed PROC
;;;141    */
;;;142    static void _SliderPressed(SLIDER_Handle hObj, SLIDER_Obj* pObj) {
000136  b570              PUSH     {r4-r6,lr}
000138  4605              MOV      r5,r0
00013a  460c              MOV      r4,r1
;;;143      WIDGET_OrState(hObj, SLIDER_STATE_PRESSED);
00013c  f44f7180          MOV      r1,#0x100
000140  4628              MOV      r0,r5
000142  f7fffffe          BL       WIDGET_OrState
;;;144      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000146  8ba1              LDRH     r1,[r4,#0x1c]
000148  f0110f02          TST      r1,#2
00014c  d005              BEQ      |L1.346|
;;;145        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
00014e  4628              MOV      r0,r5
000150  e8bd4070          POP      {r4-r6,lr}
000154  2101              MOVS     r1,#1
000156  f7ffbffe          B.W      WM_NotifyParent
                  |L1.346|
;;;146      }
;;;147    }
00015a  bd70              POP      {r4-r6,pc}
;;;148    
                          ENDP

                  _SliderReleased PROC
;;;152    */
;;;153    static void _SliderReleased(SLIDER_Handle hObj, SLIDER_Obj* pObj) {
00015c  b570              PUSH     {r4-r6,lr}
00015e  4605              MOV      r5,r0
000160  460c              MOV      r4,r1
;;;154      WIDGET_AndState(hObj, SLIDER_STATE_PRESSED);
000162  f44f7180          MOV      r1,#0x100
000166  4628              MOV      r0,r5
000168  f7fffffe          BL       WIDGET_AndState
;;;155      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
00016c  8ba1              LDRH     r1,[r4,#0x1c]
00016e  f0110f02          TST      r1,#2
000172  d005              BEQ      |L1.384|
;;;156        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
000174  4628              MOV      r0,r5
000176  e8bd4070          POP      {r4-r6,lr}
00017a  2102              MOVS     r1,#2
00017c  f7ffbffe          B.W      WM_NotifyParent
                  |L1.384|
;;;157      }
;;;158    }
000180  bd70              POP      {r4-r6,pc}
;;;159    
                          ENDP

                  SLIDER_SetValue PROC
;;;391    */
;;;392    void SLIDER_SetValue(SLIDER_Handle hObj, int v) {
000182  b570              PUSH     {r4-r6,lr}
000184  4605              MOV      r5,r0
000186  460c              MOV      r4,r1
;;;393      SLIDER_Obj* pObj;
;;;394      if (hObj) {
000188  2d00              CMP      r5,#0
00018a  d01b              BEQ      |L1.452|
;;;395        WM_LOCK();
00018c  f7fffffe          BL       GUI_Lock
;;;396        pObj = SLIDER_H2P(hObj);
000190  4628              MOV      r0,r5
000192  f7fffffe          BL       GUI_ALLOC_h2p
;;;397        /* Put in min/max range */
;;;398        if (v < pObj->Min) {
000196  6b41              LDR      r1,[r0,#0x34]
000198  42a1              CMP      r1,r4
00019a  dd00              BLE      |L1.414|
;;;399          v = pObj->Min;
00019c  460c              MOV      r4,r1
                  |L1.414|
;;;400        }
;;;401        if (v > pObj->Max) {
00019e  6b81              LDR      r1,[r0,#0x38]
0001a0  42a1              CMP      r1,r4
0001a2  da00              BGE      |L1.422|
;;;402          v = pObj->Max;
0001a4  460c              MOV      r4,r1
                  |L1.422|
;;;403        }
;;;404        if (pObj->v != v) {
0001a6  6bc1              LDR      r1,[r0,#0x3c]
0001a8  42a1              CMP      r1,r4
0001aa  d007              BEQ      |L1.444|
;;;405          pObj->v = v;
0001ac  63c4              STR      r4,[r0,#0x3c]
;;;406          WM_InvalidateWindow(hObj);
0001ae  4628              MOV      r0,r5
0001b0  f7fffffe          BL       WM_InvalidateWindow
;;;407          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0001b4  2105              MOVS     r1,#5
0001b6  4628              MOV      r0,r5
0001b8  f7fffffe          BL       WM_NotifyParent
                  |L1.444|
;;;408        }
;;;409        WM_UNLOCK();
0001bc  e8bd4070          POP      {r4-r6,lr}
0001c0  f7ffbffe          B.W      GUI_Unlock
                  |L1.452|
;;;410      }
;;;411    }
0001c4  bd70              POP      {r4-r6,pc}
;;;412    
                          ENDP

                  _OnTouch PROC
;;;163    */
;;;164    static void _OnTouch(SLIDER_Handle hObj, SLIDER_Obj* pObj, WM_MESSAGE*pMsg) {
0001c6  e92d41f0          PUSH     {r4-r8,lr}
0001ca  4607              MOV      r7,r0
0001cc  460c              MOV      r4,r1
;;;165      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
0001ce  6891              LDR      r1,[r2,#8]
;;;166      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0001d0  2900              CMP      r1,#0
0001d2  d050              BEQ      |L1.630|
;;;167        if (pState->Pressed) {
0001d4  7a08              LDRB     r0,[r1,#8]
0001d6  b3f0              CBZ      r0,|L1.598|
;;;168          int x0, xsize, x, Sel, Range;
;;;169          Range = (pObj->Max - pObj->Min);
0001d8  6b62              LDR      r2,[r4,#0x34]
0001da  6ba0              LDR      r0,[r4,#0x38]
0001dc  eba00802          SUB      r8,r0,r2
;;;170          x0    = 1 + pObj->Width / 2;  /* 1 pixel focus rectangle + width of actual slider */
0001e0  f9b40048          LDRSH    r0,[r4,#0x48]
0001e4  2201              MOVS     r2,#1
0001e6  eb0070d0          ADD      r0,r0,r0,LSR #31
0001ea  eb020660          ADD      r6,r2,r0,ASR #1
;;;171          x     = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? pState->y : pState->x;
0001ee  8ce0              LDRH     r0,[r4,#0x26]
0001f0  f0100f08          TST      r0,#8
0001f4  d001              BEQ      |L1.506|
0001f6  6848              LDR      r0,[r1,#4]
0001f8  e000              B        |L1.508|
                  |L1.506|
0001fa  6808              LDR      r0,[r1,#0]
                  |L1.508|
;;;172          x    -= x0;
0001fc  1b85              SUBS     r5,r0,r6
;;;173          xsize = WIDGET__GetWindowSizeX(hObj) - 2 * x0;
0001fe  4638              MOV      r0,r7
000200  f7fffffe          BL       WIDGET__GetWindowSizeX
000204  4271              RSBS     r1,r6,#0
000206  eb000141          ADD      r1,r0,r1,LSL #1
;;;174          if (x <= 0) {
00020a  2d00              CMP      r5,#0
00020c  dc01              BGT      |L1.530|
;;;175            Sel = pObj->Min;
00020e  6b65              LDR      r5,[r4,#0x34]
000210  e00e              B        |L1.560|
                  |L1.530|
;;;176          } else if (x >= xsize) {
000212  428d              CMP      r5,r1
000214  db01              BLT      |L1.538|
;;;177            Sel = pObj->Max;
000216  6ba5              LDR      r5,[r4,#0x38]
000218  e00a              B        |L1.560|
                  |L1.538|
;;;178          } else {
;;;179            int Div;
;;;180            Div = xsize ? xsize : 1;     /* Make sure we do not divide by 0, even though xsize should never be 0 in this case anyhow */
00021a  b901              CBNZ     r1,|L1.542|
00021c  2101              MOVS     r1,#1
                  |L1.542|
;;;181            Sel = pObj->Min + ((U32)Range * (U32)x + Div / 2) / Div;
00021e  eb0170d1          ADD      r0,r1,r1,LSR #31
000222  1040              ASRS     r0,r0,#1
000224  fb080005          MLA      r0,r8,r5,r0
000228  fbb0f0f1          UDIV     r0,r0,r1
00022c  6b61              LDR      r1,[r4,#0x34]
00022e  1845              ADDS     r5,r0,r1
                  |L1.560|
;;;182          }
;;;183          if (WM_IsFocussable(hObj)) {
000230  4638              MOV      r0,r7
000232  f7fffffe          BL       WM_IsFocussable
000236  b110              CBZ      r0,|L1.574|
;;;184            WM_SetFocus(hObj);
000238  4638              MOV      r0,r7
00023a  f7fffffe          BL       WM_SetFocus
                  |L1.574|
;;;185          }
;;;186          WM_SetCapture(hObj, 1);
00023e  2101              MOVS     r1,#1
000240  4638              MOV      r0,r7
000242  f7fffffe          BL       WM_SetCapture
;;;187          SLIDER_SetValue(hObj, Sel);
000246  4629              MOV      r1,r5
000248  4638              MOV      r0,r7
00024a  f7fffffe          BL       SLIDER_SetValue
;;;188          if ((pObj->Widget.State & SLIDER_STATE_PRESSED) == 0){   
00024e  8ce0              LDRH     r0,[r4,#0x26]
000250  f4107f80          TST      r0,#0x100
000254  e000              B        |L1.600|
                  |L1.598|
000256  e005              B        |L1.612|
                  |L1.600|
000258  d10d              BNE      |L1.630|
;;;189            _SliderPressed(hObj, pObj);
00025a  4621              MOV      r1,r4
00025c  4638              MOV      r0,r7
00025e  e8bd41f0          POP      {r4-r8,lr}
000262  e7fe              B        _SliderPressed
                  |L1.612|
;;;190          }
;;;191        } else {
;;;192          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;193          if (pObj->Widget.State & SLIDER_STATE_PRESSED) {   
000264  8ce0              LDRH     r0,[r4,#0x26]
000266  f4107f80          TST      r0,#0x100
00026a  d004              BEQ      |L1.630|
;;;194            _SliderReleased(hObj, pObj);
00026c  4621              MOV      r1,r4
00026e  4638              MOV      r0,r7
000270  e8bd41f0          POP      {r4-r8,lr}
000274  e7fe              B        _SliderReleased
                  |L1.630|
;;;195          }
;;;196        }
;;;197      }
;;;198    }
000276  e8bd81f0          POP      {r4-r8,pc}
;;;199    
                          ENDP

                  SLIDER_Dec PROC
;;;338    */
;;;339    void SLIDER_Dec(SLIDER_Handle hObj) {
00027a  b510              PUSH     {r4,lr}
00027c  4604              MOV      r4,r0
;;;340      SLIDER_Obj* pObj;
;;;341      if (hObj) {
00027e  2c00              CMP      r4,#0
000280  d015              BEQ      |L1.686|
;;;342        WM_LOCK();
000282  f7fffffe          BL       GUI_Lock
;;;343        pObj = SLIDER_H2P(hObj);
000286  4620              MOV      r0,r4
000288  f7fffffe          BL       GUI_ALLOC_h2p
;;;344        if (pObj->v > pObj->Min) {
00028c  6b42              LDR      r2,[r0,#0x34]
00028e  6bc1              LDR      r1,[r0,#0x3c]
000290  4291              CMP      r1,r2
000292  dd08              BLE      |L1.678|
;;;345          pObj->v--;
000294  1e49              SUBS     r1,r1,#1
000296  63c1              STR      r1,[r0,#0x3c]
;;;346          WM_InvalidateWindow(hObj);
000298  4620              MOV      r0,r4
00029a  f7fffffe          BL       WM_InvalidateWindow
;;;347          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00029e  2105              MOVS     r1,#5
0002a0  4620              MOV      r0,r4
0002a2  f7fffffe          BL       WM_NotifyParent
                  |L1.678|
;;;348        }
;;;349        WM_UNLOCK();
0002a6  e8bd4010          POP      {r4,lr}
0002aa  f7ffbffe          B.W      GUI_Unlock
                  |L1.686|
;;;350      }
;;;351    }
0002ae  bd10              POP      {r4,pc}
;;;352    
                          ENDP

                  SLIDER_Inc PROC
;;;356    */
;;;357    void SLIDER_Inc(SLIDER_Handle hObj) {
0002b0  b510              PUSH     {r4,lr}
0002b2  4604              MOV      r4,r0
;;;358      SLIDER_Obj* pObj;
;;;359      if (hObj) {
0002b4  2c00              CMP      r4,#0
0002b6  d015              BEQ      |L1.740|
;;;360        WM_LOCK();
0002b8  f7fffffe          BL       GUI_Lock
;;;361        pObj = SLIDER_H2P(hObj);
0002bc  4620              MOV      r0,r4
0002be  f7fffffe          BL       GUI_ALLOC_h2p
;;;362        if (pObj->v < pObj->Max) {
0002c2  6b82              LDR      r2,[r0,#0x38]
0002c4  6bc1              LDR      r1,[r0,#0x3c]
0002c6  4291              CMP      r1,r2
0002c8  da08              BGE      |L1.732|
;;;363          pObj->v++;
0002ca  1c49              ADDS     r1,r1,#1
0002cc  63c1              STR      r1,[r0,#0x3c]
;;;364          WM_InvalidateWindow(hObj);
0002ce  4620              MOV      r0,r4
0002d0  f7fffffe          BL       WM_InvalidateWindow
;;;365          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0002d4  2105              MOVS     r1,#5
0002d6  4620              MOV      r0,r4
0002d8  f7fffffe          BL       WM_NotifyParent
                  |L1.732|
;;;366        }
;;;367        WM_UNLOCK();
0002dc  e8bd4010          POP      {r4,lr}
0002e0  f7ffbffe          B.W      GUI_Unlock
                  |L1.740|
;;;368      }
;;;369    }
0002e4  bd10              POP      {r4,pc}
;;;370    
                          ENDP

                  _OnKey PROC
;;;203    */
;;;204    static void  _OnKey(SLIDER_Handle hObj, WM_MESSAGE*pMsg) {
0002e6  6889              LDR      r1,[r1,#8]
;;;205      const WM_KEY_INFO* pKeyInfo;
;;;206      int Key;
;;;207      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
;;;208      Key = pKeyInfo->Key;
0002e8  680a              LDR      r2,[r1,#0]
;;;209      if (pKeyInfo->PressedCnt > 0) {
0002ea  6849              LDR      r1,[r1,#4]
0002ec  2900              CMP      r1,#0
0002ee  dd05              BLE      |L1.764|
;;;210        switch (Key) {
0002f0  2a10              CMP      r2,#0x10
0002f2  d002              BEQ      |L1.762|
0002f4  2a12              CMP      r2,#0x12
0002f6  d101              BNE      |L1.764|
;;;211          case GUI_KEY_RIGHT:
;;;212            SLIDER_Inc(hObj);
0002f8  e7fe              B        SLIDER_Inc
                  |L1.762|
;;;213            break;                    /* Send to parent by not doing anything */
;;;214          case GUI_KEY_LEFT:
;;;215            SLIDER_Dec(hObj);
0002fa  e7fe              B        SLIDER_Dec
                  |L1.764|
;;;216            break;                    /* Send to parent by not doing anything */
;;;217          default:
;;;218            return;
;;;219        }
;;;220      }
;;;221    }
0002fc  4770              BX       lr
;;;222    
                          ENDP

                  SLIDER_Callback PROC
;;;255    */
;;;256    void SLIDER_Callback (WM_MESSAGE *pMsg) {
0002fe  b570              PUSH     {r4-r6,lr}
000300  4604              MOV      r4,r0
;;;257      SLIDER_Handle hObj;
;;;258      SLIDER_Obj* pObj;
;;;259      hObj = pMsg->hWin;
000302  f9b45004          LDRSH    r5,[r4,#4]
;;;260      pObj = (SLIDER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000306  4628              MOV      r0,r5
000308  f7fffffe          BL       GUI_ALLOC_h2p
00030c  4606              MOV      r6,r0
;;;261      /* Let widget handle the standard messages */
;;;262      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00030e  4621              MOV      r1,r4
000310  4628              MOV      r0,r5
000312  f7fffffe          BL       WIDGET_HandleActive
000316  2800              CMP      r0,#0
000318  d01a              BEQ      |L1.848|
;;;263        return;
;;;264      }
;;;265      switch (pMsg->MsgId) {
00031a  6820              LDR      r0,[r4,#0]
00031c  280c              CMP      r0,#0xc
00031e  d008              BEQ      |L1.818|
000320  280e              CMP      r0,#0xe
000322  d00c              BEQ      |L1.830|
000324  280f              CMP      r0,#0xf
000326  d10e              BNE      |L1.838|
;;;266      case WM_PAINT:
;;;267        GUI_DEBUG_LOG("SLIDER: _Callback(WM_PAINT)\n");
;;;268        _Paint(pObj, hObj);
000328  4629              MOV      r1,r5
00032a  4630              MOV      r0,r6
00032c  e8bd4070          POP      {r4-r6,lr}
000330  e7fe              B        _Paint
                  |L1.818|
;;;269        return;
;;;270      case WM_TOUCH:
;;;271        _OnTouch(hObj, pObj, pMsg);
000332  4622              MOV      r2,r4
000334  4631              MOV      r1,r6
000336  4628              MOV      r0,r5
000338  f7fffffe          BL       _OnTouch
;;;272        break;
00033c  e003              B        |L1.838|
                  |L1.830|
;;;273      case WM_KEY:
;;;274        _OnKey(hObj, pMsg);
00033e  4621              MOV      r1,r4
000340  4628              MOV      r0,r5
000342  f7fffffe          BL       _OnKey
                  |L1.838|
;;;275        break;
;;;276      }
;;;277      WM_DefaultProc(pMsg);
000346  4620              MOV      r0,r4
000348  e8bd4070          POP      {r4-r6,lr}
00034c  f7ffbffe          B.W      WM_DefaultProc
                  |L1.848|
;;;278    }
000350  bd70              POP      {r4-r6,pc}
;;;279    
                          ENDP

                  SLIDER_CreateEx PROC
;;;293    */
;;;294    SLIDER_Handle SLIDER_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000352  e92d4ff0          PUSH     {r4-r11,lr}
;;;295                                  int WinFlags, int ExFlags, int Id)
;;;296    {
000356  b085              SUB      sp,sp,#0x14
000358  4605              MOV      r5,r0
00035a  4688              MOV      r8,r1
00035c  4691              MOV      r9,r2
00035e  469a              MOV      r10,r3
000360  f8ddb03c          LDR      r11,[sp,#0x3c]
000364  9f11              LDR      r7,[sp,#0x44]
000366  9e10              LDR      r6,[sp,#0x40]
000368  9c0e              LDR      r4,[sp,#0x38]
;;;297      SLIDER_Handle hObj;
;;;298      /* Create the window */
;;;299      WM_LOCK();
00036a  f7fffffe          BL       GUI_Lock
;;;300      #if SLIDER_SUPPORT_TRANSPARENCY
;;;301        WinFlags |= WM_CF_HASTRANS;
00036e  f04b0c01          ORR      r12,r11,#1
;;;302      #endif
;;;303      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, SLIDER_Callback, sizeof(SLIDER_Obj) - sizeof(WM_Obj));
000372  232c              MOVS     r3,#0x2c
000374  f2af0279          ADR      r2,SLIDER_Callback + 1
000378  fa1ff18c          UXTH     r1,r12
00037c  9303              STR      r3,[sp,#0xc]
00037e  9202              STR      r2,[sp,#8]
000380  9101              STR      r1,[sp,#4]
000382  9400              STR      r4,[sp,#0]
000384  4653              MOV      r3,r10
000386  464a              MOV      r2,r9
000388  4641              MOV      r1,r8
00038a  4628              MOV      r0,r5
00038c  f7fffffe          BL       WM_CreateWindowAsChild
000390  4605              MOV      r5,r0
;;;304      if (hObj) {
000392  b1e5              CBZ      r5,|L1.974|
;;;305        SLIDER_Obj * pObj;
;;;306        U16 InitState;
;;;307        pObj = (SLIDER_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000394  4628              MOV      r0,r5
000396  f7fffffe          BL       GUI_ALLOC_h2p
00039a  4604              MOV      r4,r0
;;;308        /* Handle SpecialFlags */
;;;309        InitState = WIDGET_STATE_FOCUSSABLE;
00039c  2210              MOVS     r2,#0x10
;;;310        if (ExFlags & SLIDER_CF_VERTICAL) {
00039e  f0160f08          TST      r6,#8
0003a2  d000              BEQ      |L1.934|
;;;311          InitState |= WIDGET_CF_VERTICAL;
0003a4  2218              MOVS     r2,#0x18
                  |L1.934|
;;;312        }
;;;313        /* init widget specific variables */
;;;314        WIDGET__Init(&pObj->Widget, Id, InitState);
0003a6  4639              MOV      r1,r7
0003a8  4620              MOV      r0,r4
0003aa  f7fffffe          BL       WIDGET__Init
;;;315        /* init member variables */
;;;316        SLIDER_INIT_ID(pObj);
;;;317        pObj->Props = SLIDER__DefaultProps;
0003ae  4841              LDR      r0,|L1.1204|
0003b0  6842              LDR      r2,[r0,#4]  ; SLIDER__DefaultProps
0003b2  6801              LDR      r1,[r0,#0]  ; SLIDER__DefaultProps
0003b4  6880              LDR      r0,[r0,#8]  ; SLIDER__DefaultProps
0003b6  62e2              STR      r2,[r4,#0x2c]
0003b8  62a1              STR      r1,[r4,#0x28]
0003ba  6320              STR      r0,[r4,#0x30]
;;;318        pObj->Width       = 8;
0003bc  2008              MOVS     r0,#8
0003be  f8a40048          STRH     r0,[r4,#0x48]
;;;319        pObj->Max         = 100;
0003c2  2064              MOVS     r0,#0x64
0003c4  63a0              STR      r0,[r4,#0x38]
;;;320        pObj->Min         = 0;
0003c6  2000              MOVS     r0,#0
0003c8  6360              STR      r0,[r4,#0x34]
;;;321        pObj->NumTicks    = -1;
0003ca  1e40              SUBS     r0,r0,#1
0003cc  6460              STR      r0,[r4,#0x44]
                  |L1.974|
;;;322      } else {
;;;323        GUI_DEBUG_ERROROUT_IF(hObj==0, "SLIDER_Create failed")
;;;324      }
;;;325      WM_UNLOCK();
0003ce  f7fffffe          BL       GUI_Unlock
;;;326      return hObj;
;;;327    }
0003d2  b005              ADD      sp,sp,#0x14
0003d4  4628              MOV      r0,r5                 ;326
0003d6  e8bd8ff0          POP      {r4-r11,pc}
;;;328    
                          ENDP

                  SLIDER_SetWidth PROC
;;;374    */
;;;375    void SLIDER_SetWidth(SLIDER_Handle hObj, int Width) {
0003da  b570              PUSH     {r4-r6,lr}
0003dc  4605              MOV      r5,r0
0003de  460c              MOV      r4,r1
;;;376      SLIDER_Obj* pObj;
;;;377      if (hObj) {
0003e0  2d00              CMP      r5,#0
0003e2  d011              BEQ      |L1.1032|
;;;378        WM_LOCK();
0003e4  f7fffffe          BL       GUI_Lock
;;;379        pObj = SLIDER_H2P(hObj);
0003e8  4628              MOV      r0,r5
0003ea  f7fffffe          BL       GUI_ALLOC_h2p
;;;380        if (pObj->Width != Width) {
0003ee  f9b01048          LDRSH    r1,[r0,#0x48]
0003f2  42a1              CMP      r1,r4
0003f4  d004              BEQ      |L1.1024|
;;;381          pObj->Width = Width;
0003f6  f8a04048          STRH     r4,[r0,#0x48]
;;;382          WM_InvalidateWindow(hObj);
0003fa  4628              MOV      r0,r5
0003fc  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1024|
;;;383        }
;;;384        WM_UNLOCK();
000400  e8bd4070          POP      {r4-r6,lr}
000404  f7ffbffe          B.W      GUI_Unlock
                  |L1.1032|
;;;385      }
;;;386    }
000408  bd70              POP      {r4-r6,pc}
;;;387    
                          ENDP

                  SLIDER_SetRange PROC
;;;416    */
;;;417    void SLIDER_SetRange(SLIDER_Handle hObj, int Min, int Max) {
00040a  b570              PUSH     {r4-r6,lr}
00040c  4606              MOV      r6,r0
00040e  460c              MOV      r4,r1
000410  4615              MOV      r5,r2
;;;418      if (hObj) {
000412  2e00              CMP      r6,#0
000414  d018              BEQ      |L1.1096|
;;;419        SLIDER_Obj* pObj;
;;;420        WM_LOCK();
000416  f7fffffe          BL       GUI_Lock
;;;421        pObj = SLIDER_H2P(hObj);
00041a  4630              MOV      r0,r6
00041c  f7fffffe          BL       GUI_ALLOC_h2p
;;;422        if (Max < Min) {
000420  42a5              CMP      r5,r4
000422  da00              BGE      |L1.1062|
;;;423          Max = Min;
000424  4625              MOV      r5,r4
                  |L1.1062|
;;;424        }
;;;425        pObj->Min = Min;
000426  6344              STR      r4,[r0,#0x34]
;;;426        pObj->Max = Max;
000428  6385              STR      r5,[r0,#0x38]
;;;427        if (pObj->v < Min) {
00042a  6bc1              LDR      r1,[r0,#0x3c]
00042c  42a1              CMP      r1,r4
00042e  da00              BGE      |L1.1074|
;;;428          pObj->v = Min;
000430  63c4              STR      r4,[r0,#0x3c]
                  |L1.1074|
;;;429        }
;;;430        if (pObj->v > Max) {
000432  6bc1              LDR      r1,[r0,#0x3c]
000434  42a9              CMP      r1,r5
000436  dd00              BLE      |L1.1082|
;;;431          pObj->v = Max;
000438  63c5              STR      r5,[r0,#0x3c]
                  |L1.1082|
;;;432        }
;;;433        WM_InvalidateWindow(hObj);
00043a  4630              MOV      r0,r6
00043c  f7fffffe          BL       WM_InvalidateWindow
;;;434        WM_UNLOCK();
000440  e8bd4070          POP      {r4-r6,lr}
000444  f7ffbffe          B.W      GUI_Unlock
                  |L1.1096|
;;;435      }
;;;436    }
000448  bd70              POP      {r4-r6,pc}
;;;437    
                          ENDP

                  SLIDER_SetNumTicks PROC
;;;441    */
;;;442    void SLIDER_SetNumTicks(SLIDER_Handle hObj, int NumTicks) {
00044a  b570              PUSH     {r4-r6,lr}
00044c  4605              MOV      r5,r0
00044e  460c              MOV      r4,r1
;;;443      if (hObj && (NumTicks >= 0)) {
000450  2d00              CMP      r5,#0
000452  d00e              BEQ      |L1.1138|
000454  2c00              CMP      r4,#0
000456  db0c              BLT      |L1.1138|
;;;444        SLIDER_Obj* pObj;
;;;445        WM_LOCK();
000458  f7fffffe          BL       GUI_Lock
;;;446        pObj = SLIDER_H2P(hObj);
00045c  4628              MOV      r0,r5
00045e  f7fffffe          BL       GUI_ALLOC_h2p
;;;447        pObj->NumTicks = NumTicks;
000462  6444              STR      r4,[r0,#0x44]
;;;448        WM_InvalidateWindow(hObj);
000464  4628              MOV      r0,r5
000466  f7fffffe          BL       WM_InvalidateWindow
;;;449        WM_UNLOCK();
00046a  e8bd4070          POP      {r4-r6,lr}
00046e  f7ffbffe          B.W      GUI_Unlock
                  |L1.1138|
;;;450      }
;;;451    }
000472  bd70              POP      {r4-r6,pc}
;;;452    
                          ENDP

                  SLIDER_SetBkColor PROC
;;;456    */
;;;457    void SLIDER_SetBkColor(SLIDER_Handle hObj, GUI_COLOR Color) {
000474  b570              PUSH     {r4-r6,lr}
000476  4605              MOV      r5,r0
000478  460c              MOV      r4,r1
;;;458      if (hObj) {
00047a  2d00              CMP      r5,#0
00047c  d016              BEQ      |L1.1196|
;;;459        SLIDER_Obj * pObj;
;;;460        WM_LOCK();
00047e  f7fffffe          BL       GUI_Lock
;;;461        pObj = SLIDER_H2P(hObj);
000482  4628              MOV      r0,r5
000484  f7fffffe          BL       GUI_ALLOC_h2p
;;;462        pObj->Props.BkColor = Color;
000488  6284              STR      r4,[r0,#0x28]
;;;463        #if SLIDER_SUPPORT_TRANSPARENCY
;;;464          if (Color <= 0xFFFFFF) {
00048a  f1b47f80          CMP      r4,#0x1000000
00048e  d203              BCS      |L1.1176|
;;;465            WM_ClrHasTrans(hObj);
000490  4628              MOV      r0,r5
000492  f7fffffe          BL       WM_ClrHasTrans
000496  e002              B        |L1.1182|
                  |L1.1176|
;;;466          } else {
;;;467            WM_SetHasTrans(hObj);
000498  4628              MOV      r0,r5
00049a  f7fffffe          BL       WM_SetHasTrans
                  |L1.1182|
;;;468          }
;;;469        #endif
;;;470        WM_InvalidateWindow(hObj);
00049e  4628              MOV      r0,r5
0004a0  f7fffffe          BL       WM_InvalidateWindow
;;;471        WM_UNLOCK();
0004a4  e8bd4070          POP      {r4-r6,lr}
0004a8  f7ffbffe          B.W      GUI_Unlock
                  |L1.1196|
;;;472      }
;;;473    }
0004ac  bd70              POP      {r4-r6,pc}
0004ae  0000              DCW      0x0000
                  |L1.1200|
                          DCD      0x66666667
                  |L1.1204|
                          DCD      ||.data||
                          ENDP

                  SLIDER_SetDefaultBkColor PROC
;;;478    */
;;;479    void SLIDER_SetDefaultBkColor(GUI_COLOR Color) {
0004b8  4908              LDR      r1,|L1.1244|
;;;480      SLIDER__DefaultProps.BkColor = Color;
0004ba  6008              STR      r0,[r1,#0]  ; SLIDER__DefaultProps
;;;481    }
0004bc  4770              BX       lr
;;;482    
                          ENDP

                  SLIDER_GetValue PROC
;;;492    */
;;;493    int SLIDER_GetValue(SLIDER_Handle hObj) {
0004be  b570              PUSH     {r4-r6,lr}
0004c0  4605              MOV      r5,r0
;;;494      int r = 0;
0004c2  2400              MOVS     r4,#0
;;;495      SLIDER_Obj* pObj;
;;;496      if (hObj) {
0004c4  b13d              CBZ      r5,|L1.1238|
;;;497        WM_LOCK();
0004c6  f7fffffe          BL       GUI_Lock
;;;498        pObj = SLIDER_H2P(hObj);
0004ca  4628              MOV      r0,r5
0004cc  f7fffffe          BL       GUI_ALLOC_h2p
;;;499        r = pObj->v;
0004d0  6bc4              LDR      r4,[r0,#0x3c]
;;;500        WM_UNLOCK();
0004d2  f7fffffe          BL       GUI_Unlock
                  |L1.1238|
;;;501      }
;;;502      return r;
0004d6  4620              MOV      r0,r4
;;;503    }
0004d8  bd70              POP      {r4-r6,pc}
;;;504    
                          ENDP

0004da  0000              DCW      0x0000
                  |L1.1244|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  SLIDER__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00c0c0c0
                          DCD      0x00000000
