; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\lcdp556.o --depend=.\rvmdk\lcdp556.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\lcdp556.crf ..\..\..\..\..\uCGUI\GUI\ConvertColor\LCDP556.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_Color2Index_556 PROC
;;;48     */
;;;49     unsigned LCD_Color2Index_556(LCD_COLOR Color) {
000000  f3c00185          UBFX     r1,r0,#2,#6
;;;50       int r,g,b;
;;;51       r = (Color>> (8  - R_BITS)) & R_MASK;
;;;52       g = (Color>> (16 - G_BITS)) & G_MASK;
000004  f3c022c4          UBFX     r2,r0,#11,#5
;;;53       b = (Color>> (24 - B_BITS)) & B_MASK;
000008  f3c040c4          UBFX     r0,r0,#19,#5
;;;54       return r + (g << R_BITS) + (b << (G_BITS + R_BITS));
00000c  eb011182          ADD      r1,r1,r2,LSL #6
000010  eb0120c0          ADD      r0,r1,r0,LSL #11
;;;55     }
000014  4770              BX       lr
;;;56     
                          ENDP

                  LCD_Index2Color_556 PROC
;;;60     */
;;;61     LCD_COLOR LCD_Index2Color_556(int Index) {
000016  b410              PUSH     {r4}
;;;62       unsigned int r,g,b;
;;;63       /* Seperate the color masks */
;;;64       r = Index                                  & R_MASK;
000018  f000013f          AND      r1,r0,#0x3f
;;;65       g = (Index >> R_BITS)                      & G_MASK;
00001c  f3c01284          UBFX     r2,r0,#6,#5
;;;66       b = ((unsigned)Index >> (R_BITS + G_BITS)) & B_MASK;
000020  f3c020c4          UBFX     r0,r0,#11,#5
;;;67       /* Convert the color masks */
;;;68       r = r * 255 / R_MASK;
000024  4c0f              LDR      r4,|L1.100|
000026  ebc12c01          RSB      r12,r1,r1,LSL #8
00002a  4623              MOV      r3,r4
00002c  2100              MOVS     r1,#0
00002e  fbec3104          UMLAL    r3,r1,r12,r4
000032  090b              LSRS     r3,r1,#4
;;;69       g = g * 255 / G_MASK;
000034  ebc22402          RSB      r4,r2,r2,LSL #8
000038  4a0b              LDR      r2,|L1.104|
00003a  2100              MOVS     r1,#0
00003c  4694              MOV      r12,r2
00003e  fbe4c102          UMLAL    r12,r1,r4,r2
000042  08c9              LSRS     r1,r1,#3
;;;70       b = b * 255 / B_MASK;
000044  ebc02400          RSB      r4,r0,r0,LSL #8
000048  4694              MOV      r12,r2
00004a  2000              MOVS     r0,#0
00004c  fbe4c002          UMLAL    r12,r0,r4,r2
000050  08c0              LSRS     r0,r0,#3
;;;71       return r + (g<<8) + (((U32)b)<<16);
000052  eb032101          ADD      r1,r3,r1,LSL #8
;;;72     }
000056  bc10              POP      {r4}
000058  eb014000          ADD      r0,r1,r0,LSL #16      ;71
00005c  4770              BX       lr
;;;73     
                          ENDP

                  LCD_GetIndexMask_556 PROC
;;;77     */
;;;78     unsigned LCD_GetIndexMask_556(void) {
00005e  f64f70ff          MOV      r0,#0xffff
;;;79       return 0xffff;
;;;80     }
000062  4770              BX       lr
;;;81     
                          ENDP

                  |L1.100|
                          DCD      0x41041041
                  |L1.104|
                          DCD      0x42108421
