; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_onkey.o --depend=.\rvmdk\gui_onkey.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_onkey.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_OnKey.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_GetKey PROC
;;;63     */
;;;64     int GUI_GetKey(void) {
000000  4921              LDR      r1,|L1.136|
;;;65       int r = _Key;
000002  6848              LDR      r0,[r1,#4]  ; _Key
;;;66       _Key = 0;
000004  2200              MOVS     r2,#0
000006  604a              STR      r2,[r1,#4]  ; _Key
;;;67       return r;
;;;68     }
000008  4770              BX       lr
;;;69     
                          ENDP

                  GUI_StoreKey PROC
;;;73     */
;;;74     void GUI_StoreKey(int Key) {
00000a  491f              LDR      r1,|L1.136|
;;;75       if (!_Key) {
00000c  684a              LDR      r2,[r1,#4]  ; _Key
00000e  2a00              CMP      r2,#0
000010  d100              BNE      |L1.20|
;;;76         _Key = Key;
000012  6048              STR      r0,[r1,#4]  ; _Key
                  |L1.20|
;;;77       }
;;;78       GUI_X_SIGNAL_EVENT();
;;;79     }
000014  4770              BX       lr
;;;80     
                          ENDP

                  GUI_ClearKeyBuffer PROC
;;;84     */
;;;85     void GUI_ClearKeyBuffer(void) {
000016  b500              PUSH     {lr}
                  |L1.24|
;;;86       while (GUI_GetKey());
000018  f7fffffe          BL       GUI_GetKey
00001c  2800              CMP      r0,#0
00001e  d1fb              BNE      |L1.24|
;;;87     }
000020  bd00              POP      {pc}
;;;88     
                          ENDP

                  GUI_StoreKeyMsg PROC
;;;92     */
;;;93     void GUI_StoreKeyMsg(int Key, int PressedCnt) {
000022  4a1a              LDR      r2,|L1.140|
;;;94       #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;95       _KeyMsg.Key = Key;
000024  6010              STR      r0,[r2,#0]  ; _KeyMsg
;;;96       _KeyMsg.PressedCnt = PressedCnt;
000026  6051              STR      r1,[r2,#4]  ; _KeyMsg
;;;97       _KeyMsgCnt = 1;
000028  f1a20108          SUB      r1,r2,#8
00002c  2001              MOVS     r0,#1
00002e  6008              STR      r0,[r1,#0]  ; _KeyMsgCnt
;;;98       #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;99         if (!WM_IsActive) {
;;;100          /* If the WM is deactivated, key messages are not polled by the WM.
;;;101             So call the macro in this case here.
;;;102          */
;;;103          GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;104        }
;;;105      #endif
;;;106      GUI_X_SIGNAL_EVENT();
;;;107      #else
;;;108        GUI_USE_PARA(PressedCnt);
;;;109        GUI_StoreKey(Key);
;;;110        #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;111          GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;112        #endif
;;;113      #endif
;;;114    }
000030  4770              BX       lr
;;;115    
                          ENDP

                  GUI_PollKeyMsg PROC
;;;120    #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;121    int GUI_PollKeyMsg(void) {
000032  b570              PUSH     {r4-r6,lr}
;;;122      int r = 0;
000034  2400              MOVS     r4,#0
;;;123      GUI_LOCK();
000036  f7fffffe          BL       GUI_Lock
;;;124      if (_KeyMsgCnt) {
00003a  4813              LDR      r0,|L1.136|
00003c  6801              LDR      r1,[r0,#0]  ; _KeyMsgCnt
00003e  b179              CBZ      r1,|L1.96|
;;;125        int Key;
;;;126        _KeyMsgCnt--;
000040  1e49              SUBS     r1,r1,#1
000042  6001              STR      r1,[r0,#0]  ; _KeyMsgCnt
;;;127        Key = _KeyMsg.Key;
000044  f1000408          ADD      r4,r0,#8
000048  6825              LDR      r5,[r4,#0]  ; _KeyMsg
;;;128        if (!WM_OnKey(Key, _KeyMsg.PressedCnt)) {
00004a  6861              LDR      r1,[r4,#4]  ; _KeyMsg
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       WM_OnKey
;;;129          #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;130            GUI_X_ON_UNPROCESSED_KEY(Key, _KeyMsg.PressedCnt);
;;;131          #endif
;;;132        }
;;;133        if (_KeyMsg.PressedCnt == 1) {
000052  6861              LDR      r1,[r4,#4]  ; _KeyMsg
000054  2901              CMP      r1,#1
000056  d102              BNE      |L1.94|
;;;134          GUI_StoreKey(Key);
000058  4628              MOV      r0,r5
00005a  f7fffffe          BL       GUI_StoreKey
                  |L1.94|
;;;135        }
;;;136        r = 1;              /* We have done something */
00005e  2401              MOVS     r4,#1
                  |L1.96|
;;;137      }
;;;138      GUI_UNLOCK();
000060  f7fffffe          BL       GUI_Unlock
;;;139      return r;
000064  4620              MOV      r0,r4
;;;140    }
000066  bd70              POP      {r4-r6,pc}
;;;141    #endif
                          ENDP

                  GUI_SendKeyMsg PROC
;;;151    */
;;;152    void GUI_SendKeyMsg(int Key, int PressedCnt) {
000068  b570              PUSH     {r4-r6,lr}
00006a  4604              MOV      r4,r0
00006c  460d              MOV      r5,r1
;;;153      #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
;;;154        if (!WM_OnKey(Key, PressedCnt)) {
00006e  4629              MOV      r1,r5
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       WM_OnKey
000076  2800              CMP      r0,#0
000078  d104              BNE      |L1.132|
;;;155          #ifdef GUI_X_ON_UNPROCESSED_KEY
;;;156            GUI_X_ON_UNPROCESSED_KEY(Key, PressedCnt);
;;;157          #endif
;;;158          GUI_StoreKeyMsg(Key, PressedCnt);
00007a  4629              MOV      r1,r5
00007c  4620              MOV      r0,r4
00007e  e8bd4070          POP      {r4-r6,lr}
000082  e7fe              B        GUI_StoreKeyMsg
                  |L1.132|
;;;159        }
;;;160      #else
;;;161        GUI_StoreKeyMsg(Key, PressedCnt);
;;;162      #endif
;;;163    }
000084  bd70              POP      {r4-r6,pc}
;;;164    
                          ENDP

000086  0000              DCW      0x0000
                  |L1.136|
                          DCD      ||.data||
                  |L1.140|
                          DCD      ||.data||+0x8

                          AREA ||.data||, DATA, ALIGN=2

                  _KeyMsgCnt
                          DCD      0x00000000
                  _Key
                          DCD      0x00000000
                  _KeyMsg
                          %        8

                          AREA ||area_number.5||, DATA, ALIGN=2

                          EXPORTAS ||area_number.5||, ||.data||
                  GUI_pfKeyMsgHook
                          DCD      0x00000000
