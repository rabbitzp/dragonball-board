; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guival.o --depend=.\rvmdk\guival.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guival.crf ..\..\..\..\..\uCGUI\GUI\Core\GUIVal.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_DispDecShift PROC
;;;33     */
;;;34     void GUI_DispDecShift(I32 v, U8 Len, U8 Shift) {
000000  b500              PUSH     {lr}
000002  b085              SUB      sp,sp,#0x14
;;;35     	char ac[12];
;;;36     	char* s = ac;
000004  ab02              ADD      r3,sp,#8
000006  9301              STR      r3,[sp,#4]
;;;37       GUI_AddDecShift(v, Len, Shift, &s);
000008  ab01              ADD      r3,sp,#4
00000a  f7fffffe          BL       GUI_AddDecShift
;;;38       GUI_DispString(ac);
00000e  a802              ADD      r0,sp,#8
000010  f7fffffe          BL       GUI_DispString
;;;39     }
000014  b005              ADD      sp,sp,#0x14
000016  bd00              POP      {pc}
;;;40     
                          ENDP

                  GUI_DispSDecShift PROC
;;;44     */
;;;45     void GUI_DispSDecShift(I32 v, U8 Len, U8 Shift) {
000018  b530              PUSH     {r4,r5,lr}
00001a  b085              SUB      sp,sp,#0x14
00001c  460c              MOV      r4,r1
00001e  4615              MOV      r5,r2
;;;46     	char ac[12];
;;;47     	char* s = ac;
000020  ab02              ADD      r3,sp,#8
000022  9301              STR      r3,[sp,#4]
;;;48       v = GUI_AddSign(v, &s);
000024  a901              ADD      r1,sp,#4
000026  f7fffffe          BL       GUI_AddSign
;;;49       GUI_AddDecShift(v, --Len, Shift, &s);
00002a  1e61              SUBS     r1,r4,#1
00002c  b2c9              UXTB     r1,r1
00002e  ab01              ADD      r3,sp,#4
000030  462a              MOV      r2,r5
000032  f7fffffe          BL       GUI_AddDecShift
;;;50       GUI_DispString(ac);
000036  a802              ADD      r0,sp,#8
000038  f7fffffe          BL       GUI_DispString
;;;51     }
00003c  b005              ADD      sp,sp,#0x14
00003e  bd30              POP      {r4,r5,pc}
;;;52     
                          ENDP

                  GUI_DispDecMin PROC
;;;56     */
;;;57     void GUI_DispDecMin(I32 v) {
000040  b500              PUSH     {lr}
000042  b085              SUB      sp,sp,#0x14
;;;58     	char ac[12];
;;;59     	char* s = ac;
000044  a902              ADD      r1,sp,#8
000046  9101              STR      r1,[sp,#4]
;;;60       GUI_AddDecMin(v, &s);
000048  a901              ADD      r1,sp,#4
00004a  f7fffffe          BL       GUI_AddDecMin
;;;61       GUI_DispString(ac);
00004e  a802              ADD      r0,sp,#8
000050  f7fffffe          BL       GUI_DispString
;;;62     }
000054  b005              ADD      sp,sp,#0x14
000056  bd00              POP      {pc}
;;;63     
                          ENDP

                  GUI_DispDecSpace PROC
;;;67     */
;;;68     void GUI_DispDecSpace(I32 v, U8 MaxDigits) {
000058  b530              PUSH     {r4,r5,lr}
00005a  b085              SUB      sp,sp,#0x14
00005c  4605              MOV      r5,r0
00005e  460c              MOV      r4,r1
;;;69     	char ac[12];
;;;70     	char* s = ac;
000060  a802              ADD      r0,sp,#8
000062  9001              STR      r0,[sp,#4]
;;;71       U8 Len;
;;;72       if (v < 0) {
000064  2d00              CMP      r5,#0
000066  da06              BGE      |L1.118|
;;;73         v = GUI_AddSign(v, &s);
000068  a901              ADD      r1,sp,#4
00006a  4628              MOV      r0,r5
00006c  f7fffffe          BL       GUI_AddSign
000070  4605              MOV      r5,r0
;;;74         MaxDigits--;
000072  1e60              SUBS     r0,r4,#1
000074  b2c4              UXTB     r4,r0
                  |L1.118|
;;;75       }
;;;76       Len = GUI_Long2Len(v);
000076  4628              MOV      r0,r5
000078  f7fffffe          BL       GUI_Long2Len
00007c  b2c0              UXTB     r0,r0
;;;77       while (Len++ < MaxDigits) {
00007e  1c41              ADDS     r1,r0,#1
000080  b2ca              UXTB     r2,r1
000082  42a0              CMP      r0,r4
000084  d209              BCS      |L1.154|
;;;78         *s++ = ' ';
000086  2120              MOVS     r1,#0x20
                  |L1.136|
000088  9b01              LDR      r3,[sp,#4]
00008a  1c58              ADDS     r0,r3,#1
00008c  7019              STRB     r1,[r3,#0]
00008e  9001              STR      r0,[sp,#4]
000090  4610              MOV      r0,r2                 ;77
000092  1c52              ADDS     r2,r2,#1              ;77
000094  b2d2              UXTB     r2,r2                 ;77
000096  42a0              CMP      r0,r4                 ;77
000098  d3f6              BCC      |L1.136|
                  |L1.154|
;;;79       }
;;;80       GUI_AddDecMin(v, &s);
00009a  a901              ADD      r1,sp,#4
00009c  4628              MOV      r0,r5
00009e  f7fffffe          BL       GUI_AddDecMin
;;;81       GUI_DispString(ac);
0000a2  a802              ADD      r0,sp,#8
0000a4  f7fffffe          BL       GUI_DispString
;;;82     }
0000a8  b005              ADD      sp,sp,#0x14
0000aa  bd30              POP      {r4,r5,pc}
;;;83     
                          ENDP

                  GUI_DispSDec PROC
;;;87     */
;;;88     void GUI_DispSDec(I32 v, U8 Len) {
0000ac  2200              MOVS     r2,#0
;;;89       GUI_DispSDecShift(v,Len,0);
0000ae  e7fe              B        GUI_DispSDecShift
;;;90     }
;;;91     
                          ENDP

                  GUI_DispDec PROC
;;;95     */
;;;96     void GUI_DispDec(I32 v, U8 Len) {
0000b0  2200              MOVS     r2,#0
;;;97       GUI_DispDecShift(v, Len,0);
0000b2  e7fe              B        GUI_DispDecShift
;;;98     }
;;;99     
                          ENDP

                  GUI_DispDecAt PROC
;;;103    */
;;;104    void GUI_DispDecAt(I32 v, I16P x, I16P y, U8 Len) {
0000b4  b530              PUSH     {r4,r5,lr}
0000b6  460c              MOV      r4,r1
0000b8  b085              SUB      sp,sp,#0x14
0000ba  4615              MOV      r5,r2
0000bc  4619              MOV      r1,r3
;;;105    	char ac[12];
;;;106    	char* s = ac;
0000be  f10d0c08          ADD      r12,sp,#8
0000c2  f8cdc004          STR      r12,[sp,#4]
;;;107      GUI_AddDecShift(v, Len, 0, &s);
0000c6  ab01              ADD      r3,sp,#4
0000c8  2200              MOVS     r2,#0
0000ca  f7fffffe          BL       GUI_AddDecShift
;;;108      GUI_DispStringAt(ac, x, y);
0000ce  462a              MOV      r2,r5
0000d0  4621              MOV      r1,r4
0000d2  a802              ADD      r0,sp,#8
0000d4  f7fffffe          BL       GUI_DispStringAt
;;;109    }
0000d8  b005              ADD      sp,sp,#0x14
0000da  bd30              POP      {r4,r5,pc}
;;;110    
                          ENDP

