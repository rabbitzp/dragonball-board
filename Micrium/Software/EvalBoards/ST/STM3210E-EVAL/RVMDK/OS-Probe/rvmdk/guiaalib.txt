; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guiaalib.o --depend=.\rvmdk\guiaalib.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guiaalib.crf ..\..\..\..\..\uCGUI\GUI\AntiAlias\GUIAALib.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _CleanLine PROC
;;;63     */
;;;64     static void _CleanLine(void) {
000000  b510              PUSH     {r4,lr}
;;;65       GUI_MEMSET(pabAABuffer,0, _x1 - _x0+1);
000002  4c9b              LDR      r4,|L1.624|
000004  6861              LDR      r1,[r4,#4]  ; _x0
000006  68a0              LDR      r0,[r4,#8]  ; _x1
000008  1a40              SUBS     r0,r0,r1
00000a  1c42              ADDS     r2,r0,#1
00000c  2100              MOVS     r1,#0
00000e  6820              LDR      r0,[r4,#0]  ; pabAABuffer
000010  f7fffffe          BL       GUI__memset
;;;66       _y = -16383;  /* Invalidate */  
000014  4897              LDR      r0,|L1.628|
000016  60e0              STR      r0,[r4,#0xc]  ; _y
;;;67       _x0_InUse =  16383;
000018  0c81              LSRS     r1,r0,#18
00001a  6121              STR      r1,[r4,#0x10]  ; _x0_InUse
;;;68       _x1_InUse = -16383;
00001c  6160              STR      r0,[r4,#0x14]  ; _x1_InUse
;;;69     }
00001e  bd10              POP      {r4,pc}
;;;70     
                          ENDP

                  _FlushLine PROC
;;;74     */
;;;75     static void _FlushLine(void) {
000020  e92d47f0          PUSH     {r4-r10,lr}
;;;76       int i;
;;;77       int iEnd = _x1_InUse-_x0;
000024  f8df9248          LDR      r9,|L1.624|
000028  f8d91014          LDR      r1,[r9,#0x14]  ; _x1_InUse
00002c  f8d90004          LDR      r0,[r9,#4]  ; _x0
000030  1a0f              SUBS     r7,r1,r0
;;;78       int IMax = GUI_Context.AA_Factor * GUI_Context.AA_Factor;
000032  f8dfa244          LDR      r10,|L1.632|
000036  f89a1060          LDRB     r1,[r10,#0x60]  ; GUI_Context
00003a  fb01f601          MUL      r6,r1,r1
;;;79       for (i =_x0_InUse-_x0; i<=iEnd; i++) {
00003e  f8d91010          LDR      r1,[r9,#0x10]  ; _x0_InUse
000042  1a0d              SUBS     r5,r1,r0
000044  42bd              CMP      r5,r7
000046  dc3b              BGT      |L1.192|
;;;80         int Intens = *(pabAABuffer+i);
;;;81         if (Intens) {
;;;82           /* Check we can use line draw */
;;;83           if (Intens == IMax) {
;;;84             int j;
;;;85             for (j=i; j<iEnd; ) {
;;;86               if (*(pabAABuffer+j+1) != IMax) {
;;;87                 break;
;;;88               }
;;;89               j++;
;;;90             }
;;;91             /* Draw the full pixel(s) */
;;;92             if (j!=i) {
;;;93               pLCD_HLPrev->pfDrawHLine(_x0+i, _y, _x0+j);
;;;94               i = j;  /*xxx*/
;;;95             } else {
;;;96               LCD_HL_DrawPixel (_x0+i,_y);
;;;97             }
;;;98           } else {
;;;99             LCD_SetPixelAA(_x0+i,_y, (15*Intens+IMax/2)/IMax);
000048  eb0670d6          ADD      r0,r6,r6,LSR #31
00004c  ea4f0860          ASR      r8,r0,#1
                  |L1.80|
000050  f8d91000          LDR      r1,[r9,#0]            ;80  ; pabAABuffer
000054  5d48              LDRB     r0,[r1,r5]            ;80
000056  b310              CBZ      r0,|L1.158|
000058  42b0              CMP      r0,r6                 ;83
00005a  d121              BNE      |L1.160|
00005c  462c              MOV      r4,r5                 ;85
00005e  42bc              CMP      r4,r7                 ;85
000060  da06              BGE      |L1.112|
                  |L1.98|
000062  1908              ADDS     r0,r1,r4              ;86
000064  7840              LDRB     r0,[r0,#1]            ;86
000066  42b0              CMP      r0,r6                 ;86
000068  d102              BNE      |L1.112|
00006a  1c64              ADDS     r4,r4,#1              ;89
00006c  42bc              CMP      r4,r7                 ;85
00006e  dbf8              BLT      |L1.98|
                  |L1.112|
000070  42ac              CMP      r4,r5                 ;92
000072  d00b              BEQ      |L1.140|
000074  f8d91018          LDR      r1,[r9,#0x18]         ;93  ; pLCD_HLPrev
000078  f8d90004          LDR      r0,[r9,#4]            ;93  ; _x0
00007c  1902              ADDS     r2,r0,r4              ;93
00007e  680b              LDR      r3,[r1,#0]            ;93
000080  4428              ADD      r0,r0,r5              ;93
000082  f8d9100c          LDR      r1,[r9,#0xc]          ;93  ; _y
000086  4798              BLX      r3                    ;93
000088  4625              MOV      r5,r4                 ;94
00008a  e016              B        |L1.186|
                  |L1.140|
00008c  f8da105c          LDR      r1,[r10,#0x5c]        ;96  ; GUI_Context
000090  f8d90004          LDR      r0,[r9,#4]            ;96  ; _x0
000094  684a              LDR      r2,[r1,#4]            ;96
000096  4428              ADD      r0,r0,r5              ;96
000098  f8d9100c          LDR      r1,[r9,#0xc]          ;96  ; _y
00009c  4790              BLX      r2                    ;96
                  |L1.158|
00009e  e00c              B        |L1.186|
                  |L1.160|
0000a0  ebc01000          RSB      r0,r0,r0,LSL #4
0000a4  4440              ADD      r0,r0,r8
0000a6  fb90f0f6          SDIV     r0,r0,r6
0000aa  b2c2              UXTB     r2,r0
0000ac  f8d90004          LDR      r0,[r9,#4]  ; _x0
0000b0  f8d9100c          LDR      r1,[r9,#0xc]  ; _y
0000b4  4428              ADD      r0,r0,r5
0000b6  f7fffffe          BL       LCD_SetPixelAA
                  |L1.186|
0000ba  1c6d              ADDS     r5,r5,#1              ;79
0000bc  42bd              CMP      r5,r7                 ;79
0000be  ddc7              BLE      |L1.80|
                  |L1.192|
;;;100          }
;;;101        }    
;;;102      }
;;;103      _CleanLine();
0000c0  e8bd47f0          POP      {r4-r10,lr}
0000c4  e7fe              B        _CleanLine
;;;104    }
;;;105    
                          ENDP

                  _DrawHLine PROC
;;;114    */
;;;115    static void _DrawHLine  (int x0, int y,  int x1) {
0000c6  e92d41f0          PUSH     {r4-r8,lr}
0000ca  4605              MOV      r5,r0
0000cc  4688              MOV      r8,r1
0000ce  4614              MOV      r4,r2
;;;116      int x0Real, x1Real;
;;;117    /* Make sure there is something to do */
;;;118      if (x1<x0)
0000d0  42ac              CMP      r4,r5
0000d2  db58              BLT      |L1.390|
;;;119        return;
;;;120    /* Flush line if we are in an other pixel (real) line */
;;;121      if (y/GUI_Context.AA_Factor != _y) {
0000d4  4e68              LDR      r6,|L1.632|
0000d6  4f66              LDR      r7,|L1.624|
0000d8  f8960060          LDRB     r0,[r6,#0x60]  ; GUI_Context
0000dc  68f9              LDR      r1,[r7,#0xc]  ; _y
0000de  fb98f0f0          SDIV     r0,r8,r0
0000e2  4288              CMP      r0,r1
0000e4  d006              BEQ      |L1.244|
;;;122        _FlushLine();
0000e6  f7fffffe          BL       _FlushLine
;;;123        _y = y/GUI_Context.AA_Factor;
0000ea  f8960060          LDRB     r0,[r6,#0x60]  ; GUI_Context
0000ee  fb98f0f0          SDIV     r0,r8,r0
0000f2  60f8              STR      r0,[r7,#0xc]  ; _y
                  |L1.244|
;;;124      }
;;;125      x0Real = x0/GUI_Context.AA_Factor;
0000f4  f8960060          LDRB     r0,[r6,#0x60]  ; GUI_Context
0000f8  fb95f3f0          SDIV     r3,r5,r0
;;;126      x1Real = x1/GUI_Context.AA_Factor;
0000fc  fb94f2f0          SDIV     r2,r4,r0
;;;127    /* Handle used area (speed optimization for drawing) */
;;;128      if (x0Real < _x0_InUse)
000100  6939              LDR      r1,[r7,#0x10]  ; _x0_InUse
000102  428b              CMP      r3,r1
000104  da00              BGE      |L1.264|
;;;129        _x0_InUse = x0Real;
000106  613b              STR      r3,[r7,#0x10]  ; _x0_InUse
                  |L1.264|
;;;130      if (x1Real > _x1_InUse)
000108  6979              LDR      r1,[r7,#0x14]  ; _x1_InUse
00010a  428a              CMP      r2,r1
00010c  dd00              BLE      |L1.272|
;;;131        _x1_InUse = x1Real;
00010e  617a              STR      r2,[r7,#0x14]  ; _x1_InUse
                  |L1.272|
;;;132    /* Clip (should not be necessary ... Just to be on the safe side ! */
;;;133      if (x0Real < _x0) {
000110  6879              LDR      r1,[r7,#4]  ; _x0
000112  428b              CMP      r3,r1
000114  da01              BGE      |L1.282|
;;;134        x0 = _x0 * GUI_Context.AA_Factor;
000116  fb00f501          MUL      r5,r0,r1
                  |L1.282|
;;;135      }
;;;136      if (x1Real > _x1) {
00011a  68bb              LDR      r3,[r7,#8]  ; _x1
00011c  429a              CMP      r2,r3
00011e  dd02              BLE      |L1.294|
;;;137        x1 = (_x1+1)*GUI_Context.AA_Factor-1;
000120  1c5a              ADDS     r2,r3,#1
000122  4342              MULS     r2,r0,r2
000124  1e54              SUBS     r4,r2,#1
                  |L1.294|
;;;138      }
;;;139    /* Make sure there is still something to do (after clipping) */
;;;140      if (x1<x0)
000126  42ac              CMP      r4,r5
000128  db2d              BLT      |L1.390|
;;;141        return;
;;;142    /* Inc. hit counters in buffer */
;;;143      {
;;;144        int x0_Off = x0/GUI_Context.AA_Factor-_x0;
00012a  fb95f2f0          SDIV     r2,r5,r0
00012e  1a53              SUBS     r3,r2,r1
;;;145        int x1_Off = x1/GUI_Context.AA_Factor-_x0;
000130  fb94f2f0          SDIV     r2,r4,r0
000134  eba20c01          SUB      r12,r2,r1
;;;146        int iRem = x1_Off-x0_Off+1;
000138  ebac0203          SUB      r2,r12,r3
00013c  f1020801          ADD      r8,r2,#1
;;;147        U8 *pDest = pabAABuffer+x0_Off;
000140  683a              LDR      r2,[r7,#0]  ; pabAABuffer
000142  441a              ADD      r2,r2,r3
;;;148        if (iRem ==1) {
000144  f1b80f01          CMP      r8,#1
000148  d01f              BEQ      |L1.394|
;;;149          *(pDest) += x1-x0+1;
;;;150        } else {
;;;151          /* First Pixel */
;;;152          *pDest++ += ((x0_Off+_x0+1)*GUI_Context.AA_Factor-x0);
00014a  440b              ADD      r3,r3,r1
00014c  1c5b              ADDS     r3,r3,#1
00014e  4358              MULS     r0,r3,r0
000150  7813              LDRB     r3,[r2,#0]
000152  1b40              SUBS     r0,r0,r5
000154  4418              ADD      r0,r0,r3
000156  7010              STRB     r0,[r2,#0]
000158  1c50              ADDS     r0,r2,#1
;;;153          /* Middle Pixels */
;;;154          for (;--iRem>1; ) {
00015a  f1a80201          SUB      r2,r8,#1
00015e  2a01              CMP      r2,#1
000160  dd08              BLE      |L1.372|
                  |L1.354|
;;;155            *pDest++ +=GUI_Context.AA_Factor;
000162  7803              LDRB     r3,[r0,#0]
000164  f8965060          LDRB     r5,[r6,#0x60]  ; GUI_Context
000168  442b              ADD      r3,r3,r5
00016a  f8003b01          STRB     r3,[r0],#1
00016e  1e52              SUBS     r2,r2,#1              ;154
000170  2a01              CMP      r2,#1                 ;154
000172  dcf6              BGT      |L1.354|
                  |L1.372|
;;;156          }
;;;157          /* Last Pixel */
;;;158          *pDest += (1+x1- (x1_Off+_x0) *GUI_Context.AA_Factor);
000174  f8962060          LDRB     r2,[r6,#0x60]  ; GUI_Context
000178  4461              ADD      r1,r1,r12
00017a  fb014112          MLS      r1,r1,r2,r4
00017e  7802              LDRB     r2,[r0,#0]
000180  1c49              ADDS     r1,r1,#1
000182  4411              ADD      r1,r1,r2
000184  7001              STRB     r1,[r0,#0]
                  |L1.390|
;;;159        }
;;;160      }
;;;161    }
000186  e8bd81f0          POP      {r4-r8,pc}
                  |L1.394|
00018a  7810              LDRB     r0,[r2,#0]            ;149
00018c  1b61              SUBS     r1,r4,r5              ;149
00018e  1c49              ADDS     r1,r1,#1              ;149
000190  4408              ADD      r0,r0,r1              ;149
000192  7010              STRB     r0,[r2,#0]            ;149
000194  e8bd81f0          POP      {r4-r8,pc}
;;;162    
                          ENDP

                  CalcClipRectHL PROC
;;;166    */
;;;167    static void CalcClipRectHL(void) {
000198  4937              LDR      r1,|L1.632|
;;;168      ClipRect_HL.x0 =  GUI_Context.ClipRect.x0    * GUI_Context.AA_Factor;
00019a  890a              LDRH     r2,[r1,#8]  ; GUI_Context
00019c  f8910060          LDRB     r0,[r1,#0x60]  ; GUI_Context
0001a0  fb02f300          MUL      r3,r2,r0
0001a4  4a35              LDR      r2,|L1.636|
0001a6  8013              STRH     r3,[r2,#0]
;;;169      ClipRect_HL.y0 =  GUI_Context.ClipRect.y0    * GUI_Context.AA_Factor;
0001a8  894b              LDRH     r3,[r1,#0xa]  ; GUI_Context
0001aa  4343              MULS     r3,r0,r3
0001ac  8053              STRH     r3,[r2,#2]
;;;170      ClipRect_HL.x1 = (GUI_Context.ClipRect.x1+1) * GUI_Context.AA_Factor -1;
0001ae  898b              LDRH     r3,[r1,#0xc]  ; GUI_Context
0001b0  1c5b              ADDS     r3,r3,#1
0001b2  4343              MULS     r3,r0,r3
0001b4  1e5b              SUBS     r3,r3,#1
0001b6  8093              STRH     r3,[r2,#4]
;;;171      ClipRect_HL.y1 = (GUI_Context.ClipRect.y1+1) * GUI_Context.AA_Factor -1;
0001b8  89c9              LDRH     r1,[r1,#0xe]  ; GUI_Context
0001ba  1c49              ADDS     r1,r1,#1
0001bc  4348              MULS     r0,r1,r0
0001be  1e40              SUBS     r0,r0,#1
0001c0  80d0              STRH     r0,[r2,#6]
;;;172    }
0001c2  4770              BX       lr
;;;173    
                          ENDP

                  GUI_AA_Init PROC
;;;183    */
;;;184    int GUI_AA_Init(int x0, int x1) {
0001c4  b570              PUSH     {r4-r6,lr}
;;;185      int r =0;
0001c6  2400              MOVS     r4,#0
;;;186      /* Bounds checking:
;;;187         Make sure x0, x1 are in legal range ...
;;;188         (The important point is that they span no more than configured as
;;;189          buffer size)
;;;190      */
;;;191      if (x0<0)
0001c8  2800              CMP      r0,#0
0001ca  da00              BGE      |L1.462|
;;;192        x0 =0;
0001cc  2000              MOVS     r0,#0
                  |L1.462|
;;;193      if (x1-x0 > GUI_AA_LINEBUFFER_SIZE-1)
0001ce  1a0a              SUBS     r2,r1,r0
0001d0  2adb              CMP      r2,#0xdb
0001d2  dd01              BLE      |L1.472|
;;;194        x1 = x0+GUI_AA_LINEBUFFER_SIZE-1;
0001d4  f10001db          ADD      r1,r0,#0xdb
                  |L1.472|
;;;195      /* Is there anything to do at all ??? */
;;;196      if (x1 < x0) {
0001d8  4281              CMP      r1,r0
0001da  da01              BGE      |L1.480|
;;;197        x1 = x0;   /* Not really ... */
0001dc  4601              MOV      r1,r0
;;;198        r =1;
0001de  2401              MOVS     r4,#1
                  |L1.480|
;;;199      }
;;;200      DrawAPICopy = *GUI_Context.pLCD_HL; /* Copy API table */
0001e0  4d25              LDR      r5,|L1.632|
0001e2  4b23              LDR      r3,|L1.624|
0001e4  6dea              LDR      r2,[r5,#0x5c]  ; GUI_Context
0001e6  f8d2c004          LDR      r12,[r2,#4]
0001ea  f8c3c028          STR      r12,[r3,#0x28]  ; DrawAPICopy
;;;201      pLCD_HLPrev = GUI_Context.pLCD_HL; /* Remember list ptr (for restore) */
0001ee  619a              STR      r2,[r3,#0x18]  ; pLCD_HLPrev
;;;202      DrawAPICopy.pfDrawHLine = _DrawHLine;  /* modify function ptr. for hline */
0001f0  f1030224          ADD      r2,r3,#0x24
0001f4  f8dfc088          LDR      r12,|L1.640|
0001f8  f8c2c000          STR      r12,[r2,#0]  ; DrawAPICopy
;;;203      GUI_Context.pLCD_HL = &DrawAPICopy;      /* Use copy of fp-list */
0001fc  65ea              STR      r2,[r5,#0x5c]  ; GUI_Context
;;;204      pabAABuffer = abAABuffer;
0001fe  4a21              LDR      r2,|L1.644|
000200  601a              STR      r2,[r3,#0]  ; pabAABuffer
;;;205      _x0 = x0;
000202  6058              STR      r0,[r3,#4]  ; _x0
;;;206      _x1 = x1;
000204  6099              STR      r1,[r3,#8]  ; _x1
;;;207      _CleanLine();
000206  f7fffffe          BL       _CleanLine
;;;208      CalcClipRectHL();
00020a  f7fffffe          BL       CalcClipRectHL
;;;209      GUI_Context.pClipRect_HL = &ClipRect_HL;
00020e  481b              LDR      r0,|L1.636|
000210  6168              STR      r0,[r5,#0x14]  ; GUI_Context
;;;210      return r;
000212  4620              MOV      r0,r4
;;;211    }
000214  bd70              POP      {r4-r6,pc}
;;;212    
                          ENDP

                  GUI_AA_Init_HiRes PROC
;;;216    */
;;;217    int GUI_AA_Init_HiRes(int x0, int x1) {
000216  4a18              LDR      r2,|L1.632|
;;;218      x0 /= GUI_Context.AA_Factor;
000218  f8922060          LDRB     r2,[r2,#0x60]  ; GUI_Context
00021c  fb90f0f2          SDIV     r0,r0,r2
;;;219      x1 /= GUI_Context.AA_Factor;
000220  fb91f1f2          SDIV     r1,r1,r2
;;;220      return GUI_AA_Init(x0, x1);
000224  e7fe              B        GUI_AA_Init
;;;221    }
;;;222    
                          ENDP

                  GUI_AA_SetFactor PROC
;;;226    */
;;;227    void GUI_AA_SetFactor(int Factor) {
000226  4914              LDR      r1,|L1.632|
;;;228      GUI_Context.AA_Factor = Factor;
000228  f8810060          STRB     r0,[r1,#0x60]
;;;229      CalcClipRectHL();      /* High level clipping depends on quality factor */
00022c  e7fe              B        CalcClipRectHL
;;;230    }
;;;231    
                          ENDP

                  GUI_AA_GetFactor PROC
;;;235    */
;;;236    int GUI_AA_GetFactor(void) {
00022e  4812              LDR      r0,|L1.632|
;;;237      return GUI_Context.AA_Factor;
000230  f8900060          LDRB     r0,[r0,#0x60]  ; GUI_Context
;;;238    }
000234  4770              BX       lr
;;;239    
                          ENDP

                  GUI_AA_DisableHiRes PROC
;;;243    */
;;;244    void GUI_AA_DisableHiRes(void) {
000236  4910              LDR      r1,|L1.632|
;;;245      GUI_Context.AA_HiResEnable = 0;
000238  2000              MOVS     r0,#0
00023a  f8810061          STRB     r0,[r1,#0x61]
;;;246    }
00023e  4770              BX       lr
;;;247    
                          ENDP

                  GUI_AA_EnableHiRes PROC
;;;251    */
;;;252    void GUI_AA_EnableHiRes(void) {
000240  490d              LDR      r1,|L1.632|
;;;253      GUI_Context.AA_HiResEnable =1;
000242  2001              MOVS     r0,#1
000244  f8810061          STRB     r0,[r1,#0x61]
;;;254    }
000248  4770              BX       lr
;;;255    
                          ENDP

                  GUI_AA_HiRes2Pixel PROC
;;;259    */
;;;260    I16 GUI_AA_HiRes2Pixel(int HiRes) {
00024a  490b              LDR      r1,|L1.632|
;;;261      return GUI_Context.AA_Factor ? (HiRes / GUI_Context.AA_Factor) : HiRes;
00024c  f8911060          LDRB     r1,[r1,#0x60]  ; GUI_Context
000250  b109              CBZ      r1,|L1.598|
000252  fb90f0f1          SDIV     r0,r0,r1
                  |L1.598|
000256  b200              SXTH     r0,r0
;;;262    }
000258  4770              BX       lr
;;;263    
                          ENDP

                  GUI_AA_Exit PROC
;;;267    */
;;;268    void GUI_AA_Exit(void) {
00025a  b510              PUSH     {r4,lr}
;;;269      _FlushLine();
00025c  f7fffffe          BL       _FlushLine
;;;270      /* restore previous settings */
;;;271      GUI_Context.pLCD_HL = pLCD_HLPrev;
000260  4803              LDR      r0,|L1.624|
000262  6981              LDR      r1,[r0,#0x18]  ; pLCD_HLPrev
000264  4804              LDR      r0,|L1.632|
000266  65c1              STR      r1,[r0,#0x5c]  ; GUI_Context
;;;272      GUI_Context.pClipRect_HL = &GUI_Context.ClipRect;
000268  f1000108          ADD      r1,r0,#8
00026c  6141              STR      r1,[r0,#0x14]  ; GUI_Context
;;;273    }
00026e  bd10              POP      {r4,pc}
;;;274    
                          ENDP

                  |L1.624|
                          DCD      ||.data||
                  |L1.628|
                          DCD      0xffffc001
                  |L1.632|
                          DCD      GUI_Context
                  |L1.636|
                          DCD      ||.data||+0x1c
                  |L1.640|
                          DCD      _DrawHLine
                  |L1.644|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  abAABuffer
                          %        220

                          AREA ||.data||, DATA, ALIGN=2

                  pabAABuffer
                          DCD      0x00000000
                  _x0
                          DCD      0x00000000
                  _x1
                          DCD      0x00000000
                  ||_y||
                          DCD      0x00000000
                  _x0_InUse
                          DCD      0x00000000
                  _x1_InUse
                          DCD      0x00000000
                  pLCD_HLPrev
                          DCD      0x00000000
                  ClipRect_HL
                          %        8
                  DrawAPICopy
                          %        8
