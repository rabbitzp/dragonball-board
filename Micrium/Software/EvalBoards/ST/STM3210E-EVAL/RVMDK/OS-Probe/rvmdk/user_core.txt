; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\user_core.o --depend=.\rvmdk\user_core.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\user_core.crf ..\..\..\..\..\User\user_core.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  UCore_EventLoop PROC
;;;91     
;;;92     void UCore_EventLoop(void)
000000  b082              SUB      sp,sp,#8
;;;93     {
;;;94         INT8U           err     = 0;
000002  2500              MOVS     r5,#0
000004  9501              STR      r5,[sp,#4]
;;;95         UCORE_MSG_S     *pMsg   = NULL;
;;;96         
;;;97         /* main process here */
;;;98         while (1)
;;;99         {
;;;100            pMsg = (UCORE_MSG_S *) OSQPend(g_QSemCoreMsg, 0, &err);
000006  4e5c              LDR      r6,|L1.376|
;;;101            if ((OS_NO_ERR == err) && (NULL != pMsg))
;;;102            {
;;;103                switch (pMsg->usMsgType)
;;;104                {
;;;105                    /* 以下消息发送到LCD任务，直接传递，注意不在这里销毁 */
;;;106                    case UCORE_MESSAGE_TYPE_KEY_HOME:
;;;107                    case UCORE_MESSAGE_TYPE_KEY_OK:
;;;108                    case UCORE_MESSAGE_TYPE_KEY_UP:
;;;109                    case UCORE_MESSAGE_TYPE_KEY_DOWN:
;;;110                    case UCORE_MESSAGE_TYPE_KEY_RETURN:
;;;111                        {
;;;112                            OSMboxPost(g_QMboxUIMsg, pMsg);
000008  4f5c              LDR      r7,|L1.380|
                  |L1.10|
00000a  aa01              ADD      r2,sp,#4              ;100
00000c  2100              MOVS     r1,#0                 ;100
00000e  6830              LDR      r0,[r6,#0]            ;100  ; g_QSemCoreMsg
000010  f7fffffe          BL       OSQPend
000014  4604              MOV      r4,r0                 ;100
000016  f89d0004          LDRB     r0,[sp,#4]            ;101
00001a  2800              CMP      r0,#0                 ;101
00001c  d1f5              BNE      |L1.10|
00001e  2c00              CMP      r4,#0                 ;101
000020  d0f3              BEQ      |L1.10|
000022  8821              LDRH     r1,[r4,#0]            ;103
000024  2967              CMP      r1,#0x67              ;103
000026  d019              BEQ      |L1.92|
000028  dc06              BGT      |L1.56|
00002a  2964              CMP      r1,#0x64              ;103
00002c  d016              BEQ      |L1.92|
00002e  2965              CMP      r1,#0x65              ;103
000030  d014              BEQ      |L1.92|
000032  2966              CMP      r1,#0x66              ;103
000034  d106              BNE      |L1.68|
000036  e011              B        |L1.92|
                  |L1.56|
000038  2968              CMP      r1,#0x68              ;103
00003a  d00f              BEQ      |L1.92|
00003c  29c8              CMP      r1,#0xc8              ;103
00003e  d012              BEQ      |L1.102|
000040  29c9              CMP      r1,#0xc9              ;103
000042  d01c              BEQ      |L1.126|
                  |L1.68|
;;;113                        }
;;;114                        break;                    
;;;115                    case UCORE_MESSAGE_TYPE_TEST1:
;;;116                        {
;;;117                            printf("Message testing 1.\r\n");
;;;118                            UCORE_DEL_MESSAGE(pMsg);
;;;119                        }
;;;120                        break;
;;;121                    case UCORE_MESSAGE_TYPE_TEST2:
;;;122                        {
;;;123                            printf("Message testing 2.\r\n");
;;;124                            UCORE_DEL_MESSAGE(pMsg);
;;;125                        }
;;;126                        break;                    
;;;127                    default:
;;;128                        printf("Unknown message type:%d\r\n", pMsg->usMsgType);
000044  a04e              ADR      r0,|L1.384|
000046  f7fffffe          BL       __2printf
;;;129    
;;;130                        UCORE_DEL_MESSAGE(pMsg);
00004a  6860              LDR      r0,[r4,#4]
00004c  b110              CBZ      r0,|L1.84|
00004e  f7fffffe          BL       free
000052  6065              STR      r5,[r4,#4]
                  |L1.84|
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       free
;;;131                        break;
00005a  e7d6              B        |L1.10|
                  |L1.92|
00005c  4621              MOV      r1,r4                 ;112
00005e  6838              LDR      r0,[r7,#0]            ;112  ; g_QMboxUIMsg
000060  f7fffffe          BL       OSMboxPost
000064  e7d1              B        |L1.10|
                  |L1.102|
000066  a04d              ADR      r0,|L1.412|
000068  f7fffffe          BL       __2printf
00006c  6860              LDR      r0,[r4,#4]            ;118
00006e  b110              CBZ      r0,|L1.118|
000070  f7fffffe          BL       free
000074  6065              STR      r5,[r4,#4]            ;118
                  |L1.118|
000076  4620              MOV      r0,r4                 ;118
000078  f7fffffe          BL       free
00007c  e7c5              B        |L1.10|
                  |L1.126|
00007e  a04d              ADR      r0,|L1.436|
000080  f7fffffe          BL       __2printf
000084  6860              LDR      r0,[r4,#4]            ;124
000086  b110              CBZ      r0,|L1.142|
000088  f7fffffe          BL       free
00008c  6065              STR      r5,[r4,#4]            ;124
                  |L1.142|
00008e  4620              MOV      r0,r4                 ;124
000090  f7fffffe          BL       free
000094  e7b9              B        |L1.10|
;;;132                }
;;;133            }
;;;134        }
;;;135    }
;;;136    
                          ENDP

                  UCoreInit PROC
;;;83     
;;;84     void UCoreInit(void)
000096  b510              PUSH     {r4,lr}
;;;85     {
;;;86         /* create message queue */
;;;87         g_QSemCoreMsg = OSQCreate(&g_UserCoreMsgQueue[0], MAX_USER_CORE_MSG_SIZE);
000098  2110              MOVS     r1,#0x10
00009a  484c              LDR      r0,|L1.460|
00009c  f7fffffe          BL       OSQCreate
0000a0  4935              LDR      r1,|L1.376|
0000a2  6008              STR      r0,[r1,#0]  ; g_QSemCoreMsg
;;;88     
;;;89         printf("User Core init finished.\r\n");
0000a4  e8bd4010          POP      {r4,lr}
0000a8  a049              ADR      r0,|L1.464|
0000aa  f7ffbffe          B.W      __2printf
;;;90     }
;;;91     
                          ENDP

                  UCore_TaskProc PROC
;;;49     
;;;50     void UCore_TaskProc(void *p_arg)
0000ae  a04f              ADR      r0,|L1.492|
;;;51     {
;;;52         u8 ucResult = UCORE_ERR_COMMON_FAILED;
;;;53         
;;;54         printf("User Core Task Start.\r\n");
0000b0  f7fffffe          BL       __2printf
;;;55     
;;;56         /* call init */
;;;57         UCoreInit();
0000b4  f7fffffe          BL       UCoreInit
;;;58     
;;;59         /* create sub task */
;;;60         ucResult = UKey_Start();
0000b8  f7fffffe          BL       UKey_Start
;;;61         if (UCORE_ERR_SUCCESS != ucResult)
0000bc  b110              CBZ      r0,|L1.196|
;;;62         {
;;;63             printf("Start user key task failed.\r\n");
0000be  a051              ADR      r0,|L1.516|
0000c0  f7fffffe          BL       __2printf
                  |L1.196|
;;;64         }
;;;65     
;;;66         ucResult = ULCD_Start();
0000c4  f7fffffe          BL       ULCD_Start
;;;67         if (UCORE_ERR_SUCCESS != ucResult)
0000c8  b110              CBZ      r0,|L1.208|
;;;68         {
;;;69             printf("Start user LCD task failed.\r\n");
0000ca  a056              ADR      r0,|L1.548|
0000cc  f7fffffe          BL       __2printf
                  |L1.208|
;;;70         }
;;;71     
;;;72         ucResult = UHMC_Start();
0000d0  f7fffffe          BL       UHMC_Start
;;;73         if (UCORE_ERR_SUCCESS != ucResult)
0000d4  b110              CBZ      r0,|L1.220|
;;;74         {
;;;75             printf("Start user HMC task failed.\r\n");
0000d6  a05b              ADR      r0,|L1.580|
0000d8  f7fffffe          BL       __2printf
                  |L1.220|
;;;76         }    
;;;77     
;;;78         /* enter event loop */
;;;79         UCore_EventLoop();
0000dc  f7fffffe          BL       UCore_EventLoop
;;;80     
;;;81         printf("User Core Task Exit.\r\n");
;;;82     }
;;;83     
                          ENDP

                  UCore_Start PROC
;;;37     
;;;38     u8 UCore_Start(void)
0000e0  b510              PUSH     {r4,lr}
;;;39     {    
;;;40         printf("starting user core....\r\n");
0000e2  a060              ADR      r0,|L1.612|
0000e4  f7fffffe          BL       __2printf
;;;41     
;;;42         if (OS_ERR_NONE == OSTaskCreate(UCore_TaskProc, (void *)0, (OS_STK *)&g_UserCoreSTK[DEFAULT_USER_STK_SIZE - 1], DEFAULT_USER_TASK_PRIO))
0000e8  2305              MOVS     r3,#5
0000ea  4a65              LDR      r2,|L1.640|
0000ec  2100              MOVS     r1,#0
0000ee  4865              LDR      r0,|L1.644|
0000f0  f7fffffe          BL       OSTaskCreate
0000f4  b108              CBZ      r0,|L1.250|
;;;43         {
;;;44             return UCORE_ERR_SUCCESS;
;;;45         }
;;;46     
;;;47         return UCORE_ERR_CREATE_TASK_FAILED;
0000f6  2004              MOVS     r0,#4
;;;48     }
0000f8  bd10              POP      {r4,pc}
                  |L1.250|
0000fa  2000              MOVS     r0,#0                 ;44
0000fc  bd10              POP      {r4,pc}
;;;49     
                          ENDP

                  UCore_PostMessage2 PROC
;;;136    
;;;137    u8 UCore_PostMessage2(UCORE_MSG_S *pMsg)
0000fe  4601              MOV      r1,r0
;;;138    {
;;;139        return OSQPost(g_QSemCoreMsg, (void *)pMsg);
000100  481d              LDR      r0,|L1.376|
000102  6800              LDR      r0,[r0,#0]  ; g_QSemCoreMsg
000104  f7ffbffe          B.W      OSQPost
;;;140    }
;;;141    
                          ENDP

                  UCore_PostMessage1 PROC
;;;142    u8 UCore_PostMessage1(u16 usMessageType, u16 usBufLen, void *pBuf)
000108  e92d41f0          PUSH     {r4-r8,lr}
;;;143    {
00010c  4607              MOV      r7,r0
00010e  460d              MOV      r5,r1
000110  4616              MOV      r6,r2
;;;144        UCORE_MSG_S *pMsg       = NULL;
;;;145    
;;;146        /* alloc message buf */
;;;147        pMsg = malloc(sizeof(UCORE_MSG_S));
000112  2008              MOVS     r0,#8
000114  f7fffffe          BL       malloc
000118  4604              MOV      r4,r0
;;;148        if (NULL == pMsg)
00011a  b174              CBZ      r4,|L1.314|
;;;149        {
;;;150            return UCORE_ERR_MEM_ALLOC_FAILED;
;;;151        }
;;;152    
;;;153        memset(pMsg, 0, sizeof(UCORE_MSG_S));
00011c  2000              MOVS     r0,#0
00011e  6020              STR      r0,[r4,#0]
000120  6060              STR      r0,[r4,#4]
;;;154        pMsg->usMsgType = usMessageType;
000122  8027              STRH     r7,[r4,#0]
;;;155        pMsg->usBufLen  = usBufLen;
000124  8065              STRH     r5,[r4,#2]
;;;156    
;;;157        if (0 != usBufLen)
000126  b19d              CBZ      r5,|L1.336|
;;;158        {
;;;159            /* check exceed max buff size? */
;;;160            if (UCORE_MAX_MESSAGE_BUFF_LEN <= usBufLen)
000128  f5b56f80          CMP      r5,#0x400
00012c  d308              BCC      |L1.320|
;;;161            {
;;;162                free(pMsg);
00012e  4620              MOV      r0,r4
000130  f7fffffe          BL       free
;;;163                return UCORE_ERR_MEM_ALLOC_FAILED;
000134  2002              MOVS     r0,#2
;;;164            }
;;;165    
;;;166            /* alloc user buff */
;;;167            pMsg->pBuf = malloc(usBufLen);
;;;168    
;;;169            /* copy buff */
;;;170            memcpy(pMsg->pBuf, pBuf, usBufLen);
;;;171        }
;;;172    
;;;173        /* ok, now post this message */
;;;174        if (OS_ERR_NONE != OSQPost(g_QSemCoreMsg, (void *)pMsg))
;;;175        {
;;;176            /* free message */
;;;177            if (pMsg->pBuf) free(pMsg->pBuf);
;;;178            if (pMsg) free(pMsg);
;;;179            return UCORE_ERR_MSG_POST_FAILED;
;;;180        }
;;;181    
;;;182        return UCORE_ERR_SUCCESS;
;;;183    }
000136  e8bd81f0          POP      {r4-r8,pc}
                  |L1.314|
00013a  2002              MOVS     r0,#2                 ;150
00013c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.320|
000140  4628              MOV      r0,r5                 ;167
000142  f7fffffe          BL       malloc
000146  6060              STR      r0,[r4,#4]            ;167
000148  462a              MOV      r2,r5                 ;170
00014a  4631              MOV      r1,r6                 ;170
00014c  f7fffffe          BL       __aeabi_memcpy
                  |L1.336|
000150  4809              LDR      r0,|L1.376|
000152  4621              MOV      r1,r4                 ;174
000154  6800              LDR      r0,[r0,#0]            ;174  ; g_QSemCoreMsg
000156  f7fffffe          BL       OSQPost
00015a  b148              CBZ      r0,|L1.368|
00015c  6860              LDR      r0,[r4,#4]            ;177
00015e  b108              CBZ      r0,|L1.356|
000160  f7fffffe          BL       free
                  |L1.356|
000164  4620              MOV      r0,r4                 ;178
000166  f7fffffe          BL       free
00016a  2003              MOVS     r0,#3                 ;179
00016c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.368|
000170  2000              MOVS     r0,#0                 ;182
000172  e8bd81f0          POP      {r4-r8,pc}
;;;184    
                          ENDP

000176  0000              DCW      0x0000
                  |L1.376|
                          DCD      ||.data||
                  |L1.380|
                          DCD      g_QMboxUIMsg
                  |L1.384|
000180  556e6b6e          DCB      "Unknown message type:%d\r\n",0
000184  6f776e20
000188  6d657373
00018c  61676520
000190  74797065
000194  3a25640d
000198  0a00    
00019a  00                DCB      0
00019b  00                DCB      0
                  |L1.412|
00019c  4d657373          DCB      "Message testing 1.\r\n",0
0001a0  61676520
0001a4  74657374
0001a8  696e6720
0001ac  312e0d0a
0001b0  00      
0001b1  00                DCB      0
0001b2  00                DCB      0
0001b3  00                DCB      0
                  |L1.436|
0001b4  4d657373          DCB      "Message testing 2.\r\n",0
0001b8  61676520
0001bc  74657374
0001c0  696e6720
0001c4  322e0d0a
0001c8  00      
0001c9  00                DCB      0
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L1.460|
                          DCD      ||.bss||+0x200
                  |L1.464|
0001d0  55736572          DCB      "User Core init finished.\r\n",0
0001d4  20436f72
0001d8  6520696e
0001dc  69742066
0001e0  696e6973
0001e4  6865642e
0001e8  0d0a00  
0001eb  00                DCB      0
                  |L1.492|
0001ec  55736572          DCB      "User Core Task Start.\r\n",0
0001f0  20436f72
0001f4  65205461
0001f8  736b2053
0001fc  74617274
000200  2e0d0a00
                  |L1.516|
000204  53746172          DCB      "Start user key task failed.\r\n",0
000208  74207573
00020c  6572206b
000210  65792074
000214  61736b20
000218  6661696c
00021c  65642e0d
000220  0a00    
000222  00                DCB      0
000223  00                DCB      0
                  |L1.548|
000224  53746172          DCB      "Start user LCD task failed.\r\n",0
000228  74207573
00022c  6572204c
000230  43442074
000234  61736b20
000238  6661696c
00023c  65642e0d
000240  0a00    
000242  00                DCB      0
000243  00                DCB      0
                  |L1.580|
000244  53746172          DCB      "Start user HMC task failed.\r\n",0
000248  74207573
00024c  65722048
000250  4d432074
000254  61736b20
000258  6661696c
00025c  65642e0d
000260  0a00    
000262  00                DCB      0
000263  00                DCB      0
                  |L1.612|
000264  73746172          DCB      "starting user core....\r\n",0
000268  74696e67
00026c  20757365
000270  7220636f
000274  72652e2e
000278  2e2e0d0a
00027c  00      
00027d  00                DCB      0
00027e  00                DCB      0
00027f  00                DCB      0
                  |L1.640|
                          DCD      ||.bss||+0x1fc
                  |L1.644|
                          DCD      UCore_TaskProc

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  g_UserCoreSTK
                          %        512
                  g_UserCoreMsgQueue
                          %        64

                          AREA ||.data||, DATA, ALIGN=2

                  g_QSemCoreMsg
                          DCD      0x00000000
