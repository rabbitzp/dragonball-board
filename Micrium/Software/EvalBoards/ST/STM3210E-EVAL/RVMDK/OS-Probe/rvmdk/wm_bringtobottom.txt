; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\wm_bringtobottom.o --depend=.\rvmdk\wm_bringtobottom.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\wm_bringtobottom.crf ..\..\..\..\..\uCGUI\GUI\WM\WM_BringToBottom.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM_BringToBottom PROC
;;;34     */
;;;35     void WM_BringToBottom(WM_HWIN hWin) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4605              MOV      r5,r0
;;;36       WM_HWIN hParent;
;;;37       WM_HWIN hPrev;
;;;38       WM_Obj* pWin;
;;;39       WM_Obj* pPrev;
;;;40       WM_Obj* pParent;
;;;41       WM_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;42       if (hWin) {
00000a  b315              CBZ      r5,|L1.82|
;;;43         pWin = WM_H2P(hWin);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       GUI_ALLOC_h2p
000012  4604              MOV      r4,r0
;;;44         hPrev = WM__GetPrevSibling(hWin);
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       WM__GetPrevSibling
00001a  4607              MOV      r7,r0
;;;45         if (hPrev) {                   /* If there is no previous one, there is nothing to do ! */
00001c  b1cf              CBZ      r7,|L1.82|
;;;46           hParent = WM_GetParent(hWin);
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       WM_GetParent
000024  4606              MOV      r6,r0
;;;47           /* Invalidate window area */
;;;48           if (pWin->Status & WM_SF_ISVIS) {
000026  8ba0              LDRH     r0,[r4,#0x1c]
000028  f0100f02          TST      r0,#2
00002c  d005              BEQ      |L1.58|
;;;49             WM__InvalidateRectEx(&pWin->Rect, hParent, pWin->hNext);
00002e  f9b4201a          LDRSH    r2,[r4,#0x1a]
000032  4631              MOV      r1,r6
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       WM__InvalidateRectEx
                  |L1.58|
;;;50           }
;;;51           pParent = WM_H2P(hParent);
00003a  4630              MOV      r0,r6
00003c  f7fffffe          BL       GUI_ALLOC_h2p
000040  4606              MOV      r6,r0
;;;52           /* Unlink hWin */
;;;53           pPrev = WM_H2P(hPrev);
000042  4638              MOV      r0,r7
000044  f7fffffe          BL       GUI_ALLOC_h2p
;;;54           pPrev->hNext = pWin->hNext;
000048  8b61              LDRH     r1,[r4,#0x1a]
00004a  8341              STRH     r1,[r0,#0x1a]
;;;55           /* Link from parent (making it the first child) */
;;;56           pWin->hNext = pParent->hFirstChild;
00004c  8b30              LDRH     r0,[r6,#0x18]
00004e  8360              STRH     r0,[r4,#0x1a]
;;;57           pParent->hFirstChild = hWin;
000050  8335              STRH     r5,[r6,#0x18]
                  |L1.82|
;;;58         }
;;;59       }
;;;60       WM_UNLOCK();
000052  e8bd41f0          POP      {r4-r8,lr}
000056  f7ffbffe          B.W      GUI_Unlock
;;;61     }
;;;62     
                          ENDP

