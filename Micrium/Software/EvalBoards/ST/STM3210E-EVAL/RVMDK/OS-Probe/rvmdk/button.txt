; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\button.o --depend=.\rvmdk\button.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\button.crf ..\..\..\..\..\uCGUI\GUI\Widget\BUTTON.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;120    */
;;;121    static void _Paint(BUTTON_Obj* pObj, BUTTON_Handle hObj) {
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4604              MOV      r4,r0
000008  4608              MOV      r0,r1
;;;122      const char* s = NULL;
00000a  f04f0900          MOV      r9,#0
;;;123      unsigned int Index;
;;;124      int State, PressedState, ColorIndex;
;;;125      GUI_RECT rClient, rInside;
;;;126      State = pObj->Widget.State;
00000e  8ce6              LDRH     r6,[r4,#0x26]
;;;127      PressedState = (State & BUTTON_STATE_PRESSED) ? 1 : 0;
000010  f3c62500          UBFX     r5,r6,#8,#1
;;;128      ColorIndex   = (WM__IsEnabled(hObj)) ? PressedState : 2;
000014  f7fffffe          BL       WM__IsEnabled
000018  b108              CBZ      r0,|L1.30|
00001a  462f              MOV      r7,r5
00001c  e000              B        |L1.32|
                  |L1.30|
00001e  2702              MOVS     r7,#2
                  |L1.32|
;;;129      GUI_SetFont(pObj->Props.pFont);
000020  6c60              LDR      r0,[r4,#0x44]
000022  f7fffffe          BL       GUI_SetFont
;;;130      GUI_DEBUG_LOG("BUTTON: Paint(..)\n");
;;;131      if (pObj->hpText) {
000026  f9b4004c          LDRSH    r0,[r4,#0x4c]
00002a  b110              CBZ      r0,|L1.50|
;;;132        s = (const char*) GUI_ALLOC_h2p(pObj->hpText);
00002c  f7fffffe          BL       GUI_ALLOC_h2p
000030  4681              MOV      r9,r0
                  |L1.50|
;;;133      }
;;;134      GUI_GetClientRect(&rClient);
000032  a804              ADD      r0,sp,#0x10
000034  f7fffffe          BL       GUI_GetClientRect
;;;135      /* Start drawing */
;;;136      rInside = rClient;
000038  9905              LDR      r1,[sp,#0x14]
00003a  9804              LDR      r0,[sp,#0x10]
00003c  9103              STR      r1,[sp,#0xc]
00003e  9002              STR      r0,[sp,#8]
;;;137    /* Draw the 3D effect (if configured) */
;;;138      #if BUTTON_USE_3D
;;;139      {
;;;140        int EffectSize;
;;;141        if ((PressedState) == 0) {
000040  b345              CBZ      r5,|L1.148|
;;;142          pObj->Widget.pEffect->pfDrawUp();  /* _WIDGET_EFFECT_3D_DrawUp(); */
;;;143          EffectSize = pObj->Widget.pEffect->EffectSize;
;;;144        } else {
;;;145          LCD_SetColor(0x000000);
000042  2000              MOVS     r0,#0
000044  f7fffffe          BL       LCD_SetColor
;;;146          GUI_DrawRect(rClient.y0, rClient.x0, rClient.x1, rClient.y1);
000048  f9bd3016          LDRSH    r3,[sp,#0x16]
00004c  f9bd2014          LDRSH    r2,[sp,#0x14]
000050  f9bd1010          LDRSH    r1,[sp,#0x10]
000054  f9bd0012          LDRSH    r0,[sp,#0x12]
000058  f7fffffe          BL       GUI_DrawRect
;;;147          EffectSize = 1;
00005c  2201              MOVS     r2,#1
                  |L1.94|
;;;148        }
;;;149        GUI__ReduceRect(&rInside, &rInside, EffectSize); 
00005e  a902              ADD      r1,sp,#8
000060  a802              ADD      r0,sp,#8
000062  f7fffffe          BL       GUI__ReduceRect
;;;150      }
;;;151      #endif
;;;152      /* Draw background */
;;;153      LCD_SetBkColor (pObj->Props.aBkColor[ColorIndex]);
000066  eb040887          ADD      r8,r4,r7,LSL #2
00006a  f8d80028          LDR      r0,[r8,#0x28]
00006e  f7fffffe          BL       LCD_SetBkColor
;;;154      LCD_SetColor   (pObj->Props.aTextColor[ColorIndex]);
000072  f8d80034          LDR      r0,[r8,#0x34]
000076  f7fffffe          BL       LCD_SetColor
;;;155      WM_SetUserClipRect(&rInside);
00007a  a802              ADD      r0,sp,#8
00007c  f7fffffe          BL       WM_SetUserClipRect
;;;156      GUI_Clear();
000080  f7fffffe          BL       GUI_Clear
;;;157      /* Draw bitmap.
;;;158         If we have only one, we will use it.
;;;159         If we have to we will use the second one (Index 1) for the pressed state
;;;160      */
;;;161      if (ColorIndex < 2) {
000084  2f02              CMP      r7,#2
000086  da0d              BGE      |L1.164|
;;;162        Index = (pObj->ahDrawObj[BUTTON_BI_PRESSED] && PressedState) ? BUTTON_BI_PRESSED : BUTTON_BI_UNPRESSED;
000088  f8b40050          LDRH     r0,[r4,#0x50]
00008c  b140              CBZ      r0,|L1.160|
00008e  b13d              CBZ      r5,|L1.160|
000090  2001              MOVS     r0,#1
000092  e00d              B        |L1.176|
                  |L1.148|
000094  6a20              LDR      r0,[r4,#0x20]         ;142
000096  6800              LDR      r0,[r0,#0]            ;142
000098  4780              BLX      r0                    ;142
00009a  6a20              LDR      r0,[r4,#0x20]         ;143
00009c  6942              LDR      r2,[r0,#0x14]         ;143
00009e  e7de              B        |L1.94|
                  |L1.160|
0000a0  2000              MOVS     r0,#0
0000a2  e005              B        |L1.176|
                  |L1.164|
;;;163      } else {
;;;164        Index = pObj->ahDrawObj[BUTTON_BI_DISABLED] ? BUTTON_BI_DISABLED : BUTTON_BI_UNPRESSED;
0000a4  f8b40052          LDRH     r0,[r4,#0x52]
0000a8  b108              CBZ      r0,|L1.174|
0000aa  2002              MOVS     r0,#2
0000ac  e000              B        |L1.176|
                  |L1.174|
0000ae  2000              MOVS     r0,#0
                  |L1.176|
;;;165      }
;;;166      GUI_DRAW__Draw(pObj->ahDrawObj[Index], 0, 0);
0000b0  eb040040          ADD      r0,r4,r0,LSL #1
0000b4  2200              MOVS     r2,#0
0000b6  f9b0004e          LDRSH    r0,[r0,#0x4e]
0000ba  4611              MOV      r1,r2
0000bc  f7fffffe          BL       GUI_DRAW__Draw
;;;167    /* Draw the actual button (background and text) */  
;;;168      {
;;;169        GUI_RECT r;
;;;170        r = rInside;
0000c0  9903              LDR      r1,[sp,#0xc]
0000c2  9802              LDR      r0,[sp,#8]
0000c4  9101              STR      r1,[sp,#4]
0000c6  9000              STR      r0,[sp,#0]
;;;171        #if BUTTON_USE_3D
;;;172          if (PressedState) {
0000c8  b125              CBZ      r5,|L1.212|
;;;173            GUI_MoveRect(&r, BUTTON_3D_MOVE_X,BUTTON_3D_MOVE_Y);
0000ca  2201              MOVS     r2,#1
0000cc  4611              MOV      r1,r2
0000ce  4668              MOV      r0,sp
0000d0  f7fffffe          BL       GUI_MoveRect
                  |L1.212|
;;;174          }
;;;175        #endif
;;;176        GUI_SetTextMode(GUI_TM_TRANS);
0000d4  2002              MOVS     r0,#2
0000d6  f7fffffe          BL       GUI_SetTextMode
;;;177        GUI_DispStringInRect(s, &r, pObj->Props.Align);
0000da  f9b42048          LDRSH    r2,[r4,#0x48]
0000de  4669              MOV      r1,sp
0000e0  4648              MOV      r0,r9
0000e2  f7fffffe          BL       GUI_DispStringInRect
;;;178      }
;;;179      /* Draw focus */
;;;180      if (State & BUTTON_STATE_FOCUS) {
0000e6  f0160f01          TST      r6,#1
0000ea  d006              BEQ      |L1.250|
;;;181        LCD_SetColor(pObj->Props.FocusColor);
0000ec  6c20              LDR      r0,[r4,#0x40]
0000ee  f7fffffe          BL       LCD_SetColor
;;;182        GUI_DrawFocusRect(&rClient, 2);
0000f2  2102              MOVS     r1,#2
0000f4  a804              ADD      r0,sp,#0x10
0000f6  f7fffffe          BL       GUI_DrawFocusRect
                  |L1.250|
;;;183      }
;;;184      WM_SetUserClipRect(NULL);
0000fa  2000              MOVS     r0,#0
0000fc  f7fffffe          BL       WM_SetUserClipRect
;;;185    }
000100  b007              ADD      sp,sp,#0x1c
000102  e8bd83f0          POP      {r4-r9,pc}
;;;186    
                          ENDP

                  _Delete PROC
;;;192    */
;;;193    static void _Delete(BUTTON_Obj* pObj) {
000106  b510              PUSH     {r4,lr}
000108  4604              MOV      r4,r0
;;;194      GUI_ALLOC_FreePtr(&pObj->hpText);
00010a  f104004c          ADD      r0,r4,#0x4c
00010e  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;195      GUI_ALLOC_FreePtrArray(pObj->ahDrawObj, GUI_COUNTOF(pObj->ahDrawObj));
000112  f104004e          ADD      r0,r4,#0x4e
000116  e8bd4010          POP      {r4,lr}
00011a  2103              MOVS     r1,#3
00011c  f7ffbffe          B.W      GUI_ALLOC_FreePtrArray
;;;196    }
;;;197    
                          ENDP

                  _OnButtonPressed PROC
;;;201    */
;;;202    static void _OnButtonPressed(BUTTON_Handle hObj, BUTTON_Obj* pObj) {
000120  b570              PUSH     {r4-r6,lr}
000122  4605              MOV      r5,r0
000124  460c              MOV      r4,r1
;;;203      WIDGET_OrState(hObj, BUTTON_STATE_PRESSED);
000126  f44f7180          MOV      r1,#0x100
00012a  4628              MOV      r0,r5
00012c  f7fffffe          BL       WIDGET_OrState
;;;204      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000130  8ba1              LDRH     r1,[r4,#0x1c]
000132  f0110f02          TST      r1,#2
000136  d005              BEQ      |L1.324|
;;;205        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
000138  4628              MOV      r0,r5
00013a  e8bd4070          POP      {r4-r6,lr}
00013e  2101              MOVS     r1,#1
000140  f7ffbffe          B.W      WM_NotifyParent
                  |L1.324|
;;;206      }
;;;207    }
000144  bd70              POP      {r4-r6,pc}
;;;208    
                          ENDP

                  _OnButtonReleased PROC
;;;212    */
;;;213    static void _OnButtonReleased(BUTTON_Handle hObj, BUTTON_Obj* pObj, int Notification) {
000146  b570              PUSH     {r4-r6,lr}
000148  4606              MOV      r6,r0
00014a  460c              MOV      r4,r1
00014c  4615              MOV      r5,r2
;;;214      WIDGET_AndState(hObj, BUTTON_STATE_PRESSED);
00014e  f44f7180          MOV      r1,#0x100
000152  4630              MOV      r0,r6
000154  f7fffffe          BL       WIDGET_AndState
;;;215      if (Notification == WM_NOTIFICATION_RELEASED) {
000158  2d02              CMP      r5,#2
00015a  d103              BNE      |L1.356|
;;;216        GUI_DEBUG_LOG("BUTTON: Hit\n");
;;;217        GUI_StoreKey(pObj->Widget.Id);
00015c  f9b40024          LDRSH    r0,[r4,#0x24]
000160  f7fffffe          BL       GUI_StoreKey
                  |L1.356|
;;;218      }
;;;219      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000164  8ba0              LDRH     r0,[r4,#0x1c]
000166  f0100f02          TST      r0,#2
00016a  d005              BEQ      |L1.376|
;;;220        WM_NotifyParent(hObj, Notification);
00016c  4629              MOV      r1,r5
00016e  4630              MOV      r0,r6
000170  e8bd4070          POP      {r4-r6,lr}
000174  f7ffbffe          B.W      WM_NotifyParent
                  |L1.376|
;;;221      }
;;;222    }
000178  bd70              POP      {r4-r6,pc}
;;;223    
                          ENDP

                  _OnTouch PROC
;;;227    */
;;;228    static void _OnTouch(BUTTON_Handle hObj, BUTTON_Obj* pObj, WM_MESSAGE*pMsg) {
00017a  6892              LDR      r2,[r2,#8]
;;;229      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
;;;230    #if BUTTON_REACT_ON_LEVEL
;;;231      if (!pMsg->Data.p) {  /* Mouse moved out */
;;;232        _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_MOVED_OUT);
;;;233      } else if ((!pState->Pressed) && (pObj->Widget.State & BUTTON_STATE_PRESSED)) {
;;;234        _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_MOVED_OUT);
;;;235      }
;;;236    #else
;;;237      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
00017c  b162              CBZ      r2,|L1.408|
;;;238        if (pState->Pressed) {
00017e  7a12              LDRB     r2,[r2,#8]
000180  b122              CBZ      r2,|L1.396|
;;;239          if ((pObj->Widget.State & BUTTON_STATE_PRESSED) == 0){   
000182  8cca              LDRH     r2,[r1,#0x26]
000184  f4127f80          TST      r2,#0x100
000188  d108              BNE      |L1.412|
;;;240            _OnButtonPressed(hObj, pObj);
00018a  e7fe              B        _OnButtonPressed
                  |L1.396|
;;;241          }
;;;242        } else {
;;;243          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;244          if (pObj->Widget.State & BUTTON_STATE_PRESSED) {   
00018c  8cca              LDRH     r2,[r1,#0x26]
00018e  f4127f80          TST      r2,#0x100
000192  d003              BEQ      |L1.412|
;;;245            _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_RELEASED);
000194  2202              MOVS     r2,#2
000196  e7fe              B        _OnButtonReleased
                  |L1.408|
;;;246          }
;;;247        }
;;;248      } else {
;;;249        _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_MOVED_OUT);
000198  2203              MOVS     r2,#3
00019a  e7fe              B        _OnButtonReleased
                  |L1.412|
;;;250      }
;;;251    #endif
;;;252    }
00019c  4770              BX       lr
;;;253    
                          ENDP

                  BUTTON_Callback PROC
;;;305    */
;;;306    void BUTTON_Callback(WM_MESSAGE *pMsg) {
00019e  b570              PUSH     {r4-r6,lr}
0001a0  4604              MOV      r4,r0
;;;307      int PressedCnt, Key;
;;;308      BUTTON_Handle hObj = pMsg->hWin;
0001a2  f9b45004          LDRSH    r5,[r4,#4]
;;;309      BUTTON_Obj * pObj = (BUTTON_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0001a6  4628              MOV      r0,r5
0001a8  f7fffffe          BL       GUI_ALLOC_h2p
0001ac  4606              MOV      r6,r0
;;;310      /* Let widget handle the standard messages */
;;;311      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0001ae  4621              MOV      r1,r4
0001b0  4628              MOV      r0,r5
0001b2  f7fffffe          BL       WIDGET_HandleActive
0001b6  2800              CMP      r0,#0
0001b8  d03e              BEQ      |L1.568|
;;;312        return;
;;;313      }
;;;314      switch (pMsg->MsgId) {
0001ba  6820              LDR      r0,[r4,#0]
0001bc  280b              CMP      r0,#0xb
0001be  d011              BEQ      |L1.484|
0001c0  280c              CMP      r0,#0xc
0001c2  d004              BEQ      |L1.462|
0001c4  280e              CMP      r0,#0xe
0001c6  d011              BEQ      |L1.492|
0001c8  280f              CMP      r0,#0xf
0001ca  d130              BNE      |L1.558|
0001cc  e005              B        |L1.474|
                  |L1.462|
;;;315    #if BUTTON_REACT_ON_LEVEL
;;;316      case WM_PID_STATE_CHANGED:
;;;317        _OnPidStateChange(hObj, pObj, pMsg);
;;;318        return;      /* Message handled. Do not call WM_DefaultProc, because the window may have been destroyed */
;;;319    #endif
;;;320      case WM_TOUCH:
;;;321        _OnTouch(hObj, pObj, pMsg);
0001ce  4622              MOV      r2,r4
0001d0  4631              MOV      r1,r6
0001d2  4628              MOV      r0,r5
0001d4  e8bd4070          POP      {r4-r6,lr}
0001d8  e7fe              B        _OnTouch
                  |L1.474|
;;;322        return;      /* Message handled. Do not call WM_DefaultProc, because the window may have been destroyed */
;;;323      case WM_PAINT:
;;;324        GUI_DEBUG_LOG("BUTTON: _BUTTON_Callback(WM_PAINT)\n");
;;;325        _Paint(pObj, hObj);
0001da  4629              MOV      r1,r5
0001dc  4630              MOV      r0,r6
0001de  e8bd4070          POP      {r4-r6,lr}
0001e2  e7fe              B        _Paint
                  |L1.484|
;;;326        return;
;;;327      case WM_DELETE:
;;;328        GUI_DEBUG_LOG("BUTTON: _BUTTON_Callback(WM_DELETE)\n");
;;;329        _Delete(pObj);
0001e4  4630              MOV      r0,r6
0001e6  f7fffffe          BL       _Delete
;;;330        break;       /* No return here ... WM_DefaultProc needs to be called */
0001ea  e020              B        |L1.558|
                  |L1.492|
;;;331      case WM_KEY:
;;;332        PressedCnt = ((WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt;
0001ec  68a1              LDR      r1,[r4,#8]
0001ee  6848              LDR      r0,[r1,#4]
;;;333        Key        = ((WM_KEY_INFO*)(pMsg->Data.p))->Key;
0001f0  6809              LDR      r1,[r1,#0]
;;;334        switch (Key) {
0001f2  290d              CMP      r1,#0xd
0001f4  d002              BEQ      |L1.508|
0001f6  2920              CMP      r1,#0x20
0001f8  d119              BNE      |L1.558|
0001fa  e00b              B        |L1.532|
                  |L1.508|
;;;335        case GUI_KEY_ENTER:
;;;336          if (PressedCnt > 0) {
0001fc  2800              CMP      r0,#0
0001fe  dd16              BLE      |L1.558|
;;;337            _OnButtonPressed(hObj, pObj);
000200  4631              MOV      r1,r6
000202  4628              MOV      r0,r5
000204  f7fffffe          BL       _OnButtonPressed
;;;338            _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_RELEASED);
000208  4631              MOV      r1,r6
00020a  4628              MOV      r0,r5
00020c  e8bd4070          POP      {r4-r6,lr}
000210  2202              MOVS     r2,#2
000212  e7fe              B        _OnButtonReleased
                  |L1.532|
;;;339            return;
;;;340          }
;;;341          break;
;;;342        case GUI_KEY_SPACE:
;;;343          if (PressedCnt > 0) {
000214  2800              CMP      r0,#0
000216  dd04              BLE      |L1.546|
;;;344            _OnButtonPressed(hObj, pObj);
000218  4631              MOV      r1,r6
00021a  4628              MOV      r0,r5
00021c  e8bd4070          POP      {r4-r6,lr}
000220  e7fe              B        _OnButtonPressed
                  |L1.546|
;;;345          } else {
;;;346            _OnButtonReleased(hObj, pObj, WM_NOTIFICATION_RELEASED);
000222  4631              MOV      r1,r6
000224  4628              MOV      r0,r5
000226  e8bd4070          POP      {r4-r6,lr}
00022a  2202              MOVS     r2,#2
00022c  e7fe              B        _OnButtonReleased
                  |L1.558|
;;;347          }
;;;348          return;
;;;349        }
;;;350      }
;;;351      WM_DefaultProc(pMsg);
00022e  4620              MOV      r0,r4
000230  e8bd4070          POP      {r4-r6,lr}
000234  f7ffbffe          B.W      WM_DefaultProc
                  |L1.568|
;;;352    }
000238  bd70              POP      {r4-r6,pc}
;;;353    
                          ENDP

                  BUTTON_CreateEx PROC
;;;363    */
;;;364    BUTTON_Handle BUTTON_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags, int Id) {
00023a  e92d47f0          PUSH     {r4-r10,lr}
00023e  b084              SUB      sp,sp,#0x10
000240  4607              MOV      r7,r0
000242  4688              MOV      r8,r1
000244  4691              MOV      r9,r2
000246  469a              MOV      r10,r3
000248  9e0f              LDR      r6,[sp,#0x3c]
00024a  9d0c              LDR      r5,[sp,#0x30]
00024c  9c0d              LDR      r4,[sp,#0x34]
;;;365      BUTTON_Handle hObj;
;;;366      GUI_USE_PARA(ExFlags);
;;;367      /* Create the window */
;;;368      WM_LOCK();
00024e  f7fffffe          BL       GUI_Lock
;;;369      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, BUTTON_Callback,
000252  2334              MOVS     r3,#0x34
000254  f2af02b9          ADR      r2,BUTTON_Callback + 1
000258  b2a1              UXTH     r1,r4
00025a  9303              STR      r3,[sp,#0xc]
00025c  9202              STR      r2,[sp,#8]
00025e  9101              STR      r1,[sp,#4]
000260  9500              STR      r5,[sp,#0]
000262  4653              MOV      r3,r10
000264  464a              MOV      r2,r9
000266  4641              MOV      r1,r8
000268  4638              MOV      r0,r7
00026a  f7fffffe          BL       WM_CreateWindowAsChild
00026e  4605              MOV      r5,r0
;;;370                                    sizeof(BUTTON_Obj) - sizeof(WM_Obj));
;;;371      if (hObj) {
000270  b1cd              CBZ      r5,|L1.678|
;;;372        BUTTON_Obj * pObj = (BUTTON_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000272  4628              MOV      r0,r5
000274  f7fffffe          BL       GUI_ALLOC_h2p
000278  4604              MOV      r4,r0
;;;373        /* init widget specific variables */
;;;374        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
00027a  2210              MOVS     r2,#0x10
00027c  4631              MOV      r1,r6
00027e  4620              MOV      r0,r4
000280  f7fffffe          BL       WIDGET__Init
;;;375        /* init member variables */
;;;376        BUTTON_INIT_ID(pObj);
;;;377        pObj->Props = BUTTON__DefaultProps;
000284  4841              LDR      r0,|L1.908|
000286  e890100e          LDM      r0,{r1-r3,r12}
00028a  e9c43c0c          STRD     r3,r12,[r4,#0x30]
00028e  62e2              STR      r2,[r4,#0x2c]
000290  62a1              STR      r1,[r4,#0x28]
000292  e9d03c06          LDRD     r3,r12,[r0,#0x18]
000296  6942              LDR      r2,[r0,#0x14]  ; BUTTON__DefaultProps
000298  6901              LDR      r1,[r0,#0x10]  ; BUTTON__DefaultProps
00029a  e9c43c10          STRD     r3,r12,[r4,#0x40]
00029e  63e2              STR      r2,[r4,#0x3c]
0002a0  63a1              STR      r1,[r4,#0x38]
0002a2  6a00              LDR      r0,[r0,#0x20]  ; BUTTON__DefaultProps
0002a4  64a0              STR      r0,[r4,#0x48]
                  |L1.678|
;;;378      } else {
;;;379        GUI_DEBUG_ERROROUT_IF(hObj==0, "BUTTON_Create failed")
;;;380      }
;;;381      WM_UNLOCK();
0002a6  f7fffffe          BL       GUI_Unlock
;;;382      return hObj;
;;;383    }
0002aa  b004              ADD      sp,sp,#0x10
0002ac  4628              MOV      r0,r5                 ;382
0002ae  e8bd87f0          POP      {r4-r10,pc}
;;;384    
                          ENDP

                  BUTTON_SetText PROC
;;;395    */
;;;396    void BUTTON_SetText(BUTTON_Handle hObj, const char* s) {
0002b2  b570              PUSH     {r4-r6,lr}
0002b4  4604              MOV      r4,r0
0002b6  460d              MOV      r5,r1
;;;397      if (hObj) {
0002b8  2c00              CMP      r4,#0
0002ba  d010              BEQ      |L1.734|
;;;398        BUTTON_Obj* pObj;
;;;399        WM_LOCK();
0002bc  f7fffffe          BL       GUI_Lock
;;;400        pObj = BUTTON_H2P(hObj);
0002c0  4620              MOV      r0,r4
0002c2  f7fffffe          BL       GUI_ALLOC_h2p
;;;401        if (GUI__SetText(&pObj->hpText, s)) {
0002c6  4629              MOV      r1,r5
0002c8  304c              ADDS     r0,r0,#0x4c
0002ca  f7fffffe          BL       GUI__SetText
0002ce  b110              CBZ      r0,|L1.726|
;;;402          BUTTON_Invalidate(hObj);
0002d0  4620              MOV      r0,r4
0002d2  f7fffffe          BL       WM_InvalidateWindow
                  |L1.726|
;;;403        }
;;;404        WM_UNLOCK();
0002d6  e8bd4070          POP      {r4-r6,lr}
0002da  f7ffbffe          B.W      GUI_Unlock
                  |L1.734|
;;;405      }
;;;406    }
0002de  bd70              POP      {r4-r6,pc}
;;;407    
                          ENDP

                  BUTTON_SetFont PROC
;;;411    */
;;;412    void BUTTON_SetFont(BUTTON_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
0002e0  b570              PUSH     {r4-r6,lr}
0002e2  4605              MOV      r5,r0
0002e4  460c              MOV      r4,r1
;;;413      if (hObj) {
0002e6  2d00              CMP      r5,#0
0002e8  d00c              BEQ      |L1.772|
;;;414        BUTTON_Obj* pObj;
;;;415        WM_LOCK();
0002ea  f7fffffe          BL       GUI_Lock
;;;416        pObj = BUTTON_H2P(hObj);
0002ee  4628              MOV      r0,r5
0002f0  f7fffffe          BL       GUI_ALLOC_h2p
;;;417        pObj->Props.pFont = pfont;
0002f4  6444              STR      r4,[r0,#0x44]
;;;418        BUTTON_Invalidate(hObj);
0002f6  4628              MOV      r0,r5
0002f8  f7fffffe          BL       WM_InvalidateWindow
;;;419        WM_UNLOCK();
0002fc  e8bd4070          POP      {r4-r6,lr}
000300  f7ffbffe          B.W      GUI_Unlock
                  |L1.772|
;;;420      }
;;;421    }
000304  bd70              POP      {r4-r6,pc}
;;;422    
                          ENDP

                  BUTTON_SetBkColor PROC
;;;426    */
;;;427    void BUTTON_SetBkColor(BUTTON_Handle hObj,unsigned int Index, GUI_COLOR Color) {
000306  b570              PUSH     {r4-r6,lr}
000308  4606              MOV      r6,r0
00030a  460c              MOV      r4,r1
00030c  4615              MOV      r5,r2
;;;428      if (hObj && (Index <= 2)) {
00030e  2e00              CMP      r6,#0
000310  d010              BEQ      |L1.820|
000312  2c02              CMP      r4,#2
000314  d80e              BHI      |L1.820|
;;;429        BUTTON_Obj* pObj;
;;;430        WM_LOCK();
000316  f7fffffe          BL       GUI_Lock
;;;431        pObj = BUTTON_H2P(hObj);
00031a  4630              MOV      r0,r6
00031c  f7fffffe          BL       GUI_ALLOC_h2p
;;;432        pObj->Props.aBkColor[Index] = Color;
000320  eb000084          ADD      r0,r0,r4,LSL #2
000324  6285              STR      r5,[r0,#0x28]
;;;433        BUTTON_Invalidate(hObj);
000326  4630              MOV      r0,r6
000328  f7fffffe          BL       WM_InvalidateWindow
;;;434        WM_UNLOCK();
00032c  e8bd4070          POP      {r4-r6,lr}
000330  f7ffbffe          B.W      GUI_Unlock
                  |L1.820|
;;;435      }
;;;436    }
000334  bd70              POP      {r4-r6,pc}
;;;437    
                          ENDP

                  BUTTON_SetTextColor PROC
;;;441    */
;;;442    void BUTTON_SetTextColor(BUTTON_Handle hObj,unsigned int Index, GUI_COLOR Color) {
000336  b570              PUSH     {r4-r6,lr}
000338  4606              MOV      r6,r0
00033a  460c              MOV      r4,r1
00033c  4615              MOV      r5,r2
;;;443      if (hObj && (Index <= 2)) {
00033e  2e00              CMP      r6,#0
000340  d010              BEQ      |L1.868|
000342  2c02              CMP      r4,#2
000344  d80e              BHI      |L1.868|
;;;444        BUTTON_Obj* pObj;
;;;445        WM_LOCK();
000346  f7fffffe          BL       GUI_Lock
;;;446        pObj = BUTTON_H2P(hObj);
00034a  4630              MOV      r0,r6
00034c  f7fffffe          BL       GUI_ALLOC_h2p
;;;447        pObj->Props.aTextColor[Index] = Color;
000350  eb000084          ADD      r0,r0,r4,LSL #2
000354  6345              STR      r5,[r0,#0x34]
;;;448        BUTTON_Invalidate(hObj);
000356  4630              MOV      r0,r6
000358  f7fffffe          BL       WM_InvalidateWindow
;;;449        WM_UNLOCK();
00035c  e8bd4070          POP      {r4-r6,lr}
000360  f7ffbffe          B.W      GUI_Unlock
                  |L1.868|
;;;450      }
;;;451    }
000364  bd70              POP      {r4-r6,pc}
;;;452    
                          ENDP

                  BUTTON_SetState PROC
;;;456    */
;;;457    void BUTTON_SetState(BUTTON_Handle hObj, int State) {
000366  f7ffbffe          B.W      WIDGET_SetState
;;;458      WIDGET_SetState(hObj, State);
;;;459    }
;;;460    
                          ENDP

                  BUTTON_SetPressed PROC
;;;464    */
;;;465    void BUTTON_SetPressed(BUTTON_Handle hObj, int State) {
00036a  b119              CBZ      r1,|L1.884|
;;;466      if (State) {
;;;467        WIDGET_OrState(hObj, BUTTON_STATE_PRESSED);
00036c  f44f7180          MOV      r1,#0x100
000370  f7ffbffe          B.W      WIDGET_OrState
                  |L1.884|
;;;468      } else {
;;;469        WIDGET_AndState(hObj, BUTTON_STATE_PRESSED);
000374  f44f7180          MOV      r1,#0x100
000378  f7ffbffe          B.W      WIDGET_AndState
;;;470      }
;;;471    }
;;;472    
                          ENDP

                  BUTTON_SetFocussable PROC
;;;476    */
;;;477    void BUTTON_SetFocussable(BUTTON_Handle hObj, int State) {
00037c  b111              CBZ      r1,|L1.900|
;;;478      if (State) {
;;;479        WIDGET_OrState(hObj, WIDGET_STATE_FOCUSSABLE);
00037e  2110              MOVS     r1,#0x10
000380  f7ffbffe          B.W      WIDGET_OrState
                  |L1.900|
;;;480      } else {
;;;481        WIDGET_AndState(hObj, WIDGET_STATE_FOCUSSABLE);
000384  2110              MOVS     r1,#0x10
000386  f7ffbffe          B.W      WIDGET_AndState
;;;482      }
;;;483    }
;;;484    
                          ENDP

00038a  0000              DCW      0x0000
                  |L1.908|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  BUTTON__DefaultProps
                          DCD      0x00aaaaaa
                          DCD      0x00ffffff
                          DCD      0x00d3d3d3
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00404040
                          DCD      0x00000000
                          DCD      GUI_Font13_1
000020  000e              DCW      0x000e
000022  0000              DCB      0x00,0x00
