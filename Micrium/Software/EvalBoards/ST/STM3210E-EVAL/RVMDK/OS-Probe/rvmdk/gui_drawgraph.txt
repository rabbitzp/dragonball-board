; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_drawgraph.o --depend=.\rvmdk\gui_drawgraph.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_drawgraph.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_DrawGraph.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DrawGraph PROC
;;;32     */
;;;33     static void _DrawGraph(I16 *pay, int NumPoints, int xOff, int yOff) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  4682              MOV      r10,r0
000008  460f              MOV      r7,r1
00000a  4616              MOV      r6,r2
00000c  469b              MOV      r11,r3
;;;34       int i;
;;;35       int y0, y1;
;;;36       int yClip0, yClip1;
;;;37       /* Perform high level clipping in x */
;;;38       yClip0 = GUI_Context.pClipRect_HL->y0;
00000e  4837              LDR      r0,|L1.236|
000010  6941              LDR      r1,[r0,#0x14]  ; GUI_Context
000012  f9b18002          LDRSH    r8,[r1,#2]
;;;39       yClip1 = GUI_Context.pClipRect_HL->y1;
000016  f9b19006          LDRSH    r9,[r1,#6]
;;;40       i=0;
00001a  2000              MOVS     r0,#0
;;;41       if (GUI_Context.pClipRect_HL) {
00001c  b161              CBZ      r1,|L1.56|
;;;42         if (xOff < GUI_Context.pClipRect_HL->x0)
00001e  f9b12000          LDRSH    r2,[r1,#0]
000022  42b2              CMP      r2,r6
000024  dd00              BLE      |L1.40|
;;;43           i = GUI_Context.pClipRect_HL->x0 - xOff;
000026  1b90              SUBS     r0,r2,r6
                  |L1.40|
;;;44         if (xOff+NumPoints-1 > GUI_Context.pClipRect_HL->x1)
000028  19f2              ADDS     r2,r6,r7
00002a  f9b11004          LDRSH    r1,[r1,#4]
00002e  1e52              SUBS     r2,r2,#1
000030  428a              CMP      r2,r1
000032  dd01              BLE      |L1.56|
;;;45           NumPoints = GUI_Context.pClipRect_HL->x1 - xOff + 1;
000034  1b89              SUBS     r1,r1,r6
000036  1c4f              ADDS     r7,r1,#1
                  |L1.56|
;;;46       }
;;;47       /* Start drawing if there is something left to do after x-clipping */
;;;48       if (i < NumPoints) {
000038  42b8              CMP      r0,r7
00003a  da35              BGE      |L1.168|
;;;49         y0 = *(pay + i++) + yOff;
00003c  1c44              ADDS     r4,r0,#1
00003e  f93a0010          LDRSH    r0,[r10,r0,LSL #1]
000042  eb00010b          ADD      r1,r0,r11
;;;50         /* Iterate */
;;;51         for (; i < NumPoints; i++) {
000046  42bc              CMP      r4,r7
000048  da2e              BGE      |L1.168|
                  |L1.74|
;;;52           /* Perform high level clipping in y */
;;;53           y1 = *(pay + i) + yOff;
00004a  f93a0014          LDRSH    r0,[r10,r4,LSL #1]
00004e  eb00050b          ADD      r5,r0,r11
;;;54           if ((y0 >= yClip0) || (y1 >= yClip0)) {
000052  4541              CMP      r1,r8
000054  da01              BGE      |L1.90|
000056  4545              CMP      r5,r8
000058  db22              BLT      |L1.160|
                  |L1.90|
;;;55             if ((y0 <= yClip1) || (y1 <= yClip1)) {
00005a  4549              CMP      r1,r9
00005c  dd01              BLE      |L1.98|
00005e  454d              CMP      r5,r9
000060  dc1e              BGT      |L1.160|
                  |L1.98|
;;;56               int y01;
;;;57               y01 = (y1 + y0) / 2;
000062  1868              ADDS     r0,r5,r1
000064  eb0070d0          ADD      r0,r0,r0,LSR #31
000068  1040              ASRS     r0,r0,#1
00006a  9000              STR      r0,[sp,#0]
;;;58               if (y0 <= y1) {
00006c  42a9              CMP      r1,r5
00006e  dc0b              BGT      |L1.136|
;;;59                 LCD_DrawVLine(i + xOff - 1, y0, y01);
000070  19a0              ADDS     r0,r4,r6
000072  9002              STR      r0,[sp,#8]
000074  1e40              SUBS     r0,r0,#1
000076  9a00              LDR      r2,[sp,#0]
000078  f7fffffe          BL       LCD_DrawVLine
;;;60                 LCD_DrawVLine(i + xOff, y01, y1);
00007c  462a              MOV      r2,r5
00007e  9900              LDR      r1,[sp,#0]
000080  9802              LDR      r0,[sp,#8]
000082  f7fffffe          BL       LCD_DrawVLine
000086  e00b              B        |L1.160|
                  |L1.136|
;;;61               } else {
;;;62                 LCD_DrawVLine(i + xOff - 1, y01, y0);
000088  19a0              ADDS     r0,r4,r6
00008a  9001              STR      r0,[sp,#4]
00008c  460a              MOV      r2,r1
00008e  1e40              SUBS     r0,r0,#1
000090  9900              LDR      r1,[sp,#0]
000092  f7fffffe          BL       LCD_DrawVLine
;;;63                 LCD_DrawVLine(i + xOff, y1, y01);
000096  4629              MOV      r1,r5
000098  9a00              LDR      r2,[sp,#0]
00009a  9801              LDR      r0,[sp,#4]
00009c  f7fffffe          BL       LCD_DrawVLine
                  |L1.160|
;;;64               }
;;;65             }
;;;66           }
;;;67           y0 = y1;
0000a0  4629              MOV      r1,r5
0000a2  1c64              ADDS     r4,r4,#1              ;51
0000a4  42bc              CMP      r4,r7                 ;51
0000a6  dbd0              BLT      |L1.74|
                  |L1.168|
;;;68         }
;;;69       }
;;;70     }
0000a8  b003              ADD      sp,sp,#0xc
0000aa  e8bd8ff0          POP      {r4-r11,pc}
;;;71     
                          ENDP

                  GUI_DrawGraph PROC
;;;81     */  
;;;82     void GUI_DrawGraph(I16 *pay, int NumPoints, int x0, int y0) {
0000ae  e92d41f0          PUSH     {r4-r8,lr}
0000b2  4606              MOV      r6,r0
0000b4  460f              MOV      r7,r1
0000b6  4614              MOV      r4,r2
0000b8  461d              MOV      r5,r3
;;;83       GUI_LOCK();
0000ba  f7fffffe          BL       GUI_Lock
;;;84       #if (GUI_WINSUPPORT)
;;;85         WM_ADDORG(x0,y0);
0000be  480b              LDR      r0,|L1.236|
0000c0  6c41              LDR      r1,[r0,#0x44]  ; GUI_Context
0000c2  440c              ADD      r4,r4,r1
0000c4  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
0000c6  4405              ADD      r5,r5,r0
;;;86         WM_ITERATE_START(NULL); {
0000c8  2000              MOVS     r0,#0
0000ca  f7fffffe          BL       WM__InitIVRSearch
0000ce  b148              CBZ      r0,|L1.228|
                  |L1.208|
;;;87       #endif
;;;88       _DrawGraph(pay, NumPoints, x0, y0);
0000d0  462b              MOV      r3,r5
0000d2  4622              MOV      r2,r4
0000d4  4639              MOV      r1,r7
0000d6  4630              MOV      r0,r6
0000d8  f7fffffe          BL       _DrawGraph
;;;89       #if (GUI_WINSUPPORT)
;;;90         } WM_ITERATE_END();
0000dc  f7fffffe          BL       WM__GetNextIVR
0000e0  2800              CMP      r0,#0
0000e2  d1f5              BNE      |L1.208|
                  |L1.228|
;;;91       #endif
;;;92       GUI_UNLOCK();
0000e4  e8bd41f0          POP      {r4-r8,lr}
0000e8  f7ffbffe          B.W      GUI_Unlock
;;;93     }
;;;94     
                          ENDP

                  |L1.236|
                          DCD      GUI_Context
