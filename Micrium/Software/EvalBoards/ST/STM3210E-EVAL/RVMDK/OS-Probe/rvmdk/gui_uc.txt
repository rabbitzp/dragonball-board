; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_uc.o --depend=.\rvmdk\gui_uc.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_uc.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_UC.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_UC_GetCharSize PROC
;;;31     */
;;;32     int GUI_UC_GetCharSize(const char GUI_UNI_PTR * s) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;33       #if GUI_SUPPORT_UNICODE
;;;34         int r;
;;;35         GUI_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;36         r =  GUI_Context.pUC_API->pfGetCharSize(s);
000008  4933              LDR      r1,|L1.216|
00000a  4620              MOV      r0,r4
00000c  6a09              LDR      r1,[r1,#0x20]  ; GUI_Context
00000e  6849              LDR      r1,[r1,#4]
000010  4788              BLX      r1
000012  4604              MOV      r4,r0
;;;37         GUI_UNLOCK();
000014  f7fffffe          BL       GUI_Unlock
;;;38         return r;
000018  4620              MOV      r0,r4
;;;39       #else
;;;40         return 1;
;;;41       #endif
;;;42     }
00001a  bd10              POP      {r4,pc}
;;;43     
                          ENDP

                  GUI_UC_GetCharCode PROC
;;;47     */
;;;48     U16 GUI_UC_GetCharCode(const char GUI_UNI_PTR * s) {
00001c  b510              PUSH     {r4,lr}
00001e  4604              MOV      r4,r0
;;;49       #if GUI_SUPPORT_UNICODE
;;;50         U16 r;
;;;51         GUI_LOCK();
000020  f7fffffe          BL       GUI_Lock
;;;52         r =  GUI_Context.pUC_API->pfGetCharCode(s);
000024  492c              LDR      r1,|L1.216|
000026  4620              MOV      r0,r4
000028  6a09              LDR      r1,[r1,#0x20]  ; GUI_Context
00002a  6809              LDR      r1,[r1,#0]
00002c  4788              BLX      r1
00002e  4604              MOV      r4,r0
;;;53         GUI_UNLOCK();
000030  f7fffffe          BL       GUI_Unlock
;;;54         return r;
000034  4620              MOV      r0,r4
;;;55       #else
;;;56         return *(const U8 GUI_UNI_PTR *)s;
;;;57       #endif
;;;58     }
000036  bd10              POP      {r4,pc}
;;;59     
                          ENDP

                  GUI_UC_Encode PROC
;;;63     */
;;;64     int GUI_UC_Encode(char* s, U16 Char) {
000038  b570              PUSH     {r4-r6,lr}
00003a  4604              MOV      r4,r0
00003c  460d              MOV      r5,r1
;;;65       #if GUI_COMPILER_SUPPORTS_FP
;;;66         #if GUI_SUPPORT_UNICODE
;;;67           int r;
;;;68           GUI_LOCK();
00003e  f7fffffe          BL       GUI_Lock
;;;69           r = GUI_Context.pUC_API->pfEncode(s, Char);
000042  4a25              LDR      r2,|L1.216|
000044  4629              MOV      r1,r5
000046  4620              MOV      r0,r4
000048  6a12              LDR      r2,[r2,#0x20]  ; GUI_Context
00004a  68d2              LDR      r2,[r2,#0xc]
00004c  4790              BLX      r2
00004e  4604              MOV      r4,r0
;;;70           GUI_UNLOCK();
000050  f7fffffe          BL       GUI_Unlock
;;;71           return r;
000054  4620              MOV      r0,r4
;;;72         #else
;;;73           *s = (U8)(Char);
;;;74           return Char;
;;;75         #endif
;;;76       #else
;;;77         GUI_USE_PARA(s);
;;;78         GUI_USE_PARA(Char);
;;;79         return 0;
;;;80       #endif
;;;81     }
000056  bd70              POP      {r4-r6,pc}
;;;82     
                          ENDP

                  GUI_UC__CalcSizeOfChar PROC
;;;86     */
;;;87     int GUI_UC__CalcSizeOfChar(U16 Char) {
000058  491f              LDR      r1,|L1.216|
;;;88       #if GUI_SUPPORT_UNICODE
;;;89         return GUI_Context.pUC_API->pfCalcSizeOfChar(Char);
00005a  6a09              LDR      r1,[r1,#0x20]  ; GUI_Context
00005c  6889              LDR      r1,[r1,#8]
00005e  4708              BX       r1
;;;90       #else
;;;91         return 1;
;;;92       #endif
;;;93     }
;;;94     
                          ENDP

                  GUI_UC__GetCharCodeInc PROC
;;;98     */
;;;99     U16 GUI_UC__GetCharCodeInc(const char GUI_UNI_PTR ** ps) {
000060  e92d41f0          PUSH     {r4-r8,lr}
000064  4604              MOV      r4,r0
;;;100      const char GUI_UNI_PTR * s;
;;;101      U16 r;
;;;102      s   = *ps;
000066  6825              LDR      r5,[r4,#0]
;;;103      #if GUI_SUPPORT_UNICODE
;;;104        r   = GUI_UC__GetCharCode(s);
000068  4e1b              LDR      r6,|L1.216|
00006a  6a30              LDR      r0,[r6,#0x20]  ; GUI_Context
00006c  6801              LDR      r1,[r0,#0]
00006e  4628              MOV      r0,r5
000070  4788              BLX      r1
000072  4607              MOV      r7,r0
;;;105        s  += GUI_UC__GetCharSize(s);
000074  6a30              LDR      r0,[r6,#0x20]  ; GUI_Context
000076  6841              LDR      r1,[r0,#4]
000078  4628              MOV      r0,r5
00007a  4788              BLX      r1
00007c  4428              ADD      r0,r0,r5
;;;106      #else
;;;107        r   = *s;
;;;108        s  += 1;
;;;109      #endif
;;;110      *ps = s;
00007e  6020              STR      r0,[r4,#0]
;;;111      return r;
000080  4638              MOV      r0,r7
;;;112    }
000082  e8bd81f0          POP      {r4-r8,pc}
;;;113    
                          ENDP

                  GUI_UC__NumChars2NumBytes PROC
;;;117    */
;;;118    int GUI_UC__NumChars2NumBytes(const char GUI_UNI_PTR * s, int NumChars) {
000086  e92d41f0          PUSH     {r4-r8,lr}
00008a  4606              MOV      r6,r0
;;;119      int CharSize, NumBytes = 0;
00008c  2500              MOVS     r5,#0
;;;120      while (NumChars--) {
00008e  1e4c              SUBS     r4,r1,#1
000090  b141              CBZ      r1,|L1.164|
;;;121        #if GUI_SUPPORT_UNICODE
;;;122          CharSize = GUI_UC__GetCharSize(s);
000092  4f11              LDR      r7,|L1.216|
                  |L1.148|
000094  6a38              LDR      r0,[r7,#0x20]  ; GUI_Context
000096  6841              LDR      r1,[r0,#4]
000098  4630              MOV      r0,r6
00009a  4788              BLX      r1
;;;123        #else
;;;124          CharSize = 1;
;;;125        #endif
;;;126        s += CharSize;    
00009c  4406              ADD      r6,r6,r0
;;;127        NumBytes += CharSize;
00009e  4405              ADD      r5,r5,r0
0000a0  1e64              SUBS     r4,r4,#1              ;120
0000a2  d2f7              BCS      |L1.148|
                  |L1.164|
;;;128      }
;;;129      return NumBytes;
0000a4  4628              MOV      r0,r5
;;;130    }
0000a6  e8bd81f0          POP      {r4-r8,pc}
;;;131    
                          ENDP

                  GUI_UC__NumBytes2NumChars PROC
;;;135    */
;;;136    int GUI_UC__NumBytes2NumChars(const char GUI_UNI_PTR * s, int NumBytes) {
0000aa  e92d41f0          PUSH     {r4-r8,lr}
0000ae  4607              MOV      r7,r0
0000b0  460e              MOV      r6,r1
;;;137      int CharSize, Chars = 0, Bytes = 0;
0000b2  2500              MOVS     r5,#0
0000b4  2400              MOVS     r4,#0
;;;138      while (NumBytes > Bytes) {
0000b6  2e00              CMP      r6,#0
0000b8  dd0a              BLE      |L1.208|
;;;139        #if GUI_SUPPORT_UNICODE
;;;140          CharSize = GUI_UC__GetCharSize(s + Bytes);
0000ba  f8df801c          LDR      r8,|L1.216|
                  |L1.190|
0000be  1938              ADDS     r0,r7,r4
0000c0  f8d81020          LDR      r1,[r8,#0x20]  ; GUI_Context
0000c4  684a              LDR      r2,[r1,#4]
0000c6  4790              BLX      r2
;;;141        #else
;;;142          CharSize = 1;
;;;143        #endif
;;;144        Bytes += CharSize;
0000c8  4404              ADD      r4,r4,r0
;;;145        Chars++;
0000ca  1c6d              ADDS     r5,r5,#1
0000cc  42a6              CMP      r6,r4                 ;138
0000ce  dcf6              BGT      |L1.190|
                  |L1.208|
;;;146      }
;;;147      return Chars;
0000d0  4628              MOV      r0,r5
;;;148    }
0000d2  e8bd81f0          POP      {r4-r8,pc}
;;;149    
                          ENDP

0000d6  0000              DCW      0x0000
                  |L1.216|
                          DCD      GUI_Context
