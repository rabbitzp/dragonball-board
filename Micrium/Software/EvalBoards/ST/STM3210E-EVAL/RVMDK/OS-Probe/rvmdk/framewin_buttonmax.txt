; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\framewin_buttonmax.o --depend=.\rvmdk\framewin_buttonmax.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\framewin_buttonmax.crf ..\..\..\..\..\uCGUI\GUI\Widget\FRAMEWIN_ButtonMax.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _cbMax PROC
;;;47     */
;;;48     static void _cbMax(WM_MESSAGE* pMsg) {
000000  b510              PUSH     {r4,lr}
;;;49       if (pMsg->MsgId == WM_NOTIFY_PARENT_REFLECTION) {
000002  6801              LDR      r1,[r0,#0]
000004  2927              CMP      r1,#0x27
000006  d003              BEQ      |L1.16|
;;;50         WM_HWIN hWin = pMsg->hWinSrc;
;;;51         FRAMEWIN_Obj* pObj = FRAMEWIN_H2P(hWin);
;;;52         if (pObj->Flags & FRAMEWIN_SF_MAXIMIZED) {
;;;53           FRAMEWIN_Restore(hWin);
;;;54         } else {
;;;55           FRAMEWIN_Maximize(hWin);
;;;56         }
;;;57         return;                                       /* We are done ! */
;;;58       }
;;;59       BUTTON_Callback(pMsg);
000008  e8bd4010          POP      {r4,lr}
00000c  f7ffbffe          B.W      BUTTON_Callback
                  |L1.16|
000010  f9b04006          LDRSH    r4,[r0,#6]            ;50
000014  4620              MOV      r0,r4                 ;51
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  f8b0005a          LDRH     r0,[r0,#0x5a]         ;52
00001e  f0100f80          TST      r0,#0x80              ;52
000022  d004              BEQ      |L1.46|
000024  4620              MOV      r0,r4                 ;53
000026  e8bd4010          POP      {r4,lr}               ;53
00002a  f7ffbffe          B.W      FRAMEWIN_Restore
                  |L1.46|
00002e  4620              MOV      r0,r4                 ;55
000030  e8bd4010          POP      {r4,lr}               ;55
000034  f7ffbffe          B.W      FRAMEWIN_Maximize
;;;60     }
;;;61     
                          ENDP

                  _DrawMax PROC
;;;65     */
;;;66     static void _DrawMax(void) {
000038  b500              PUSH     {lr}
00003a  b083              SUB      sp,sp,#0xc
;;;67       GUI_RECT r;
;;;68       WM_GetInsideRect(&r);
00003c  4668              MOV      r0,sp
00003e  f7fffffe          BL       WM_GetInsideRect
;;;69       WM_ADDORG(r.x0, r.y0);
000042  4985              LDR      r1,|L1.600|
000044  f8bd2000          LDRH     r2,[sp,#0]
000048  6c48              LDR      r0,[r1,#0x44]  ; GUI_Context
00004a  4402              ADD      r2,r2,r0
00004c  f8ad2000          STRH     r2,[sp,#0]
000050  f8bd2002          LDRH     r2,[sp,#2]
000054  6c89              LDR      r1,[r1,#0x48]  ; GUI_Context
000056  440a              ADD      r2,r2,r1
000058  f8ad2002          STRH     r2,[sp,#2]
;;;70       WM_ADDORG(r.x1, r.y1);
00005c  f8bd2004          LDRH     r2,[sp,#4]
000060  4410              ADD      r0,r0,r2
000062  f8ad0004          STRH     r0,[sp,#4]
000066  f8bd0006          LDRH     r0,[sp,#6]
00006a  4408              ADD      r0,r0,r1
00006c  f8ad0006          STRH     r0,[sp,#6]
;;;71       WM_ITERATE_START(&r); {
000070  4668              MOV      r0,sp
000072  f7fffffe          BL       WM__InitIVRSearch
000076  2800              CMP      r0,#0
000078  d03a              BEQ      |L1.240|
                  |L1.122|
;;;72         LCD_DrawHLine(r.x0 + 1, r.y0 + 1, r.x1 - 1);
00007a  f9bd0004          LDRSH    r0,[sp,#4]
00007e  1e42              SUBS     r2,r0,#1
000080  f9bd0002          LDRSH    r0,[sp,#2]
000084  1c41              ADDS     r1,r0,#1
000086  f9bd0000          LDRSH    r0,[sp,#0]
00008a  1c40              ADDS     r0,r0,#1
00008c  f7fffffe          BL       LCD_DrawHLine
;;;73         LCD_DrawHLine(r.x0 + 1, r.y0 + 2, r.x1 - 1);
000090  f9bd0004          LDRSH    r0,[sp,#4]
000094  1e42              SUBS     r2,r0,#1
000096  f9bd0002          LDRSH    r0,[sp,#2]
00009a  1c81              ADDS     r1,r0,#2
00009c  f9bd0000          LDRSH    r0,[sp,#0]
0000a0  1c40              ADDS     r0,r0,#1
0000a2  f7fffffe          BL       LCD_DrawHLine
;;;74         LCD_DrawHLine(r.x0 + 1, r.y1 - 1, r.x1 - 1);
0000a6  f9bd0004          LDRSH    r0,[sp,#4]
0000aa  1e42              SUBS     r2,r0,#1
0000ac  f9bd0006          LDRSH    r0,[sp,#6]
0000b0  1e41              SUBS     r1,r0,#1
0000b2  f9bd0000          LDRSH    r0,[sp,#0]
0000b6  1c40              ADDS     r0,r0,#1
0000b8  f7fffffe          BL       LCD_DrawHLine
;;;75         LCD_DrawVLine(r.x0 + 1, r.y0 + 1, r.y1 - 1);
0000bc  f9bd0006          LDRSH    r0,[sp,#6]
0000c0  1e42              SUBS     r2,r0,#1
0000c2  f9bd0002          LDRSH    r0,[sp,#2]
0000c6  1c41              ADDS     r1,r0,#1
0000c8  f9bd0000          LDRSH    r0,[sp,#0]
0000cc  1c40              ADDS     r0,r0,#1
0000ce  f7fffffe          BL       LCD_DrawVLine
;;;76         LCD_DrawVLine(r.x1 - 1, r.y0 + 1, r.y1 - 1);
0000d2  f9bd0006          LDRSH    r0,[sp,#6]
0000d6  1e42              SUBS     r2,r0,#1
0000d8  f9bd0002          LDRSH    r0,[sp,#2]
0000dc  1c41              ADDS     r1,r0,#1
0000de  f9bd0004          LDRSH    r0,[sp,#4]
0000e2  1e40              SUBS     r0,r0,#1
0000e4  f7fffffe          BL       LCD_DrawVLine
;;;77       } WM_ITERATE_END();
0000e8  f7fffffe          BL       WM__GetNextIVR
0000ec  2800              CMP      r0,#0
0000ee  d1c4              BNE      |L1.122|
                  |L1.240|
;;;78     }
0000f0  b003              ADD      sp,sp,#0xc
0000f2  bd00              POP      {pc}
;;;79     
                          ENDP

                  _DrawRestore PROC
;;;83     */
;;;84     static void _DrawRestore(void) {
0000f4  b510              PUSH     {r4,lr}
0000f6  b082              SUB      sp,sp,#8
;;;85       GUI_RECT r;
;;;86       int Size;
;;;87       WM_GetInsideRect(&r);
0000f8  4668              MOV      r0,sp
0000fa  f7fffffe          BL       WM_GetInsideRect
;;;88       WM_ADDORG(r.x0, r.y0);
0000fe  4956              LDR      r1,|L1.600|
000100  f8bd0000          LDRH     r0,[sp,#0]
000104  6c4a              LDR      r2,[r1,#0x44]  ; GUI_Context
000106  4410              ADD      r0,r0,r2
000108  b200              SXTH     r0,r0
00010a  f8ad0000          STRH     r0,[sp,#0]
00010e  f8bd3002          LDRH     r3,[sp,#2]
000112  6c89              LDR      r1,[r1,#0x48]  ; GUI_Context
000114  440b              ADD      r3,r3,r1
000116  f8ad3002          STRH     r3,[sp,#2]
;;;89       WM_ADDORG(r.x1, r.y1);
00011a  f8bd3004          LDRH     r3,[sp,#4]
00011e  441a              ADD      r2,r2,r3
000120  b212              SXTH     r2,r2
000122  f8ad2004          STRH     r2,[sp,#4]
000126  f8bd3006          LDRH     r3,[sp,#6]
00012a  4419              ADD      r1,r1,r3
00012c  f8ad1006          STRH     r1,[sp,#6]
;;;90       Size = ((r.x1 - r.x0 + 1) << 1) / 3;
000130  1a10              SUBS     r0,r2,r0
000132  1c40              ADDS     r0,r0,#1
000134  4949              LDR      r1,|L1.604|
000136  0040              LSLS     r0,r0,#1
000138  fb811000          SMULL    r1,r0,r1,r0
00013c  eba074e0          SUB      r4,r0,r0,ASR #31
;;;91       WM_ITERATE_START(&r); {
000140  4668              MOV      r0,sp
000142  f7fffffe          BL       WM__InitIVRSearch
000146  2800              CMP      r0,#0
000148  d062              BEQ      |L1.528|
                  |L1.330|
;;;92         LCD_DrawHLine(r.x1 - Size, r.y0 + 1,        r.x1 - 1);
00014a  f9bd0004          LDRSH    r0,[sp,#4]
00014e  f9bd1002          LDRSH    r1,[sp,#2]
000152  1e42              SUBS     r2,r0,#1
000154  1c49              ADDS     r1,r1,#1
000156  1b00              SUBS     r0,r0,r4
000158  f7fffffe          BL       LCD_DrawHLine
;;;93         LCD_DrawHLine(r.x1 - Size, r.y0 + 2,        r.x1 - 1);
00015c  f9bd0004          LDRSH    r0,[sp,#4]
000160  f9bd1002          LDRSH    r1,[sp,#2]
000164  1e42              SUBS     r2,r0,#1
000166  1c89              ADDS     r1,r1,#2
000168  1b00              SUBS     r0,r0,r4
00016a  f7fffffe          BL       LCD_DrawHLine
;;;94         LCD_DrawHLine(r.x0 + Size, r.y0 + Size,     r.x1 - 1);
00016e  f9bd0004          LDRSH    r0,[sp,#4]
000172  1e42              SUBS     r2,r0,#1
000174  f9bd0002          LDRSH    r0,[sp,#2]
000178  1901              ADDS     r1,r0,r4
00017a  f9bd0000          LDRSH    r0,[sp,#0]
00017e  4420              ADD      r0,r0,r4
000180  f7fffffe          BL       LCD_DrawHLine
;;;95         LCD_DrawVLine(r.x1 - Size, r.y0 + 1,        r.y1 - Size);
000184  f9bd0006          LDRSH    r0,[sp,#6]
000188  1b02              SUBS     r2,r0,r4
00018a  f9bd0002          LDRSH    r0,[sp,#2]
00018e  1c41              ADDS     r1,r0,#1
000190  f9bd0004          LDRSH    r0,[sp,#4]
000194  1b00              SUBS     r0,r0,r4
000196  f7fffffe          BL       LCD_DrawVLine
;;;96         LCD_DrawVLine(r.x1 - 1,    r.y0 + 1,        r.y0 + Size);
00019a  f9bd0002          LDRSH    r0,[sp,#2]
00019e  1902              ADDS     r2,r0,r4
0001a0  1c41              ADDS     r1,r0,#1
0001a2  f9bd0004          LDRSH    r0,[sp,#4]
0001a6  1e40              SUBS     r0,r0,#1
0001a8  f7fffffe          BL       LCD_DrawVLine
;;;97         LCD_DrawHLine(r.x0 + 1,    r.y1 - Size,     r.x0 + Size);
0001ac  f9bd0000          LDRSH    r0,[sp,#0]
0001b0  f9bd1006          LDRSH    r1,[sp,#6]
0001b4  1902              ADDS     r2,r0,r4
0001b6  1b09              SUBS     r1,r1,r4
0001b8  1c40              ADDS     r0,r0,#1
0001ba  f7fffffe          BL       LCD_DrawHLine
;;;98         LCD_DrawHLine(r.x0 + 1,    r.y1 - Size + 1, r.x0 + Size);
0001be  f9bd0000          LDRSH    r0,[sp,#0]
0001c2  f9bd1006          LDRSH    r1,[sp,#6]
0001c6  1902              ADDS     r2,r0,r4
0001c8  1b09              SUBS     r1,r1,r4
0001ca  1c49              ADDS     r1,r1,#1
0001cc  1c40              ADDS     r0,r0,#1
0001ce  f7fffffe          BL       LCD_DrawHLine
;;;99         LCD_DrawHLine(r.x0 + 1,    r.y1 - 1,        r.x0 + Size);
0001d2  f9bd0000          LDRSH    r0,[sp,#0]
0001d6  f9bd1006          LDRSH    r1,[sp,#6]
0001da  1902              ADDS     r2,r0,r4
0001dc  1e49              SUBS     r1,r1,#1
0001de  1c40              ADDS     r0,r0,#1
0001e0  f7fffffe          BL       LCD_DrawHLine
;;;100        LCD_DrawVLine(r.x0 + 1,    r.y1 - Size,     r.y1 - 1);
0001e4  f9bd0006          LDRSH    r0,[sp,#6]
0001e8  1e42              SUBS     r2,r0,#1
0001ea  1b01              SUBS     r1,r0,r4
0001ec  f9bd0000          LDRSH    r0,[sp,#0]
0001f0  1c40              ADDS     r0,r0,#1
0001f2  f7fffffe          BL       LCD_DrawVLine
;;;101        LCD_DrawVLine(r.x0 + Size, r.y1 - Size,     r.y1 - 1);
0001f6  f9bd0006          LDRSH    r0,[sp,#6]
0001fa  1e42              SUBS     r2,r0,#1
0001fc  1b01              SUBS     r1,r0,r4
0001fe  f9bd0000          LDRSH    r0,[sp,#0]
000202  4420              ADD      r0,r0,r4
000204  f7fffffe          BL       LCD_DrawVLine
;;;102      } WM_ITERATE_END();
000208  f7fffffe          BL       WM__GetNextIVR
00020c  2800              CMP      r0,#0
00020e  d19c              BNE      |L1.330|
                  |L1.528|
;;;103    }
000210  b002              ADD      sp,sp,#8
000212  bd10              POP      {r4,pc}
;;;104    
                          ENDP

                  _Draw PROC
;;;108    */
;;;109    static void _Draw(void) {
000214  b510              PUSH     {r4,lr}
;;;110      FRAMEWIN_Obj* pObj;
;;;111      WM_HWIN hWin;
;;;112      hWin = WM_GetActiveWindow();
000216  f7fffffe          BL       WM_GetActiveWindow
;;;113      hWin = WM_GetParent(hWin);
00021a  f7fffffe          BL       WM_GetParent
;;;114      pObj = FRAMEWIN_H2P(hWin);
00021e  f7fffffe          BL       GUI_ALLOC_h2p
;;;115      if (pObj->Flags & FRAMEWIN_SF_MAXIMIZED) {
000222  f8b0005a          LDRH     r0,[r0,#0x5a]
000226  f0100f80          TST      r0,#0x80
00022a  d002              BEQ      |L1.562|
;;;116        _DrawRestore();
00022c  e8bd4010          POP      {r4,lr}
000230  e7fe              B        _DrawRestore
                  |L1.562|
;;;117      } else {
;;;118        _DrawMax();
000232  e8bd4010          POP      {r4,lr}
000236  e7fe              B        _DrawMax
;;;119      }
;;;120    }
;;;121    
                          ENDP

                  FRAMEWIN_AddMaxButton PROC
;;;131    */
;;;132    WM_HWIN FRAMEWIN_AddMaxButton(FRAMEWIN_Handle hObj, int Flags, int Off) {
000238  b510              PUSH     {r4,lr}
;;;133      WM_HWIN hButton;
;;;134      hButton = FRAMEWIN_AddButton(hObj, Flags, Off, GUI_ID_MAXIMIZE);
00023a  2307              MOVS     r3,#7
00023c  f7fffffe          BL       FRAMEWIN_AddButton
000240  4604              MOV      r4,r0
;;;135      BUTTON_SetSelfDraw(hButton, 0, &_Draw);
000242  4a07              LDR      r2,|L1.608|
000244  2100              MOVS     r1,#0
000246  4620              MOV      r0,r4
000248  f7fffffe          BL       BUTTON_SetSelfDraw
;;;136      WM_SetCallback(hButton, _cbMax);
00024c  4905              LDR      r1,|L1.612|
00024e  4620              MOV      r0,r4
000250  f7fffffe          BL       WM_SetCallback
;;;137      return hButton;
000254  4620              MOV      r0,r4
;;;138    }
000256  bd10              POP      {r4,pc}
;;;139    
                          ENDP

                  |L1.600|
                          DCD      GUI_Context
                  |L1.604|
                          DCD      0x55555556
                  |L1.608|
                          DCD      _Draw
                  |L1.612|
                          DCD      _cbMax
