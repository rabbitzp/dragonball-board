; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\listbox_create.o --depend=.\rvmdk\listbox_create.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\listbox_create.crf ..\..\..\..\..\uCGUI\GUI\Widget\LISTBOX_Create.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LISTBOX_Create PROC
;;;33     */
;;;34     LISTBOX_Handle LISTBOX_Create(const GUI_ConstString* ppText, int x0, int y0, int xsize, int ysize, int Flags) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  b085              SUB      sp,sp,#0x14
000004  4607              MOV      r7,r0
000006  f8ddc028          LDR      r12,[sp,#0x28]
00000a  980b              LDR      r0,[sp,#0x2c]
00000c  460c              MOV      r4,r1
00000e  4615              MOV      r5,r2
000010  461e              MOV      r6,r3
;;;35       return LISTBOX_CreateEx(x0, y0, xsize, ysize, WM_HWIN_NULL, Flags, 0, 0, ppText);
000012  2200              MOVS     r2,#0
000014  9202              STR      r2,[sp,#8]
000016  9203              STR      r2,[sp,#0xc]
000018  9200              STR      r2,[sp,#0]
00001a  9001              STR      r0,[sp,#4]
00001c  4663              MOV      r3,r12
00001e  9704              STR      r7,[sp,#0x10]
000020  4632              MOV      r2,r6
000022  4629              MOV      r1,r5
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       LISTBOX_CreateEx
;;;36     }
00002a  b005              ADD      sp,sp,#0x14
00002c  bdf0              POP      {r4-r7,pc}
;;;37     
                          ENDP

                  LISTBOX_CreateAsChild PROC
;;;41     */
;;;42     LISTBOX_Handle LISTBOX_CreateAsChild(const GUI_ConstString* ppText, WM_HWIN hWinParent,
00002e  e92d41f0          PUSH     {r4-r8,lr}
;;;43                                          int x0, int y0, int xsize, int ysize, int Flags)
;;;44     {
000032  b086              SUB      sp,sp,#0x18
000034  4680              MOV      r8,r0
000036  f8ddc030          LDR      r12,[sp,#0x30]
00003a  9c0d              LDR      r4,[sp,#0x34]
00003c  980e              LDR      r0,[sp,#0x38]
00003e  460d              MOV      r5,r1
000040  4616              MOV      r6,r2
000042  461f              MOV      r7,r3
;;;45       return LISTBOX_CreateEx(x0, y0, xsize, ysize, hWinParent, Flags, 0, 0, ppText);
000044  2200              MOVS     r2,#0
000046  9202              STR      r2,[sp,#8]
000048  9203              STR      r2,[sp,#0xc]
00004a  9001              STR      r0,[sp,#4]
00004c  4623              MOV      r3,r4
00004e  f8cd8010          STR      r8,[sp,#0x10]
000052  9500              STR      r5,[sp,#0]
000054  4662              MOV      r2,r12
000056  4639              MOV      r1,r7
000058  4630              MOV      r0,r6
00005a  f7fffffe          BL       LISTBOX_CreateEx
;;;46     }
00005e  b006              ADD      sp,sp,#0x18
000060  e8bd81f0          POP      {r4-r8,pc}
;;;47     
                          ENDP

