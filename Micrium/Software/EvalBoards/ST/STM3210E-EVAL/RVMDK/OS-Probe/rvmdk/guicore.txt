; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guicore.o --depend=.\rvmdk\guicore.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guicore.crf ..\..\..\..\..\uCGUI\GUI\Core\GUICore.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _InitContext PROC
;;;63     */
;;;64     static void _InitContext(GUI_CONTEXT* pContext) {
000000  b570              PUSH     {r4-r6,lr}
000002  4604              MOV      r4,r0
;;;65       /* memset(..,0,..) is not required, as this function is called only at startup of the GUI when data is 0 */
;;;66       #if GUI_SUPPORT_DEVICES
;;;67         pContext->pDeviceAPI   = LCD_aAPI[0]; /* &LCD_L0_APIList; */
000004  4842              LDR      r0,|L1.272|
000006  6800              LDR      r0,[r0,#0]  ; LCD_aAPI
000008  64e0              STR      r0,[r4,#0x4c]
;;;68       #endif
;;;69       pContext->pClipRect_HL = &GUI_Context.ClipRect;
00000a  4d42              LDR      r5,|L1.276|
00000c  6165              STR      r5,[r4,#0x14]
;;;70       LCD_L0_GetRect(&pContext->ClipRect);
00000e  f1040008          ADD      r0,r4,#8
000012  f7fffffe          BL       LCD_L0_GetRect
;;;71       #if GUI_SUPPORT_AA
;;;72         pContext->pLCD_HL      = &_HL_APIList;
000016  4840              LDR      r0,|L1.280|
000018  65e0              STR      r0,[r4,#0x5c]
;;;73       #endif
;;;74       pContext->pAFont       = GUI_DEFAULT_FONT;
00001a  4840              LDR      r0,|L1.284|
00001c  61e0              STR      r0,[r4,#0x1c]
;;;75       pContext->pClipRect_HL = &GUI_Context.ClipRect;
00001e  6165              STR      r5,[r4,#0x14]
;;;76       pContext->PenSize      = 1;
000020  2001              MOVS     r0,#1
000022  7620              STRB     r0,[r4,#0x18]
;;;77       /* Variables in WM module */
;;;78       #if GUI_WINSUPPORT
;;;79         pContext->hAWin    = WM_GetDesktopWindow();
000024  f7fffffe          BL       WM_GetDesktopWindow
000028  f8a40040          STRH     r0,[r4,#0x40]
;;;80       #endif
;;;81       /* Variables in GUI_AA module */
;;;82       #if GUI_SUPPORT_AA
;;;83         pContext->AA_Factor = 3;
00002c  2003              MOVS     r0,#3
00002e  f8840060          STRB     r0,[r4,#0x60]
;;;84       #endif
;;;85       pContext->Color   = GUI_INVALID_COLOR;
000032  f06f4070          MVN      r0,#0xf0000000
000036  6360              STR      r0,[r4,#0x34]
;;;86       pContext->BkColor = GUI_INVALID_COLOR;
000038  63a0              STR      r0,[r4,#0x38]
;;;87       LCD_SetBkColor(GUI_DEFAULT_BKCOLOR);
00003a  2000              MOVS     r0,#0
00003c  f7fffffe          BL       LCD_SetBkColor
;;;88       LCD_SetColor(GUI_DEFAULT_COLOR);
000040  f06f407f          MVN      r0,#0xff000000
000044  f7fffffe          BL       LCD_SetColor
;;;89       #if GUI_SUPPORT_UNICODE
;;;90         pContext->pUC_API = &GUI_UC_None;
000048  4835              LDR      r0,|L1.288|
00004a  6220              STR      r0,[r4,#0x20]
;;;91       #endif
;;;92     }
00004c  bd70              POP      {r4-r6,pc}
;;;93     
                          ENDP

                  GUI_ClearRect PROC
;;;103    */
;;;104    void GUI_ClearRect(int x0, int y0, int x1, int y1) {
00004e  e92d41f0          PUSH     {r4-r8,lr}
000052  b082              SUB      sp,sp,#8
000054  4604              MOV      r4,r0
000056  460d              MOV      r5,r1
000058  4616              MOV      r6,r2
00005a  461f              MOV      r7,r3
;;;105      GUI_DRAWMODE PrevDraw;
;;;106      #if GUI_WINSUPPORT
;;;107        GUI_RECT r;
;;;108      #endif
;;;109      GUI_LOCK();
00005c  f7fffffe          BL       GUI_Lock
;;;110      PrevDraw = LCD_SetDrawMode(GUI_DRAWMODE_REV);
000060  2004              MOVS     r0,#4
000062  f7fffffe          BL       LCD_SetDrawMode
000066  4680              MOV      r8,r0
;;;111      #if GUI_WINSUPPORT
;;;112        WM_ADDORG(x0,y0);
000068  482e              LDR      r0,|L1.292|
00006a  f8d0c044          LDR      r12,[r0,#0x44]  ; GUI_Context
00006e  4464              ADD      r4,r4,r12
000070  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000072  4405              ADD      r5,r5,r0
;;;113        WM_ADDORG(x1,y1);
000074  4466              ADD      r6,r6,r12
000076  4407              ADD      r7,r7,r0
;;;114        r.x0 = x0;
000078  f8ad4000          STRH     r4,[sp,#0]
;;;115        r.x1 = x1;
00007c  f8ad6004          STRH     r6,[sp,#4]
;;;116        r.y0 = y0;
000080  f8ad5002          STRH     r5,[sp,#2]
;;;117        r.y1 = y1;
000084  f8ad7006          STRH     r7,[sp,#6]
;;;118        WM_ITERATE_START(&r) {
000088  4668              MOV      r0,sp
00008a  f7fffffe          BL       WM__InitIVRSearch
00008e  b148              CBZ      r0,|L1.164|
                  |L1.144|
;;;119      #endif
;;;120      LCD_FillRect(x0,y0,x1,y1);
000090  463b              MOV      r3,r7
000092  4632              MOV      r2,r6
000094  4629              MOV      r1,r5
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       LCD_FillRect
;;;121      #if GUI_WINSUPPORT
;;;122        } WM_ITERATE_END();
00009c  f7fffffe          BL       WM__GetNextIVR
0000a0  2800              CMP      r0,#0
0000a2  d1f5              BNE      |L1.144|
                  |L1.164|
;;;123      #endif
;;;124      LCD_SetDrawMode(PrevDraw);
0000a4  4640              MOV      r0,r8
0000a6  f7fffffe          BL       LCD_SetDrawMode
;;;125      GUI_UNLOCK();
0000aa  f7fffffe          BL       GUI_Unlock
;;;126    }
0000ae  b002              ADD      sp,sp,#8
0000b0  e8bd81f0          POP      {r4-r8,pc}
;;;127    
                          ENDP

                  GUI_Clear PROC
;;;131    */
;;;132    void GUI_Clear(void) {
0000b4  b510              PUSH     {r4,lr}
;;;133      GUI_GotoXY(0,0);     /* Reset text cursor to upper left */
0000b6  2100              MOVS     r1,#0
0000b8  4608              MOV      r0,r1
0000ba  f7fffffe          BL       GUI_GotoXY
;;;134      GUI_ClearRect(GUI_XMIN, GUI_YMIN, GUI_XMAX, GUI_YMAX);
0000be  f64073ff          MOV      r3,#0xfff
0000c2  4258              RSBS     r0,r3,#0
0000c4  e8bd4010          POP      {r4,lr}
0000c8  461a              MOV      r2,r3
0000ca  4601              MOV      r1,r0
0000cc  e7fe              B        GUI_ClearRect
;;;135    }
;;;136    
                          ENDP

                  GUI_Init PROC
;;;143    */
;;;144    int GUI_Init(void) {
0000ce  b510              PUSH     {r4,lr}
;;;145      int r;
;;;146      GUI_DEBUG_LOG("\nGUI_Init()");
;;;147      /* Init system wide globals first */
;;;148      GUI_DecChar = '.';
0000d0  4915              LDR      r1,|L1.296|
0000d2  202e              MOVS     r0,#0x2e
0000d4  7008              STRB     r0,[r1,#0]
;;;149      GUI_X_Init();
0000d6  f7fffffe          BL       GUI_X_Init
;;;150      /* Init context */
;;;151      _InitContext(&GUI_Context);
0000da  4812              LDR      r0,|L1.292|
0000dc  f7fffffe          BL       _InitContext
;;;152      GUITASK_INIT();
0000e0  f7fffffe          BL       GUITASK_Init
;;;153      r = LCD_Init();
0000e4  f7fffffe          BL       LCD_Init
0000e8  4604              MOV      r4,r0
;;;154      #if GUI_WINSUPPORT
;;;155        WM_Init();
0000ea  f7fffffe          BL       WM_Init
;;;156      #endif
;;;157      GUITASK_COPY_CONTEXT();
0000ee  f7fffffe          BL       GUITASK_CopyContext
;;;158      #if defined(GUI_TRIAL_VERSION)
;;;159        #if GUI_TRIAL_VERSION
;;;160          GUI_DispString(  "This software\n"
0000f2  480e              LDR      r0,|L1.300|
0000f4  f7fffffe          BL       GUI_DispString
;;;161    	                     "contains an eval-\n"
;;;162    	                     "uC/GUI build.\n"
;;;163    	                     "\n"
;;;164    	                     "A license is\n"
;;;165    	                     "required to use\n"
;;;166    	                     "it in a product.\n\n"
;;;167    	                     "www.segger.com\n");
;;;168          GUI_GotoXY(0, 0);
0000f8  2100              MOVS     r1,#0
0000fa  4608              MOV      r0,r1
0000fc  f7fffffe          BL       GUI_GotoXY
;;;169          GUI_X_Delay(1000);
000100  f44f707a          MOV      r0,#0x3e8
000104  f7fffffe          BL       GUI_X_Delay
;;;170          GUI_Clear();
000108  f7fffffe          BL       GUI_Clear
;;;171        #endif
;;;172      #endif
;;;173      return r;
00010c  4620              MOV      r0,r4
;;;174    }
00010e  bd10              POP      {r4,pc}
;;;175    
                          ENDP

                  |L1.272|
                          DCD      LCD_aAPI
                  |L1.276|
                          DCD      ||.bss||+0x8
                  |L1.280|
                          DCD      ||.constdata||
                  |L1.284|
                          DCD      GUI_Font6x8
                  |L1.288|
                          DCD      GUI_UC_None
                  |L1.292|
                          DCD      ||.bss||
                  |L1.296|
                          DCD      ||.data||
                  |L1.300|
                          DCD      ||.constdata||+0x8

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  GUI_Context
                          %        100

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _HL_APIList
                          DCD      LCD_DrawHLine
                          DCD      LCD_DrawPixel
000008  54686973          DCB      0x54,0x68,0x69,0x73
00000c  20736f66          DCB      0x20,0x73,0x6f,0x66
000010  74776172          DCB      0x74,0x77,0x61,0x72
000014  650a636f          DCB      0x65,0x0a,0x63,0x6f
000018  6e746169          DCB      0x6e,0x74,0x61,0x69
00001c  6e732061          DCB      0x6e,0x73,0x20,0x61
000020  6e206576          DCB      0x6e,0x20,0x65,0x76
000024  616c2d0a          DCB      0x61,0x6c,0x2d,0x0a
000028  75432f47          DCB      0x75,0x43,0x2f,0x47
00002c  55492062          DCB      0x55,0x49,0x20,0x62
000030  75696c64          DCB      0x75,0x69,0x6c,0x64
000034  2e0a0a41          DCB      0x2e,0x0a,0x0a,0x41
000038  206c6963          DCB      0x20,0x6c,0x69,0x63
00003c  656e7365          DCB      0x65,0x6e,0x73,0x65
000040  2069730a          DCB      0x20,0x69,0x73,0x0a
000044  72657175          DCB      0x72,0x65,0x71,0x75
000048  69726564          DCB      0x69,0x72,0x65,0x64
00004c  20746f20          DCB      0x20,0x74,0x6f,0x20
000050  7573650a          DCB      0x75,0x73,0x65,0x0a
000054  69742069          DCB      0x69,0x74,0x20,0x69
000058  6e206120          DCB      0x6e,0x20,0x61,0x20
00005c  70726f64          DCB      0x70,0x72,0x6f,0x64
000060  7563742e          DCB      0x75,0x63,0x74,0x2e
000064  0a0a7777          DCB      0x0a,0x0a,0x77,0x77
000068  772e7365          DCB      0x77,0x2e,0x73,0x65
00006c  67676572          DCB      0x67,0x67,0x65,0x72
000070  2e636f6d          DCB      0x2e,0x63,0x6f,0x6d
000074  0a00              DCB      0x0a,0x00

                          AREA ||.data||, DATA, ALIGN=0

                  GUI_DecChar
000000  00                DCB      0x00

                          AREA ||area_number.7||, DATA, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.data||
                  GUI_pfTimerExec
                          DCD      0x00000000

                          AREA ||area_number.8||, DATA, ALIGN=2

                          EXPORTAS ||area_number.8||, ||.data||
                  WM_pfHandlePID
                          DCD      0x00000000

                          AREA ||area_number.9||, DATA, ALIGN=2

                          EXPORTAS ||area_number.9||, ||.data||
                  GUI_pfDispCharStyle
                          DCD      0x00000000

                          AREA ||area_number.10||, DATA, ALIGN=2

                          EXPORTAS ||area_number.10||, ||.data||
                  GUI_pLCD_APIList
                          DCD      0x00000000

                          AREA ||area_number.11||, DATA, ALIGN=1

                          EXPORTAS ||area_number.11||, ||.data||
                  GUI_OrgX
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.12||, DATA, ALIGN=1

                          EXPORTAS ||area_number.12||, ||.data||
                  GUI_OrgY
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.13||, DATA, ALIGN=0

                          EXPORTAS ||area_number.13||, ||.data||
                  GUI_MoveRTL
000000  00                DCB      0x00
