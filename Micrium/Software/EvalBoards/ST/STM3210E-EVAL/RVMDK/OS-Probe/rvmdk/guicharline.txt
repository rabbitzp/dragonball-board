; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guicharline.o --depend=.\rvmdk\guicharline.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guicharline.crf ..\..\..\..\..\uCGUI\GUI\Core\GUICharLine.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DispLine PROC
;;;33     */
;;;34     static void _DispLine(const char GUI_UNI_PTR *s, int MaxNumChars, const GUI_RECT *pRect) {
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
000002  460c              MOV      r4,r1
000004  4611              MOV      r1,r2
;;;35       #if GUI_SUPPORT_ARABIC
;;;36         GUI__DispLineArabic(s, MaxNumChars, pRect);
;;;37       #else
;;;38         /* Check if we have anything to do at all ... */
;;;39         if (GUI_Context.pClipRect_HL) {
000006  4d53              LDR      r5,|L1.340|
000008  6968              LDR      r0,[r5,#0x14]  ; GUI_Context
00000a  b118              CBZ      r0,|L1.20|
;;;40           if (GUI_RectsIntersect(GUI_Context.pClipRect_HL, pRect) == 0)
00000c  f7fffffe          BL       GUI_RectsIntersect
000010  2800              CMP      r0,#0
000012  d006              BEQ      |L1.34|
                  |L1.20|
;;;41             return;
;;;42         }
;;;43         #if GUI_COMPILER_SUPPORTS_FP
;;;44         if (GUI_Context.pAFont->pafEncode) {
000014  69e8              LDR      r0,[r5,#0x1c]  ; GUI_Context
000016  6900              LDR      r0,[r0,#0x10]
000018  b128              CBZ      r0,|L1.38|
;;;45           GUI_Context.pAFont->pafEncode->pfDispLine(s, MaxNumChars);
00001a  6882              LDR      r2,[r0,#8]
00001c  4621              MOV      r1,r4
00001e  9800              LDR      r0,[sp,#0]
000020  4790              BLX      r2
                  |L1.34|
;;;46         } else {
;;;47         #else
;;;48         {
;;;49         #endif
;;;50           U16 Char;
;;;51           while (--MaxNumChars >= 0) {
;;;52             Char = GUI_UC__GetCharCodeInc(&s);
;;;53             GUI_Context.pAFont->pfDispChar(Char);
;;;54             if (GUI_pfDispCharStyle) {
;;;55               GUI_pfDispCharStyle(Char);
;;;56             }
;;;57           }
;;;58         }
;;;59       #endif
;;;60     }
000022  b003              ADD      sp,sp,#0xc
000024  bdf0              POP      {r4-r7,pc}
                  |L1.38|
000026  1e64              SUBS     r4,r4,#1              ;51
000028  d4fb              BMI      |L1.34|
00002a  4e4b              LDR      r6,|L1.344|
                  |L1.44|
00002c  4668              MOV      r0,sp                 ;52
00002e  f7fffffe          BL       GUI_UC__GetCharCodeInc
000032  4607              MOV      r7,r0                 ;52
000034  69e8              LDR      r0,[r5,#0x1c]         ;53  ; GUI_Context
000036  6801              LDR      r1,[r0,#0]            ;53
000038  4638              MOV      r0,r7                 ;53
00003a  4788              BLX      r1                    ;53
00003c  6831              LDR      r1,[r6,#0]            ;54  ; GUI_pfDispCharStyle
00003e  b109              CBZ      r1,|L1.68|
000040  4638              MOV      r0,r7                 ;55
000042  4788              BLX      r1                    ;55
                  |L1.68|
000044  1e64              SUBS     r4,r4,#1              ;51
000046  d5f1              BPL      |L1.44|
000048  b003              ADD      sp,sp,#0xc
00004a  bdf0              POP      {r4-r7,pc}
;;;61     
                          ENDP

                  GUI__GetLineNumChars PROC
;;;71     */
;;;72     int GUI__GetLineNumChars(const char GUI_UNI_PTR *s, int MaxNumChars) {
00004c  b573              PUSH     {r0,r1,r4-r6,lr}
00004e  460d              MOV      r5,r1
;;;73       int NumChars = 0;
000050  2400              MOVS     r4,#0
;;;74       if (s) {
000052  9800              LDR      r0,[sp,#0]
000054  b198              CBZ      r0,|L1.126|
;;;75         #if GUI_COMPILER_SUPPORTS_FP
;;;76           if (GUI_Context.pAFont->pafEncode) {
000056  493f              LDR      r1,|L1.340|
000058  69c9              LDR      r1,[r1,#0x1c]  ; GUI_Context
00005a  6909              LDR      r1,[r1,#0x10]
00005c  b121              CBZ      r1,|L1.104|
;;;77             return GUI_Context.pAFont->pafEncode->pfGetLineLen(s, MaxNumChars);
00005e  684a              LDR      r2,[r1,#4]
000060  4629              MOV      r1,r5
000062  4790              BLX      r2
;;;78           }
;;;79         #endif
;;;80         for (; NumChars < MaxNumChars; NumChars++) {
;;;81           U16 Data = GUI_UC__GetCharCodeInc(&s);
;;;82           if ((Data == 0) || (Data == '\n')) {
;;;83             break;
;;;84           }
;;;85         }
;;;86       }
;;;87       return NumChars;
;;;88     }
000064  b002              ADD      sp,sp,#8
000066  bd70              POP      {r4-r6,pc}
                  |L1.104|
000068  2d00              CMP      r5,#0                 ;80
00006a  dd08              BLE      |L1.126|
                  |L1.108|
00006c  4668              MOV      r0,sp                 ;81
00006e  f7fffffe          BL       GUI_UC__GetCharCodeInc
000072  b120              CBZ      r0,|L1.126|
000074  280a              CMP      r0,#0xa               ;82
000076  d002              BEQ      |L1.126|
000078  1c64              ADDS     r4,r4,#1              ;80
00007a  42ac              CMP      r4,r5                 ;80
00007c  dbf6              BLT      |L1.108|
                  |L1.126|
00007e  b002              ADD      sp,sp,#8
000080  4620              MOV      r0,r4                 ;87
000082  bd70              POP      {r4-r6,pc}
;;;89     
                          ENDP

                  GUI__GetLineDistX PROC
;;;95     */
;;;96     int GUI__GetLineDistX(const char GUI_UNI_PTR *s, int MaxNumChars) {
000084  b573              PUSH     {r0,r1,r4-r6,lr}
;;;97       int Dist;
;;;98       #if GUI_SUPPORT_ARABIC
;;;99         Dist = GUI__GetLineDistXArabic(s, MaxNumChars);
;;;100      #else
;;;101        Dist = 0;
000086  2500              MOVS     r5,#0
;;;102        if (s) {
000088  9800              LDR      r0,[sp,#0]
00008a  b188              CBZ      r0,|L1.176|
;;;103          U16 Char;
;;;104          #if GUI_COMPILER_SUPPORTS_FP
;;;105            if (GUI_Context.pAFont->pafEncode) {
00008c  4a31              LDR      r2,|L1.340|
00008e  69d2              LDR      r2,[r2,#0x1c]  ; GUI_Context
000090  6912              LDR      r2,[r2,#0x10]
000092  b11a              CBZ      r2,|L1.156|
;;;106              return GUI_Context.pAFont->pafEncode->pfGetLineDistX(s, MaxNumChars);
000094  6812              LDR      r2,[r2,#0]
000096  4790              BLX      r2
;;;107            }
;;;108          #endif
;;;109          while (--MaxNumChars >= 0) {
;;;110            Char  = GUI_UC__GetCharCodeInc(&s);
;;;111            Dist += GUI_GetCharDistX(Char);
;;;112          }
;;;113        }
;;;114      #endif
;;;115      return Dist;
;;;116    }
000098  b002              ADD      sp,sp,#8
00009a  bd70              POP      {r4-r6,pc}
                  |L1.156|
00009c  1e4c              SUBS     r4,r1,#1              ;109
00009e  d407              BMI      |L1.176|
                  |L1.160|
0000a0  4668              MOV      r0,sp                 ;110
0000a2  f7fffffe          BL       GUI_UC__GetCharCodeInc
0000a6  f7fffffe          BL       GUI_GetCharDistX
0000aa  4405              ADD      r5,r5,r0              ;111
0000ac  1e64              SUBS     r4,r4,#1              ;109
0000ae  d5f7              BPL      |L1.160|
                  |L1.176|
0000b0  b002              ADD      sp,sp,#8
0000b2  4628              MOV      r0,r5                 ;115
0000b4  bd70              POP      {r4-r6,pc}
;;;117    
                          ENDP

                  GUI__DispLine PROC
;;;121    */
;;;122    void GUI__DispLine(const char GUI_UNI_PTR *s, int MaxNumChars, const GUI_RECT* pr) {
0000b6  b570              PUSH     {r4-r6,lr}
0000b8  b082              SUB      sp,sp,#8
0000ba  4605              MOV      r5,r0
0000bc  460e              MOV      r6,r1
;;;123      GUI_RECT r;
;;;124      #if GUI_SUPPORT_ROTATION
;;;125      if (GUI_pLCD_APIList) {
0000be  4827              LDR      r0,|L1.348|
0000c0  6800              LDR      r0,[r0,#0]  ; GUI_pLCD_APIList
0000c2  b178              CBZ      r0,|L1.228|
;;;126        #if GUI_WINSUPPORT
;;;127        WM_ITERATE_START(NULL) {
0000c4  2000              MOVS     r0,#0
0000c6  f7fffffe          BL       WM__InitIVRSearch
0000ca  2800              CMP      r0,#0
0000cc  d008              BEQ      |L1.224|
                  |L1.206|
;;;128        #endif
;;;129          /* Do the actual drawing via routine call. */
;;;130          _DispLine(s, MaxNumChars, &r);
0000ce  466a              MOV      r2,sp
0000d0  4631              MOV      r1,r6
0000d2  4628              MOV      r0,r5
0000d4  f7fffffe          BL       _DispLine
;;;131        #if GUI_WINSUPPORT
;;;132        } WM_ITERATE_END();
0000d8  f7fffffe          BL       WM__GetNextIVR
0000dc  2800              CMP      r0,#0
0000de  d1f6              BNE      |L1.206|
                  |L1.224|
;;;133        #endif
;;;134      } else
;;;135      #endif
;;;136      {
;;;137        r = *pr;
;;;138        #if GUI_WINSUPPORT
;;;139        WM_ADDORG(r.x0, r.y0);
;;;140        WM_ADDORG(r.x1, r.y1);
;;;141        WM_ITERATE_START(&r) {
;;;142        #endif
;;;143          GUI_Context.DispPosX = r.x0;
;;;144          GUI_Context.DispPosY = r.y0;
;;;145          /* Do the actual drawing via routine call. */
;;;146          _DispLine(s, MaxNumChars, &r);
;;;147        #if GUI_WINSUPPORT
;;;148        } WM_ITERATE_END();
;;;149        WM_SUBORG(GUI_Context.DispPosX, GUI_Context.DispPosY);
;;;150        #endif
;;;151      }
;;;152    }
0000e0  b002              ADD      sp,sp,#8
0000e2  bd70              POP      {r4-r6,pc}
                  |L1.228|
0000e4  6810              LDR      r0,[r2,#0]            ;137
0000e6  9000              STR      r0,[sp,#0]            ;137
0000e8  6850              LDR      r0,[r2,#4]            ;137
0000ea  9001              STR      r0,[sp,#4]            ;137
0000ec  4c19              LDR      r4,|L1.340|
0000ee  f8bd1000          LDRH     r1,[sp,#0]            ;139
0000f2  6c60              LDR      r0,[r4,#0x44]         ;139  ; GUI_Context
0000f4  4401              ADD      r1,r1,r0              ;139
0000f6  f8ad1000          STRH     r1,[sp,#0]            ;139
0000fa  f8bd2002          LDRH     r2,[sp,#2]            ;139
0000fe  6ca1              LDR      r1,[r4,#0x48]         ;139  ; GUI_Context
000100  440a              ADD      r2,r2,r1              ;139
000102  f8ad2002          STRH     r2,[sp,#2]            ;139
000106  f8bd2004          LDRH     r2,[sp,#4]            ;140
00010a  4410              ADD      r0,r0,r2              ;140
00010c  f8ad0004          STRH     r0,[sp,#4]            ;140
000110  f8bd0006          LDRH     r0,[sp,#6]            ;140
000114  4408              ADD      r0,r0,r1              ;140
000116  f8ad0006          STRH     r0,[sp,#6]            ;140
00011a  4668              MOV      r0,sp                 ;141
00011c  f7fffffe          BL       WM__InitIVRSearch
000120  b170              CBZ      r0,|L1.320|
                  |L1.290|
000122  f8bd0000          LDRH     r0,[sp,#0]            ;143
000126  84e0              STRH     r0,[r4,#0x26]         ;143
000128  f8bd0002          LDRH     r0,[sp,#2]            ;144
00012c  8520              STRH     r0,[r4,#0x28]         ;144
00012e  466a              MOV      r2,sp                 ;146
000130  4631              MOV      r1,r6                 ;146
000132  4628              MOV      r0,r5                 ;146
000134  f7fffffe          BL       _DispLine
000138  f7fffffe          BL       WM__GetNextIVR
00013c  2800              CMP      r0,#0                 ;148
00013e  d1f0              BNE      |L1.290|
                  |L1.320|
000140  8ce0              LDRH     r0,[r4,#0x26]         ;149  ; GUI_Context
000142  6c61              LDR      r1,[r4,#0x44]         ;149  ; GUI_Context
000144  1a40              SUBS     r0,r0,r1              ;149
000146  84e0              STRH     r0,[r4,#0x26]         ;149
000148  8d20              LDRH     r0,[r4,#0x28]         ;149  ; GUI_Context
00014a  6ca1              LDR      r1,[r4,#0x48]         ;149  ; GUI_Context
00014c  1a40              SUBS     r0,r0,r1              ;149
00014e  8520              STRH     r0,[r4,#0x28]         ;149
000150  b002              ADD      sp,sp,#8
000152  bd70              POP      {r4-r6,pc}
;;;153    
                          ENDP

                  |L1.340|
                          DCD      GUI_Context
                  |L1.344|
                          DCD      GUI_pfDispCharStyle
                  |L1.348|
                          DCD      GUI_pLCD_APIList
