; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\widget_fillstringinrect.o --depend=.\rvmdk\widget_fillstringinrect.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\widget_fillstringinrect.crf ..\..\..\..\..\uCGUI\GUI\Widget\WIDGET_FillStringInRect.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WIDGET__FillStringInRect PROC
;;;55     */
;;;56     void WIDGET__FillStringInRect(const char GUI_UNI_PTR * pText, const GUI_RECT * pFillRect, const GUI_RECT * pTextRectMax, const GUI_RECT * pTextRectAct) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  b083              SUB      sp,sp,#0xc
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4617              MOV      r7,r2
00000a  461d              MOV      r5,r3
;;;57       /* Check if we have anything to do at all ... */
;;;58       if (GUI_Context.pClipRect_HL) {
00000c  4a39              LDR      r2,|L1.244|
00000e  6950              LDR      r0,[r2,#0x14]  ; GUI_Context
000010  b1f0              CBZ      r0,|L1.80|
;;;59         GUI_RECT r;
;;;60         r = *pFillRect;
000012  6821              LDR      r1,[r4,#0]
000014  9100              STR      r1,[sp,#0]
000016  6861              LDR      r1,[r4,#4]
000018  9101              STR      r1,[sp,#4]
;;;61         WM_ADDORG(r.x0, r.y0);
00001a  f8bd3000          LDRH     r3,[sp,#0]
00001e  6c51              LDR      r1,[r2,#0x44]  ; GUI_Context
000020  440b              ADD      r3,r3,r1
000022  f8ad3000          STRH     r3,[sp,#0]
000026  f8bd3002          LDRH     r3,[sp,#2]
00002a  6c92              LDR      r2,[r2,#0x48]  ; GUI_Context
00002c  4413              ADD      r3,r3,r2
00002e  f8ad3002          STRH     r3,[sp,#2]
;;;62         WM_ADDORG(r.x1, r.y1);
000032  f8bd3004          LDRH     r3,[sp,#4]
000036  4419              ADD      r1,r1,r3
000038  f8ad1004          STRH     r1,[sp,#4]
00003c  f8bd1006          LDRH     r1,[sp,#6]
000040  4411              ADD      r1,r1,r2
000042  f8ad1006          STRH     r1,[sp,#6]
;;;63         if (GUI_RectsIntersect(GUI_Context.pClipRect_HL, &r) == 0)
000046  4669              MOV      r1,sp
000048  f7fffffe          BL       GUI_RectsIntersect
00004c  2800              CMP      r0,#0
00004e  d04f              BEQ      |L1.240|
                  |L1.80|
;;;64           return;
;;;65       }
;;;66     
;;;67       if (pText) {
000050  b3f6              CBZ      r6,|L1.208|
;;;68         if (*pText) {             /* Speed optimization, not required */
000052  7830              LDRB     r0,[r6,#0]
000054  b3e0              CBZ      r0,|L1.208|
;;;69           const GUI_RECT* pOldClipRect;
;;;70     
;;;71     
;;;72           /* Fill border */
;;;73           #if WIDGET_FILL_TEXT_USES_TRANS
;;;74             GUI_ClearRectEx(pFillRect);
;;;75           #else
;;;76             {
;;;77               GUI_RECT rText;
;;;78               GUI__IntersectRects(&rText, pTextRectMax, pTextRectAct);
000056  462a              MOV      r2,r5
000058  4639              MOV      r1,r7
00005a  4668              MOV      r0,sp
00005c  f7fffffe          BL       GUI__IntersectRects
;;;79               GUI_ClearRect(pFillRect->x0, pFillRect->y0, pFillRect->x1, rText.y0 - 1); /* Top */
000060  f9bd0002          LDRSH    r0,[sp,#2]
000064  f9b42004          LDRSH    r2,[r4,#4]
000068  1e43              SUBS     r3,r0,#1
00006a  f9b41002          LDRSH    r1,[r4,#2]
00006e  f9b40000          LDRSH    r0,[r4,#0]
000072  f7fffffe          BL       GUI_ClearRect
;;;80               GUI_ClearRect(pFillRect->x0, rText.y0,      rText.x0 - 1 , rText.y1);     /* Left */
000076  f9bd0000          LDRSH    r0,[sp,#0]
00007a  f9bd3006          LDRSH    r3,[sp,#6]
00007e  1e42              SUBS     r2,r0,#1
000080  f9bd1002          LDRSH    r1,[sp,#2]
000084  f9b40000          LDRSH    r0,[r4,#0]
000088  f7fffffe          BL       GUI_ClearRect
;;;81               GUI_ClearRect(rText.x1 + 1,  rText.y0,      pFillRect->x1, rText.y1);     /* Right */
00008c  f9bd0004          LDRSH    r0,[sp,#4]
000090  f9bd3006          LDRSH    r3,[sp,#6]
000094  f9b42004          LDRSH    r2,[r4,#4]
000098  f9bd1002          LDRSH    r1,[sp,#2]
00009c  1c40              ADDS     r0,r0,#1
00009e  f7fffffe          BL       GUI_ClearRect
;;;82               GUI_ClearRect(pFillRect->x0, rText.y1 + 1,  pFillRect->x1, pFillRect->y1);/* Bottom */
0000a2  f9bd0006          LDRSH    r0,[sp,#6]
0000a6  f9b43006          LDRSH    r3,[r4,#6]
0000aa  1c41              ADDS     r1,r0,#1
0000ac  f9b42004          LDRSH    r2,[r4,#4]
0000b0  f9b40000          LDRSH    r0,[r4,#0]
0000b4  f7fffffe          BL       GUI_ClearRect
;;;83             }
;;;84           #endif
;;;85     
;;;86           /* Set clipping rectangle */
;;;87           pOldClipRect = WM_SetUserClipRect(pTextRectMax);
0000b8  4638              MOV      r0,r7
0000ba  f7fffffe          BL       WM_SetUserClipRect
0000be  4604              MOV      r4,r0
;;;88     
;;;89           /* Display text */
;;;90           #if WIDGET_FILL_TEXT_USES_TRANS
;;;91             GUI_SetTextMode(GUI_TM_TRANS);
;;;92           #else
;;;93             GUI_SetTextMode(GUI_TM_NORMAL);
0000c0  2000              MOVS     r0,#0
0000c2  f7fffffe          BL       GUI_SetTextMode
;;;94           #endif
;;;95           GUI_DispStringAt(pText, pTextRectAct->x0, pTextRectAct->y0);
0000c6  f9b52002          LDRSH    r2,[r5,#2]
0000ca  f9b51000          LDRSH    r1,[r5,#0]
0000ce  e000              B        |L1.210|
                  |L1.208|
0000d0  e008              B        |L1.228|
                  |L1.210|
0000d2  4630              MOV      r0,r6
0000d4  f7fffffe          BL       GUI_DispStringAt
;;;96     
;;;97           /* Restore clipping rectangle */
;;;98           WM_SetUserClipRect(pOldClipRect);
0000d8  b003              ADD      sp,sp,#0xc
0000da  4620              MOV      r0,r4
0000dc  e8bd40f0          POP      {r4-r7,lr}
0000e0  f7ffbffe          B.W      WM_SetUserClipRect
                  |L1.228|
;;;99           return;
;;;100        }
;;;101      }
;;;102      GUI_ClearRectEx(pFillRect);
0000e4  b003              ADD      sp,sp,#0xc
0000e6  4620              MOV      r0,r4
0000e8  e8bd40f0          POP      {r4-r7,lr}
0000ec  f7ffbffe          B.W      GUI_ClearRectEx
                  |L1.240|
;;;103    }
0000f0  b003              ADD      sp,sp,#0xc
0000f2  bdf0              POP      {r4-r7,pc}
;;;104    
                          ENDP

                  |L1.244|
                          DCD      GUI_Context
