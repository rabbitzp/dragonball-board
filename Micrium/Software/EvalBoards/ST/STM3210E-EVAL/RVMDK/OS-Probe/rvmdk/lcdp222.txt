; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\lcdp222.o --depend=.\rvmdk\lcdp222.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\lcdp222.crf ..\..\..\..\..\uCGUI\GUI\ConvertColor\LCDP222.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_Color2Index_222 PROC
;;;31     */
;;;32     unsigned LCD_Color2Index_222(LCD_COLOR Color) {
000000  b2c1              UXTB     r1,r0
;;;33       int r,g,b;
;;;34       r = ((Color&255)      +0x2a)/0x55;
000002  312a              ADDS     r1,r1,#0x2a
000004  eb011281          ADD      r2,r1,r1,LSL #6
000008  eb0211c1          ADD      r1,r2,r1,LSL #7
00000c  0b8a              LSRS     r2,r1,#14
;;;35       g = (((Color>>8)&255) +0x2a)/0x55;
00000e  f3c02107          UBFX     r1,r0,#8,#8
000012  312a              ADDS     r1,r1,#0x2a
000014  eb011381          ADD      r3,r1,r1,LSL #6
000018  eb0311c1          ADD      r1,r3,r1,LSL #7
00001c  0b89              LSRS     r1,r1,#14
;;;36       b = (((Color>>16)&255)+0x2a)/0x55;
00001e  f3c04007          UBFX     r0,r0,#16,#8
000022  302a              ADDS     r0,r0,#0x2a
000024  eb001380          ADD      r3,r0,r0,LSL #6
000028  eb0310c0          ADD      r0,r3,r0,LSL #7
00002c  0b80              LSRS     r0,r0,#14
;;;37       return r+(g<<2)+(b<<4);
00002e  eb020181          ADD      r1,r2,r1,LSL #2
000032  eb011000          ADD      r0,r1,r0,LSL #4
;;;38     }
000036  4770              BX       lr
;;;39     
                          ENDP

                  LCD_Index2Color_222 PROC
;;;43     */
;;;44     LCD_COLOR LCD_Index2Color_222(int Index) {
000038  f0000103          AND      r1,r0,#3
;;;45       U16P r,g,b;
;;;46       r = ((Index>>0)&3)*0x55;
00003c  eb011101          ADD      r1,r1,r1,LSL #4
000040  eb010281          ADD      r2,r1,r1,LSL #2
;;;47       g = ((Index>>2)&3)*0x55;
000044  f3c00181          UBFX     r1,r0,#2,#2
000048  eb011101          ADD      r1,r1,r1,LSL #4
00004c  eb010181          ADD      r1,r1,r1,LSL #2
;;;48       b = (Index>>4)    *0x55;
000050  1100              ASRS     r0,r0,#4
000052  eb001000          ADD      r0,r0,r0,LSL #4
000056  eb000080          ADD      r0,r0,r0,LSL #2
;;;49       return (((U32)b)<<16)|(g<<8)|r;
00005a  0400              LSLS     r0,r0,#16
00005c  ea402001          ORR      r0,r0,r1,LSL #8
000060  4310              ORRS     r0,r0,r2
;;;50     }
000062  4770              BX       lr
;;;51     
                          ENDP

                  LCD_GetIndexMask_222 PROC
;;;55     */
;;;56     unsigned LCD_GetIndexMask_222(void) {
000064  203f              MOVS     r0,#0x3f
;;;57       return 0x0003f;
;;;58     }
000066  4770              BX       lr
;;;59     
                          ENDP

                  LCD_Color2Index_M222 PROC
;;;69     */
;;;70     unsigned LCD_Color2Index_M222(LCD_COLOR Color) {
000068  b2c1              UXTB     r1,r0
;;;71       int r,g,b;
;;;72       r = ((Color&255)      +0x2a)/0x55;
00006a  312a              ADDS     r1,r1,#0x2a
00006c  eb011281          ADD      r2,r1,r1,LSL #6
000070  eb0211c1          ADD      r1,r2,r1,LSL #7
000074  0b8a              LSRS     r2,r1,#14
;;;73       g = (((Color>>8)&255) +0x2a)/0x55;
000076  f3c02107          UBFX     r1,r0,#8,#8
00007a  312a              ADDS     r1,r1,#0x2a
00007c  eb011381          ADD      r3,r1,r1,LSL #6
000080  eb0311c1          ADD      r1,r3,r1,LSL #7
000084  0b89              LSRS     r1,r1,#14
;;;74       b = (((Color>>16)&255)+0x2a)/0x55;
000086  f3c04007          UBFX     r0,r0,#16,#8
00008a  302a              ADDS     r0,r0,#0x2a
00008c  eb001380          ADD      r3,r0,r0,LSL #6
000090  eb0310c0          ADD      r0,r3,r0,LSL #7
000094  0b80              LSRS     r0,r0,#14
;;;75       return b+(g<<2)+(r<<4);
000096  eb000081          ADD      r0,r0,r1,LSL #2
00009a  eb001002          ADD      r0,r0,r2,LSL #4
;;;76     }
00009e  4770              BX       lr
;;;77     
                          ENDP

                  LCD_Index2Color_M222 PROC
;;;81     */
;;;82     LCD_COLOR LCD_Index2Color_M222(int Index) {
0000a0  f0000103          AND      r1,r0,#3
;;;83       U16P r,g,b;
;;;84       r = ((Index>>0)&3)*0x55;
0000a4  eb011101          ADD      r1,r1,r1,LSL #4
0000a8  eb010281          ADD      r2,r1,r1,LSL #2
;;;85       g = ((Index>>2)&3)*0x55;
0000ac  f3c00181          UBFX     r1,r0,#2,#2
0000b0  eb011101          ADD      r1,r1,r1,LSL #4
0000b4  eb010181          ADD      r1,r1,r1,LSL #2
;;;86       b = (Index>>4)    *0x55;
0000b8  1100              ASRS     r0,r0,#4
0000ba  eb001000          ADD      r0,r0,r0,LSL #4
0000be  eb000080          ADD      r0,r0,r0,LSL #2
0000c2  b280              UXTH     r0,r0
;;;87       return (((U32)r)<<16)|(g<<8)|b;
0000c4  0412              LSLS     r2,r2,#16
0000c6  ea422101          ORR      r1,r2,r1,LSL #8
0000ca  4308              ORRS     r0,r0,r1
;;;88     }
0000cc  4770              BX       lr
;;;89     
                          ENDP

                  LCD_GetIndexMask_M222 PROC
;;;93     */
;;;94     unsigned LCD_GetIndexMask_M222(void) {
0000ce  203f              MOVS     r0,#0x3f
;;;95       return 0x003f;
;;;96     }
0000d0  4770              BX       lr
;;;97     
                          ENDP

