; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui__settext.o --depend=.\rvmdk\gui__settext.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui__settext.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI__SetText.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI__SetText PROC
;;;44     */
;;;45     int GUI__SetText(GUI_HMEM* phText, const char* s) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
;;;46       int r;
;;;47       GUI_HMEM hOld;
;;;48     
;;;49       r = 0;
000008  2400              MOVS     r4,#0
;;;50       hOld = *phText;
00000a  f9b68000          LDRSH    r8,[r6,#0]
;;;51       if (GUI__strcmp_hp(hOld, s) != 0) {            /* Make sure we have a quick out if nothing changes */
00000e  4639              MOV      r1,r7
000010  4640              MOV      r0,r8
000012  f7fffffe          BL       GUI__strcmp_hp
000016  b308              CBZ      r0,|L1.92|
;;;52         GUI_HMEM hMem;
;;;53         int NewLen;
;;;54         int OldLen;
;;;55            
;;;56         NewLen = GUI__strlen(s) + 1;
000018  4638              MOV      r0,r7
00001a  f7fffffe          BL       GUI__strlen
00001e  1c45              ADDS     r5,r0,#1
;;;57         OldLen = GUI_ALLOC_GetSize(hOld);
000020  4640              MOV      r0,r8
000022  f7fffffe          BL       GUI_ALLOC_GetSize
;;;58         if (NewLen == OldLen) {
000026  4285              CMP      r5,r0
000028  d108              BNE      |L1.60|
;;;59           char* pMem;
;;;60           pMem = (char*) GUI_ALLOC_h2p(hOld);
00002a  4640              MOV      r0,r8
00002c  f7fffffe          BL       GUI_ALLOC_h2p
;;;61           memcpy(pMem, s, NewLen);
000030  462a              MOV      r2,r5
000032  4639              MOV      r1,r7
000034  f7fffffe          BL       __aeabi_memcpy
;;;62           r = 1;
000038  2401              MOVS     r4,#1
;;;63         } else {
00003a  e00f              B        |L1.92|
                  |L1.60|
;;;64           hMem = GUI_ALLOC_AllocNoInit(NewLen);
00003c  b228              SXTH     r0,r5
00003e  f7fffffe          BL       GUI_ALLOC_AllocNoInit
000042  4605              MOV      r5,r0
;;;65           if (hMem) {
000044  b155              CBZ      r5,|L1.92|
;;;66             char* pMem;
;;;67             pMem = (char*) GUI_ALLOC_h2p(hMem);
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       GUI_ALLOC_h2p
;;;68             strcpy(pMem, s);
00004c  4639              MOV      r1,r7
00004e  f7fffffe          BL       strcpy
;;;69             GUI_ALLOC_FreePtr(phText);
000052  4630              MOV      r0,r6
000054  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;70             *phText = hMem;
000058  8035              STRH     r5,[r6,#0]
;;;71             r = 1;
00005a  2401              MOVS     r4,#1
                  |L1.92|
;;;72           }
;;;73         }
;;;74       }
;;;75       return r;
00005c  4620              MOV      r0,r4
;;;76     }
00005e  e8bd81f0          POP      {r4-r8,pc}
;;;77     
                          ENDP

