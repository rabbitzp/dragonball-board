; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guidev_writealpha.o --depend=.\rvmdk\guidev_writealpha.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guidev_writealpha.crf ..\..\..\..\..\uCGUI\GUI\MemDev\GUIDEV_WriteAlpha.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _WriteAlphaToActiveAt PROC
;;;39     */
;;;40     static void _WriteAlphaToActiveAt(GUI_MEMDEV_Handle hMem, int Intens, int x, int y) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  4691              MOV      r9,r2
;;;41       /* Make sure the memory handle is valid */
;;;42       if (hMem) {
000008  2800              CMP      r0,#0
00000a  d054              BEQ      |L1.182|
;;;43         GUI_MEMDEV * pDev = GUI_MEMDEV_H2P(hMem);
00000c  f7fffffe          BL       GUI_ALLOC_h2p
000010  4606              MOV      r6,r0
;;;44         GUI_USAGE_h hUsage = pDev->hUsage; 
000012  f9b60018          LDRSH    r0,[r6,#0x18]
;;;45         GUI_USAGE*  pUsage;
;;;46         int YSize = pDev->YSize;
000016  f9b61006          LDRSH    r1,[r6,#6]
00001a  9102              STR      r1,[sp,#8]
;;;47         int yi;
;;;48         if (hUsage) {
00001c  2800              CMP      r0,#0
00001e  d04a              BEQ      |L1.182|
;;;49           pUsage = GUI_USAGE_H2P(hUsage);
000020  f7fffffe          BL       GUI_ALLOC_h2p
000024  4682              MOV      r10,r0
;;;50           for (yi = 0; yi < YSize; yi++) {
000026  f04f0800          MOV      r8,#0
00002a  9802              LDR      r0,[sp,#8]
00002c  2800              CMP      r0,#0
00002e  dd42              BLE      |L1.182|
                  |L1.48|
;;;51             int xOff = 0;
000030  2000              MOVS     r0,#0
000032  9001              STR      r0,[sp,#4]
;;;52             int XSize;
;;;53             XSize = GUI_USAGE_GetNextDirty(pUsage, &xOff, yi);
000034  f8da0008          LDR      r0,[r10,#8]
000038  4642              MOV      r2,r8
00003a  a901              ADD      r1,sp,#4
00003c  6943              LDR      r3,[r0,#0x14]
00003e  4650              MOV      r0,r10
000040  4798              BLX      r3
000042  4605              MOV      r5,r0
;;;54             /* Draw the partial line which needs to be drawn */
;;;55             for (; XSize; ) {
000044  b395              CBZ      r5,|L1.172|
;;;56               U8* pData;
;;;57               pData = (U8*)GUI_MEMDEV__XY2PTREx(pDev, xOff, yi);
;;;58               do {
;;;59                 LCD_COLOR Color, BkColor;
;;;60                 int xPos, yPos, Index;
;;;61                 if (pDev->BitsPerPixel == 8) {
;;;62                   Index = *pData++;
;;;63                 } else {
;;;64                   Index = *(U16*)pData;
;;;65                   pData += 2;
;;;66                 }
;;;67                 Color   = LCD_Index2Color(Index);
;;;68                 xPos    = xOff + x;
;;;69                 yPos    = yi +y;
000046  9806              LDR      r0,[sp,#0x18]
000048  eb080700          ADD      r7,r8,r0
                  |L1.76|
00004c  4642              MOV      r2,r8                 ;57
00004e  4630              MOV      r0,r6                 ;57
000050  9901              LDR      r1,[sp,#4]            ;57
000052  f7fffffe          BL       GUI_MEMDEV__XY2PTREx
000056  4604              MOV      r4,r0                 ;57
                  |L1.88|
000058  6930              LDR      r0,[r6,#0x10]         ;61
00005a  2808              CMP      r0,#8                 ;61
00005c  d02e              BEQ      |L1.188|
00005e  8820              LDRH     r0,[r4,#0]            ;64
000060  1ca4              ADDS     r4,r4,#2              ;65
                  |L1.98|
000062  f7fffffe          BL       LCD_Index2Color
000066  9000              STR      r0,[sp,#0]            ;67
000068  9801              LDR      r0,[sp,#4]            ;68
00006a  eb000b09          ADD      r11,r0,r9             ;68
;;;70                 BkColor = LCD_GetPixelColor(xPos, yPos);
00006e  4639              MOV      r1,r7
000070  4658              MOV      r0,r11
000072  f7fffffe          BL       LCD_GetPixelColor
;;;71                 Color   = LCD_MixColors256(Color, BkColor, Intens);
000076  4601              MOV      r1,r0
000078  9a04              LDR      r2,[sp,#0x10]
00007a  9800              LDR      r0,[sp,#0]
00007c  f7fffffe          BL       LCD_MixColors256
;;;72                 Index   = LCD_Color2Index(Color);
000080  f7fffffe          BL       LCD_Color2Index
;;;73                 LCD_SetPixelIndex(xPos, yPos, Index);
000084  4602              MOV      r2,r0
000086  4639              MOV      r1,r7
000088  4658              MOV      r0,r11
00008a  f7fffffe          BL       LCD_SetPixelIndex
;;;74                 xOff++;
00008e  9801              LDR      r0,[sp,#4]
000090  1c40              ADDS     r0,r0,#1
000092  9001              STR      r0,[sp,#4]
;;;75               } while (--XSize);
000094  1e6d              SUBS     r5,r5,#1
000096  d1df              BNE      |L1.88|
;;;76               XSize = GUI_USAGE_GetNextDirty(pUsage, &xOff, yi);
000098  f8da0008          LDR      r0,[r10,#8]
00009c  4642              MOV      r2,r8
00009e  a901              ADD      r1,sp,#4
0000a0  6943              LDR      r3,[r0,#0x14]
0000a2  4650              MOV      r0,r10
0000a4  4798              BLX      r3
0000a6  4605              MOV      r5,r0
0000a8  2d00              CMP      r5,#0                 ;55
0000aa  d1cf              BNE      |L1.76|
                  |L1.172|
0000ac  f1080801          ADD      r8,r8,#1              ;50
0000b0  9802              LDR      r0,[sp,#8]            ;50
0000b2  4580              CMP      r8,r0                 ;50
0000b4  dbbc              BLT      |L1.48|
                  |L1.182|
;;;77             }
;;;78           }
;;;79         }
;;;80       }
;;;81     }
0000b6  b007              ADD      sp,sp,#0x1c
0000b8  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.188|
0000bc  f8140b01          LDRB     r0,[r4],#1            ;62
0000c0  e7cf              B        |L1.98|
;;;82     
                          ENDP

                  GUI_MEMDEV_WriteAlphaAt PROC
;;;92     */
;;;93     void GUI_MEMDEV_WriteAlphaAt(GUI_MEMDEV_Handle hMem, int Alpha, int x, int y) {
0000c2  b5f0              PUSH     {r4-r7,lr}
0000c4  b083              SUB      sp,sp,#0xc
0000c6  4606              MOV      r6,r0
0000c8  460f              MOV      r7,r1
0000ca  4614              MOV      r4,r2
0000cc  461d              MOV      r5,r3
;;;94       if (hMem) {
0000ce  2e00              CMP      r6,#0
0000d0  d02a              BEQ      |L1.296|
;;;95         GUI_MEMDEV* pDevData;
;;;96         #if (GUI_WINSUPPORT)
;;;97           GUI_RECT r;
;;;98         #endif
;;;99         GUI_LOCK();
0000d2  f7fffffe          BL       GUI_Lock
;;;100        pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
0000d6  4630              MOV      r0,r6
0000d8  f7fffffe          BL       GUI_ALLOC_h2p
;;;101        if (x == GUI_POS_AUTO) {
0000dc  f64071ff          MOV      r1,#0xfff
0000e0  1909              ADDS     r1,r1,r4
0000e2  d103              BNE      |L1.236|
;;;102          x = pDevData->x0;
0000e4  f9b04000          LDRSH    r4,[r0,#0]
;;;103          y = pDevData->y0;
0000e8  f9b05002          LDRSH    r5,[r0,#2]
                  |L1.236|
;;;104        }
;;;105        #if (GUI_WINSUPPORT)
;;;106          r.x1 = (r.x0 = x) + pDevData->XSize-1;
0000ec  8881              LDRH     r1,[r0,#4]
0000ee  1e62              SUBS     r2,r4,#1
0000f0  4411              ADD      r1,r1,r2
0000f2  f8ad4000          STRH     r4,[sp,#0]
0000f6  f8ad1004          STRH     r1,[sp,#4]
;;;107          r.y1 = (r.y0 = y) + pDevData->YSize-1;;
0000fa  88c0              LDRH     r0,[r0,#6]
0000fc  1e69              SUBS     r1,r5,#1
0000fe  4408              ADD      r0,r0,r1
000100  f8ad5002          STRH     r5,[sp,#2]
000104  f8ad0006          STRH     r0,[sp,#6]
;;;108          WM_ITERATE_START(&r) {
000108  4668              MOV      r0,sp
00010a  f7fffffe          BL       WM__InitIVRSearch
00010e  b148              CBZ      r0,|L1.292|
                  |L1.272|
;;;109          _WriteAlphaToActiveAt(hMem, Alpha, x,y);
000110  462b              MOV      r3,r5
000112  4622              MOV      r2,r4
000114  4639              MOV      r1,r7
000116  4630              MOV      r0,r6
000118  f7fffffe          BL       _WriteAlphaToActiveAt
;;;110          } WM_ITERATE_END();
00011c  f7fffffe          BL       WM__GetNextIVR
000120  2800              CMP      r0,#0
000122  d1f5              BNE      |L1.272|
                  |L1.292|
;;;111        #else
;;;112          _WriteAlphaToActiveAt(hMem, Alpha, x,y);
;;;113        #endif
;;;114        GUI_UNLOCK();
000124  f7fffffe          BL       GUI_Unlock
                  |L1.296|
;;;115      }
;;;116    }
000128  b003              ADD      sp,sp,#0xc
00012a  bdf0              POP      {r4-r7,pc}
;;;117    
                          ENDP

                  GUI_MEMDEV_WriteAlpha PROC
;;;121    */
;;;122    void GUI_MEMDEV_WriteAlpha(GUI_MEMDEV_Handle hMem, int Alpha) {
00012c  4a01              LDR      r2,|L1.308|
;;;123      GUI_MEMDEV_WriteAlphaAt(hMem, Alpha, GUI_POS_AUTO, GUI_POS_AUTO);
00012e  4613              MOV      r3,r2
000130  e7fe              B        GUI_MEMDEV_WriteAlphaAt
;;;124    }
;;;125    
                          ENDP

000132  0000              DCW      0x0000
                  |L1.308|
                          DCD      0xfffff001
