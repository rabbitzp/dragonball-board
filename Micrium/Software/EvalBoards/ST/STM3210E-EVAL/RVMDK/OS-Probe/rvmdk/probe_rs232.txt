; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\probe_rs232.o --depend=.\rvmdk\probe_rs232.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\probe_rs232.crf ..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source\probe_rs232.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ProbeRS232_Init PROC
;;;217    
;;;218    void  ProbeRS232_Init (CPU_INT32U baud_rate)
000000  b510              PUSH     {r4,lr}
;;;219    {
000002  4604              MOV      r4,r0
;;;220        ProbeRS232_RxState      = PROBE_RS232_RX_STATE_SD0;         /* Setup Rx and Tx state machines.                      */
000004  4992              LDR      r1,|L1.592|
000006  2200              MOVS     r2,#0
000008  700a              STRB     r2,[r1,#0]
;;;221        ProbeRS232_TxState      = PROBE_RS232_TX_STATE_SD0;
00000a  704a              STRB     r2,[r1,#1]
;;;222    
;;;223        ProbeRS232_TxLen        = 0;
00000c  814a              STRH     r2,[r1,#0xa]
;;;224        ProbeRS232_TxActiveFlag = DEF_FALSE;
00000e  708a              STRB     r2,[r1,#2]
;;;225        ProbeRS232_TxBufInUse   = DEF_FALSE;
000010  70ca              STRB     r2,[r1,#3]
;;;226    
;;;227    #if (PROBE_COM_STAT_EN     == DEF_ENABLED)
;;;228        ProbeRS232_RxCtr        = 0;
000012  610a              STR      r2,[r1,#0x10]  ; ProbeRS232_RxCtr
;;;229        ProbeRS232_TxCtr        = 0;
000014  614a              STR      r2,[r1,#0x14]  ; ProbeRS232_TxCtr
;;;230    #endif
;;;231    
;;;232    #if (PROBE_RS232_PARSE_TASK == DEF_TRUE)
;;;233        ProbeRS232_OS_Init();
000016  f7fffffe          BL       ProbeRS232_OS_Init
;;;234    #endif
;;;235    
;;;236        ProbeRS232_InitTarget(baud_rate);                           /* Initialize target specific code.                     */
00001a  4620              MOV      r0,r4
00001c  e8bd4010          POP      {r4,lr}
000020  f7ffbffe          B.W      ProbeRS232_InitTarget
;;;237    }
;;;238    
                          ENDP

                  ProbeRS232_TxHandler PROC
;;;434    
;;;435    void  ProbeRS232_TxHandler (void)
000024  b510              PUSH     {r4,lr}
;;;436    {
;;;437        CPU_INT08U  tx_data;
;;;438    
;;;439    
;;;440    #if (PROBE_COM_STAT_EN == DEF_ENABLED)
;;;441        if ((ProbeRS232_TxState != PROBE_RS232_TX_STATE_SD0) ||
000026  4c8a              LDR      r4,|L1.592|
000028  7861              LDRB     r1,[r4,#1]  ; ProbeRS232_TxState
00002a  8960              LDRH     r0,[r4,#0xa]  ; ProbeRS232_TxLen
00002c  ea510200          ORRS     r2,r1,r0
000030  d002              BEQ      |L1.56|
;;;442            (ProbeRS232_TxLen    > 0                       )) {
;;;443            ProbeRS232_TxCtr++;
000032  6962              LDR      r2,[r4,#0x14]  ; ProbeRS232_TxCtr
000034  1c52              ADDS     r2,r2,#1
000036  6162              STR      r2,[r4,#0x14]  ; ProbeRS232_TxCtr
                  |L1.56|
;;;444        }
;;;445    #endif
;;;446    
;;;447        switch (ProbeRS232_TxState) {
000038  290b              CMP      r1,#0xb
00003a  d25f              BCS      |L1.252|
00003c  e8dff001          TBB      [pc,r1]
000040  06161c22          DCB      0x06,0x16,0x1c,0x22
000044  282e343a          DCB      0x28,0x2e,0x34,0x3a
000048  40515700          DCB      0x40,0x51,0x57,0x00
;;;448            case PROBE_RS232_TX_STATE_SD0:
;;;449                 if (ProbeRS232_TxLen > 0) {                        /* If pkt is waiting to be sent ...                     */
00004c  b140              CBZ      r0,|L1.96|
;;;450                     ProbeRS232_Tx1(PROBE_RS232_PROTOCOL_TX_SD0);   /*  ... tx start 1st start delimiter (SD0).             */
00004e  2075              MOVS     r0,#0x75
000050  f7fffffe          BL       ProbeRS232_Tx1
;;;451                     ProbeRS232_TxActiveFlag = DEF_TRUE;
000054  2001              MOVS     r0,#1
000056  70a0              STRB     r0,[r4,#2]
;;;452                     ProbeRS232_TxState      = PROBE_RS232_TX_STATE_SD1;
000058  7060              STRB     r0,[r4,#1]
;;;453                     ProbeRS232_TxBufRdIx    = 0;
00005a  2000              MOVS     r0,#0
00005c  81a0              STRH     r0,[r4,#0xc]
;;;454    
;;;455                 } else {                                           /* If no pkt is waiting to be sent ...                  */
;;;456                     ProbeRS232_TxActiveFlag = DEF_FALSE;
;;;457                     ProbeRS232_TxIntDis();                         /*  ... dis tx int's.                                   */
;;;458                 }
;;;459                 break;
;;;460    
;;;461    
;;;462            case PROBE_RS232_TX_STATE_SD1:                          /* Tx start 2nd start delimiter (SD1).                  */
;;;463                 ProbeRS232_Tx1(PROBE_RS232_PROTOCOL_TX_SD1);
;;;464                 ProbeRS232_TxState = PROBE_RS232_TX_STATE_SD2;
;;;465                 break;
;;;466    
;;;467    
;;;468            case PROBE_RS232_TX_STATE_SD2:                          /* Tx start 3rd start delimiter (SD2).                  */
;;;469                 ProbeRS232_Tx1(PROBE_RS232_PROTOCOL_TX_SD2);
;;;470                 ProbeRS232_TxState = PROBE_RS232_TX_STATE_SD3;
;;;471                 break;
;;;472    
;;;473    
;;;474            case PROBE_RS232_TX_STATE_SD3:                          /* Tx start 4th start delimiter (SD3).                  */
;;;475                 ProbeRS232_Tx1(PROBE_RS232_PROTOCOL_TX_SD3);
;;;476                 ProbeRS232_TxState = PROBE_RS232_TX_STATE_LEN1;
;;;477                 break;
;;;478    
;;;479    
;;;480            case PROBE_RS232_TX_STATE_LEN1:                         /* Tx 1st len byte.                                     */
;;;481                 tx_data             = ProbeRS232_TxLen & 0xFF;
;;;482                 ProbeRS232_Tx1(tx_data);
;;;483                 ProbeRS232_TxState  = PROBE_RS232_TX_STATE_LEN2;
;;;484    #if (PROBE_RS232_USE_CHECKSUM == DEF_TRUE)
;;;485                 ProbeRS232_TxChkSum = tx_data;
;;;486    #endif
;;;487                 break;
;;;488    
;;;489    
;;;490            case PROBE_RS232_TX_STATE_LEN2:                         /* Tx 2nd len byte.                                     */
;;;491                 tx_data              = ProbeRS232_TxLen >> 8;
;;;492                 ProbeRS232_Tx1(tx_data);
;;;493                 ProbeRS232_TxState   = PROBE_RS232_TX_STATE_PAD1;
;;;494    #if (PROBE_RS232_USE_CHECKSUM == DEF_TRUE)
;;;495                 ProbeRS232_TxChkSum += tx_data;
;;;496    #endif
;;;497                 break;
;;;498    
;;;499    
;;;500            case PROBE_RS232_TX_STATE_PAD1:                         /* Tx 1st padding byte.                                 */
;;;501                 ProbeRS232_Tx1(0);
;;;502                 ProbeRS232_TxState = PROBE_RS232_TX_STATE_PAD2;
;;;503                 break;
;;;504    
;;;505    
;;;506            case PROBE_RS232_TX_STATE_PAD2:                         /* Tx 2nd padding byte.                                 */
;;;507                 ProbeRS232_Tx1(0);
;;;508                 ProbeRS232_TxState = PROBE_RS232_TX_STATE_DATA;
;;;509                 break;
;;;510    
;;;511    
;;;512            case PROBE_RS232_TX_STATE_DATA:                         /* Tx data.                                             */
;;;513                 tx_data = ProbeRS232_TxBuf[ProbeRS232_TxBufRdIx];
;;;514                 ProbeRS232_Tx1(tx_data);
;;;515    #if (PROBE_RS232_USE_CHECKSUM == DEF_TRUE)
;;;516                 ProbeRS232_TxChkSum += tx_data;
;;;517    #endif
;;;518                 ProbeRS232_TxBufRdIx++;
;;;519                 if (ProbeRS232_TxBufRdIx >= ProbeRS232_TxLen) {
;;;520                     ProbeRS232_TxState = PROBE_RS232_TX_STATE_CHKSUM;
;;;521                     ProbeRS232_TxLen   = 0;
;;;522                 }
;;;523                 break;
;;;524    
;;;525    
;;;526            case PROBE_RS232_TX_STATE_CHKSUM:                       /* Tx checksum.                                         */
;;;527    #if (PROBE_RS232_USE_CHECKSUM == DEF_TRUE)
;;;528                 ProbeRS232_Tx1(ProbeRS232_TxChkSum);
;;;529    #else
;;;530                 ProbeRS232_Tx1(0);
;;;531    #endif
;;;532                 ProbeRS232_TxState = PROBE_RS232_TX_STATE_ED;
;;;533                 break;
;;;534    
;;;535    
;;;536            case PROBE_RS232_TX_STATE_ED:                           /* Tx end delimiter.                                    */
;;;537                 ProbeRS232_Tx1(PROBE_RS232_PROTOCOL_TX_ED);
;;;538                 ProbeRS232_TxState    = PROBE_RS232_TX_STATE_SD0;
;;;539                 ProbeRS232_TxBufInUse = DEF_FALSE;
;;;540                 break;
;;;541    
;;;542    
;;;543            default:
;;;544                 ProbeRS232_TxState      = PROBE_RS232_TX_STATE_SD0;
;;;545                 ProbeRS232_TxActiveFlag = DEF_FALSE;
;;;546                 ProbeRS232_TxIntDis();                             /* No more data to send, dis tx int's.                  */
;;;547                 break;
;;;548        }
;;;549    }
00005e  bd10              POP      {r4,pc}
                  |L1.96|
000060  2000              MOVS     r0,#0                 ;456
000062  70a0              STRB     r0,[r4,#2]            ;456
000064  e8bd4010          POP      {r4,lr}               ;457
000068  f7ffbffe          B.W      ProbeRS232_TxIntDis
00006c  2043              MOVS     r0,#0x43              ;463
00006e  f7fffffe          BL       ProbeRS232_Tx1
000072  2002              MOVS     r0,#2                 ;464
000074  7060              STRB     r0,[r4,#1]            ;464
000076  bd10              POP      {r4,pc}
000078  2050              MOVS     r0,#0x50              ;469
00007a  f7fffffe          BL       ProbeRS232_Tx1
00007e  2003              MOVS     r0,#3                 ;470
000080  7060              STRB     r0,[r4,#1]            ;470
000082  bd10              POP      {r4,pc}
000084  2072              MOVS     r0,#0x72              ;475
000086  f7fffffe          BL       ProbeRS232_Tx1
00008a  2004              MOVS     r0,#4                 ;476
00008c  7060              STRB     r0,[r4,#1]            ;476
00008e  bd10              POP      {r4,pc}
000090  b2c0              UXTB     r0,r0                 ;481
000092  f7fffffe          BL       ProbeRS232_Tx1
000096  2005              MOVS     r0,#5                 ;483
000098  7060              STRB     r0,[r4,#1]            ;483
00009a  bd10              POP      {r4,pc}
00009c  0a00              LSRS     r0,r0,#8              ;491
00009e  f7fffffe          BL       ProbeRS232_Tx1
0000a2  2006              MOVS     r0,#6                 ;493
0000a4  7060              STRB     r0,[r4,#1]            ;493
0000a6  bd10              POP      {r4,pc}
0000a8  2000              MOVS     r0,#0                 ;501
0000aa  f7fffffe          BL       ProbeRS232_Tx1
0000ae  2007              MOVS     r0,#7                 ;502
0000b0  7060              STRB     r0,[r4,#1]            ;502
0000b2  bd10              POP      {r4,pc}
0000b4  2000              MOVS     r0,#0                 ;507
0000b6  f7fffffe          BL       ProbeRS232_Tx1
0000ba  2008              MOVS     r0,#8                 ;508
0000bc  7060              STRB     r0,[r4,#1]            ;508
                  |L1.190|
0000be  bd10              POP      {r4,pc}
0000c0  4864              LDR      r0,|L1.596|
0000c2  89a1              LDRH     r1,[r4,#0xc]          ;513  ; ProbeRS232_TxBufRdIx
0000c4  5c40              LDRB     r0,[r0,r1]            ;513
0000c6  f7fffffe          BL       ProbeRS232_Tx1
0000ca  89a0              LDRH     r0,[r4,#0xc]          ;518  ; ProbeRS232_TxBufRdIx
0000cc  1c40              ADDS     r0,r0,#1              ;518
0000ce  b280              UXTH     r0,r0                 ;518
0000d0  81a0              STRH     r0,[r4,#0xc]          ;518
0000d2  8961              LDRH     r1,[r4,#0xa]          ;519  ; ProbeRS232_TxLen
0000d4  4288              CMP      r0,r1                 ;519
0000d6  d3f2              BCC      |L1.190|
0000d8  2009              MOVS     r0,#9                 ;520
0000da  7060              STRB     r0,[r4,#1]            ;520
0000dc  2000              MOVS     r0,#0                 ;521
0000de  8160              STRH     r0,[r4,#0xa]          ;521
0000e0  bd10              POP      {r4,pc}
0000e2  2000              MOVS     r0,#0                 ;530
0000e4  f7fffffe          BL       ProbeRS232_Tx1
0000e8  200a              MOVS     r0,#0xa               ;532
0000ea  7060              STRB     r0,[r4,#1]            ;532
0000ec  bd10              POP      {r4,pc}
0000ee  202f              MOVS     r0,#0x2f              ;537
0000f0  f7fffffe          BL       ProbeRS232_Tx1
0000f4  2000              MOVS     r0,#0                 ;538
0000f6  7060              STRB     r0,[r4,#1]            ;538
0000f8  70e0              STRB     r0,[r4,#3]            ;539
0000fa  bd10              POP      {r4,pc}
                  |L1.252|
0000fc  2000              MOVS     r0,#0                 ;544
0000fe  7060              STRB     r0,[r4,#1]            ;544
000100  70a0              STRB     r0,[r4,#2]            ;545
000102  e8bd4010          POP      {r4,lr}               ;546
000106  f7ffbffe          B.W      ProbeRS232_TxIntDis
;;;550    
                          ENDP

                  ProbeRS232_TxStart PROC
;;;702    
;;;703    static  void  ProbeRS232_TxStart (void)
00010a  b510              PUSH     {r4,lr}
;;;704    {
;;;705        if (ProbeRS232_TxActiveFlag == DEF_FALSE) {                 /* If no other transmission is in progress ...          */
00010c  4850              LDR      r0,|L1.592|
00010e  7880              LDRB     r0,[r0,#2]  ; ProbeRS232_TxActiveFlag
000110  2800              CMP      r0,#0
000112  d105              BNE      |L1.288|
;;;706            ProbeRS232_TxHandler();                                 /*  ... Handle transmit                    ...          */
000114  f7fffffe          BL       ProbeRS232_TxHandler
;;;707            ProbeRS232_TxIntEn();                                   /*  ... Enable transmit interrupts.                     */
000118  e8bd4010          POP      {r4,lr}
00011c  f7ffbffe          B.W      ProbeRS232_TxIntEn
                  |L1.288|
;;;708        }
;;;709    }
000120  bd10              POP      {r4,pc}
;;;710    
                          ENDP

                  ProbeRS232_ParseRxPkt PROC
;;;576    
;;;577    static  CPU_INT16U  ProbeRS232_ParseRxPkt (void)
000122  484b              LDR      r0,|L1.592|
;;;578    {
;;;579        CPU_INT16U  tx_len;
;;;580    
;;;581    
;;;582        if (ProbeRS232_TxBufInUse == DEF_TRUE) {                    /* Do cmds only if Tx buffer is free.                   */
000124  78c1              LDRB     r1,[r0,#3]  ; ProbeRS232_TxBufInUse
000126  2901              CMP      r1,#1
000128  d008              BEQ      |L1.316|
;;;583            return (0);
;;;584        }
;;;585    
;;;586        ProbeRS232_TxBufInUse = DEF_TRUE;
00012a  2101              MOVS     r1,#1
00012c  70c1              STRB     r1,[r0,#3]
;;;587        tx_len                = ProbeCom_ParseRxPkt((void     *)ProbeRS232_RxBuf,
00012e  4949              LDR      r1,|L1.596|
000130  88c2              LDRH     r2,[r0,#6]  ; ProbeRS232_RxLen
000132  2380              MOVS     r3,#0x80
000134  f1a10080          SUB      r0,r1,#0x80
000138  f7ffbffe          B.W      ProbeCom_ParseRxPkt
                  |L1.316|
00013c  2000              MOVS     r0,#0                 ;583
;;;588                                                    (void     *)ProbeRS232_TxBuf,
;;;589                                                    (CPU_INT16U)ProbeRS232_RxLen,
;;;590                                                    (CPU_INT16U)PROBE_RS232_TX_BUF_SIZE);
;;;591    
;;;592        return (tx_len);
;;;593    }
00013e  4770              BX       lr
;;;594    
                          ENDP

                  ProbeRS232_Task PROC
;;;256    #if (PROBE_RS232_PARSE_TASK == DEF_TRUE)
;;;257    void  ProbeRS232_Task (void *p_arg)
000140  4c43              LDR      r4,|L1.592|
                  |L1.322|
;;;258    {
;;;259        CPU_INT16U  len;
;;;260    
;;;261    
;;;262        (void)p_arg;
;;;263    
;;;264        while (DEF_TRUE) {
;;;265            ProbeRS232_OS_Pend();                                   /* Wait for a packet to be received.                    */
000142  f7fffffe          BL       ProbeRS232_OS_Pend
;;;266    
;;;267            len = ProbeRS232_ParseRxPkt();                          /* Parse packet and formulate a response.               */
000146  f7fffffe          BL       ProbeRS232_ParseRxPkt
;;;268    
;;;269            if (len > 0) {                                          /* If we have a response.                               */
00014a  2800              CMP      r0,#0
00014c  d0f9              BEQ      |L1.322|
;;;270                ProbeRS232_TxLen = len;
00014e  8160              STRH     r0,[r4,#0xa]
;;;271                ProbeRS232_TxStart();
000150  f7fffffe          BL       ProbeRS232_TxStart
000154  e7f5              B        |L1.322|
;;;272            }
;;;273        }
;;;274    }
;;;275    #endif
                          ENDP

                  ProbeRS232_RxPkt PROC
;;;611    
;;;612    static  void  ProbeRS232_RxPkt (void)
000156  f7ffbffe          B.W      ProbeRS232_OS_Post
;;;613    {
;;;614    #if (PROBE_RS232_PARSE_TASK == DEF_TRUE)
;;;615        ProbeRS232_OS_Post();                                       /* We have a whole packet, signal task to parse it.     */
;;;616    
;;;617    
;;;618    
;;;619    #else
;;;620    
;;;621    
;;;622    
;;;623    #if (CPU_CFG_CRITICAL_METHOD == CPU_CRITICAL_METHOD_STATUS_LOCAL)
;;;624        CPU_SR      cpu_sr = 0;
;;;625    #endif
;;;626        CPU_INT16U  len;
;;;627    
;;;628    
;;;629        len = ProbeRS232_ParseRxPkt();                              /* We have a whole packet, parse it.                    */
;;;630        if (len > 0) {
;;;631            CPU_CRITICAL_ENTER();
;;;632            ProbeRS232_TxLen = len;
;;;633            ProbeRS232_TxStart();
;;;634            CPU_CRITICAL_EXIT();
;;;635        }
;;;636    #endif
;;;637    }
;;;638    
                          ENDP

                  ProbeRS232_RxStoINT8U PROC
;;;655    
;;;656    static  void  ProbeRS232_RxStoINT8U (CPU_INT08U rx_data)
00015a  4a3d              LDR      r2,|L1.592|
;;;657    {
;;;658        if (ProbeRS232_RxBufWrIx < PROBE_RS232_RX_BUF_SIZE) {
00015c  8911              LDRH     r1,[r2,#8]  ; ProbeRS232_RxBufWrIx
00015e  2980              CMP      r1,#0x80
000160  d203              BCS      |L1.362|
;;;659            ProbeRS232_RxBuf[ProbeRS232_RxBufWrIx++] = rx_data;
000162  1c4b              ADDS     r3,r1,#1
000164  8113              STRH     r3,[r2,#8]
000166  4a3c              LDR      r2,|L1.600|
000168  5450              STRB     r0,[r2,r1]
                  |L1.362|
;;;660        }
;;;661    }
00016a  4770              BX       lr
;;;662    
                          ENDP

                  ProbeRS232_RxBufClr PROC
;;;679    
;;;680    static  void  ProbeRS232_RxBufClr (void)
00016c  4938              LDR      r1,|L1.592|
;;;681    {
;;;682        ProbeRS232_RxBufWrIx = 0;
00016e  2000              MOVS     r0,#0
000170  8108              STRH     r0,[r1,#8]
;;;683    }
000172  4770              BX       lr
;;;684    
                          ENDP

                  ProbeRS232_RxHandler PROC
;;;301    
;;;302    void  ProbeRS232_RxHandler (CPU_INT08U rx_data)
000174  b510              PUSH     {r4,lr}
;;;303    {
;;;304    #if (PROBE_COM_STAT_EN == DEF_ENABLED)
;;;305        ProbeRS232_RxCtr++;
000176  4936              LDR      r1,|L1.592|
000178  690a              LDR      r2,[r1,#0x10]  ; ProbeRS232_RxCtr
00017a  1c52              ADDS     r2,r2,#1
00017c  610a              STR      r2,[r1,#0x10]  ; ProbeRS232_RxCtr
;;;306    #endif
;;;307    
;;;308        switch (ProbeRS232_RxState) {
00017e  7809              LDRB     r1,[r1,#0]  ; ProbeRS232_RxState
000180  290b              CMP      r1,#0xb
000182  d261              BCS      |L1.584|
000184  e8dff001          TBB      [pc,r1]
000188  060e1822          DCB      0x06,0x0e,0x18,0x22
00018c  2c314044          DCB      0x2c,0x31,0x40,0x44
000190  48545800          DCB      0x48,0x54,0x58,0x00
;;;309            case PROBE_RS232_RX_STATE_SD0:                          /* Rx'd the start 1st start delimiter (SD0).            */
;;;310                 if (rx_data == PROBE_RS232_PROTOCOL_RX_SD0) {
000194  2875              CMP      r0,#0x75
000196  d10a              BNE      |L1.430|
;;;311                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD1;
000198  492d              LDR      r1,|L1.592|
00019a  2001              MOVS     r0,#1
00019c  7008              STRB     r0,[r1,#0]
;;;312                     ProbeRS232_RxBufClr();
00019e  e8bd4010          POP      {r4,lr}
0001a2  e7fe              B        ProbeRS232_RxBufClr
;;;313                 }
;;;314                 break;
;;;315    
;;;316    
;;;317            case PROBE_RS232_RX_STATE_SD1:                          /* Rx'd the start 2nd start delimiter (SD1).            */
;;;318                 if (rx_data == PROBE_RS232_PROTOCOL_RX_SD1) {
0001a4  2843              CMP      r0,#0x43
0001a6  d003              BEQ      |L1.432|
;;;319                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD2;
;;;320                 } else {
;;;321                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD0;
0001a8  4929              LDR      r1,|L1.592|
0001aa  2000              MOVS     r0,#0
0001ac  7008              STRB     r0,[r1,#0]
                  |L1.430|
;;;322                 }
;;;323                 break;
;;;324    
;;;325    
;;;326            case PROBE_RS232_RX_STATE_SD2:                          /* Rx'd the start 3rd start delimiter (SD2).            */
;;;327                 if (rx_data == PROBE_RS232_PROTOCOL_RX_SD2) {
;;;328                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD3;
;;;329                 } else {
;;;330                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD0;
;;;331                 }
;;;332                 break;
;;;333    
;;;334    
;;;335            case PROBE_RS232_RX_STATE_SD3:                          /* Rx'd the start 4th start delimiter (SD3).            */
;;;336                 if (rx_data == PROBE_RS232_PROTOCOL_RX_SD3) {
;;;337                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_LEN1;
;;;338                 } else {
;;;339                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD0;
;;;340                 }
;;;341                 break;
;;;342    
;;;343    
;;;344            case PROBE_RS232_RX_STATE_LEN1:                         /* Rx'd the 1st len byte.                               */
;;;345    #if (PROBE_RS232_USE_CHECKSUM == DEF_TRUE)
;;;346                 ProbeRS232_RxChkSum    = rx_data;
;;;347    #endif
;;;348                 ProbeRS232_RxRemainLen = rx_data;
;;;349                 ProbeRS232_RxState     = PROBE_RS232_RX_STATE_LEN2;
;;;350                 break;
;;;351    
;;;352    
;;;353            case PROBE_RS232_RX_STATE_LEN2:                         /* Rx'd the 2nd len byte.                               */
;;;354    #if (PROBE_RS232_USE_CHECKSUM == DEF_TRUE)
;;;355                 ProbeRS232_RxChkSum    += rx_data;
;;;356    #endif
;;;357                 ProbeRS232_RxRemainLen |= rx_data << 8;
;;;358    
;;;359                                                                    /* Chk len.                                             */
;;;360                 if ((ProbeRS232_RxRemainLen == 0) || (ProbeRS232_RxRemainLen > PROBE_RS232_RX_BUF_SIZE)) {
;;;361                     ProbeRS232_RxState  = PROBE_RS232_RX_STATE_SD0;
;;;362                 } else {
;;;363                     ProbeRS232_RxLen    = ProbeRS232_RxRemainLen;
;;;364                     ProbeRS232_RxState  = PROBE_RS232_RX_STATE_PAD1;
;;;365                 }
;;;366                 break;
;;;367    
;;;368    
;;;369            case PROBE_RS232_RX_STATE_PAD1:                         /* Rx'd the 1st padding byte.                           */
;;;370                 ProbeRS232_RxState = PROBE_RS232_RX_STATE_PAD2;
;;;371                 break;
;;;372    
;;;373    
;;;374            case PROBE_RS232_RX_STATE_PAD2:                         /* Rx'd the 2nd  padding byte.                          */
;;;375                 ProbeRS232_RxState = PROBE_RS232_RX_STATE_DATA;
;;;376                 break;
;;;377    
;;;378    
;;;379            case PROBE_RS232_RX_STATE_DATA:                         /* Rx'd data.                                           */
;;;380                 ProbeRS232_RxStoINT8U(rx_data);
;;;381    #if (PROBE_RS232_USE_CHECKSUM == DEF_TRUE)
;;;382                 ProbeRS232_RxChkSum += rx_data;
;;;383    #endif
;;;384                 if (--ProbeRS232_RxRemainLen == 0) {
;;;385                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_CHKSUM;
;;;386                 }
;;;387                 break;
;;;388    
;;;389    
;;;390            case PROBE_RS232_RX_STATE_CHKSUM:                       /* Rx'd the checksum.                                   */
;;;391    #if (PROBE_RS232_USE_CHECKSUM == DEF_TRUE)
;;;392                 ProbeRS232_RxChkSum += rx_data;
;;;393                 if ((ProbeRS232_RxChkSum & 0xFF) == 0x00) {
;;;394                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_ED;
;;;395                 } else {
;;;396                     ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD0;
;;;397                 }
;;;398    #else
;;;399                 ProbeRS232_RxState = PROBE_RS232_RX_STATE_ED;
;;;400    #endif
;;;401                 break;
;;;402    
;;;403    
;;;404            case PROBE_RS232_RX_STATE_ED:                           /* Rx'd the end delimiter.                              */
;;;405                 if (rx_data == PROBE_RS232_PROTOCOL_RX_ED) {
;;;406                     ProbeRS232_RxPkt();                            /* Parse rx'd pkt.                                      */
;;;407                 }
;;;408                 ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD0;
;;;409                 break;
;;;410    
;;;411    
;;;412            default:
;;;413                 ProbeRS232_RxState = PROBE_RS232_RX_STATE_SD0;
;;;414                 break;
;;;415        }
;;;416    }
0001ae  bd10              POP      {r4,pc}
                  |L1.432|
0001b0  4927              LDR      r1,|L1.592|
0001b2  2002              MOVS     r0,#2                 ;319
0001b4  7008              STRB     r0,[r1,#0]            ;319
0001b6  bd10              POP      {r4,pc}
0001b8  2850              CMP      r0,#0x50              ;327
0001ba  d003              BEQ      |L1.452|
0001bc  4924              LDR      r1,|L1.592|
0001be  2000              MOVS     r0,#0                 ;330
0001c0  7008              STRB     r0,[r1,#0]            ;330
0001c2  bd10              POP      {r4,pc}
                  |L1.452|
0001c4  4922              LDR      r1,|L1.592|
0001c6  2003              MOVS     r0,#3                 ;328
0001c8  7008              STRB     r0,[r1,#0]            ;328
0001ca  bd10              POP      {r4,pc}
0001cc  2872              CMP      r0,#0x72              ;336
0001ce  d003              BEQ      |L1.472|
0001d0  491f              LDR      r1,|L1.592|
0001d2  2000              MOVS     r0,#0                 ;339
0001d4  7008              STRB     r0,[r1,#0]            ;339
0001d6  bd10              POP      {r4,pc}
                  |L1.472|
0001d8  491d              LDR      r1,|L1.592|
0001da  2004              MOVS     r0,#4                 ;337
0001dc  7008              STRB     r0,[r1,#0]            ;337
0001de  bd10              POP      {r4,pc}
0001e0  491b              LDR      r1,|L1.592|
0001e2  8088              STRH     r0,[r1,#4]            ;348
0001e4  2005              MOVS     r0,#5                 ;349
0001e6  7008              STRB     r0,[r1,#0]            ;349
0001e8  bd10              POP      {r4,pc}
0001ea  4919              LDR      r1,|L1.592|
0001ec  888a              LDRH     r2,[r1,#4]            ;357  ; ProbeRS232_RxRemainLen
0001ee  ea422000          ORR      r0,r2,r0,LSL #8       ;357
0001f2  8088              STRH     r0,[r1,#4]            ;357
0001f4  b108              CBZ      r0,|L1.506|
0001f6  2880              CMP      r0,#0x80              ;360
0001f8  d902              BLS      |L1.512|
                  |L1.506|
0001fa  2000              MOVS     r0,#0                 ;361
0001fc  7008              STRB     r0,[r1,#0]            ;361
0001fe  bd10              POP      {r4,pc}
                  |L1.512|
000200  80c8              STRH     r0,[r1,#6]            ;363
000202  2006              MOVS     r0,#6                 ;364
000204  7008              STRB     r0,[r1,#0]            ;364
000206  bd10              POP      {r4,pc}
000208  4911              LDR      r1,|L1.592|
00020a  2007              MOVS     r0,#7                 ;370
00020c  7008              STRB     r0,[r1,#0]            ;370
00020e  bd10              POP      {r4,pc}
000210  490f              LDR      r1,|L1.592|
000212  2008              MOVS     r0,#8                 ;375
000214  7008              STRB     r0,[r1,#0]            ;375
                  |L1.534|
000216  bd10              POP      {r4,pc}
000218  f7fffffe          BL       ProbeRS232_RxStoINT8U
00021c  490c              LDR      r1,|L1.592|
00021e  8888              LDRH     r0,[r1,#4]            ;384  ; ProbeRS232_RxRemainLen
000220  1e40              SUBS     r0,r0,#1              ;384
000222  0400              LSLS     r0,r0,#16             ;384
000224  0c00              LSRS     r0,r0,#16             ;384
000226  8088              STRH     r0,[r1,#4]            ;384
000228  d1f5              BNE      |L1.534|
00022a  2009              MOVS     r0,#9                 ;385
00022c  7008              STRB     r0,[r1,#0]            ;385
00022e  bd10              POP      {r4,pc}
000230  4907              LDR      r1,|L1.592|
000232  200a              MOVS     r0,#0xa               ;399
000234  7008              STRB     r0,[r1,#0]            ;399
000236  bd10              POP      {r4,pc}
000238  282f              CMP      r0,#0x2f              ;405
00023a  d101              BNE      |L1.576|
00023c  f7fffffe          BL       ProbeRS232_RxPkt
                  |L1.576|
000240  4903              LDR      r1,|L1.592|
000242  2000              MOVS     r0,#0                 ;408
000244  7008              STRB     r0,[r1,#0]            ;408
000246  bd10              POP      {r4,pc}
                  |L1.584|
000248  4901              LDR      r1,|L1.592|
00024a  2000              MOVS     r0,#0                 ;413
00024c  7008              STRB     r0,[r1,#0]            ;413
00024e  bd10              POP      {r4,pc}
;;;417    
                          ENDP

                  |L1.592|
                          DCD      ||.data||
                  |L1.596|
                          DCD      ||.bss||+0x80
                  |L1.600|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  ProbeRS232_RxBuf
                          %        128
                  ProbeRS232_TxBuf
                          %        128

                          AREA ||.data||, DATA, ALIGN=2

                  ProbeRS232_RxState
000000  00                DCB      0x00
                  ProbeRS232_TxState
000001  00                DCB      0x00
                  ProbeRS232_TxActiveFlag
000002  00                DCB      0x00
                  ProbeRS232_TxBufInUse
000003  00                DCB      0x00
                  ProbeRS232_RxRemainLen
000004  0000              DCB      0x00,0x00
                  ProbeRS232_RxLen
000006  0000              DCB      0x00,0x00
                  ProbeRS232_RxBufWrIx
000008  0000              DCB      0x00,0x00
                  ProbeRS232_TxLen
00000a  0000              DCB      0x00,0x00
                  ProbeRS232_TxBufRdIx
00000c  00000000          DCB      0x00,0x00,0x00,0x00
                  ProbeRS232_RxCtr
                          DCD      0x00000000
                  ProbeRS232_TxCtr
                          DCD      0x00000000
