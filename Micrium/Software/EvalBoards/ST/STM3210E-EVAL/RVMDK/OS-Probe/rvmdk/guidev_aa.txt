; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guidev_aa.o --depend=.\rvmdk\guidev_aa.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guidev_aa.crf ..\..\..\..\..\uCGUI\GUI\MemDev\GUIDEV_AA.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyToLCDAA PROC
;;;58     */
;;;59     void GUI_MEMDEV_CopyToLCDAA(GUI_MEMDEV_Handle hMem) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b087              SUB      sp,sp,#0x1c
000006  4604              MOV      r4,r0
;;;60       GUI_LOCK();
000008  f7fffffe          BL       GUI_Lock
;;;61       /* Make sure memory handle is valid */
;;;62       if (hMem) {
00000c  b3f4              CBZ      r4,|L1.140|
;;;63         GUI_MEMDEV_Handle hMemPrev;
;;;64       #if GUI_NUM_LAYERS > 1
;;;65         int PrevLayer;
;;;66       #endif
;;;67         int x, y;
;;;68         GUI_MEMDEV* pDev = (GUI_MEMDEV*)GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       GUI_ALLOC_h2p
;;;69         LCD_PIXELINDEX* pData0 = (LCD_PIXELINDEX*)(pDev+1);
000014  f100082c          ADD      r8,r0,#0x2c
;;;70         int LineOff = pDev->XSize;
000018  f9b06004          LDRSH    r6,[r0,#4]
;;;71         int x0 = pDev->x0;
00001c  f9b0a000          LDRSH    r10,[r0,#0]
;;;72         int y0 = pDev->y0;
000020  f9b01002          LDRSH    r1,[r0,#2]
000024  9104              STR      r1,[sp,#0x10]
;;;73         int XMax = pDev->XSize / 2;
000026  eb0671d6          ADD      r1,r6,r6,LSR #31
00002a  ea4f0961          ASR      r9,r1,#1
;;;74         int YMax = pDev->YSize / 2;
00002e  f9b00006          LDRSH    r0,[r0,#6]
000032  eb0070d0          ADD      r0,r0,r0,LSR #31
000036  ea4f0b60          ASR      r11,r0,#1
;;;75         hMemPrev = GUI_Context.hDevData;
00003a  4872              LDR      r0,|L1.516|
00003c  f9b00050          LDRSH    r0,[r0,#0x50]  ; GUI_Context
000040  9005              STR      r0,[sp,#0x14]
;;;76       #if GUI_NUM_LAYERS > 1
;;;77         PrevLayer = GUI_SelectLayer(pDev->LayerIndex);   /* Should not we switch back to the orig. layer when done ? */
;;;78       #else
;;;79         GUI_SelectLCD();  /* Activate LCD */
000042  f7fffffe          BL       GUI_SelectLCD
;;;80       #endif
;;;81         for (y = 0; y < YMax; y++) {
000046  2700              MOVS     r7,#0
000048  f1bb0f00          CMP      r11,#0
00004c  dd68              BLE      |L1.288|
                  |L1.78|
;;;82           LCD_PIXELINDEX* pData = pData0;
00004e  4644              MOV      r4,r8
;;;83           for (x = 0; x < XMax; x++) {
000050  2500              MOVS     r5,#0
000052  f1b90f00          CMP      r9,#0
000056  dd5e              BLE      |L1.278|
;;;84             LCD_PIXELINDEX PixelIndex;
;;;85             int ColorSep[3];
;;;86             U32 Color = LCD_Index2Color(*pData);
;;;87             ColorSep[0] = Color&255;
;;;88             ColorSep[1] = (Color>>8)  &255;
;;;89             ColorSep[2] = (Color>>16) &255;
;;;90             Color = LCD_Index2Color(*(pData+1));
;;;91             ColorSep[0] += Color&255;
;;;92             ColorSep[1] += (Color>>8)  &255;
;;;93             ColorSep[2] += (Color>>16) &255;
;;;94             Color = LCD_Index2Color(*(pData+LineOff));
;;;95             ColorSep[0] += Color&255;
;;;96             ColorSep[1] += (Color>>8)  &255;
;;;97             ColorSep[2] += (Color>>16) &255;
;;;98             Color = LCD_Index2Color(*(pData+LineOff+1));
;;;99             ColorSep[0] += Color&255;
;;;100            ColorSep[1] += (Color>>8)  &255;
;;;101            ColorSep[2] += (Color>>16) &255;
;;;102            Color  = (ColorSep[0]+2)>>2;
;;;103            Color |= ((ColorSep[1]+2)>>2)<<8;
;;;104            Color |= ((U32)((ColorSep[2]+2)>>2))<<16;
;;;105            PixelIndex = LCD_Color2Index(Color);
;;;106            LCD_SetPixelIndex(x+x0, y+y0, PixelIndex);
000058  9804              LDR      r0,[sp,#0x10]
00005a  4438              ADD      r0,r0,r7
00005c  9006              STR      r0,[sp,#0x18]
                  |L1.94|
00005e  8820              LDRH     r0,[r4,#0]            ;86
000060  f7fffffe          BL       LCD_Index2Color
000064  b2c1              UXTB     r1,r0                 ;87
000066  9101              STR      r1,[sp,#4]            ;87
000068  f3c02107          UBFX     r1,r0,#8,#8           ;88
00006c  9102              STR      r1,[sp,#8]            ;88
00006e  f3c04007          UBFX     r0,r0,#16,#8          ;89
000072  9003              STR      r0,[sp,#0xc]          ;89
000074  8860              LDRH     r0,[r4,#2]            ;90
000076  f7fffffe          BL       LCD_Index2Color
00007a  9901              LDR      r1,[sp,#4]            ;91
00007c  b2c2              UXTB     r2,r0                 ;91
00007e  4411              ADD      r1,r1,r2              ;91
000080  9101              STR      r1,[sp,#4]            ;91
000082  9902              LDR      r1,[sp,#8]            ;92
000084  f3c02207          UBFX     r2,r0,#8,#8           ;92
000088  4411              ADD      r1,r1,r2              ;92
00008a  e000              B        |L1.142|
                  |L1.140|
00008c  e04b              B        |L1.294|
                  |L1.142|
00008e  9102              STR      r1,[sp,#8]            ;92
000090  9903              LDR      r1,[sp,#0xc]          ;93
000092  f3c04007          UBFX     r0,r0,#16,#8          ;93
000096  4408              ADD      r0,r0,r1              ;93
000098  9003              STR      r0,[sp,#0xc]          ;93
00009a  f8340016          LDRH     r0,[r4,r6,LSL #1]     ;94
00009e  f7fffffe          BL       LCD_Index2Color
0000a2  9901              LDR      r1,[sp,#4]            ;95
0000a4  b2c2              UXTB     r2,r0                 ;95
0000a6  4411              ADD      r1,r1,r2              ;95
0000a8  9101              STR      r1,[sp,#4]            ;95
0000aa  9902              LDR      r1,[sp,#8]            ;96
0000ac  f3c02207          UBFX     r2,r0,#8,#8           ;96
0000b0  4411              ADD      r1,r1,r2              ;96
0000b2  9102              STR      r1,[sp,#8]            ;96
0000b4  9903              LDR      r1,[sp,#0xc]          ;97
0000b6  f3c04007          UBFX     r0,r0,#16,#8          ;97
0000ba  4408              ADD      r0,r0,r1              ;97
0000bc  9003              STR      r0,[sp,#0xc]          ;97
0000be  eb040046          ADD      r0,r4,r6,LSL #1       ;98
0000c2  8840              LDRH     r0,[r0,#2]            ;98
0000c4  f7fffffe          BL       LCD_Index2Color
0000c8  9901              LDR      r1,[sp,#4]            ;99
0000ca  b2c2              UXTB     r2,r0                 ;99
0000cc  4411              ADD      r1,r1,r2              ;99
0000ce  9101              STR      r1,[sp,#4]            ;99
0000d0  9902              LDR      r1,[sp,#8]            ;100
0000d2  f3c02207          UBFX     r2,r0,#8,#8           ;100
0000d6  4411              ADD      r1,r1,r2              ;100
0000d8  9102              STR      r1,[sp,#8]            ;100
0000da  9903              LDR      r1,[sp,#0xc]          ;101
0000dc  f3c04007          UBFX     r0,r0,#16,#8          ;101
0000e0  4408              ADD      r0,r0,r1              ;101
0000e2  9003              STR      r0,[sp,#0xc]          ;101
0000e4  9801              LDR      r0,[sp,#4]            ;102
0000e6  1c80              ADDS     r0,r0,#2              ;102
0000e8  1080              ASRS     r0,r0,#2              ;102
0000ea  9902              LDR      r1,[sp,#8]            ;103
0000ec  1c89              ADDS     r1,r1,#2              ;103
0000ee  1089              ASRS     r1,r1,#2              ;103
0000f0  ea402001          ORR      r0,r0,r1,LSL #8       ;103
0000f4  9903              LDR      r1,[sp,#0xc]          ;104
0000f6  1c89              ADDS     r1,r1,#2              ;104
0000f8  1089              ASRS     r1,r1,#2              ;104
0000fa  ea404001          ORR      r0,r0,r1,LSL #16      ;104
0000fe  f7fffffe          BL       LCD_Color2Index
000102  b282              UXTH     r2,r0                 ;105
000104  eb05000a          ADD      r0,r5,r10
000108  9906              LDR      r1,[sp,#0x18]
00010a  f7fffffe          BL       LCD_SetPixelIndex
;;;107            pData += 2;
00010e  1d24              ADDS     r4,r4,#4
000110  1c6d              ADDS     r5,r5,#1              ;83
000112  454d              CMP      r5,r9                 ;83
000114  dba3              BLT      |L1.94|
                  |L1.278|
;;;108          }
;;;109          pData0 += 2 * LineOff;
000116  eb080886          ADD      r8,r8,r6,LSL #2
00011a  1c7f              ADDS     r7,r7,#1              ;81
00011c  455f              CMP      r7,r11                ;81
00011e  db96              BLT      |L1.78|
                  |L1.288|
;;;110        }
;;;111      #if GUI_NUM_LAYERS > 1
;;;112        GUI_SelectLayer(PrevLayer);
;;;113      #endif
;;;114        /* Reactivate previously used device */
;;;115        GUI_MEMDEV_Select(hMemPrev);
000120  9805              LDR      r0,[sp,#0x14]
000122  f7fffffe          BL       GUI_MEMDEV_Select
                  |L1.294|
;;;116      }
;;;117      GUI_UNLOCK();
000126  b007              ADD      sp,sp,#0x1c
000128  e8bd4ff0          POP      {r4-r11,lr}
00012c  f7ffbffe          B.W      GUI_Unlock
;;;118    }
;;;119    
                          ENDP

                  GUI_MEMDEV_CopyFromLCDAA PROC
;;;123    */
;;;124    void GUI_MEMDEV_CopyFromLCDAA(GUI_MEMDEV_Handle hMem) {
000130  e92d4ff0          PUSH     {r4-r11,lr}
000134  b083              SUB      sp,sp,#0xc
;;;125      /* Make sure memory handle is valid */
;;;126      if (!hMem) {
000136  b910              CBNZ     r0,|L1.318|
;;;127        hMem = GUI_Context.hDevData;
000138  4832              LDR      r0,|L1.516|
00013a  f9b00050          LDRSH    r0,[r0,#0x50]  ; GUI_Context
                  |L1.318|
;;;128      }
;;;129      if (hMem) {
00013e  2800              CMP      r0,#0
000140  d05d              BEQ      |L1.510|
;;;130        int x, y;
;;;131        GUI_MEMDEV* pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
000142  f7fffffe          BL       GUI_ALLOC_h2p
000146  4606              MOV      r6,r0
;;;132        GUI_USAGE* pUsage = 0;
000148  f04f0900          MOV      r9,#0
;;;133        int x0 = pDevData->x0;
00014c  f9b6b000          LDRSH    r11,[r6,#0]
;;;134        int y0 = pDevData->y0;
000150  f9b60002          LDRSH    r0,[r6,#2]
000154  9001              STR      r0,[sp,#4]
;;;135        int XMax = pDevData->XSize/2;
000156  f9b60004          LDRSH    r0,[r6,#4]
00015a  eb0070d0          ADD      r0,r0,r0,LSR #31
00015e  ea4f0a60          ASR      r10,r0,#1
;;;136        int YMax = pDevData->YSize/2;
000162  f9b60006          LDRSH    r0,[r6,#6]
000166  eb0070d0          ADD      r0,r0,r0,LSR #31
00016a  1040              ASRS     r0,r0,#1
00016c  9000              STR      r0,[sp,#0]
;;;137        LCD_PIXELINDEX* pData = (LCD_PIXELINDEX*)(pDevData+1);
00016e  f106042c          ADD      r4,r6,#0x2c
;;;138        int LineOff = pDevData->BytesPerLine;
000172  f8d6800c          LDR      r8,[r6,#0xc]
;;;139        if (pDevData->hUsage) 
000176  f9b60018          LDRSH    r0,[r6,#0x18]
00017a  b110              CBZ      r0,|L1.386|
;;;140          pUsage = GUI_USAGE_H2P(pDevData->hUsage);
00017c  f7fffffe          BL       GUI_ALLOC_h2p
000180  4681              MOV      r9,r0
                  |L1.386|
;;;141        for (y=0; y< YMax; y++) {
000182  2700              MOVS     r7,#0
000184  9800              LDR      r0,[sp,#0]
000186  2800              CMP      r0,#0
000188  dd39              BLE      |L1.510|
                  |L1.394|
;;;142          if (pUsage) {
00018a  f1b90f00          CMP      r9,#0
00018e  d015              BEQ      |L1.444|
;;;143            GUI_USAGE_AddHLine(pUsage, 0, y*2, pDevData->XSize);
000190  f8d90008          LDR      r0,[r9,#8]
000194  007a              LSLS     r2,r7,#1
000196  f9b63004          LDRSH    r3,[r6,#4]
00019a  f8d0c004          LDR      r12,[r0,#4]
00019e  2100              MOVS     r1,#0
0001a0  4648              MOV      r0,r9
0001a2  47e0              BLX      r12
;;;144            GUI_USAGE_AddHLine(pUsage, 0, y*2+1, pDevData->XSize);
0001a4  2001              MOVS     r0,#1
0001a6  eb000247          ADD      r2,r0,r7,LSL #1
0001aa  f8d90008          LDR      r0,[r9,#8]
0001ae  f9b63004          LDRSH    r3,[r6,#4]
0001b2  2100              MOVS     r1,#0
0001b4  f8d0c004          LDR      r12,[r0,#4]
0001b8  4648              MOV      r0,r9
0001ba  47e0              BLX      r12
                  |L1.444|
;;;145          }
;;;146          for (x=0; x< XMax; x++) {
0001bc  2500              MOVS     r5,#0
0001be  f1ba0f00          CMP      r10,#0
0001c2  dd12              BLE      |L1.490|
;;;147            *pData = *(pData+1) = *(pData+LineOff) = *(pData+LineOff+1) = LCD_GetPixelIndex(x+x0,y+y0);
0001c4  9801              LDR      r0,[sp,#4]
0001c6  4438              ADD      r0,r0,r7
0001c8  9002              STR      r0,[sp,#8]
                  |L1.458|
0001ca  eb05000b          ADD      r0,r5,r11
0001ce  9902              LDR      r1,[sp,#8]
0001d0  f7fffffe          BL       LCD_GetPixelIndex
0001d4  eb040148          ADD      r1,r4,r8,LSL #1
0001d8  8048              STRH     r0,[r1,#2]
0001da  f8240018          STRH     r0,[r4,r8,LSL #1]
0001de  8060              STRH     r0,[r4,#2]
0001e0  8020              STRH     r0,[r4,#0]
;;;148            pData+=2;
0001e2  1d24              ADDS     r4,r4,#4
0001e4  1c6d              ADDS     r5,r5,#1              ;146
0001e6  4555              CMP      r5,r10                ;146
0001e8  dbef              BLT      |L1.458|
                  |L1.490|
;;;149          }
;;;150          pData += LineOff + (pDevData->XSize&1);
0001ea  88b0              LDRH     r0,[r6,#4]
0001ec  f0000001          AND      r0,r0,#1
0001f0  4440              ADD      r0,r0,r8
0001f2  eb040440          ADD      r4,r4,r0,LSL #1
0001f6  1c7f              ADDS     r7,r7,#1              ;141
0001f8  9800              LDR      r0,[sp,#0]            ;141
0001fa  4287              CMP      r7,r0                 ;141
0001fc  dbc5              BLT      |L1.394|
                  |L1.510|
;;;151        }
;;;152      }
;;;153    }
0001fe  b003              ADD      sp,sp,#0xc
000200  e8bd8ff0          POP      {r4-r11,pc}
;;;154    
                          ENDP

                  |L1.516|
                          DCD      GUI_Context
