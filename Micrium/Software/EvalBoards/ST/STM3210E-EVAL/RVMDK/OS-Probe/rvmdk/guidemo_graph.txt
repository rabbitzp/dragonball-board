; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guidemo_graph.o --depend=.\rvmdk\guidemo_graph.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guidemo_graph.crf ..\..\..\..\..\uCGUI\GUIDemo\GUIDEMO_Graph.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Draw PROC
;;;75     
;;;76     static void _Draw(void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;77       int i;
;;;78       PARAM * pParam = (PARAM *)p;
;;;79       GUI_SetBkColor(GUI_BLACK);
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       GUI_SetBkColor
;;;80       GUI_SetColor(GUI_DARKGRAY);
00000a  48fb              LDR      r0,|L1.1016|
00000c  f7fffffe          BL       GUI_SetColor
;;;81       GUI_ClearRect(19, (LCD_YSIZE - 20) - YSIZE, (LCD_XSIZE - 2), (LCD_YSIZE - 21));
000010  23c7              MOVS     r3,#0xc7
000012  22da              MOVS     r2,#0xda
000014  210a              MOVS     r1,#0xa
000016  2013              MOVS     r0,#0x13
000018  f7fffffe          BL       GUI_ClearRect
;;;82       for (i = 0; i < (YSIZE / 2); i += 20) {
00001c  2400              MOVS     r4,#0
                  |L1.30|
;;;83         GUI_DrawHLine((LCD_YSIZE - 20) - (YSIZE / 2) + i, 19, (LCD_XSIZE - 2));
00001e  22da              MOVS     r2,#0xda
000020  2113              MOVS     r1,#0x13
000022  f1040069          ADD      r0,r4,#0x69
000026  f7fffffe          BL       GUI_DrawHLine
;;;84         if (i) {
00002a  b12c              CBZ      r4,|L1.56|
;;;85           GUI_DrawHLine((LCD_YSIZE - 20) - (YSIZE / 2) - i, 19, (LCD_XSIZE - 2));
00002c  f1c40069          RSB      r0,r4,#0x69
000030  22da              MOVS     r2,#0xda
000032  2113              MOVS     r1,#0x13
000034  f7fffffe          BL       GUI_DrawHLine
                  |L1.56|
000038  3414              ADDS     r4,r4,#0x14           ;82
00003a  2c5f              CMP      r4,#0x5f              ;82
00003c  dbef              BLT      |L1.30|
;;;86         }
;;;87       }
;;;88       for (i = 40; i < (LCD_XSIZE - 20); i += 40) {
00003e  2428              MOVS     r4,#0x28
                  |L1.64|
;;;89         GUI_DrawVLine(18 + i, (LCD_YSIZE - 20) - YSIZE, (LCD_YSIZE - 21));
000040  22c7              MOVS     r2,#0xc7
000042  210a              MOVS     r1,#0xa
000044  f1040012          ADD      r0,r4,#0x12
000048  f7fffffe          BL       GUI_DrawVLine
00004c  3428              ADDS     r4,r4,#0x28           ;88
00004e  2cc8              CMP      r4,#0xc8              ;88
000050  dbf6              BLT      |L1.64|
;;;90       }
;;;91       GUI_SetColor(COLOR_GRAPH0);
000052  f44f407f          MOV      r0,#0xff00
000056  f7fffffe          BL       GUI_SetColor
;;;92       GUI_DrawGraph(pParam->aY, (LCD_XSIZE - 20), 19, (LCD_YSIZE - 20) - YSIZE);
00005a  6828              LDR      r0,[r5,#0]
00005c  e8bd4070          POP      {r4-r6,lr}
000060  230a              MOVS     r3,#0xa
000062  2213              MOVS     r2,#0x13
000064  21c8              MOVS     r1,#0xc8
000066  f7ffbffe          B.W      GUI_DrawGraph
;;;93     }
;;;94     
                          ENDP

                  _Draw2 PROC
;;;95     static void _Draw2(void * p) {
00006a  b510              PUSH     {r4,lr}
00006c  4604              MOV      r4,r0
;;;96       PARAM * pParam = (PARAM *)p;
;;;97       _Draw(p);
00006e  4620              MOV      r0,r4
000070  f7fffffe          BL       _Draw
;;;98       GUI_SetColor(COLOR_GRAPH1);
000074  f64f70ff          MOV      r0,#0xffff
000078  f7fffffe          BL       GUI_SetColor
;;;99       GUI_DrawGraph(pParam->aY+15, (LCD_XSIZE - 20), 19, (LCD_YSIZE - 20) - YSIZE);
00007c  6820              LDR      r0,[r4,#0]
00007e  230a              MOVS     r3,#0xa
000080  301e              ADDS     r0,r0,#0x1e
000082  2213              MOVS     r2,#0x13
000084  e8bd4010          POP      {r4,lr}
000088  21c8              MOVS     r1,#0xc8
00008a  f7ffbffe          B.W      GUI_DrawGraph
;;;100    }
;;;101    
                          ENDP

                  _Label PROC
;;;108    
;;;109    static void _Label(void) {
00008e  b570              PUSH     {r4-r6,lr}
;;;110      int x, y;
;;;111      GUI_SetPenSize(1);
000090  2001              MOVS     r0,#1
000092  f7fffffe          BL       GUI_SetPenSize
;;;112      GUI_ClearRect(0, (LCD_YSIZE - 21) - YSIZE, (LCD_XSIZE - 1), (LCD_YSIZE - 1));
000096  23db              MOVS     r3,#0xdb
000098  461a              MOV      r2,r3
00009a  2109              MOVS     r1,#9
00009c  2000              MOVS     r0,#0
00009e  f7fffffe          BL       GUI_ClearRect
;;;113      GUI_DrawRect(18, (LCD_YSIZE - 21) - YSIZE, (LCD_XSIZE - 1), (LCD_YSIZE - 20));
0000a2  23c8              MOVS     r3,#0xc8
0000a4  22db              MOVS     r2,#0xdb
0000a6  2109              MOVS     r1,#9
0000a8  2012              MOVS     r0,#0x12
0000aa  f7fffffe          BL       GUI_DrawRect
;;;114      GUI_SetFont(&GUI_Font6x8);
0000ae  48d3              LDR      r0,|L1.1020|
0000b0  f7fffffe          BL       GUI_SetFont
;;;115      for (x = 0; x < (LCD_XSIZE - 20); x += 40) {
0000b4  2400              MOVS     r4,#0
;;;116        int xPos = x + 18;
;;;117        GUI_DrawVLine(xPos, (LCD_YSIZE - 20), (LCD_YSIZE - 14));
;;;118        GUI_DispDecAt(x / 40, xPos - 2, (LCD_YSIZE - 9), 1);
0000b6  4ed2              LDR      r6,|L1.1024|
                  |L1.184|
0000b8  f1040512          ADD      r5,r4,#0x12           ;116
0000bc  22ce              MOVS     r2,#0xce              ;117
0000be  21c8              MOVS     r1,#0xc8              ;117
0000c0  4628              MOV      r0,r5                 ;117
0000c2  f7fffffe          BL       GUI_DrawVLine
0000c6  fb860104          SMULL    r0,r1,r6,r4
0000ca  1108              ASRS     r0,r1,#4
0000cc  eba070e1          SUB      r0,r0,r1,ASR #31
0000d0  1ea9              SUBS     r1,r5,#2
0000d2  2301              MOVS     r3,#1
0000d4  22d3              MOVS     r2,#0xd3
0000d6  b209              SXTH     r1,r1
0000d8  f7fffffe          BL       GUI_DispDecAt
0000dc  3428              ADDS     r4,r4,#0x28           ;115
0000de  2cc8              CMP      r4,#0xc8              ;115
0000e0  dbea              BLT      |L1.184|
;;;119      }
;;;120      for (y = 0; y < YSIZE / 2; y += 20) {
0000e2  2400              MOVS     r4,#0
                  |L1.228|
;;;121        int yPos = (LCD_YSIZE - 20) - YSIZE / 2 + y;
0000e4  f1040569          ADD      r5,r4,#0x69
;;;122        GUI_DrawHLine(yPos, 13, 18);
0000e8  2212              MOVS     r2,#0x12
0000ea  210d              MOVS     r1,#0xd
0000ec  4628              MOV      r0,r5
0000ee  f7fffffe          BL       GUI_DrawHLine
;;;123        if (y) {
0000f2  b304              CBZ      r4,|L1.310|
;;;124          GUI_GotoXY(1, yPos - 4);
0000f4  1f29              SUBS     r1,r5,#4
0000f6  2001              MOVS     r0,#1
0000f8  f7fffffe          BL       GUI_GotoXY
;;;125          GUI_DispSDec(-y / 20, 2);
0000fc  4260              RSBS     r0,r4,#0
0000fe  fb861000          SMULL    r1,r0,r6,r0
000102  10c1              ASRS     r1,r0,#3
000104  eba170e0          SUB      r0,r1,r0,ASR #31
000108  2102              MOVS     r1,#2
00010a  f7fffffe          BL       GUI_DispSDec
;;;126          yPos = (LCD_YSIZE - 20) - YSIZE / 2 - y;
00010e  f1c40569          RSB      r5,r4,#0x69
;;;127          GUI_DrawHLine(yPos, 13, 18);
000112  2212              MOVS     r2,#0x12
000114  210d              MOVS     r1,#0xd
000116  4628              MOV      r0,r5
000118  f7fffffe          BL       GUI_DrawHLine
;;;128          GUI_GotoXY(1, yPos - 4);
00011c  1f29              SUBS     r1,r5,#4
00011e  2001              MOVS     r0,#1
000120  f7fffffe          BL       GUI_GotoXY
;;;129          GUI_DispSDec(y / 20, 2);
000124  fb861004          SMULL    r1,r0,r6,r4
000128  10c1              ASRS     r1,r0,#3
00012a  eba170e0          SUB      r0,r1,r0,ASR #31
00012e  2102              MOVS     r1,#2
000130  f7fffffe          BL       GUI_DispSDec
000134  e005              B        |L1.322|
                  |L1.310|
;;;130        } else {
;;;131          GUI_DispCharAt('0', 7, yPos - 4);
000136  1f28              SUBS     r0,r5,#4
000138  b202              SXTH     r2,r0
00013a  2107              MOVS     r1,#7
00013c  2030              MOVS     r0,#0x30
00013e  f7fffffe          BL       GUI_DispCharAt
                  |L1.322|
000142  3414              ADDS     r4,r4,#0x14           ;120
000144  2c5f              CMP      r4,#0x5f              ;120
000146  dbcd              BLT      |L1.228|
;;;132        }
;;;133      }
;;;134    }
000148  bd70              POP      {r4-r6,pc}
;;;135    
                          ENDP

                  _GetRandomData PROC
;;;142    
;;;143    static void _GetRandomData(I16 * paY, int Time, int n) {
00014a  e92d47f0          PUSH     {r4-r10,lr}
00014e  4605              MOV      r5,r0
000150  4617              MOV      r7,r2
;;;144      int aDiff, i;
;;;145      if (Time > 5000)
000152  f2413088          MOV      r0,#0x1388
000156  4281              CMP      r1,r0
000158  dd00              BLE      |L1.348|
;;;146        Time -= 5000;
00015a  1a09              SUBS     r1,r1,r0
                  |L1.348|
;;;147      if (Time > 2500)
00015c  f64012c4          MOV      r2,#0x9c4
000160  4291              CMP      r1,r2
000162  dd00              BLE      |L1.358|
;;;148        Time = 5000 - Time;
000164  1a41              SUBS     r1,r0,r1
                  |L1.358|
;;;149      Time /= 200;
000166  48a7              LDR      r0,|L1.1028|
000168  fb801001          SMULL    r1,r0,r0,r1
00016c  1181              ASRS     r1,r0,#6
00016e  eba170e0          SUB      r0,r1,r0,ASR #31
;;;150      aDiff = Time * Time + 1;
000172  4340              MULS     r0,r0,r0
000174  1c46              ADDS     r6,r0,#1
;;;151      for (i = 0; i < n; i++) {
000176  2400              MOVS     r4,#0
000178  2f00              CMP      r7,#0
00017a  dd3c              BLE      |L1.502|
;;;152        if (!i) {
;;;153          paY[i] = rand() % YSIZE;
00017c  f8df9288          LDR      r9,|L1.1032|
000180  46a0              MOV      r8,r4                 ;151
                  |L1.386|
000182  b194              CBZ      r4,|L1.426|
;;;154        } else {
;;;155          I16 yNew;
;;;156          int yD = aDiff - (rand() % aDiff);
000184  f7fffffe          BL       rand
000188  fb90f1f6          SDIV     r1,r0,r6
00018c  fb060011          MLS      r0,r6,r1,r0
000190  eba60a00          SUB      r10,r6,r0
;;;157          if (rand() & 1) {
000194  f7fffffe          BL       rand
000198  f0100f01          TST      r0,#1
00019c  d015              BEQ      |L1.458|
;;;158            yNew = paY[i-1] + yD;
00019e  1e60              SUBS     r0,r4,#1
0001a0  f8350010          LDRH     r0,[r5,r0,LSL #1]
0001a4  4450              ADD      r0,r0,r10
0001a6  b201              SXTH     r1,r0
0001a8  e015              B        |L1.470|
                  |L1.426|
0001aa  f7fffffe          BL       rand
0001ae  4601              MOV      r1,r0                 ;153
0001b0  4642              MOV      r2,r8                 ;153
0001b2  fbc92100          SMLAL    r2,r1,r9,r0           ;153
0001b6  11ca              ASRS     r2,r1,#7              ;153
0001b8  eba271e1          SUB      r1,r2,r1,ASR #31      ;153
0001bc  f06f025e          MVN      r2,#0x5e              ;153
0001c0  4351              MULS     r1,r2,r1              ;153
0001c2  eb000041          ADD      r0,r0,r1,LSL #1       ;153
0001c6  8028              STRH     r0,[r5,#0]            ;153
0001c8  e012              B        |L1.496|
                  |L1.458|
;;;159          } else {
;;;160            yNew = paY[i-1] - yD;
0001ca  1e60              SUBS     r0,r4,#1
0001cc  f8350010          LDRH     r0,[r5,r0,LSL #1]
0001d0  eba0000a          SUB      r0,r0,r10
0001d4  b201              SXTH     r1,r0
                  |L1.470|
;;;161          }
;;;162          if (yNew > YSIZE) {
0001d6  29be              CMP      r1,#0xbe
0001d8  dd03              BLE      |L1.482|
;;;163            yNew -= yD;
0001da  eba1000a          SUB      r0,r1,r10
0001de  b201              SXTH     r1,r0
0001e0  e004              B        |L1.492|
                  |L1.482|
;;;164          } else { if (yNew < 0)
0001e2  2900              CMP      r1,#0
0001e4  da02              BGE      |L1.492|
;;;165            yNew += yD;
0001e6  eb01000a          ADD      r0,r1,r10
0001ea  b201              SXTH     r1,r0
                  |L1.492|
;;;166          }
;;;167          paY[i] = yNew;
0001ec  f8251014          STRH     r1,[r5,r4,LSL #1]
                  |L1.496|
0001f0  1c64              ADDS     r4,r4,#1              ;151
0001f2  42bc              CMP      r4,r7                 ;151
0001f4  dbc5              BLT      |L1.386|
                  |L1.502|
;;;168        }
;;;169      }
;;;170    }
0001f6  e8bd87f0          POP      {r4-r10,pc}
;;;171    
                          ENDP

                  _ShowText PROC
;;;172    static void _ShowText(const char * sText) {
0001fa  b510              PUSH     {r4,lr}
;;;173      GUI_SetColor(GUI_WHITE);
0001fc  f06f407f          MVN      r0,#0xff000000
000200  f7fffffe          BL       GUI_SetColor
;;;174      GUI_SetBkColor(GUI_RED);
000204  e8bd4010          POP      {r4,lr}
000208  20ff              MOVS     r0,#0xff
00020a  f7ffbffe          B.W      GUI_SetBkColor
;;;175      #if GUIDEMO_LARGE
;;;176        GUI_ClearRect(0, 0, LCD_XSIZE, 60);
;;;177        GUI_SetFont(&GUI_FontComic18B_ASCII);
;;;178        GUI_DispStringAt(sText, 10, 20);
;;;179      #else
;;;180        sText = sText;  /* Avoid warning */
;;;181      #endif
;;;182    }
;;;183    
                          ENDP

                  _LabelMS PROC
;;;184    static void _LabelMS(void) {
00020e  487b              LDR      r0,|L1.1020|
;;;185      GUI_SetFont(&GUI_Font6x8);
000210  f7ffbffe          B.W      GUI_SetFont
;;;186      #if GUIDEMO_LARGE
;;;187        GUI_DispStringAt("msec/graph:", 10, 50);
;;;188      #endif
;;;189    }
;;;190    
                          ENDP

                  _DisplayTime PROC
;;;191    static void _DisplayTime(int tDiff) {
000214  4770              BX       lr
;;;192      #if GUIDEMO_LARGE
;;;193        GUI_GotoXY(80, 50);
;;;194        GUI_SetColor(GUI_WHITE);
;;;195        GUI_SetBkColor(GUI_RED);
;;;196        GUI_DispDecSpace(tDiff, 3);
;;;197      #else
;;;198        tDiff = tDiff; /* Avoid warning */
;;;199      #endif
;;;200    }
;;;201    
                          ENDP

                  _DemoRandomGraph PROC
;;;202    static void _DemoRandomGraph(void) {
000216  e92d43f0          PUSH     {r4-r9,lr}
00021a  b085              SUB      sp,sp,#0x14
;;;203      PARAM Param;
;;;204      int tDiff, t0, Cnt = 0;
00021c  2400              MOVS     r4,#0
;;;205      GUI_RECT Rect = {19, (LCD_YSIZE - 20) - YSIZE, (LCD_XSIZE - 2), (LCD_YSIZE - 21)};
00021e  487b              LDR      r0,|L1.1036|
000220  6841              LDR      r1,[r0,#4]  ; <Data1>
000222  6800              LDR      r0,[r0,#0]  ; <Data1>
000224  9103              STR      r1,[sp,#0xc]
000226  9002              STR      r0,[sp,#8]
;;;206      GUI_HMEM hMem = GUI_ALLOC_AllocZero((LCD_XSIZE - 20) * sizeof(I16));
000228  f44f70c8          MOV      r0,#0x190
00022c  f7fffffe          BL       GUI_ALLOC_AllocZero
000230  4681              MOV      r9,r0
;;;207      _ShowText("Random graph");
000232  a077              ADR      r0,|L1.1040|
000234  f7fffffe          BL       _ShowText
;;;208      Param.aY = (I16*)GUI_ALLOC_h2p(hMem);
000238  4648              MOV      r0,r9
00023a  f7fffffe          BL       GUI_ALLOC_h2p
00023e  9004              STR      r0,[sp,#0x10]
;;;209      /*
;;;210      GUI_SetFont(&GUI_Font6x8);
;;;211      GUI_DispStringAt("msec/graph:", 10, 50);
;;;212      */
;;;213      _LabelMS();
000240  f7fffffe          BL       _LabelMS
;;;214      t0 = GUI_GetTime();
000244  f7fffffe          BL       GUI_GetTime
000248  4606              MOV      r6,r0
;;;215      while(((tDiff = (GUI_GetTime() - t0)) < 10000) && !GUIDEMO_CheckCancel()) {
;;;216        int t1, tDiff2;
;;;217        _GetRandomData(Param.aY, tDiff, (LCD_XSIZE - 20));
;;;218        t1 = GUI_GetTime();
;;;219        GUI_MEMDEV_Draw(&Rect, _Draw, &Param, 0, GUI_MEMDEV_NOTRANS);
;;;220        tDiff2 = GUI_GetTime() - t1;
;;;221        if (tDiff2 < 100) {
;;;222          GUI_Delay(100 - tDiff2);
;;;223        }
;;;224        if(!((++Cnt)%10)) {
00024a  4f6d              LDR      r7,|L1.1024|
00024c  f2427810          MOV      r8,#0x2710            ;215
;;;225          _DisplayTime(tDiff2);
;;;226          /*
;;;227          GUI_GotoXY(80, 50);
;;;228          GUI_SetColor(GUI_WHITE);
;;;229          GUI_SetBkColor(GUI_RED);
;;;230          GUI_DispDecSpace(tDiff2, 3);
;;;231          */
;;;232        }
;;;233      }
000250  e027              B        |L1.674|
                  |L1.594|
000252  22c8              MOVS     r2,#0xc8              ;217
000254  4629              MOV      r1,r5                 ;217
000256  9804              LDR      r0,[sp,#0x10]         ;217
000258  f7fffffe          BL       _GetRandomData
00025c  f7fffffe          BL       GUI_GetTime
000260  4605              MOV      r5,r0                 ;218
000262  2301              MOVS     r3,#1                 ;219
000264  9300              STR      r3,[sp,#0]            ;219
000266  2300              MOVS     r3,#0                 ;219
000268  aa04              ADD      r2,sp,#0x10           ;219
00026a  496d              LDR      r1,|L1.1056|
00026c  a802              ADD      r0,sp,#8              ;219
00026e  f7fffffe          BL       GUI_MEMDEV_Draw
000272  f7fffffe          BL       GUI_GetTime
000276  1b45              SUBS     r5,r0,r5              ;220
000278  2d64              CMP      r5,#0x64              ;221
00027a  da03              BGE      |L1.644|
00027c  f1c50064          RSB      r0,r5,#0x64           ;222
000280  f7fffffe          BL       GUI_Delay
                  |L1.644|
000284  1c64              ADDS     r4,r4,#1              ;224
000286  fb871004          SMULL    r1,r0,r7,r4           ;224
00028a  1081              ASRS     r1,r0,#2              ;224
00028c  eba170e0          SUB      r0,r1,r0,ASR #31      ;224
000290  4240              RSBS     r0,r0,#0              ;224
000292  eb000080          ADD      r0,r0,r0,LSL #2       ;224
000296  eb140040          ADDS     r0,r4,r0,LSL #1       ;224
00029a  d102              BNE      |L1.674|
00029c  4628              MOV      r0,r5                 ;225
00029e  f7fffffe          BL       _DisplayTime
                  |L1.674|
0002a2  f7fffffe          BL       GUI_GetTime
0002a6  1b85              SUBS     r5,r0,r6              ;215
0002a8  4545              CMP      r5,r8                 ;215
0002aa  da03              BGE      |L1.692|
0002ac  f7fffffe          BL       GUIDEMO_CheckCancel
0002b0  2800              CMP      r0,#0                 ;215
0002b2  d0ce              BEQ      |L1.594|
                  |L1.692|
;;;234      GUI_ALLOC_Free(hMem);
0002b4  4648              MOV      r0,r9
0002b6  f7fffffe          BL       GUI_ALLOC_Free
;;;235    }
0002ba  b005              ADD      sp,sp,#0x14
0002bc  e8bd83f0          POP      {r4-r9,pc}
;;;236    
                          ENDP

                  _GetSineData PROC
;;;243    
;;;244    static void _GetSineData(I16 * paY, int n) {
0002c0  e92d47f0          PUSH     {r4-r10,lr}
0002c4  4606              MOV      r6,r0
0002c6  460d              MOV      r5,r1
;;;245      int i;
;;;246      for (i = 0; i < n; i++) {
0002c8  2400              MOVS     r4,#0
0002ca  2d00              CMP      r5,#0
0002cc  dd24              BLE      |L1.792|
;;;247        float s = sin(i * DEG2RAD * 4);
0002ce  4f55              LDR      r7,|L1.1060|
;;;248        paY[i] = s * YSIZE / 2 + YSIZE / 2;
0002d0  f8df8154          LDR      r8,|L1.1064|
0002d4  f8df9154          LDR      r9,|L1.1068|
                  |L1.728|
0002d8  4620              MOV      r0,r4                 ;247
0002da  f7fffffe          BL       __aeabi_i2f
0002de  4639              MOV      r1,r7                 ;247
0002e0  f7fffffe          BL       __aeabi_fmul
0002e4  2102              MOVS     r1,#2                 ;247
0002e6  f7fffffe          BL       __ARM_scalbnf
0002ea  f7fffffe          BL       __aeabi_f2d
0002ee  f7fffffe          BL       ||sin||
0002f2  f7fffffe          BL       __aeabi_d2f
0002f6  4641              MOV      r1,r8
0002f8  f7fffffe          BL       __aeabi_fmul
0002fc  f04f31ff          MOV      r1,#0xffffffff
000300  f7fffffe          BL       __ARM_scalbnf
000304  4649              MOV      r1,r9
000306  f7fffffe          BL       __aeabi_fadd
00030a  f7fffffe          BL       __aeabi_f2iz
00030e  f8260014          STRH     r0,[r6,r4,LSL #1]
000312  1c64              ADDS     r4,r4,#1              ;246
000314  42ac              CMP      r4,r5                 ;246
000316  dbdf              BLT      |L1.728|
                  |L1.792|
;;;249      }
;;;250    }
000318  e8bd87f0          POP      {r4-r10,pc}
;;;251    
                          ENDP

                  _DemoSineWave PROC
;;;252    static void _DemoSineWave(void) {
00031c  e92d4ff0          PUSH     {r4-r11,lr}
000320  b085              SUB      sp,sp,#0x14
;;;253      PARAM Param;
;;;254      I16 * pStart;
;;;255      int t0, Cnt = 0;
000322  2400              MOVS     r4,#0
;;;256      GUI_RECT Rect = {19, (LCD_YSIZE - 20) - YSIZE, (LCD_XSIZE - 2), (LCD_YSIZE - 21)};
000324  4839              LDR      r0,|L1.1036|
000326  68c1              LDR      r1,[r0,#0xc]  ; <Data2>
000328  6880              LDR      r0,[r0,#8]  ; <Data2>
00032a  9103              STR      r1,[sp,#0xc]
00032c  9002              STR      r0,[sp,#8]
;;;257      GUI_HMEM hMem = GUI_ALLOC_AllocZero((LCD_XSIZE + 90) * sizeof(I16));
00032e  f44f701b          MOV      r0,#0x26c
000332  f7fffffe          BL       GUI_ALLOC_AllocZero
000336  9001              STR      r0,[sp,#4]
;;;258      _ShowText("Sine wave");
000338  a03d              ADR      r0,|L1.1072|
00033a  f7fffffe          BL       _ShowText
;;;259      pStart = (I16*)GUI_ALLOC_h2p(hMem);
00033e  9801              LDR      r0,[sp,#4]
000340  f7fffffe          BL       GUI_ALLOC_h2p
000344  4605              MOV      r5,r0
;;;260      _GetSineData(pStart, LCD_XSIZE + 90);
000346  f44f719b          MOV      r1,#0x136
00034a  4628              MOV      r0,r5
00034c  f7fffffe          BL       _GetSineData
;;;261      /*
;;;262      GUI_SetFont(&GUI_Font6x8);
;;;263      GUI_DispStringAt("msec/graph:", 10, 50);
;;;264      */
;;;265      _LabelMS();
000350  f7fffffe          BL       _LabelMS
;;;266      t0 = GUI_GetTime();
000354  f7fffffe          BL       GUI_GetTime
000358  4606              MOV      r6,r0
00035a  2700              MOVS     r7,#0                 ;255
;;;267      while(((GUI_GetTime() - t0) < 10000) && !GUIDEMO_CheckCancel()) {
;;;268        int t1, tDiff2;
;;;269        if (Cnt % 90) {
00035c  f8df80dc          LDR      r8,|L1.1084|
;;;270          Param.aY++;
;;;271        } else {
;;;272          Param.aY = pStart;
;;;273        }
;;;274        t1 = GUI_GetTime();
;;;275        GUI_MEMDEV_Draw(&Rect, _Draw2, &Param, 0, GUI_MEMDEV_NOTRANS);
;;;276        tDiff2 = GUI_GetTime() - t1;
;;;277        if (tDiff2 < 100) {
;;;278          GUI_Delay(100 - tDiff2);
;;;279        }
;;;280        if(!((++Cnt) % 10)) {
000360  f8df909c          LDR      r9,|L1.1024|
000364  f2427a10          MOV      r10,#0x2710           ;267
;;;281          _DisplayTime(tDiff2);
;;;282          /*
;;;283          GUI_GotoXY(80, 50);
;;;284          GUI_SetColor(GUI_WHITE);
;;;285          GUI_SetBkColor(GUI_RED);
;;;286          GUI_DispDecSpace(tDiff2, 3);
;;;287          */
;;;288        }
;;;289      }
000368  e037              B        |L1.986|
                  |L1.874|
00036a  4621              MOV      r1,r4                 ;269
00036c  4638              MOV      r0,r7                 ;269
00036e  fbc80104          SMLAL    r0,r1,r8,r4           ;269
000372  1188              ASRS     r0,r1,#6              ;269
000374  eba070e1          SUB      r0,r0,r1,ASR #31      ;269
000378  eba01000          SUB      r0,r0,r0,LSL #4       ;269
00037c  eb000040          ADD      r0,r0,r0,LSL #1       ;269
000380  eb140040          ADDS     r0,r4,r0,LSL #1       ;269
000384  d003              BEQ      |L1.910|
000386  9804              LDR      r0,[sp,#0x10]         ;270
000388  1c80              ADDS     r0,r0,#2              ;270
00038a  9004              STR      r0,[sp,#0x10]         ;270
00038c  e000              B        |L1.912|
                  |L1.910|
00038e  9504              STR      r5,[sp,#0x10]         ;272
                  |L1.912|
000390  f7fffffe          BL       GUI_GetTime
000394  4683              MOV      r11,r0                ;274
000396  2301              MOVS     r3,#1                 ;275
000398  9300              STR      r3,[sp,#0]            ;275
00039a  2300              MOVS     r3,#0                 ;275
00039c  aa04              ADD      r2,sp,#0x10           ;275
00039e  4928              LDR      r1,|L1.1088|
0003a0  a802              ADD      r0,sp,#8              ;275
0003a2  f7fffffe          BL       GUI_MEMDEV_Draw
0003a6  f7fffffe          BL       GUI_GetTime
0003aa  eba00b0b          SUB      r11,r0,r11            ;276
0003ae  f1bb0f64          CMP      r11,#0x64             ;277
0003b2  da03              BGE      |L1.956|
0003b4  f1cb0064          RSB      r0,r11,#0x64          ;278
0003b8  f7fffffe          BL       GUI_Delay
                  |L1.956|
0003bc  1c64              ADDS     r4,r4,#1              ;280
0003be  fb891004          SMULL    r1,r0,r9,r4           ;280
0003c2  1081              ASRS     r1,r0,#2              ;280
0003c4  eba170e0          SUB      r0,r1,r0,ASR #31      ;280
0003c8  4240              RSBS     r0,r0,#0              ;280
0003ca  eb000080          ADD      r0,r0,r0,LSL #2       ;280
0003ce  eb140040          ADDS     r0,r4,r0,LSL #1       ;280
0003d2  d102              BNE      |L1.986|
0003d4  4658              MOV      r0,r11                ;281
0003d6  f7fffffe          BL       _DisplayTime
                  |L1.986|
0003da  f7fffffe          BL       GUI_GetTime
0003de  1b80              SUBS     r0,r0,r6              ;267
0003e0  4550              CMP      r0,r10                ;267
0003e2  da03              BGE      |L1.1004|
0003e4  f7fffffe          BL       GUIDEMO_CheckCancel
0003e8  2800              CMP      r0,#0                 ;267
0003ea  d0be              BEQ      |L1.874|
                  |L1.1004|
;;;290      GUI_ALLOC_Free(hMem);
0003ec  9801              LDR      r0,[sp,#4]
0003ee  f7fffffe          BL       GUI_ALLOC_Free
;;;291    }
0003f2  b005              ADD      sp,sp,#0x14
0003f4  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.1016|
                          DCD      0x00404040
                  |L1.1020|
                          DCD      GUI_Font6x8
                  |L1.1024|
                          DCD      0x66666667
                  |L1.1028|
                          DCD      0x51eb851f
                  |L1.1032|
                          DCD      0xac769185
                  |L1.1036|
                          DCD      ||.constdata||
                  |L1.1040|
000410  52616e64          DCB      "Random graph",0
000414  6f6d2067
000418  72617068
00041c  00      
00041d  00                DCB      0
00041e  00                DCB      0
00041f  00                DCB      0
                  |L1.1056|
                          DCD      _Draw
                  |L1.1060|
                          DCD      0x3c8efa35
                  |L1.1064|
                          DCD      0x433e0000
                  |L1.1068|
                          DCD      0x42be0000
                  |L1.1072|
000430  53696e65          DCB      "Sine wave",0
000434  20776176
000438  6500    
00043a  00                DCB      0
00043b  00                DCB      0
                  |L1.1084|
                          DCD      0xb60b60b7
                  |L1.1088|
                          DCD      _Draw2
                          ENDP

                  _DrawOrData PROC
;;;299    
;;;300    static void _DrawOrData(GUI_COLOR Color, I16 * paY) {
000444  b510              PUSH     {r4,lr}
000446  460c              MOV      r4,r1
;;;301      GUI_SetColor(Color);
000448  f7fffffe          BL       GUI_SetColor
;;;302      GUI_DrawGraph(paY, (LCD_XSIZE - 20), 19, (LCD_YSIZE - 20) - YSIZE);
00044c  4620              MOV      r0,r4
00044e  230a              MOVS     r3,#0xa
000450  2213              MOVS     r2,#0x13
000452  e8bd4010          POP      {r4,lr}
000456  21c8              MOVS     r1,#0xc8
000458  f7ffbffe          B.W      GUI_DrawGraph
;;;303    }
;;;304    
                          ENDP

                  _DemoOrData PROC
;;;305    static void _DemoOrData(void) {
00045c  b530              PUSH     {r4,r5,lr}
00045e  b085              SUB      sp,sp,#0x14
;;;306      int i;
;;;307      PARAM Param;
;;;308      GUI_RECT Rect = {19, (LCD_YSIZE - 20) - YSIZE, (LCD_XSIZE - 2), (LCD_YSIZE - 21)};
000460  4824              LDR      r0,|L1.1268|
000462  6941              LDR      r1,[r0,#0x14]  ; <Data3>
000464  6900              LDR      r0,[r0,#0x10]  ; <Data3>
000466  9103              STR      r1,[sp,#0xc]
000468  9002              STR      r0,[sp,#8]
;;;309      GUI_HMEM hMem = GUI_ALLOC_AllocZero((LCD_XSIZE + 90) * sizeof(I16));
00046a  f44f701b          MOV      r0,#0x26c
00046e  f7fffffe          BL       GUI_ALLOC_AllocZero
000472  4605              MOV      r5,r0
;;;310      _ShowText("Several waves...");
000474  a020              ADR      r0,|L1.1272|
000476  f7fffffe          BL       _ShowText
;;;311      Param.aY = (I16*)GUI_ALLOC_h2p(hMem);
00047a  4628              MOV      r0,r5
00047c  f7fffffe          BL       GUI_ALLOC_h2p
000480  9004              STR      r0,[sp,#0x10]
;;;312      _GetSineData(Param.aY, LCD_XSIZE + 90);
000482  f44f719b          MOV      r1,#0x136
000486  f7fffffe          BL       _GetSineData
;;;313      GUI_MEMDEV_Draw(&Rect, _Draw, &Param, 0, GUI_MEMDEV_NOTRANS);
00048a  2301              MOVS     r3,#1
00048c  9300              STR      r3,[sp,#0]
00048e  2300              MOVS     r3,#0
000490  aa04              ADD      r2,sp,#0x10
000492  491e              LDR      r1,|L1.1292|
000494  a802              ADD      r0,sp,#8
000496  f7fffffe          BL       GUI_MEMDEV_Draw
;;;314      for (i = 0; (i < 90) && !GUIDEMO_CheckCancel(); i++) {
00049a  2400              MOVS     r4,#0
00049c  e00a              B        |L1.1204|
                  |L1.1182|
;;;315        _DrawOrData(GUI_GREEN, ++Param.aY);
00049e  9804              LDR      r0,[sp,#0x10]
0004a0  1c81              ADDS     r1,r0,#2
0004a2  f44f407f          MOV      r0,#0xff00
0004a6  9104              STR      r1,[sp,#0x10]
0004a8  f7fffffe          BL       _DrawOrData
;;;316        GUI_Delay(10);
0004ac  200a              MOVS     r0,#0xa
0004ae  f7fffffe          BL       GUI_Delay
0004b2  1c64              ADDS     r4,r4,#1              ;314
                  |L1.1204|
0004b4  2c5a              CMP      r4,#0x5a              ;314
0004b6  da03              BGE      |L1.1216|
0004b8  f7fffffe          BL       GUIDEMO_CheckCancel
0004bc  2800              CMP      r0,#0                 ;314
0004be  d0ee              BEQ      |L1.1182|
                  |L1.1216|
;;;317      }
;;;318      GUI_ALLOC_Free(hMem);
0004c0  4628              MOV      r0,r5
0004c2  f7fffffe          BL       GUI_ALLOC_Free
;;;319    }
0004c6  b005              ADD      sp,sp,#0x14
0004c8  bd30              POP      {r4,r5,pc}
;;;320    
                          ENDP

                  GUIDEMO_Graph PROC
;;;327    
;;;328    void GUIDEMO_Graph(void) {
0004ca  b510              PUSH     {r4,lr}
;;;329      GUIDEMO_ShowIntro("Drawing a graph",
0004cc  a110              ADR      r1,|L1.1296|
0004ce  a01d              ADR      r0,|L1.1348|
0004d0  f7fffffe          BL       GUIDEMO_ShowIntro
;;;330                        "\nOptimized drawing routine for"
;;;331                        "\ndrawing graph data");
;;;332      GUI_Clear();
0004d4  f7fffffe          BL       GUI_Clear
;;;333      _Label();
0004d8  f7fffffe          BL       _Label
;;;334      _DemoRandomGraph();
0004dc  f7fffffe          BL       _DemoRandomGraph
;;;335      GUIDEMO_NotifyStartNext();
0004e0  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;336      _DemoSineWave();
0004e4  f7fffffe          BL       _DemoSineWave
;;;337      GUIDEMO_NotifyStartNext();
0004e8  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;338      _DemoOrData();
0004ec  e8bd4010          POP      {r4,lr}
0004f0  e7fe              B        _DemoOrData
;;;339    }
;;;340    
                          ENDP

0004f2  0000              DCW      0x0000
                  |L1.1268|
                          DCD      ||.constdata||
                  |L1.1272|
0004f8  53657665          DCB      "Several waves...",0
0004fc  72616c20
000500  77617665
000504  732e2e2e
000508  00      
000509  00                DCB      0
00050a  00                DCB      0
00050b  00                DCB      0
                  |L1.1292|
                          DCD      _Draw
                  |L1.1296|
000510  0a4f7074          DCB      "\nOptimized drawing routine for\ndrawing graph data",0
000514  696d697a
000518  65642064
00051c  72617769
000520  6e672072
000524  6f757469
000528  6e652066
00052c  6f720a64
000530  72617769
000534  6e672067
000538  72617068
00053c  20646174
000540  6100    
000542  00                DCB      0
000543  00                DCB      0
                  |L1.1348|
000544  44726177          DCB      "Drawing a graph",0
000548  696e6720
00054c  61206772
000550  61706800

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  0013000a          DCW      0x0013,0x000a
000004  00da00c7          DCW      0x00da,0x00c7
000008  0013000a          DCW      0x0013,0x000a
00000c  00da00c7          DCW      0x00da,0x00c7
000010  0013000a          DCW      0x0013,0x000a
000014  00da00c7          DCW      0x00da,0x00c7
