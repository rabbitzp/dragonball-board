; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\bsp_int.o --depend=.\rvmdk\bsp_int.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\bsp_int.crf ..\BSP\bsp_int.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  BSP_IntClr PROC
;;;110    
;;;111    void  BSP_IntClr (CPU_DATA  int_id)
000000  4770              BX       lr
;;;112    {
;;;113    
;;;114    }
;;;115    
                          ENDP

                  BSP_IntDis PROC
;;;132    
;;;133    void  BSP_IntDis (CPU_DATA  int_id)
000002  283c              CMP      r0,#0x3c
;;;134    {
;;;135        if (int_id < BSP_INT_SRC_NBR) {
000004  d203              BCS      |L1.14|
;;;136            CPU_IntSrcDis(int_id + 16);
000006  3010              ADDS     r0,r0,#0x10
000008  b2c0              UXTB     r0,r0
00000a  f7ffbffe          B.W      CPU_IntSrcDis
                  |L1.14|
;;;137        }
;;;138    }
00000e  4770              BX       lr
;;;139    
                          ENDP

                  BSP_IntDisAll PROC
;;;156    
;;;157    void  BSP_IntDisAll (void)
000010  f7ffbffe          B.W      CPU_IntDis
;;;158    {
;;;159        CPU_IntDis();
;;;160    }
;;;161    
                          ENDP

                  BSP_IntEn PROC
;;;178    
;;;179    void  BSP_IntEn (CPU_DATA  int_id)
000014  283c              CMP      r0,#0x3c
;;;180    {
;;;181        if (int_id < BSP_INT_SRC_NBR) {
000016  d203              BCS      |L1.32|
;;;182            CPU_IntSrcEn(int_id + 16);
000018  3010              ADDS     r0,r0,#0x10
00001a  b2c0              UXTB     r0,r0
00001c  f7ffbffe          B.W      CPU_IntSrcEn
                  |L1.32|
;;;183        }
;;;184    }
000020  4770              BX       lr
;;;185    
                          ENDP

                  BSP_IntVectSet PROC
;;;204    
;;;205    void  BSP_IntVectSet (CPU_DATA       int_id,
000022  b570              PUSH     {r4-r6,lr}
;;;206                          CPU_FNCT_VOID  isr)
;;;207    {
000024  4604              MOV      r4,r0
000026  460d              MOV      r5,r1
;;;208    #if (CPU_CFG_CRITICAL_METHOD == CPU_CRITICAL_METHOD_STATUS_LOCAL)
;;;209        CPU_SR   cpu_sr;
;;;210    #endif
;;;211    
;;;212    
;;;213        if (int_id < BSP_INT_SRC_NBR) {
000028  2c3c              CMP      r4,#0x3c
00002a  d208              BCS      |L1.62|
;;;214            CPU_CRITICAL_ENTER();
00002c  f7fffffe          BL       CPU_SR_Save
;;;215            BSP_IntVectTbl[int_id] = isr;
000030  4959              LDR      r1,|L1.408|
000032  f8415024          STR      r5,[r1,r4,LSL #2]
;;;216            CPU_CRITICAL_EXIT();
000036  e8bd4070          POP      {r4-r6,lr}
00003a  f7ffbffe          B.W      CPU_SR_Restore
                  |L1.62|
;;;217        }
;;;218    }
00003e  bd70              POP      {r4-r6,pc}
;;;219    
                          ENDP

                  BSP_IntPrioSet PROC
;;;238    
;;;239    void  BSP_IntPrioSet (CPU_DATA    int_id,
000040  b570              PUSH     {r4-r6,lr}
;;;240                          CPU_INT08U  prio)
;;;241    {
000042  4604              MOV      r4,r0
000044  460d              MOV      r5,r1
;;;242    #if (CPU_CFG_CRITICAL_METHOD == CPU_CRITICAL_METHOD_STATUS_LOCAL)
;;;243        CPU_SR    cpu_sr;
;;;244    #endif
;;;245    
;;;246    
;;;247        if (int_id < BSP_INT_SRC_NBR) {
000046  2c3c              CMP      r4,#0x3c
000048  d20d              BCS      |L1.102|
;;;248            CPU_CRITICAL_ENTER();
00004a  f7fffffe          BL       CPU_SR_Save
00004e  4606              MOV      r6,r0
;;;249            CPU_IntSrcPrioSet(int_id + 16, prio);
000050  f1040010          ADD      r0,r4,#0x10
000054  4629              MOV      r1,r5
000056  b2c0              UXTB     r0,r0
000058  f7fffffe          BL       CPU_IntSrcPrioSet
;;;250            CPU_CRITICAL_EXIT();
00005c  4630              MOV      r0,r6
00005e  e8bd4070          POP      {r4-r6,lr}
000062  f7ffbffe          B.W      CPU_SR_Restore
                  |L1.102|
;;;251        }
;;;252    }
000066  bd70              POP      {r4-r6,pc}
;;;253    
                          ENDP

                  BSP_IntHandlerDummy PROC
;;;430    
;;;431    static  void  BSP_IntHandlerDummy (void)
000068  4770              BX       lr
;;;432    {
;;;433    
;;;434    }
                          ENDP

                  BSP_IntInit PROC
;;;278    
;;;279    void  BSP_IntInit (void)
00006a  b510              PUSH     {r4,lr}
;;;280    {
;;;281        CPU_DATA  int_id;
;;;282    
;;;283    
;;;284        for (int_id = 0; int_id < BSP_INT_SRC_NBR; int_id++) {
00006c  2400              MOVS     r4,#0
                  |L1.110|
;;;285            BSP_IntVectSet(int_id, BSP_IntHandlerDummy);
00006e  494b              LDR      r1,|L1.412|
000070  4620              MOV      r0,r4
000072  f7fffffe          BL       BSP_IntVectSet
000076  1c64              ADDS     r4,r4,#1              ;284
000078  2c3c              CMP      r4,#0x3c              ;284
00007a  d3f8              BCC      |L1.110|
;;;286        }
;;;287    }
00007c  bd10              POP      {r4,pc}
;;;288    
                          ENDP

                  BSP_IntHandler PROC
;;;391    
;;;392    static  void  BSP_IntHandler (CPU_DATA  int_id)
00007e  b510              PUSH     {r4,lr}
;;;393    {
000080  4604              MOV      r4,r0
;;;394    #if (CPU_CFG_CRITICAL_METHOD == CPU_CRITICAL_METHOD_STATUS_LOCAL)
;;;395        CPU_SR         cpu_sr;
;;;396    #endif
;;;397        CPU_FNCT_VOID  isr;
;;;398    
;;;399    
;;;400        CPU_CRITICAL_ENTER();                                       /* Tell uC/OS-II that we are starting an ISR            */
000082  f7fffffe          BL       CPU_SR_Save
;;;401        OSIntNesting++;
000086  4946              LDR      r1,|L1.416|
000088  780a              LDRB     r2,[r1,#0]  ; OSIntNesting
00008a  1c52              ADDS     r2,r2,#1
00008c  700a              STRB     r2,[r1,#0]
;;;402        CPU_CRITICAL_EXIT();
00008e  f7fffffe          BL       CPU_SR_Restore
;;;403    
;;;404        if (int_id < BSP_INT_SRC_NBR) {
000092  2c3c              CMP      r4,#0x3c
000094  d204              BCS      |L1.160|
;;;405            isr = BSP_IntVectTbl[int_id];
000096  4840              LDR      r0,|L1.408|
000098  f8500024          LDR      r0,[r0,r4,LSL #2]
;;;406            if (isr != (CPU_FNCT_VOID)0) {
00009c  b100              CBZ      r0,|L1.160|
;;;407                isr();
00009e  4780              BLX      r0
                  |L1.160|
;;;408            }
;;;409        }
;;;410    
;;;411        OSIntExit();                                                /* Tell uC/OS-II that we are leaving the ISR            */
0000a0  e8bd4010          POP      {r4,lr}
0000a4  f7ffbffe          B.W      OSIntExit
;;;412    }
;;;413    
                          ENDP

                  BSP_IntHandlerWWDG PROC
;;;305    
;;;306    void  BSP_IntHandlerWWDG          (void)  { BSP_IntHandler(BSP_INT_ID_WWDG);            }
0000a8  2000              MOVS     r0,#0
0000aa  e7fe              B        BSP_IntHandler
;;;307    void  BSP_IntHandlerPVD           (void)  { BSP_IntHandler(BSP_INT_ID_PVD);             }
                          ENDP

                  BSP_IntHandlerPVD PROC
0000ac  2001              MOVS     r0,#1
0000ae  e7fe              B        BSP_IntHandler
;;;308    void  BSP_IntHandlerTAMPER        (void)  { BSP_IntHandler(BSP_INT_ID_TAMPER);          }
                          ENDP

                  BSP_IntHandlerTAMPER PROC
0000b0  2002              MOVS     r0,#2
0000b2  e7fe              B        BSP_IntHandler
;;;309    void  BSP_IntHandlerRTC           (void)  { BSP_IntHandler(BSP_INT_ID_RTC);             }
                          ENDP

                  BSP_IntHandlerRTC PROC
0000b4  2003              MOVS     r0,#3
0000b6  e7fe              B        BSP_IntHandler
;;;310    void  BSP_IntHandlerFLASH         (void)  { BSP_IntHandler(BSP_INT_ID_FLASH);           }
                          ENDP

                  BSP_IntHandlerFLASH PROC
0000b8  2004              MOVS     r0,#4
0000ba  e7fe              B        BSP_IntHandler
;;;311    void  BSP_IntHandlerRCC           (void)  { BSP_IntHandler(BSP_INT_ID_RCC);             }
                          ENDP

                  BSP_IntHandlerRCC PROC
0000bc  2005              MOVS     r0,#5
0000be  e7fe              B        BSP_IntHandler
;;;312    void  BSP_IntHandlerEXTI0         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI0);           }
                          ENDP

                  BSP_IntHandlerEXTI0 PROC
0000c0  2006              MOVS     r0,#6
0000c2  e7fe              B        BSP_IntHandler
;;;313    void  BSP_IntHandlerEXTI1         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI1);           }
                          ENDP

                  BSP_IntHandlerEXTI1 PROC
0000c4  2007              MOVS     r0,#7
0000c6  e7fe              B        BSP_IntHandler
;;;314    void  BSP_IntHandlerEXTI2         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI2);           }
                          ENDP

                  BSP_IntHandlerEXTI2 PROC
0000c8  2008              MOVS     r0,#8
0000ca  e7fe              B        BSP_IntHandler
;;;315    void  BSP_IntHandlerEXTI3         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI3);           }
                          ENDP

                  BSP_IntHandlerEXTI3 PROC
0000cc  2009              MOVS     r0,#9
0000ce  e7fe              B        BSP_IntHandler
;;;316    void  BSP_IntHandlerEXTI4         (void)  { BSP_IntHandler(BSP_INT_ID_EXTI4);           }
                          ENDP

                  BSP_IntHandlerEXTI4 PROC
0000d0  200a              MOVS     r0,#0xa
0000d2  e7fe              B        BSP_IntHandler
;;;317    void  BSP_IntHandlerDMA1_CH1      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH1);        }
                          ENDP

                  BSP_IntHandlerDMA1_CH1 PROC
0000d4  200b              MOVS     r0,#0xb
0000d6  e7fe              B        BSP_IntHandler
;;;318    void  BSP_IntHandlerDMA1_CH2      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH2);        }
                          ENDP

                  BSP_IntHandlerDMA1_CH2 PROC
0000d8  200c              MOVS     r0,#0xc
0000da  e7fe              B        BSP_IntHandler
;;;319    void  BSP_IntHandlerDMA1_CH3      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH3);        }
                          ENDP

                  BSP_IntHandlerDMA1_CH3 PROC
0000dc  200d              MOVS     r0,#0xd
0000de  e7fe              B        BSP_IntHandler
;;;320    void  BSP_IntHandlerDMA1_CH4      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH4);        }
                          ENDP

                  BSP_IntHandlerDMA1_CH4 PROC
0000e0  200e              MOVS     r0,#0xe
0000e2  e7fe              B        BSP_IntHandler
;;;321    void  BSP_IntHandlerDMA1_CH5      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH5);        }
                          ENDP

                  BSP_IntHandlerDMA1_CH5 PROC
0000e4  200f              MOVS     r0,#0xf
0000e6  e7fe              B        BSP_IntHandler
;;;322    void  BSP_IntHandlerDMA1_CH6      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH6);        }
                          ENDP

                  BSP_IntHandlerDMA1_CH6 PROC
0000e8  2010              MOVS     r0,#0x10
0000ea  e7fe              B        BSP_IntHandler
;;;323    void  BSP_IntHandlerDMA1_CH7      (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH7);        }
                          ENDP

                  BSP_IntHandlerDMA1_CH7 PROC
0000ec  2011              MOVS     r0,#0x11
0000ee  e7fe              B        BSP_IntHandler
;;;324    void  BSP_IntHandlerADC1_2        (void)  { BSP_IntHandler(BSP_INT_ID_ADC1_2);          }
                          ENDP

                  BSP_IntHandlerADC1_2 PROC
0000f0  2012              MOVS     r0,#0x12
0000f2  e7fe              B        BSP_IntHandler
;;;325    void  BSP_IntHandlerUSB_HP_CAN_TX (void)  { BSP_IntHandler(BSP_INT_ID_USB_HP_CAN_TX);   }
                          ENDP

                  BSP_IntHandlerUSB_HP_CAN_TX PROC
0000f4  2013              MOVS     r0,#0x13
0000f6  e7fe              B        BSP_IntHandler
;;;326    void  BSP_IntHandlerUSB_LP_CAN_RX0(void)  { BSP_IntHandler(BSP_INT_ID_USB_LP_CAN_RX0);  }
                          ENDP

                  BSP_IntHandlerUSB_LP_CAN_RX0 PROC
0000f8  2014              MOVS     r0,#0x14
0000fa  e7fe              B        BSP_IntHandler
;;;327    void  BSP_IntHandlerCAN_RX1       (void)  { BSP_IntHandler(BSP_INT_ID_CAN_RX1);         }
                          ENDP

                  BSP_IntHandlerCAN_RX1 PROC
0000fc  2015              MOVS     r0,#0x15
0000fe  e7fe              B        BSP_IntHandler
;;;328    void  BSP_IntHandlerCAN_SCE       (void)  { BSP_IntHandler(BSP_INT_ID_CAN_SCE);         }
                          ENDP

                  BSP_IntHandlerCAN_SCE PROC
000100  2016              MOVS     r0,#0x16
000102  e7fe              B        BSP_IntHandler
;;;329    void  BSP_IntHandlerEXTI9_5       (void)  { BSP_IntHandler(BSP_INT_ID_EXTI9_5);         }
                          ENDP

                  BSP_IntHandlerEXTI9_5 PROC
000104  2017              MOVS     r0,#0x17
000106  e7fe              B        BSP_IntHandler
;;;330    void  BSP_IntHandlerTIM1_BRK      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_BRK);        }
                          ENDP

                  BSP_IntHandlerTIM1_BRK PROC
000108  2018              MOVS     r0,#0x18
00010a  e7fe              B        BSP_IntHandler
;;;331    void  BSP_IntHandlerTIM1_UP       (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_UP);         }
                          ENDP

                  BSP_IntHandlerTIM1_UP PROC
00010c  2019              MOVS     r0,#0x19
00010e  e7fe              B        BSP_IntHandler
;;;332    void  BSP_IntHandlerTIM1_TRG_COM  (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_TRG_COM);    }
                          ENDP

                  BSP_IntHandlerTIM1_TRG_COM PROC
000110  201a              MOVS     r0,#0x1a
000112  e7fe              B        BSP_IntHandler
;;;333    void  BSP_IntHandlerTIM1_CC       (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_CC);         }
                          ENDP

                  BSP_IntHandlerTIM1_CC PROC
000114  201b              MOVS     r0,#0x1b
000116  e7fe              B        BSP_IntHandler
;;;334    void  BSP_IntHandlerTIM2          (void)  { BSP_IntHandler(BSP_INT_ID_TIM2);            }
                          ENDP

                  BSP_IntHandlerTIM2 PROC
000118  201c              MOVS     r0,#0x1c
00011a  e7fe              B        BSP_IntHandler
;;;335    void  BSP_IntHandlerTIM3          (void)  { BSP_IntHandler(BSP_INT_ID_TIM3);            }
                          ENDP

                  BSP_IntHandlerTIM3 PROC
00011c  201d              MOVS     r0,#0x1d
00011e  e7fe              B        BSP_IntHandler
;;;336    void  BSP_IntHandlerTIM4          (void)  { BSP_IntHandler(BSP_INT_ID_TIM4);            }
                          ENDP

                  BSP_IntHandlerTIM4 PROC
000120  201e              MOVS     r0,#0x1e
000122  e7fe              B        BSP_IntHandler
;;;337    void  BSP_IntHandlerI2C1_EV       (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_EV);         }
                          ENDP

                  BSP_IntHandlerI2C1_EV PROC
000124  201f              MOVS     r0,#0x1f
000126  e7fe              B        BSP_IntHandler
;;;338    void  BSP_IntHandlerI2C1_ER       (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_ER);         }
                          ENDP

                  BSP_IntHandlerI2C1_ER PROC
000128  2020              MOVS     r0,#0x20
00012a  e7fe              B        BSP_IntHandler
;;;339    void  BSP_IntHandlerI2C2_EV       (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_EV);         }
                          ENDP

                  BSP_IntHandlerI2C2_EV PROC
00012c  2021              MOVS     r0,#0x21
00012e  e7fe              B        BSP_IntHandler
;;;340    void  BSP_IntHandlerI2C2_ER       (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_ER);         }
                          ENDP

                  BSP_IntHandlerI2C2_ER PROC
000130  2022              MOVS     r0,#0x22
000132  e7fe              B        BSP_IntHandler
;;;341    void  BSP_IntHandlerSPI1          (void)  { BSP_IntHandler(BSP_INT_ID_SPI1);            }
                          ENDP

                  BSP_IntHandlerSPI1 PROC
000134  2023              MOVS     r0,#0x23
000136  e7fe              B        BSP_IntHandler
;;;342    void  BSP_IntHandlerSPI2          (void)  { BSP_IntHandler(BSP_INT_ID_SPI2);            }
                          ENDP

                  BSP_IntHandlerSPI2 PROC
000138  2024              MOVS     r0,#0x24
00013a  e7fe              B        BSP_IntHandler
;;;343    void  BSP_IntHandlerUSART1        (void)  { BSP_IntHandler(BSP_INT_ID_USART1);          }
                          ENDP

                  BSP_IntHandlerUSART1 PROC
00013c  2025              MOVS     r0,#0x25
00013e  e7fe              B        BSP_IntHandler
;;;344    void  BSP_IntHandlerUSART2        (void)  { BSP_IntHandler(BSP_INT_ID_USART2);          }
                          ENDP

                  BSP_IntHandlerUSART2 PROC
000140  2026              MOVS     r0,#0x26
000142  e7fe              B        BSP_IntHandler
;;;345    void  BSP_IntHandlerUSART3        (void)  { BSP_IntHandler(BSP_INT_ID_USART3);          }
                          ENDP

                  BSP_IntHandlerUSART3 PROC
000144  2027              MOVS     r0,#0x27
000146  e7fe              B        BSP_IntHandler
;;;346    void  BSP_IntHandlerEXTI15_10     (void)  { BSP_IntHandler(BSP_INT_ID_EXTI15_10);       }
                          ENDP

                  BSP_IntHandlerEXTI15_10 PROC
000148  2028              MOVS     r0,#0x28
00014a  e7fe              B        BSP_IntHandler
;;;347    void  BSP_IntHandlerRTCAlarm      (void)  { BSP_IntHandler(BSP_INT_ID_RTCAlarm);        }
                          ENDP

                  BSP_IntHandlerRTCAlarm PROC
00014c  2029              MOVS     r0,#0x29
00014e  e7fe              B        BSP_IntHandler
;;;348    void  BSP_IntHandlerUSBWakeUp     (void)  { BSP_IntHandler(BSP_INT_ID_USBWakeUp);       }
                          ENDP

                  BSP_IntHandlerUSBWakeUp PROC
000150  202a              MOVS     r0,#0x2a
000152  e7fe              B        BSP_IntHandler
;;;349    void  BSP_IntHandlerTIM8_BRK      (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_BRK);        }
                          ENDP

                  BSP_IntHandlerTIM8_BRK PROC
000154  202b              MOVS     r0,#0x2b
000156  e7fe              B        BSP_IntHandler
;;;350    void  BSP_IntHandlerTIM8_UP       (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_UP);         }
                          ENDP

                  BSP_IntHandlerTIM8_UP PROC
000158  202c              MOVS     r0,#0x2c
00015a  e7fe              B        BSP_IntHandler
;;;351    void  BSP_IntHandlerTIM8_TRG_COM  (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_TRG_COM);    }
                          ENDP

                  BSP_IntHandlerTIM8_TRG_COM PROC
00015c  202d              MOVS     r0,#0x2d
00015e  e7fe              B        BSP_IntHandler
;;;352    void  BSP_IntHandlerTIM8_CC       (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_CC);         }
                          ENDP

                  BSP_IntHandlerTIM8_CC PROC
000160  202e              MOVS     r0,#0x2e
000162  e7fe              B        BSP_IntHandler
;;;353    void  BSP_IntHandlerADC3          (void)  { BSP_IntHandler(BSP_INT_ID_ADC3);            }
                          ENDP

                  BSP_IntHandlerADC3 PROC
000164  202f              MOVS     r0,#0x2f
000166  e7fe              B        BSP_IntHandler
;;;354    void  BSP_IntHandlerFSMC          (void)  { BSP_IntHandler(BSP_INT_ID_FSMC);            }
                          ENDP

                  BSP_IntHandlerFSMC PROC
000168  2030              MOVS     r0,#0x30
00016a  e7fe              B        BSP_IntHandler
;;;355    void  BSP_IntHandlerSDIO          (void)  { BSP_IntHandler(BSP_INT_ID_SDIO);            }
                          ENDP

                  BSP_IntHandlerSDIO PROC
00016c  2031              MOVS     r0,#0x31
00016e  e7fe              B        BSP_IntHandler
;;;356    void  BSP_IntHandlerTIM5          (void)  { BSP_IntHandler(BSP_INT_ID_TIM5);            }
                          ENDP

                  BSP_IntHandlerTIM5 PROC
000170  2032              MOVS     r0,#0x32
000172  e7fe              B        BSP_IntHandler
;;;357    void  BSP_IntHandlerSPI3          (void)  { BSP_IntHandler(BSP_INT_ID_SPI3);            }
                          ENDP

                  BSP_IntHandlerSPI3 PROC
000174  2033              MOVS     r0,#0x33
000176  e7fe              B        BSP_IntHandler
;;;358    void  BSP_IntHandlerUART4         (void)  { BSP_IntHandler(BSP_INT_ID_UART4);           }
                          ENDP

                  BSP_IntHandlerUART4 PROC
000178  2034              MOVS     r0,#0x34
00017a  e7fe              B        BSP_IntHandler
;;;359    void  BSP_IntHandlerUART5         (void)  { BSP_IntHandler(BSP_INT_ID_UART5);           }
                          ENDP

                  BSP_IntHandlerUART5 PROC
00017c  2035              MOVS     r0,#0x35
00017e  e7fe              B        BSP_IntHandler
;;;360    void  BSP_IntHandlerTIM6          (void)  { BSP_IntHandler(BSP_INT_ID_TIM6);            }
                          ENDP

                  BSP_IntHandlerTIM6 PROC
000180  2036              MOVS     r0,#0x36
000182  e7fe              B        BSP_IntHandler
;;;361    void  BSP_IntHandlerTIM7          (void)  { BSP_IntHandler(BSP_INT_ID_TIM7);            }
                          ENDP

                  BSP_IntHandlerTIM7 PROC
000184  2037              MOVS     r0,#0x37
000186  e7fe              B        BSP_IntHandler
;;;362    void  BSP_IntHandlerDMA2_CH1      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH1);        }
                          ENDP

                  BSP_IntHandlerDMA2_CH1 PROC
000188  2038              MOVS     r0,#0x38
00018a  e7fe              B        BSP_IntHandler
;;;363    void  BSP_IntHandlerDMA2_CH2      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH2);        }
                          ENDP

                  BSP_IntHandlerDMA2_CH2 PROC
00018c  2039              MOVS     r0,#0x39
00018e  e7fe              B        BSP_IntHandler
;;;364    void  BSP_IntHandlerDMA2_CH3      (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH3);        }
                          ENDP

                  BSP_IntHandlerDMA2_CH3 PROC
000190  203a              MOVS     r0,#0x3a
000192  e7fe              B        BSP_IntHandler
;;;365    void  BSP_IntHandlerDMA2_CH4_5    (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH4_5);      }
                          ENDP

                  BSP_IntHandlerDMA2_CH4_5 PROC
000194  203b              MOVS     r0,#0x3b
000196  e7fe              B        BSP_IntHandler
;;;366    
                          ENDP

                  |L1.408|
                          DCD      ||.bss||
                  |L1.412|
                          DCD      BSP_IntHandlerDummy
                  |L1.416|
                          DCD      OSIntNesting

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  BSP_IntVectTbl
                          %        240
