; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guidemo_memdevb.o --depend=.\rvmdk\guidemo_memdevb.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guidemo_memdevb.crf ..\..\..\..\..\uCGUI\GUIDemo\GUIDEMO_MemDevB.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Draw PROC
;;;59     /* The user defined callback routine */
;;;60     static void _Draw(void * p) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4604              MOV      r4,r0
;;;61       int XSize = LCD_GetXSize();
000006  f7fffffe          BL       LCD_GetXSize
00000a  4606              MOV      r6,r0
;;;62       int YSize = LCD_GetYSize();
00000c  f7fffffe          BL       LCD_GetYSize
000010  4607              MOV      r7,r0
;;;63       tDrawContext * pContext = (tDrawContext *)p;
;;;64       int i = pContext->Angle;
000012  6825              LDR      r5,[r4,#0]
;;;65       static int iLast = -1;
;;;66       static GUI_POINT aPoint[7];
;;;67       if (pContext->DoClear)
000014  6860              LDR      r0,[r4,#4]
000016  b108              CBZ      r0,|L1.28|
;;;68         GUI_Clear();
000018  f7fffffe          BL       GUI_Clear
                  |L1.28|
;;;69       GUI_SetFont(&GUI_FontD24x32);
00001c  4862              LDR      r0,|L1.424|
00001e  f7fffffe          BL       GUI_SetFont
;;;70       GUI_SetTextMode(GUI_TM_TRANS);
000022  2002              MOVS     r0,#2
000024  f7fffffe          BL       GUI_SetTextMode
;;;71       GUI_SetColor(GUI_GRAY);
000028  4860              LDR      r0,|L1.428|
00002a  f7fffffe          BL       GUI_SetColor
;;;72       GUI_SetFont(&GUI_FontComic18B_1);
00002e  4860              LDR      r0,|L1.432|
000030  f7fffffe          BL       GUI_SetFont
;;;73       GUI_DispStringHCenterAt("Below arrow", XSize / 2, YSize / 2 - 20);
000034  eb0774d7          ADD      r4,r7,r7,LSR #31
000038  f06f0013          MVN      r0,#0x13
00003c  eb000264          ADD      r2,r0,r4,ASR #1
000040  eb0676d6          ADD      r6,r6,r6,LSR #31
000044  1071              ASRS     r1,r6,#1
000046  a05b              ADR      r0,|L1.436|
000048  f7fffffe          BL       GUI_DispStringHCenterAt
;;;74       if (iLast != i) {
00004c  4f5c              LDR      r7,|L1.448|
00004e  6838              LDR      r0,[r7,#0]  ; iLast
000050  42a8              CMP      r0,r5
000052  d011              BEQ      |L1.120|
;;;75         float Angle = 0.02 * (float)i;
000054  4628              MOV      r0,r5
000056  f7fffffe          BL       __aeabi_i2f
00005a  f7fffffe          BL       __aeabi_f2d
00005e  4a59              LDR      r2,|L1.452|
000060  4b59              LDR      r3,|L1.456|
000062  f7fffffe          BL       __aeabi_dmul
000066  f7fffffe          BL       __aeabi_d2f
;;;76         iLast = i;
00006a  603d              STR      r5,[r7,#0]  ; iLast
;;;77         GUI_RotatePolygon(aPoint, _aArrow, 7, Angle);
00006c  4603              MOV      r3,r0
00006e  2207              MOVS     r2,#7
000070  4956              LDR      r1,|L1.460|
000072  4857              LDR      r0,|L1.464|
000074  f7fffffe          BL       GUI_RotatePolygon
                  |L1.120|
;;;78       }
;;;79       GUI_SetColor(GUI_WHITE);
000078  f06f407f          MVN      r0,#0xff000000
00007c  f7fffffe          BL       GUI_SetColor
;;;80       GUI_FillPolygon(&aPoint[0], 7, XSize / 2, YSize / 2 + 30);
000080  201e              MOVS     r0,#0x1e
000082  eb000364          ADD      r3,r0,r4,ASR #1
000086  1072              ASRS     r2,r6,#1
000088  2107              MOVS     r1,#7
00008a  4851              LDR      r0,|L1.464|
00008c  f7fffffe          BL       GUI_FillPolygon
;;;81       GUI_SetTextMode(GUI_TM_TRANS);
000090  2002              MOVS     r0,#2
000092  f7fffffe          BL       GUI_SetTextMode
;;;82       GUI_SetColor(GUI_DARKGRAY);
000096  484f              LDR      r0,|L1.468|
000098  f7fffffe          BL       GUI_SetColor
;;;83       GUI_SetFont(&GUI_FontComic18B_1);
00009c  4844              LDR      r0,|L1.432|
00009e  f7fffffe          BL       GUI_SetFont
;;;84       GUI_DispStringHCenterAt("Above arrow", XSize / 2, YSize / 2);
0000a2  1062              ASRS     r2,r4,#1
0000a4  1071              ASRS     r1,r6,#1
0000a6  e8bd41f0          POP      {r4-r8,lr}
0000aa  a04b              ADR      r0,|L1.472|
0000ac  f7ffbffe          B.W      GUI_DispStringHCenterAt
;;;85     }
;;;86     
                          ENDP

                  GUIDEMO_ShowMemoryDevice PROC
;;;93     
;;;94     void GUIDEMO_ShowMemoryDevice(void) {
0000b0  e92d43f0          PUSH     {r4-r9,lr}
0000b4  b08b              SUB      sp,sp,#0x2c
;;;95       int i, tDiff, t0;
;;;96       tDrawContext DrawContext;
;;;97       GUI_COLOR colorBack;
;;;98       GUI_RECT rView, rPrev, rTemp;
;;;99       GUIDEMO_ShowIntro("Memory devices",
0000b6  a14b              ADR      r1,|L1.484|
0000b8  a056              ADR      r0,|L1.532|
0000ba  f7fffffe          BL       GUIDEMO_ShowIntro
;;;100                        "For flicker free animation"
;;;101                        "\nand other purposes");
;;;102      GUIDEMO_NotifyStartNext();
0000be  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;103      GUI_SetBkColor(GUI_GREEN); 
0000c2  f44f407f          MOV      r0,#0xff00
0000c6  f7fffffe          BL       GUI_SetBkColor
;;;104      GUI_Clear();
0000ca  f7fffffe          BL       GUI_Clear
;;;105      /* Use banding memory device  */
;;;106      GUI_GetClientRect(&rView);  
0000ce  a806              ADD      r0,sp,#0x18
0000d0  f7fffffe          BL       GUI_GetClientRect
;;;107      colorBack = GUI_ColorIsAvailable(GUI_RED) ? GUI_RED : GUI_BLACK;
0000d4  20ff              MOVS     r0,#0xff
0000d6  f7fffffe          BL       GUI_ColorIsAvailable
0000da  b108              CBZ      r0,|L1.224|
0000dc  20ff              MOVS     r0,#0xff
0000de  e000              B        |L1.226|
                  |L1.224|
0000e0  2000              MOVS     r0,#0
                  |L1.226|
;;;108      GUI_SetBkColor(colorBack);
0000e2  f7fffffe          BL       GUI_SetBkColor
;;;109      GUI_Clear();
0000e6  f7fffffe          BL       GUI_Clear
;;;110      t0 = GUI_GetTime();
0000ea  f7fffffe          BL       GUI_GetTime
0000ee  4606              MOV      r6,r0
;;;111      for (i = 0; tDiff = GUI_GetTime() - t0, (tDiff < 8000) && !GUIDEMO_CheckCancel(); i++) {
0000f0  2400              MOVS     r4,#0
0000f2  2700              MOVS     r7,#0                 ;107
;;;112        DrawContext.Angle = 90 + tDiff / 50;
0000f4  f8df812c          LDR      r8,|L1.548|
;;;113        /* Calculate required size */
;;;114        {
;;;115          GUI_HMEM hMem = GUI_MEASDEV_Create();
;;;116          GUI_MEASDEV_Select(hMem);
;;;117          DrawContext.DoClear = 0;
;;;118          _Draw(&DrawContext);
;;;119          GUI_MEASDEV_GetRect(hMem, &rView);
;;;120          GUI_MEASDEV_Delete(hMem);
;;;121          rTemp = rView;
;;;122          if (i)
;;;123            GUI_MergeRect(&rView, &rView, &rPrev);
;;;124          rPrev = rTemp;
;;;125        }
;;;126        DrawContext.DoClear = 1;
0000f8  f04f0901          MOV      r9,#1
0000fc  e030              B        |L1.352|
                  |L1.254|
0000fe  fb881005          SMULL    r1,r0,r8,r5           ;112
000102  1101              ASRS     r1,r0,#4              ;112
000104  eba170e0          SUB      r0,r1,r0,ASR #31      ;112
000108  305a              ADDS     r0,r0,#0x5a           ;112
00010a  9008              STR      r0,[sp,#0x20]         ;112
00010c  f7fffffe          BL       GUI_MEASDEV_Create
000110  4605              MOV      r5,r0                 ;115
000112  4628              MOV      r0,r5                 ;116
000114  f7fffffe          BL       GUI_MEASDEV_Select
000118  9709              STR      r7,[sp,#0x24]         ;117
00011a  a808              ADD      r0,sp,#0x20           ;118
00011c  f7fffffe          BL       _Draw
000120  a906              ADD      r1,sp,#0x18           ;119
000122  4628              MOV      r0,r5                 ;119
000124  f7fffffe          BL       GUI_MEASDEV_GetRect
000128  4628              MOV      r0,r5                 ;120
00012a  f7fffffe          BL       GUI_MEASDEV_Delete
00012e  9907              LDR      r1,[sp,#0x1c]         ;121
000130  9806              LDR      r0,[sp,#0x18]         ;121
000132  9103              STR      r1,[sp,#0xc]          ;121
000134  9002              STR      r0,[sp,#8]            ;121
000136  b124              CBZ      r4,|L1.322|
000138  aa04              ADD      r2,sp,#0x10           ;123
00013a  a906              ADD      r1,sp,#0x18           ;123
00013c  a806              ADD      r0,sp,#0x18           ;123
00013e  f7fffffe          BL       GUI_MergeRect
                  |L1.322|
000142  9903              LDR      r1,[sp,#0xc]          ;124
000144  9802              LDR      r0,[sp,#8]            ;124
000146  9105              STR      r1,[sp,#0x14]         ;124
000148  9004              STR      r0,[sp,#0x10]         ;124
00014a  f8cd9024          STR      r9,[sp,#0x24]
;;;127        GUI_MEMDEV_Draw(&rView, _Draw, &DrawContext, 0, GUI_MEMDEV_NOTRANS);
00014e  2301              MOVS     r3,#1
000150  9300              STR      r3,[sp,#0]
000152  2300              MOVS     r3,#0
000154  aa08              ADD      r2,sp,#0x20
000156  4934              LDR      r1,|L1.552|
000158  a806              ADD      r0,sp,#0x18
00015a  f7fffffe          BL       GUI_MEMDEV_Draw
00015e  1c64              ADDS     r4,r4,#1              ;111
                  |L1.352|
000160  f7fffffe          BL       GUI_GetTime
000164  1b85              SUBS     r5,r0,r6              ;111
000166  f5b55ffa          CMP      r5,#0x1f40            ;111
00016a  da03              BGE      |L1.372|
00016c  f7fffffe          BL       GUIDEMO_CheckCancel
000170  2800              CMP      r0,#0                 ;111
000172  d0c4              BEQ      |L1.254|
                  |L1.372|
;;;128      }
;;;129      GUI_SetFont(&GUI_FontComic24B_ASCII);
000174  482d              LDR      r0,|L1.556|
000176  f7fffffe          BL       GUI_SetFont
;;;130      GUI_SetColor(GUI_WHITE);
00017a  f06f407f          MVN      r0,#0xff000000
00017e  f7fffffe          BL       GUI_SetColor
;;;131      GUI_DispStringAt("ms/Update: ", 10 , 200);
000182  22c8              MOVS     r2,#0xc8
000184  210a              MOVS     r1,#0xa
000186  a02a              ADR      r0,|L1.560|
000188  f7fffffe          BL       GUI_DispStringAt
;;;132      if (i) {
00018c  b11c              CBZ      r4,|L1.406|
;;;133        GUI_DispDecMin(tDiff / i);
00018e  fb95f0f4          SDIV     r0,r5,r4
000192  f7fffffe          BL       GUI_DispDecMin
                  |L1.406|
;;;134      }
;;;135      GUIDEMO_Delay(1000);
000196  f44f707a          MOV      r0,#0x3e8
00019a  f7fffffe          BL       GUIDEMO_Delay
;;;136      GUI_Clear();
00019e  f7fffffe          BL       GUI_Clear
;;;137    }
0001a2  b00b              ADD      sp,sp,#0x2c
0001a4  e8bd83f0          POP      {r4-r9,pc}
;;;138    
                          ENDP

                  |L1.424|
                          DCD      GUI_FontD24x32
                  |L1.428|
                          DCD      0x00808080
                  |L1.432|
                          DCD      GUI_FontComic18B_1
                  |L1.436|
0001b4  42656c6f          DCB      "Below arrow",0
0001b8  77206172
0001bc  726f7700
                  |L1.448|
                          DCD      ||.data||
                  |L1.452|
                          DCD      0x47ae147b
                  |L1.456|
                          DCD      0x3f947ae1
                  |L1.460|
                          DCD      ||.constdata||
                  |L1.464|
                          DCD      ||.bss||
                  |L1.468|
                          DCD      0x00404040
                  |L1.472|
0001d8  41626f76          DCB      "Above arrow",0
0001dc  65206172
0001e0  726f7700
                  |L1.484|
0001e4  466f7220          DCB      "For flicker free animation\nand other purposes",0
0001e8  666c6963
0001ec  6b657220
0001f0  66726565
0001f4  20616e69
0001f8  6d617469
0001fc  6f6e0a61
000200  6e64206f
000204  74686572
000208  20707572
00020c  706f7365
000210  7300    
000212  00                DCB      0
000213  00                DCB      0
                  |L1.532|
000214  4d656d6f          DCB      "Memory devices",0
000218  72792064
00021c  65766963
000220  657300  
000223  00                DCB      0
                  |L1.548|
                          DCD      0x51eb851f
                  |L1.552|
                          DCD      _Draw
                  |L1.556|
                          DCD      GUI_FontComic24B_ASCII
                  |L1.560|
000230  6d732f55          DCB      "ms/Update: ",0
000234  70646174
000238  653a2000

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  aPoint
                          %        28

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  _aArrow
000000  00000055          DCW      0x0000,0x0055
000004  ffd80032          DCW      0xffd8,0x0032
000008  fff6003c          DCW      0xfff6,0x003c
00000c  fff60000          DCW      0xfff6,0x0000
000010  000a0000          DCW      0x000a,0x0000
000014  000a003c          DCW      0x000a,0x003c
000018  00280032          DCW      0x0028,0x0032

                          AREA ||.data||, DATA, ALIGN=2

                  iLast
                          DCD      0xffffffff
