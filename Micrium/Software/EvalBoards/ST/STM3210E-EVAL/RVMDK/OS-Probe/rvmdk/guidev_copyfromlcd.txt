; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guidev_copyfromlcd.o --depend=.\rvmdk\guidev_copyfromlcd.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guidev_copyfromlcd.crf ..\..\..\..\..\uCGUI\GUI\MemDev\GUIDEV_CopyFromLCD.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUI_MEMDEV_CopyFromLCD PROC
;;;47     */
;;;48     void GUI_MEMDEV_CopyFromLCD(GUI_MEMDEV_Handle hMem) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b085              SUB      sp,sp,#0x14
000006  4605              MOV      r5,r0
;;;49       /* Make sure memory handle is valid */
;;;50       if (!hMem) {
;;;51         hMem = GUI_Context.hDevData;
000008  4e3f              LDR      r6,|L1.264|
00000a  b90d              CBNZ     r5,|L1.16|
00000c  f9b65050          LDRSH    r5,[r6,#0x50]  ; GUI_Context
                  |L1.16|
;;;52       }
;;;53       if (!hMem) {
000010  2d00              CMP      r5,#0
000012  d075              BEQ      |L1.256|
;;;54         return;
;;;55       }
;;;56       {
;;;57         GUI_MEMDEV* pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       GUI_ALLOC_h2p
00001a  4604              MOV      r4,r0
;;;58         LCD_RECT r;
;;;59         int y;
;;;60         int XMax;
;;;61         GUI_USAGE* pUsage = 0;
00001c  f04f0800          MOV      r8,#0
;;;62         GUI_MEMDEV_Handle hMemOld = GUI_Context.hDevData;
000020  f9b60050          LDRSH    r0,[r6,#0x50]  ; GUI_Context
000024  9001              STR      r0,[sp,#4]
;;;63         GUI_MEMDEV_Select(hMem);
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       GUI_MEMDEV_Select
;;;64         if (pDevData->hUsage) 
00002c  f9b40018          LDRSH    r0,[r4,#0x18]
000030  b110              CBZ      r0,|L1.56|
;;;65           pUsage = GUI_USAGE_H2P(pDevData->hUsage);
000032  f7fffffe          BL       GUI_ALLOC_h2p
000036  4680              MOV      r8,r0
                  |L1.56|
;;;66         /* Get bounding rectangle */
;;;67         r.y0  = pDevData->y0;
000038  f9b40002          LDRSH    r0,[r4,#2]
00003c  f8ad000a          STRH     r0,[sp,#0xa]
;;;68         r.x0  = pDevData->x0;
000040  f9b41000          LDRSH    r1,[r4,#0]
000044  f8ad1008          STRH     r1,[sp,#8]
;;;69         r.x1  = pDevData->x0 + pDevData->XSize - 1;
000048  88a2              LDRH     r2,[r4,#4]
00004a  440a              ADD      r2,r2,r1
00004c  1e52              SUBS     r2,r2,#1
00004e  b215              SXTH     r5,r2
000050  f8ad500c          STRH     r5,[sp,#0xc]
;;;70         r.y1  = pDevData->y0 + pDevData->YSize - 1;
000054  88e2              LDRH     r2,[r4,#6]
000056  4402              ADD      r2,r2,r0
000058  1e52              SUBS     r2,r2,#1
00005a  b214              SXTH     r4,r2
00005c  f8ad400e          STRH     r4,[sp,#0xe]
000060  2200              MOVS     r2,#0                 ;48
;;;71         /* Make sure bounds are within LCD area so we can call driver directly */
;;;72         LCD_LIMIT(r.x0, <, 0);
000062  2900              CMP      r1,#0
000064  da01              BGE      |L1.106|
000066  f8ad2008          STRH     r2,[sp,#8]
                  |L1.106|
;;;73         LCD_LIMIT(r.y0, <, 0);
00006a  2800              CMP      r0,#0
00006c  da01              BGE      |L1.114|
00006e  f8ad200a          STRH     r2,[sp,#0xa]
                  |L1.114|
;;;74         LCD_LIMIT(r.x1, >, LCD_GET_XSIZE() - 1);
000072  f7fffffe          BL       LCD_GetXSize
000076  1e40              SUBS     r0,r0,#1
000078  42a8              CMP      r0,r5
00007a  da04              BGE      |L1.134|
00007c  f7fffffe          BL       LCD_GetXSize
000080  1e40              SUBS     r0,r0,#1
000082  f8ad000c          STRH     r0,[sp,#0xc]
                  |L1.134|
;;;75         LCD_LIMIT(r.y1, >, LCD_GET_YSIZE() - 1);
000086  f7fffffe          BL       LCD_GetYSize
00008a  1e40              SUBS     r0,r0,#1
00008c  42a0              CMP      r0,r4
00008e  da04              BGE      |L1.154|
000090  f7fffffe          BL       LCD_GetYSize
000094  1e40              SUBS     r0,r0,#1
000096  f8ad000e          STRH     r0,[sp,#0xe]
                  |L1.154|
;;;76         XMax = r.x1;
00009a  f9bd700c          LDRSH    r7,[sp,#0xc]
;;;77         for (y = r.y0; y <= r.y1; y++) {
00009e  f9bd600a          LDRSH    r6,[sp,#0xa]
0000a2  f9bda00e          LDRSH    r10,[sp,#0xe]
0000a6  45b2              CMP      r10,r6
0000a8  db24              BLT      |L1.244|
0000aa  f9bd9008          LDRSH    r9,[sp,#8]
;;;78           int x = r.x0;
;;;79           LCD_PIXELINDEX* pData = (LCD_PIXELINDEX*)GUI_MEMDEV__XY2PTR(x,y);
;;;80           if (pUsage) 
;;;81             GUI_USAGE_AddHLine(pUsage, x, y, r.x1 - r.x0 + 1);
0000ae  eba70b09          SUB      r11,r7,r9
                  |L1.178|
0000b2  464c              MOV      r4,r9                 ;78
0000b4  4631              MOV      r1,r6                 ;79
0000b6  4620              MOV      r0,r4                 ;79
0000b8  f7fffffe          BL       GUI_MEMDEV__XY2PTR
0000bc  4605              MOV      r5,r0                 ;79
0000be  f1b80f00          CMP      r8,#0                 ;80
0000c2  d009              BEQ      |L1.216|
0000c4  f8d80008          LDR      r0,[r8,#8]
0000c8  f10b0301          ADD      r3,r11,#1
0000cc  4632              MOV      r2,r6
0000ce  f8d0c004          LDR      r12,[r0,#4]
0000d2  4649              MOV      r1,r9
0000d4  4640              MOV      r0,r8
0000d6  47e0              BLX      r12
                  |L1.216|
;;;82           for (; x <= XMax; x++) {
0000d8  42bc              CMP      r4,r7
0000da  dc08              BGT      |L1.238|
                  |L1.220|
;;;83             *pData++ = LCD_L0_GetPixelIndex(x, y);
0000dc  4631              MOV      r1,r6
0000de  4620              MOV      r0,r4
0000e0  f7fffffe          BL       LCD_L0_GetPixelIndex
0000e4  f8250b02          STRH     r0,[r5],#2
0000e8  1c64              ADDS     r4,r4,#1              ;82
0000ea  42bc              CMP      r4,r7                 ;82
0000ec  ddf6              BLE      |L1.220|
                  |L1.238|
0000ee  1c76              ADDS     r6,r6,#1              ;77
0000f0  45b2              CMP      r10,r6                ;77
0000f2  dade              BGE      |L1.178|
                  |L1.244|
;;;84           }
;;;85         }
;;;86         GUI_MEMDEV_Select(hMemOld);
0000f4  9801              LDR      r0,[sp,#4]
0000f6  b005              ADD      sp,sp,#0x14
0000f8  e8bd4ff0          POP      {r4-r11,lr}
0000fc  f7ffbffe          B.W      GUI_MEMDEV_Select
                  |L1.256|
;;;87       }
;;;88     }
000100  b005              ADD      sp,sp,#0x14
000102  e8bd8ff0          POP      {r4-r11,pc}
;;;89     
                          ENDP

000106  0000              DCW      0x0000
                  |L1.264|
                          DCD      GUI_Context
