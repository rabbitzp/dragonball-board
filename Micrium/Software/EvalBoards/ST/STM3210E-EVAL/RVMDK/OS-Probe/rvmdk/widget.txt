; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\widget.o --depend=.\rvmdk\widget.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\widget.crf ..\..\..\..\..\uCGUI\GUI\Widget\WIDGET.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _UpdateChildPostions PROC
;;;49     */
;;;50     static void _UpdateChildPostions(WM_HWIN hObj, int Diff) {
000000  b538              PUSH     {r3-r5,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;51       WM_Obj* pObj;
;;;52       WM_LOCK();
000006  f7fffffe          BL       GUI_Lock
;;;53       pObj = (WM_Obj*)WM_H2P(hObj);
00000a  4628              MOV      r0,r5
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;54       WM__UpdateChildPositions(pObj, -Diff, -Diff, Diff, Diff);
000010  4262              RSBS     r2,r4,#0
000012  4623              MOV      r3,r4
000014  4611              MOV      r1,r2
000016  9400              STR      r4,[sp,#0]
000018  f7fffffe          BL       WM__UpdateChildPositions
;;;55       WM_UNLOCK();
00001c  e8bd4038          POP      {r3-r5,lr}
000020  f7ffbffe          B.W      GUI_Unlock
;;;56     }
;;;57     
                          ENDP

                  _EffectRequiresRedraw PROC
;;;67     */
;;;68     static int _EffectRequiresRedraw(const WIDGET* pWidget, const GUI_RECT * pRect) {
000024  b530              PUSH     {r4,r5,lr}
000026  b083              SUB      sp,sp,#0xc
000028  460d              MOV      r5,r1
;;;69       int EffectSize = pWidget->pEffect->EffectSize;
00002a  6a01              LDR      r1,[r0,#0x20]
00002c  694c              LDR      r4,[r1,#0x14]
;;;70       GUI_RECT InvalidRect;
;;;71       InvalidRect = pWidget->Win.InvalidRect;
00002e  68c2              LDR      r2,[r0,#0xc]
000030  6881              LDR      r1,[r0,#8]
000032  9201              STR      r2,[sp,#4]
000034  9100              STR      r1,[sp,#0]
;;;72       WM__Screen2Client(&pWidget->Win, &InvalidRect);
000036  4669              MOV      r1,sp
000038  f7fffffe          BL       WM__Screen2Client
;;;73       /* Check if there a part of the effect is inside the invalid rectangle */
;;;74       if ((pRect->x0 + EffectSize) > InvalidRect.x0) {
00003c  f9b50000          LDRSH    r0,[r5,#0]
000040  f9bd1000          LDRSH    r1,[sp,#0]
000044  4420              ADD      r0,r0,r4
000046  4288              CMP      r0,r1
000048  dd02              BLE      |L1.80|
;;;75         return 1;               /* Overlap ... Drawing required */
;;;76       }
;;;77       if ((pRect->x1 - EffectSize) < InvalidRect.x1) {
;;;78         return 1;               /* Overlap ... Drawing required */
;;;79       }
;;;80       if ((pRect->y0 + EffectSize) > InvalidRect.y0) {
;;;81         return 1;               /* Overlap ... Drawing required */
;;;82       }
;;;83       if ((pRect->y1 - EffectSize) < InvalidRect.y1) {
;;;84         return 1;               /* Overlap ... Drawing required */
;;;85       }
;;;86       return 0;                 /* No overlap ! */
;;;87     }
00004a  b003              ADD      sp,sp,#0xc
00004c  2001              MOVS     r0,#1                 ;75
00004e  bd30              POP      {r4,r5,pc}
                  |L1.80|
000050  f9b50004          LDRSH    r0,[r5,#4]            ;77
000054  f9bd1004          LDRSH    r1,[sp,#4]            ;77
000058  1b00              SUBS     r0,r0,r4              ;77
00005a  4288              CMP      r0,r1                 ;77
00005c  da02              BGE      |L1.100|
00005e  b003              ADD      sp,sp,#0xc
000060  2001              MOVS     r0,#1                 ;78
000062  bd30              POP      {r4,r5,pc}
                  |L1.100|
000064  f9b50002          LDRSH    r0,[r5,#2]            ;80
000068  f9bd1002          LDRSH    r1,[sp,#2]            ;80
00006c  4420              ADD      r0,r0,r4              ;80
00006e  4288              CMP      r0,r1                 ;80
000070  dd02              BLE      |L1.120|
000072  b003              ADD      sp,sp,#0xc
000074  2001              MOVS     r0,#1                 ;81
000076  bd30              POP      {r4,r5,pc}
                  |L1.120|
000078  f9b50006          LDRSH    r0,[r5,#6]            ;83
00007c  f9bd1006          LDRSH    r1,[sp,#6]            ;83
000080  1b00              SUBS     r0,r0,r4              ;83
000082  4288              CMP      r0,r1                 ;83
000084  da02              BGE      |L1.140|
000086  b003              ADD      sp,sp,#0xc
000088  2001              MOVS     r0,#1                 ;84
00008a  bd30              POP      {r4,r5,pc}
                  |L1.140|
00008c  b003              ADD      sp,sp,#0xc
00008e  2000              MOVS     r0,#0                 ;86
000090  bd30              POP      {r4,r5,pc}
;;;88     
                          ENDP

                  WIDGET__RotateRect90 PROC
;;;99     */
;;;100    void WIDGET__RotateRect90(WIDGET* pWidget, GUI_RECT* pDest, const GUI_RECT* pRect) {
000092  b410              PUSH     {r4}
;;;101      int x0, x1, XSize;
;;;102      x0 = pRect->x0;
000094  8813              LDRH     r3,[r2,#0]
;;;103      x1 = pRect->x1;
000096  f8b2c004          LDRH     r12,[r2,#4]
;;;104      XSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
00009a  8884              LDRH     r4,[r0,#4]
00009c  8800              LDRH     r0,[r0,#0]
00009e  1a20              SUBS     r0,r4,r0
;;;105      pDest->x0 = XSize - pRect->y1;
0000a0  88d4              LDRH     r4,[r2,#6]
0000a2  1b04              SUBS     r4,r0,r4
0000a4  800c              STRH     r4,[r1,#0]
;;;106      pDest->x1 = XSize - pRect->y0;
0000a6  8852              LDRH     r2,[r2,#2]
0000a8  1a80              SUBS     r0,r0,r2
0000aa  8088              STRH     r0,[r1,#4]
;;;107      pDest->y0 = x0;
0000ac  804b              STRH     r3,[r1,#2]
;;;108      pDest->y1 = x1;
0000ae  f8a1c006          STRH     r12,[r1,#6]
;;;109    
;;;110    }
0000b2  bc10              POP      {r4}
0000b4  4770              BX       lr
;;;111    
                          ENDP

                  WIDGET__GetClientRect PROC
;;;119    */
;;;120    void WIDGET__GetClientRect(WIDGET* pWidget, GUI_RECT* pRect) {
0000b6  b510              PUSH     {r4,lr}
0000b8  b082              SUB      sp,sp,#8
0000ba  460c              MOV      r4,r1
;;;121      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0000bc  8cc0              LDRH     r0,[r0,#0x26]
0000be  f0100f08          TST      r0,#8
0000c2  d010              BEQ      |L1.230|
;;;122        GUI_RECT Rect;
;;;123        WM_GetClientRect(&Rect);
0000c4  4668              MOV      r0,sp
0000c6  f7fffffe          BL       WM_GetClientRect
;;;124        pRect->x0 = Rect.y0;
0000ca  f8bd0002          LDRH     r0,[sp,#2]
0000ce  8020              STRH     r0,[r4,#0]
;;;125        pRect->x1 = Rect.y1;
0000d0  f8bd0006          LDRH     r0,[sp,#6]
0000d4  80a0              STRH     r0,[r4,#4]
;;;126        pRect->y0 = Rect.x0;
0000d6  f8bd0000          LDRH     r0,[sp,#0]
0000da  8060              STRH     r0,[r4,#2]
;;;127        pRect->y1 = Rect.x1;
0000dc  f8bd0004          LDRH     r0,[sp,#4]
0000e0  80e0              STRH     r0,[r4,#6]
;;;128      } else {
;;;129        WM_GetClientRect(pRect);
;;;130      }
;;;131    }
0000e2  b002              ADD      sp,sp,#8
0000e4  bd10              POP      {r4,pc}
                  |L1.230|
0000e6  b002              ADD      sp,sp,#8              ;129
0000e8  4620              MOV      r0,r4                 ;129
0000ea  e8bd4010          POP      {r4,lr}               ;129
0000ee  f7ffbffe          B.W      WM_GetClientRect
;;;132    
                          ENDP

                  WIDGET__GetBkColor PROC
;;;136    */
;;;137    GUI_COLOR WIDGET__GetBkColor(WM_HWIN hObj) {
0000f2  b510              PUSH     {r4,lr}
;;;138      GUI_COLOR BkColor = WM_GetBkColor(WM_GetParent(hObj));
0000f4  f7fffffe          BL       WM_GetParent
0000f8  f7fffffe          BL       WM_GetBkColor
;;;139      if (BkColor == GUI_INVALID_COLOR) {
0000fc  f06f4170          MVN      r1,#0xf0000000
000100  4288              CMP      r0,r1
000102  d103              BNE      |L1.268|
;;;140        BkColor = DIALOG_GetBkColor();
000104  e8bd4010          POP      {r4,lr}
000108  f7ffbffe          B.W      DIALOG_GetBkColor
                  |L1.268|
;;;141      }
;;;142      return BkColor;
;;;143    }
00010c  bd10              POP      {r4,pc}
;;;144    
                          ENDP

                  WIDGET__GetInsideRect PROC
;;;148    */
;;;149    void WIDGET__GetInsideRect(WIDGET* pWidget, GUI_RECT* pRect) {
00010e  b570              PUSH     {r4-r6,lr}
000110  4604              MOV      r4,r0
000112  460d              MOV      r5,r1
;;;150      WM__GetClientRectWin(&pWidget->Win, pRect);
000114  4629              MOV      r1,r5
000116  4620              MOV      r0,r4
000118  f7fffffe          BL       WM__GetClientRectWin
;;;151      GUI__ReduceRect(pRect, pRect, pWidget->pEffect->EffectSize);
00011c  6a20              LDR      r0,[r4,#0x20]
00011e  4629              MOV      r1,r5
000120  6942              LDR      r2,[r0,#0x14]
000122  4628              MOV      r0,r5
000124  e8bd4070          POP      {r4-r6,lr}
000128  f7ffbffe          B.W      GUI__ReduceRect
;;;152    }
;;;153    
                          ENDP

                  WIDGET__GetXSize PROC
;;;157    */
;;;158    int WIDGET__GetXSize(const WIDGET* pWidget) {
00012c  8cc1              LDRH     r1,[r0,#0x26]
;;;159      int r;
;;;160      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00012e  f0110f08          TST      r1,#8
000132  d005              BEQ      |L1.320|
;;;161        r = pWidget->Win.Rect.y1 - pWidget->Win.Rect.y0;
000134  f9b01006          LDRSH    r1,[r0,#6]
000138  f9b00002          LDRSH    r0,[r0,#2]
00013c  1a08              SUBS     r0,r1,r0
00013e  e004              B        |L1.330|
                  |L1.320|
;;;162      } else {
;;;163        r = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
000140  f9b01004          LDRSH    r1,[r0,#4]
000144  f9b00000          LDRSH    r0,[r0,#0]
000148  1a08              SUBS     r0,r1,r0
                  |L1.330|
;;;164      }
;;;165      return r + 1;
00014a  1c40              ADDS     r0,r0,#1
;;;166    }
00014c  4770              BX       lr
;;;167    
                          ENDP

                  WIDGET__GetYSize PROC
;;;171    */
;;;172    int WIDGET__GetYSize(const WIDGET* pWidget) {
00014e  8cc1              LDRH     r1,[r0,#0x26]
;;;173      int r;
;;;174      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000150  f0110f08          TST      r1,#8
000154  d005              BEQ      |L1.354|
;;;175        r = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
000156  f9b01004          LDRSH    r1,[r0,#4]
00015a  f9b00000          LDRSH    r0,[r0,#0]
00015e  1a08              SUBS     r0,r1,r0
000160  e004              B        |L1.364|
                  |L1.354|
;;;176      } else {
;;;177        r = pWidget->Win.Rect.y1 - pWidget->Win.Rect.y0;
000162  f9b01006          LDRSH    r1,[r0,#6]
000166  f9b00002          LDRSH    r0,[r0,#2]
00016a  1a08              SUBS     r0,r1,r0
                  |L1.364|
;;;178      }
;;;179      return r + 1;
00016c  1c40              ADDS     r0,r0,#1
;;;180    }
00016e  4770              BX       lr
;;;181    
                          ENDP

                  WIDGET__GetWindowSizeX PROC
;;;187    */
;;;188    int WIDGET__GetWindowSizeX(WM_HWIN hWin) {
000170  b510              PUSH     {r4,lr}
000172  4604              MOV      r4,r0
;;;189      WIDGET* pWidget = WIDGET_H2P(hWin);
000174  4620              MOV      r0,r4
000176  f7fffffe          BL       GUI_ALLOC_h2p
;;;190      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00017a  8cc0              LDRH     r0,[r0,#0x26]
00017c  f0100f08          TST      r0,#8
000180  d004              BEQ      |L1.396|
;;;191        return WM_GetWindowSizeY(hWin);
000182  4620              MOV      r0,r4
000184  e8bd4010          POP      {r4,lr}
000188  f7ffbffe          B.W      WM_GetWindowSizeY
                  |L1.396|
;;;192      } else {
;;;193        return WM_GetWindowSizeX(hWin);
00018c  4620              MOV      r0,r4
00018e  e8bd4010          POP      {r4,lr}
000192  f7ffbffe          B.W      WM_GetWindowSizeX
;;;194      }
;;;195    }
;;;196    
                          ENDP

                  WIDGET_SetState PROC
;;;200    */
;;;201    void WIDGET_SetState(WM_HWIN hObj, int State) {
000196  b570              PUSH     {r4-r6,lr}
000198  4605              MOV      r5,r0
00019a  460c              MOV      r4,r1
;;;202      WIDGET* pWidget;
;;;203      WM_LOCK();
00019c  f7fffffe          BL       GUI_Lock
;;;204      pWidget = WIDGET_H2P(hObj);
0001a0  4628              MOV      r0,r5
0001a2  f7fffffe          BL       GUI_ALLOC_h2p
;;;205      if (State != pWidget->State) {
0001a6  8cc1              LDRH     r1,[r0,#0x26]
0001a8  42a1              CMP      r1,r4
0001aa  d003              BEQ      |L1.436|
;;;206        pWidget->State = State;
0001ac  84c4              STRH     r4,[r0,#0x26]
;;;207        WM_Invalidate(hObj);
0001ae  4628              MOV      r0,r5
0001b0  f7fffffe          BL       WM_InvalidateWindow
                  |L1.436|
;;;208      }
;;;209      WM_UNLOCK();
0001b4  e8bd4070          POP      {r4-r6,lr}
0001b8  f7ffbffe          B.W      GUI_Unlock
;;;210    }
;;;211    
                          ENDP

                  WIDGET_GetState PROC
;;;215    */
;;;216    int WIDGET_GetState(WM_HWIN hObj) {
0001bc  b570              PUSH     {r4-r6,lr}
0001be  4605              MOV      r5,r0
;;;217      int Ret = 0;
0001c0  2400              MOVS     r4,#0
;;;218      WIDGET * pWidget;
;;;219      if (hObj) {
0001c2  b13d              CBZ      r5,|L1.468|
;;;220        WM_LOCK();
0001c4  f7fffffe          BL       GUI_Lock
;;;221        pWidget = WIDGET_H2P(hObj);
0001c8  4628              MOV      r0,r5
0001ca  f7fffffe          BL       GUI_ALLOC_h2p
;;;222        Ret = pWidget->State;
0001ce  8cc4              LDRH     r4,[r0,#0x26]
;;;223        WM_UNLOCK();
0001d0  f7fffffe          BL       GUI_Unlock
                  |L1.468|
;;;224      }
;;;225      return Ret;
0001d4  4620              MOV      r0,r4
;;;226    }
0001d6  bd70              POP      {r4-r6,pc}
;;;227    
                          ENDP

                  WIDGET_OrState PROC
;;;231    */
;;;232    void WIDGET_OrState(WM_HWIN hObj, int State) {
0001d8  b570              PUSH     {r4-r6,lr}
0001da  4605              MOV      r5,r0
0001dc  460c              MOV      r4,r1
;;;233      if (hObj) {
0001de  2d00              CMP      r5,#0
0001e0  d012              BEQ      |L1.520|
;;;234        WIDGET* pWidget;
;;;235        WM_LOCK();
0001e2  f7fffffe          BL       GUI_Lock
;;;236        pWidget = WIDGET_H2P(hObj);
0001e6  4628              MOV      r0,r5
0001e8  f7fffffe          BL       GUI_ALLOC_h2p
;;;237        if (State != (pWidget->State & State)) {
0001ec  8cc2              LDRH     r2,[r0,#0x26]
0001ee  ea340102          BICS     r1,r4,r2
0001f2  d005              BEQ      |L1.512|
;;;238          pWidget->State |= State;
0001f4  ea420104          ORR      r1,r2,r4
0001f8  84c1              STRH     r1,[r0,#0x26]
;;;239          WM_Invalidate(hObj);
0001fa  4628              MOV      r0,r5
0001fc  f7fffffe          BL       WM_InvalidateWindow
                  |L1.512|
;;;240        }
;;;241        WM_UNLOCK();
000200  e8bd4070          POP      {r4-r6,lr}
000204  f7ffbffe          B.W      GUI_Unlock
                  |L1.520|
;;;242      }
;;;243    }
000208  bd70              POP      {r4-r6,pc}
;;;244    
                          ENDP

                  WIDGET_AndState PROC
;;;255    */
;;;256    void WIDGET_AndState(WM_HWIN hObj, int Mask) {
00020a  b570              PUSH     {r4-r6,lr}
00020c  4604              MOV      r4,r0
00020e  460d              MOV      r5,r1
;;;257      U16 StateNew;
;;;258      if (hObj) {
000210  2c00              CMP      r4,#0
000212  d011              BEQ      |L1.568|
;;;259        WIDGET* pWidget;
;;;260        WM_LOCK();
000214  f7fffffe          BL       GUI_Lock
;;;261        pWidget = WIDGET_H2P(hObj);
000218  4620              MOV      r0,r4
00021a  f7fffffe          BL       GUI_ALLOC_h2p
;;;262        StateNew = pWidget->State & (~Mask);
00021e  8cc2              LDRH     r2,[r0,#0x26]
000220  ea220105          BIC      r1,r2,r5
;;;263        if (pWidget->State != StateNew) {
000224  428a              CMP      r2,r1
000226  d003              BEQ      |L1.560|
;;;264          pWidget->State = StateNew;
000228  84c1              STRH     r1,[r0,#0x26]
;;;265          WM_Invalidate(hObj);
00022a  4620              MOV      r0,r4
00022c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.560|
;;;266        }
;;;267        WM_UNLOCK();
000230  e8bd4070          POP      {r4-r6,lr}
000234  f7ffbffe          B.W      GUI_Unlock
                  |L1.568|
;;;268      }
;;;269    }
000238  bd70              POP      {r4-r6,pc}
;;;270    
                          ENDP

                  WIDGET__Init PROC
;;;274    */
;;;275    void WIDGET__Init(WIDGET* pWidget, int Id, U16 State) {
00023a  4b8c              LDR      r3,|L1.1132|
;;;276      pWidget->pEffect       = _pEffectDefault;
00023c  681b              LDR      r3,[r3,#0]  ; _pEffectDefault
00023e  6203              STR      r3,[r0,#0x20]
;;;277      pWidget->State         = State;
000240  84c2              STRH     r2,[r0,#0x26]
;;;278      pWidget->Id            = Id;
000242  8481              STRH     r1,[r0,#0x24]
;;;279    }
000244  4770              BX       lr
;;;280    
                          ENDP

                  WIDGET_HandleActive PROC
;;;285    */
;;;286    int WIDGET_HandleActive(WM_HWIN hObj, WM_MESSAGE* pMsg) {
000246  b570              PUSH     {r4-r6,lr}
000248  4605              MOV      r5,r0
00024a  460c              MOV      r4,r1
;;;287      int Diff, Notification;
;;;288      WIDGET* pWidget = WIDGET_H2P(hObj);
00024c  4628              MOV      r0,r5
00024e  f7fffffe          BL       GUI_ALLOC_h2p
;;;289      switch (pMsg->MsgId) {
000252  6821              LDR      r1,[r4,#0]
000254  2916              CMP      r1,#0x16
000256  d038              BEQ      |L1.714|
000258  dc08              BGT      |L1.620|
00025a  290d              CMP      r1,#0xd
00025c  d02b              BEQ      |L1.694|
00025e  2911              CMP      r1,#0x11
000260  d01e              BEQ      |L1.672|
000262  2914              CMP      r1,#0x14
000264  d054              BEQ      |L1.784|
000266  2915              CMP      r1,#0x15
000268  d157              BNE      |L1.794|
00026a  e014              B        |L1.662|
                  |L1.620|
00026c  291e              CMP      r1,#0x1e
00026e  d030              BEQ      |L1.722|
000270  291f              CMP      r1,#0x1f
000272  d046              BEQ      |L1.770|
000274  f5b17f40          CMP      r1,#0x300
000278  d14f              BNE      |L1.794|
;;;290      case WM_WIDGET_SET_EFFECT:
;;;291        Diff = pWidget->pEffect->EffectSize;
00027a  6a01              LDR      r1,[r0,#0x20]
00027c  694a              LDR      r2,[r1,#0x14]
;;;292        pWidget->pEffect = (const WIDGET_EFFECT*)pMsg->Data.p;
00027e  68a1              LDR      r1,[r4,#8]
000280  6201              STR      r1,[r0,#0x20]
;;;293        Diff -= pWidget->pEffect->EffectSize;
000282  6948              LDR      r0,[r1,#0x14]
000284  1a11              SUBS     r1,r2,r0
;;;294        _UpdateChildPostions(hObj, Diff);
000286  4628              MOV      r0,r5
000288  f7fffffe          BL       _UpdateChildPostions
;;;295        WM_InvalidateWindow(hObj);
00028c  4628              MOV      r0,r5
00028e  f7fffffe          BL       WM_InvalidateWindow
;;;296        return 0;                        /* Message handled -> Return */
000292  2000              MOVS     r0,#0
;;;297      case WM_GET_ID:
;;;298        pMsg->Data.v = pWidget->Id;
;;;299        return 0;                        /* Message handled -> Return */
;;;300      case WM_PID_STATE_CHANGED:
;;;301        if (pWidget->State & WIDGET_STATE_FOCUSSABLE) {
;;;302          const WM_PID_STATE_CHANGED_INFO * pInfo = (const WM_PID_STATE_CHANGED_INFO*)pMsg->Data.p;
;;;303          if (pInfo->State) {
;;;304            WM_SetFocus(hObj);
;;;305          }
;;;306        }
;;;307        break;
;;;308      case WM_TOUCH_CHILD:
;;;309        /* A descendent (child) has been touched or released.
;;;310           If it has been touched, we need to get to top.
;;;311         */
;;;312        {
;;;313          const WM_MESSAGE * pMsgOrg;
;;;314          const GUI_PID_STATE * pState;
;;;315          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;316          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;317          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;318            if (pState->Pressed) {
;;;319              WM_BringToTop(hObj);
;;;320              return 0;                    /* Message handled -> Return */
;;;321            }
;;;322          }
;;;323        }
;;;324        break;
;;;325      case WM_SET_ID:
;;;326        pWidget->Id = pMsg->Data.v;
;;;327        return 0;                        /* Message handled -> Return */
;;;328      case WM_SET_FOCUS:
;;;329        if (pMsg->Data.v == 1) {
;;;330          WIDGET_SetState(hObj, pWidget->State |  WIDGET_STATE_FOCUS);
;;;331          Notification = WM_NOTIFICATION_GOT_FOCUS;
;;;332        } else {
;;;333          WIDGET_SetState(hObj, pWidget->State & ~WIDGET_STATE_FOCUS);
;;;334          Notification = WM_NOTIFICATION_LOST_FOCUS;
;;;335        }
;;;336        WM_NotifyParent(hObj, Notification);
;;;337        pMsg->Data.v = 0;   /* Focus change accepted */
;;;338        return 0;
;;;339      case WM_GET_ACCEPT_FOCUS:
;;;340        pMsg->Data.v = (pWidget->State & WIDGET_STATE_FOCUSSABLE) ? 1 : 0;               /* Can handle focus */
;;;341        return 0;                         /* Message handled */
;;;342      case WM_GET_INSIDE_RECT:
;;;343        WIDGET__GetInsideRect(pWidget, (GUI_RECT*)pMsg->Data.p);
;;;344        return 0;                         /* Message handled */
;;;345      }
;;;346      return 1;                           /* Message NOT handled */
;;;347    }
000294  bd70              POP      {r4-r6,pc}
                  |L1.662|
000296  f9b00024          LDRSH    r0,[r0,#0x24]         ;298
00029a  60a0              STR      r0,[r4,#8]            ;298
00029c  2000              MOVS     r0,#0                 ;299
00029e  bd70              POP      {r4-r6,pc}
                  |L1.672|
0002a0  8cc0              LDRH     r0,[r0,#0x26]         ;301
0002a2  f0100f10          TST      r0,#0x10              ;301
0002a6  d038              BEQ      |L1.794|
0002a8  68a0              LDR      r0,[r4,#8]            ;302
0002aa  7a00              LDRB     r0,[r0,#8]            ;303
0002ac  b378              CBZ      r0,|L1.782|
0002ae  4628              MOV      r0,r5                 ;304
0002b0  f7fffffe          BL       WM_SetFocus
0002b4  e031              B        |L1.794|
                  |L1.694|
0002b6  68a0              LDR      r0,[r4,#8]            ;315
0002b8  6880              LDR      r0,[r0,#8]            ;316
0002ba  b340              CBZ      r0,|L1.782|
0002bc  7a00              LDRB     r0,[r0,#8]            ;318
0002be  b330              CBZ      r0,|L1.782|
0002c0  4628              MOV      r0,r5                 ;319
0002c2  f7fffffe          BL       WM_BringToTop
0002c6  2000              MOVS     r0,#0                 ;320
0002c8  bd70              POP      {r4-r6,pc}
                  |L1.714|
0002ca  68a1              LDR      r1,[r4,#8]            ;326
0002cc  8481              STRH     r1,[r0,#0x24]         ;326
0002ce  2000              MOVS     r0,#0                 ;327
0002d0  bd70              POP      {r4-r6,pc}
                  |L1.722|
0002d2  68a1              LDR      r1,[r4,#8]            ;329
0002d4  2901              CMP      r1,#1                 ;329
0002d6  d00c              BEQ      |L1.754|
0002d8  8cc0              LDRH     r0,[r0,#0x26]         ;333
0002da  f0200101          BIC      r1,r0,#1              ;333
0002de  4628              MOV      r0,r5                 ;333
0002e0  f7fffffe          BL       WIDGET_SetState
0002e4  2109              MOVS     r1,#9                 ;334
                  |L1.742|
0002e6  4628              MOV      r0,r5                 ;336
0002e8  f7fffffe          BL       WM_NotifyParent
0002ec  2000              MOVS     r0,#0                 ;337
0002ee  60a0              STR      r0,[r4,#8]            ;337
0002f0  bd70              POP      {r4-r6,pc}
                  |L1.754|
0002f2  8cc0              LDRH     r0,[r0,#0x26]         ;330
0002f4  f0400101          ORR      r1,r0,#1              ;330
0002f8  4628              MOV      r0,r5                 ;330
0002fa  f7fffffe          BL       WIDGET_SetState
0002fe  2108              MOVS     r1,#8                 ;331
000300  e7f1              B        |L1.742|
                  |L1.770|
000302  8cc0              LDRH     r0,[r0,#0x26]         ;340
000304  f3c01000          UBFX     r0,r0,#4,#1           ;340
000308  60a0              STR      r0,[r4,#8]            ;340
00030a  2000              MOVS     r0,#0                 ;341
00030c  bd70              POP      {r4-r6,pc}
                  |L1.782|
00030e  e004              B        |L1.794|
                  |L1.784|
000310  68a1              LDR      r1,[r4,#8]            ;343
000312  f7fffffe          BL       WIDGET__GetInsideRect
000316  2000              MOVS     r0,#0                 ;344
000318  bd70              POP      {r4-r6,pc}
                  |L1.794|
00031a  2001              MOVS     r0,#1                 ;346
00031c  bd70              POP      {r4-r6,pc}
;;;348    
                          ENDP

                  WIDGET__SetScrollState PROC
;;;352    */
;;;353    void WIDGET__SetScrollState(WM_HWIN hWin, const WM_SCROLL_STATE* pVState, const WM_SCROLL_STATE* pHState) {
00031e  b570              PUSH     {r4-r6,lr}
000320  4605              MOV      r5,r0
000322  460e              MOV      r6,r1
000324  4614              MOV      r4,r2
;;;354      WM_HWIN hScroll;
;;;355      /* vertical scrollbar */
;;;356      hScroll = WM_GetDialogItem(hWin, GUI_ID_VSCROLL);
000326  21fe              MOVS     r1,#0xfe
000328  4628              MOV      r0,r5
00032a  f7fffffe          BL       WM_GetDialogItem
;;;357      WM_SetScrollState(hScroll, pVState);
00032e  4631              MOV      r1,r6
000330  f7fffffe          BL       WM_SetScrollState
;;;358      /* horizontal scrollbar */
;;;359      hScroll = WM_GetDialogItem(hWin, GUI_ID_HSCROLL);
000334  21ff              MOVS     r1,#0xff
000336  4628              MOV      r0,r5
000338  f7fffffe          BL       WM_GetDialogItem
;;;360      WM_SetScrollState(hScroll, pHState);
00033c  4621              MOV      r1,r4
00033e  e8bd4070          POP      {r4-r6,lr}
000342  f7ffbffe          B.W      WM_SetScrollState
;;;361    }
;;;362    
                          ENDP

                  WIDGET__DrawFocusRect PROC
;;;366    */
;;;367    void WIDGET__DrawFocusRect(WIDGET* pWidget, const GUI_RECT* pRect, int Dist) {
000346  b510              PUSH     {r4,lr}
000348  b082              SUB      sp,sp,#8
00034a  4603              MOV      r3,r0
00034c  4608              MOV      r0,r1
00034e  4614              MOV      r4,r2
;;;368      GUI_RECT Rect;
;;;369      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000350  8cd9              LDRH     r1,[r3,#0x26]
000352  f0110f08          TST      r1,#8
000356  d005              BEQ      |L1.868|
;;;370        WIDGET__RotateRect90(pWidget, &Rect, pRect);
000358  4602              MOV      r2,r0
00035a  4669              MOV      r1,sp
00035c  4618              MOV      r0,r3
00035e  f7fffffe          BL       WIDGET__RotateRect90
;;;371        pRect = &Rect;
000362  4668              MOV      r0,sp
                  |L1.868|
;;;372      }
;;;373      GUI_DrawFocusRect(pRect, Dist);
000364  4621              MOV      r1,r4
000366  f7fffffe          BL       GUI_DrawFocusRect
;;;374    }
00036a  b002              ADD      sp,sp,#8
00036c  bd10              POP      {r4,pc}
;;;375    
                          ENDP

                  WIDGET__DrawVLine PROC
;;;379    */
;;;380    void WIDGET__DrawVLine(WIDGET* pWidget, int x, int y0, int y1) {
00036e  b510              PUSH     {r4,lr}
000370  b084              SUB      sp,sp,#0x10
000372  4684              MOV      r12,r0
000374  4608              MOV      r0,r1
000376  4611              MOV      r1,r2
000378  461a              MOV      r2,r3
;;;381      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00037a  f8bc4026          LDRH     r4,[r12,#0x26]
00037e  f0140f08          TST      r4,#8
000382  d016              BEQ      |L1.946|
;;;382        GUI_RECT r0, r1;
;;;383        r0.x0 = x;
000384  f8ad0008          STRH     r0,[sp,#8]
;;;384        r0.x1 = x;
000388  f8ad000c          STRH     r0,[sp,#0xc]
;;;385        r0.y0 = y0;
00038c  f8ad100a          STRH     r1,[sp,#0xa]
;;;386        r0.y1 = y1;
000390  f8ad200e          STRH     r2,[sp,#0xe]
;;;387        WIDGET__RotateRect90(pWidget, &r1, &r0);
000394  aa02              ADD      r2,sp,#8
000396  4669              MOV      r1,sp
000398  4660              MOV      r0,r12
00039a  f7fffffe          BL       WIDGET__RotateRect90
;;;388        GUI_DrawHLine(r1.y0, r1.x0, r1.x1);
00039e  f9bd2004          LDRSH    r2,[sp,#4]
0003a2  f9bd1000          LDRSH    r1,[sp,#0]
0003a6  f9bd0002          LDRSH    r0,[sp,#2]
0003aa  f7fffffe          BL       GUI_DrawHLine
;;;389      } else {
;;;390        GUI_DrawVLine(x, y0, y1);
;;;391      }
;;;392    }
0003ae  b004              ADD      sp,sp,#0x10
0003b0  bd10              POP      {r4,pc}
                  |L1.946|
0003b2  b004              ADD      sp,sp,#0x10           ;390
0003b4  e8bd4010          POP      {r4,lr}               ;390
0003b8  f7ffbffe          B.W      GUI_DrawVLine
;;;393    
                          ENDP

                  WIDGET__FillRectEx PROC
;;;397    */
;;;398    void WIDGET__FillRectEx(WIDGET* pWidget, const GUI_RECT* pRect) {
0003bc  b500              PUSH     {lr}
0003be  b083              SUB      sp,sp,#0xc
0003c0  4603              MOV      r3,r0
0003c2  4608              MOV      r0,r1
;;;399      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0003c4  f8b3c026          LDRH     r12,[r3,#0x26]
0003c8  f01c0f08          TST      r12,#8
0003cc  d005              BEQ      |L1.986|
;;;400        GUI_RECT r;
;;;401        WIDGET__RotateRect90(pWidget, &r, pRect);
0003ce  4602              MOV      r2,r0
0003d0  4669              MOV      r1,sp
0003d2  4618              MOV      r0,r3
0003d4  f7fffffe          BL       WIDGET__RotateRect90
;;;402        pRect = &r;
0003d8  4668              MOV      r0,sp
                  |L1.986|
;;;403      }
;;;404      GUI_FillRectEx(pRect);
0003da  b003              ADD      sp,sp,#0xc
0003dc  f85deb04          POP      {lr}
0003e0  f7ffbffe          B.W      GUI_FillRectEx
;;;405    }
;;;406    
                          ENDP

                  WIDGET__EFFECT_DrawDownRect PROC
;;;410    */
;;;411    void WIDGET__EFFECT_DrawDownRect(WIDGET* pWidget, GUI_RECT* pRect) {
0003e4  b530              PUSH     {r4,r5,lr}
0003e6  b083              SUB      sp,sp,#0xc
0003e8  4605              MOV      r5,r0
0003ea  460c              MOV      r4,r1
;;;412      GUI_RECT Rect;
;;;413      if (pRect == NULL) {
0003ec  b91c              CBNZ     r4,|L1.1014|
;;;414        WM_GetClientRect(&Rect);
0003ee  4668              MOV      r0,sp
0003f0  f7fffffe          BL       WM_GetClientRect
;;;415        pRect = &Rect;
0003f4  466c              MOV      r4,sp
                  |L1.1014|
;;;416      }
;;;417      if (pWidget->State & WIDGET_STATE_VERTICAL) {
0003f6  8ce8              LDRH     r0,[r5,#0x26]
0003f8  f0100f08          TST      r0,#8
0003fc  d005              BEQ      |L1.1034|
;;;418        WIDGET__RotateRect90(pWidget, &Rect, pRect);
0003fe  4622              MOV      r2,r4
000400  4669              MOV      r1,sp
000402  4628              MOV      r0,r5
000404  f7fffffe          BL       WIDGET__RotateRect90
;;;419        pRect = &Rect;
000408  466c              MOV      r4,sp
                  |L1.1034|
;;;420      }
;;;421      if (_EffectRequiresRedraw(pWidget, pRect)) {
00040a  4621              MOV      r1,r4
00040c  4628              MOV      r0,r5
00040e  f7fffffe          BL       _EffectRequiresRedraw
000412  2800              CMP      r0,#0
000414  d003              BEQ      |L1.1054|
;;;422        pWidget->pEffect->pfDrawDownRect(pRect);
000416  6a28              LDR      r0,[r5,#0x20]
000418  68c1              LDR      r1,[r0,#0xc]
00041a  4620              MOV      r0,r4
00041c  4788              BLX      r1
                  |L1.1054|
;;;423      }
;;;424    }
00041e  b003              ADD      sp,sp,#0xc
000420  bd30              POP      {r4,r5,pc}
;;;425    
                          ENDP

                  WIDGET__EFFECT_DrawDown PROC
;;;429    */
;;;430    void WIDGET__EFFECT_DrawDown(WIDGET* pWidget) {
000422  2100              MOVS     r1,#0
;;;431      WIDGET__EFFECT_DrawDownRect(pWidget, NULL);
000424  e7fe              B        WIDGET__EFFECT_DrawDownRect
;;;432    }
;;;433    
                          ENDP

                  WIDGET__EFFECT_DrawUpRect PROC
;;;437    */
;;;438    void WIDGET__EFFECT_DrawUpRect(WIDGET* pWidget, GUI_RECT* pRect) {
000426  b530              PUSH     {r4,r5,lr}
000428  b083              SUB      sp,sp,#0xc
00042a  4604              MOV      r4,r0
00042c  460d              MOV      r5,r1
;;;439      GUI_RECT Rect;
;;;440      if (pWidget->State & WIDGET_STATE_VERTICAL) {
00042e  8ce0              LDRH     r0,[r4,#0x26]
000430  f0100f08          TST      r0,#8
000434  d005              BEQ      |L1.1090|
;;;441        WIDGET__RotateRect90(pWidget, &Rect, pRect);
000436  462a              MOV      r2,r5
000438  4669              MOV      r1,sp
00043a  4620              MOV      r0,r4
00043c  f7fffffe          BL       WIDGET__RotateRect90
;;;442        pRect = &Rect;
000440  466d              MOV      r5,sp
                  |L1.1090|
;;;443      }
;;;444      if (_EffectRequiresRedraw(pWidget, pRect)) {
000442  4629              MOV      r1,r5
000444  4620              MOV      r0,r4
000446  f7fffffe          BL       _EffectRequiresRedraw
00044a  2800              CMP      r0,#0
00044c  d003              BEQ      |L1.1110|
;;;445        pWidget->pEffect->pfDrawUpRect(pRect);
00044e  6a20              LDR      r0,[r4,#0x20]
000450  6883              LDR      r3,[r0,#8]
000452  4628              MOV      r0,r5
000454  4798              BLX      r3
                  |L1.1110|
;;;446      }
;;;447    }
000456  b003              ADD      sp,sp,#0xc
000458  bd30              POP      {r4,r5,pc}
;;;448    
                          ENDP

                  WIDGET_SetDefaultEffect PROC
;;;452    */
;;;453    const WIDGET_EFFECT* WIDGET_SetDefaultEffect(const WIDGET_EFFECT* pEffect) {
00045a  4a04              LDR      r2,|L1.1132|
;;;454      const WIDGET_EFFECT* r;
;;;455      r = _pEffectDefault;
00045c  6811              LDR      r1,[r2,#0]  ; _pEffectDefault
;;;456      _pEffectDefault = pEffect;
00045e  6010              STR      r0,[r2,#0]  ; _pEffectDefault
;;;457      return r;
000460  4608              MOV      r0,r1
;;;458    }
000462  4770              BX       lr
;;;459    
                          ENDP

                  WIDGET_GetDefaultEffect PROC
;;;463    */
;;;464    const WIDGET_EFFECT*  WIDGET_GetDefaultEffect(void) {
000464  4801              LDR      r0,|L1.1132|
;;;465      return _pEffectDefault;
000466  6800              LDR      r0,[r0,#0]  ; _pEffectDefault
;;;466    }
000468  4770              BX       lr
;;;467    
                          ENDP

00046a  0000              DCW      0x0000
                  |L1.1132|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  _pEffectDefault
                          DCD      WIDGET_Effect_3D
