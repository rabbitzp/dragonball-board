; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\framewin.o --depend=.\rvmdk\framewin.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\framewin.crf ..\..\..\..\..\uCGUI\GUI\Widget\FRAMEWIN.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _SetActive PROC
;;;135    */
;;;136    static void _SetActive(FRAMEWIN_Handle hObj, int State) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;137      FRAMEWIN_Obj* pObj;
;;;138      pObj = FRAMEWIN_H2P(hObj);
000006  4628              MOV      r0,r5
000008  f7fffffe          BL       GUI_ALLOC_h2p
;;;139      if        (State && !(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00000c  b124              CBZ      r4,|L1.24|
00000e  f8b0205a          LDRH     r2,[r0,#0x5a]
000012  f0120f08          TST      r2,#8
000016  d00f              BEQ      |L1.56|
                  |L1.24|
;;;140        pObj->Flags |= FRAMEWIN_CF_ACTIVE;
;;;141        FRAMEWIN_Invalidate(hObj);
;;;142      } else if (!State && (pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
000018  2c00              CMP      r4,#0
00001a  d116              BNE      |L1.74|
00001c  f8b0105a          LDRH     r1,[r0,#0x5a]
000020  f0110f08          TST      r1,#8
000024  d011              BEQ      |L1.74|
;;;143        pObj->Flags &= ~FRAMEWIN_CF_ACTIVE;
000026  f0210108          BIC      r1,r1,#8
00002a  f8a0105a          STRH     r1,[r0,#0x5a]
;;;144        FRAMEWIN_Invalidate(hObj);
00002e  4628              MOV      r0,r5
000030  e8bd4070          POP      {r4-r6,lr}
000034  f7ffbffe          B.W      WM_InvalidateWindow
                  |L1.56|
000038  f0420108          ORR      r1,r2,#8              ;140
00003c  f8a0105a          STRH     r1,[r0,#0x5a]         ;140
000040  4628              MOV      r0,r5                 ;141
000042  e8bd4070          POP      {r4-r6,lr}            ;141
000046  f7ffbffe          B.W      WM_InvalidateWindow
                  |L1.74|
;;;145      }
;;;146    }
00004a  bd70              POP      {r4-r6,pc}
;;;147    
                          ENDP

                  _OnTouch PROC
;;;151    */
;;;152    static void _OnTouch(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE* pMsg) {
00004c  b570              PUSH     {r4-r6,lr}
00004e  4606              MOV      r6,r0
000050  460d              MOV      r5,r1
;;;153      const GUI_PID_STATE* pState;
;;;154      pState = (const GUI_PID_STATE*)pMsg->Data.p;
000052  6894              LDR      r4,[r2,#8]
;;;155      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000054  2c00              CMP      r4,#0
000056  d01f              BEQ      |L1.152|
;;;156        if (pState->Pressed) {
000058  7a20              LDRB     r0,[r4,#8]
00005a  2800              CMP      r0,#0
00005c  d01c              BEQ      |L1.152|
;;;157          if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
00005e  f8b5005a          LDRH     r0,[r5,#0x5a]
000062  f0100f08          TST      r0,#8
000066  d102              BNE      |L1.110|
;;;158            WM_SetFocus(hWin);
000068  4630              MOV      r0,r6
00006a  f7fffffe          BL       WM_SetFocus
                  |L1.110|
;;;159          }
;;;160          WM_BringToTop(hWin);
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       WM_BringToTop
;;;161          if (pObj->Flags & FRAMEWIN_SF_MOVEABLE) {
000074  f8b5105a          LDRH     r1,[r5,#0x5a]
000078  f0110f10          TST      r1,#0x10
00007c  d00c              BEQ      |L1.152|
;;;162            int LimitTop;
;;;163            #if (FRAMEWIN_ALLOW_DRAG_ON_FRAME)
;;;164            LimitTop = 0;
00007e  2300              MOVS     r3,#0
;;;165            #else
;;;166            POSITIONS Pos;
;;;167            FRAMEWIN__CalcPositions(pObj, &Pos);
;;;168            LimitTop = pObj->Props.BorderSize + Pos.TitleHeight - 1 + pObj->Props.IBorderSize;
;;;169            if ((pState->y <= LimitTop) || WM_HasCaptured(hWin))
;;;170            #endif
;;;171            {
;;;172              if ((pObj->Flags & FRAMEWIN_SF_MAXIMIZED) == 0) {
000080  f0110f80          TST      r1,#0x80
000084  d108              BNE      |L1.152|
;;;173                WM_SetCaptureMove(hWin, pState, FRAMEWIN__MinVisibility, LimitTop);
000086  48fd              LDR      r0,|L1.1148|
000088  4621              MOV      r1,r4
00008a  f9b02000          LDRSH    r2,[r0,#0]  ; FRAMEWIN__MinVisibility
00008e  4630              MOV      r0,r6
000090  e8bd4070          POP      {r4-r6,lr}
000094  f7ffbffe          B.W      WM_SetCaptureMove
                  |L1.152|
;;;174              }
;;;175            }
;;;176          }
;;;177        }
;;;178      }
;;;179    }
000098  bd70              POP      {r4-r6,pc}
;;;180    
                          ENDP

                  FRAMEWIN__CalcTitleHeight PROC
;;;366    */
;;;367    int FRAMEWIN__CalcTitleHeight(FRAMEWIN_Obj* pObj) {
00009a  b510              PUSH     {r4,lr}
00009c  4601              MOV      r1,r0
;;;368      int r = 0;
00009e  2000              MOVS     r0,#0
;;;369      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
0000a0  8cca              LDRH     r2,[r1,#0x26]
0000a2  f0120f20          TST      r2,#0x20
0000a6  d007              BEQ      |L1.184|
;;;370        r = pObj->Props.TitleHeight;
0000a8  f9b10040          LDRSH    r0,[r1,#0x40]
;;;371        if (r == 0) {
0000ac  2800              CMP      r0,#0
0000ae  d103              BNE      |L1.184|
;;;372          r = 2 + GUI_GetYSizeOfFont(pObj->Props.pFont);
0000b0  6a88              LDR      r0,[r1,#0x28]
0000b2  f7fffffe          BL       GUI_GetYSizeOfFont
0000b6  1c80              ADDS     r0,r0,#2
                  |L1.184|
;;;373        }
;;;374      }
;;;375      return r;
;;;376    }
0000b8  bd10              POP      {r4,pc}
;;;377    
                          ENDP

                  FRAMEWIN__CalcPositions PROC
;;;381    */
;;;382    void FRAMEWIN__CalcPositions(FRAMEWIN_Obj* pObj, POSITIONS* pPos) {
0000ba  e92d5ff0          PUSH     {r4-r12,lr}
0000be  4605              MOV      r5,r0
0000c0  460c              MOV      r4,r1
;;;383      WM_HWIN hChild;
;;;384      WM_Obj* pChild;
;;;385      int TitleHeight;
;;;386      int MenuHeight = 0;
0000c2  f04f0800          MOV      r8,#0
;;;387      int IBorderSize = 0;
0000c6  46c1              MOV      r9,r8
;;;388      int BorderSize;
;;;389      int xsize, ysize;
;;;390      int x0, x1, y0;
;;;391      BorderSize = pObj->Props.BorderSize;
0000c8  f9b56042          LDRSH    r6,[r5,#0x42]
;;;392      xsize = WM__GetWindowSizeX(&pObj->Widget.Win);
0000cc  4628              MOV      r0,r5
0000ce  f7fffffe          BL       WM__GetWindowSizeX
0000d2  4682              MOV      r10,r0
;;;393      ysize = WM__GetWindowSizeY(&pObj->Widget.Win);
0000d4  4628              MOV      r0,r5
0000d6  f7fffffe          BL       WM__GetWindowSizeY
0000da  4683              MOV      r11,r0
;;;394      if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
0000dc  8ce8              LDRH     r0,[r5,#0x26]
0000de  f0100f20          TST      r0,#0x20
0000e2  d001              BEQ      |L1.232|
;;;395        IBorderSize = pObj->Props.IBorderSize;
0000e4  f9b59044          LDRSH    r9,[r5,#0x44]
                  |L1.232|
;;;396      }
;;;397      TitleHeight = FRAMEWIN__CalcTitleHeight(pObj);
0000e8  4628              MOV      r0,r5
0000ea  f7fffffe          BL       FRAMEWIN__CalcTitleHeight
0000ee  4607              MOV      r7,r0
;;;398      if (pObj->hMenu) {
0000f0  f9b5004e          LDRSH    r0,[r5,#0x4e]
0000f4  b110              CBZ      r0,|L1.252|
;;;399        MenuHeight = WM_GetWindowSizeY(pObj->hMenu);
0000f6  f7fffffe          BL       WM_GetWindowSizeY
0000fa  4680              MOV      r8,r0
                  |L1.252|
;;;400      }
;;;401      pPos->TitleHeight = TitleHeight;
0000fc  8027              STRH     r7,[r4,#0]
;;;402      pPos->MenuHeight  = MenuHeight;
0000fe  f8a48002          STRH     r8,[r4,#2]
;;;403      /* Set object properties accordingly */
;;;404      pPos->rClient.x0  =         BorderSize;
000102  80a6              STRH     r6,[r4,#4]
;;;405      pPos->rClient.x1  = xsize - BorderSize - 1;
000104  ebaa0006          SUB      r0,r10,r6
000108  1e40              SUBS     r0,r0,#1
00010a  8120              STRH     r0,[r4,#8]
;;;406      pPos->rClient.y0  =         BorderSize + IBorderSize + TitleHeight + MenuHeight;
00010c  eb060109          ADD      r1,r6,r9
000110  4439              ADD      r1,r1,r7
000112  4441              ADD      r1,r1,r8
000114  80e1              STRH     r1,[r4,#6]
;;;407      pPos->rClient.y1  = ysize - BorderSize - 1;
000116  ebab0106          SUB      r1,r11,r6
00011a  1e49              SUBS     r1,r1,#1
00011c  8161              STRH     r1,[r4,#0xa]
;;;408      /* Calculate title rect */
;;;409      pPos->rTitleText.x0 =         BorderSize;
00011e  81a6              STRH     r6,[r4,#0xc]
;;;410      pPos->rTitleText.x1 = xsize - BorderSize - 1;
000120  8220              STRH     r0,[r4,#0x10]
;;;411      pPos->rTitleText.y0 =         BorderSize;
000122  81e6              STRH     r6,[r4,#0xe]
;;;412      pPos->rTitleText.y1 =         BorderSize + TitleHeight - 1;
000124  19f0              ADDS     r0,r6,r7
000126  1e40              SUBS     r0,r0,#1
000128  8260              STRH     r0,[r4,#0x12]
;;;413      /* Iterate over all children */
;;;414      for (hChild = pObj->Widget.Win.hFirstChild; hChild; hChild = pChild->hNext) {
00012a  f9b50018          LDRSH    r0,[r5,#0x18]
00012e  2800              CMP      r0,#0
000130  d026              BEQ      |L1.384|
                  |L1.306|
;;;415        pChild = WM_H2P(hChild);
000132  f7fffffe          BL       GUI_ALLOC_h2p
;;;416        x0 = pChild->Rect.x0 - pObj->Widget.Win.Rect.x0;
000136  f9b01000          LDRSH    r1,[r0,#0]
00013a  f9b52000          LDRSH    r2,[r5,#0]
00013e  1a89              SUBS     r1,r1,r2
;;;417        x1 = pChild->Rect.x1 - pObj->Widget.Win.Rect.x0;
000140  f9b03004          LDRSH    r3,[r0,#4]
000144  1a9a              SUBS     r2,r3,r2
;;;418        y0 = pChild->Rect.y0 - pObj->Widget.Win.Rect.y0;
000146  f9b03002          LDRSH    r3,[r0,#2]
00014a  f9b5c002          LDRSH    r12,[r5,#2]
00014e  eba3030c          SUB      r3,r3,r12
;;;419        if (y0 == BorderSize) {
000152  42b3              CMP      r3,r6
000154  d110              BNE      |L1.376|
;;;420          if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
000156  8b83              LDRH     r3,[r0,#0x1c]
000158  f0130f80          TST      r3,#0x80
00015c  d006              BEQ      |L1.364|
;;;421            if (x0 <= pPos->rTitleText.x1) {
00015e  f9b42010          LDRSH    r2,[r4,#0x10]
000162  428a              CMP      r2,r1
000164  db08              BLT      |L1.376|
;;;422              pPos->rTitleText.x1 = x0 - 1;
000166  1e49              SUBS     r1,r1,#1
000168  8221              STRH     r1,[r4,#0x10]
00016a  e005              B        |L1.376|
                  |L1.364|
;;;423            }
;;;424          } else {
;;;425            if (x1 >= pPos->rTitleText.x0) {
00016c  f9b4100c          LDRSH    r1,[r4,#0xc]
000170  4291              CMP      r1,r2
000172  dc01              BGT      |L1.376|
;;;426              pPos->rTitleText.x0 = x1 + 1;
000174  1c51              ADDS     r1,r2,#1
000176  81a1              STRH     r1,[r4,#0xc]
                  |L1.376|
000178  f9b0001a          LDRSH    r0,[r0,#0x1a]         ;414
00017c  2800              CMP      r0,#0                 ;414
00017e  d1d8              BNE      |L1.306|
                  |L1.384|
;;;427            }
;;;428          }
;;;429        }
;;;430      }
;;;431    }
000180  e8bd9ff0          POP      {r4-r12,pc}
;;;432    
                          ENDP

                  _Paint PROC
;;;185    */
;;;186    static void _Paint(FRAMEWIN_Obj* pObj) {
000184  e92d4ff0          PUSH     {r4-r11,lr}
000188  b08b              SUB      sp,sp,#0x2c
00018a  4604              MOV      r4,r0
;;;187      WM_HWIN hWin = WM_GetActiveWindow();
00018c  f7fffffe          BL       WM_GetActiveWindow
000190  4606              MOV      r6,r0
;;;188      const char* pText = NULL;
000192  2000              MOVS     r0,#0
000194  9009              STR      r0,[sp,#0x24]
;;;189      int xsize = WM_GetWindowSizeX(hWin);
000196  4630              MOV      r0,r6
000198  f7fffffe          BL       WM_GetWindowSizeX
00019c  4605              MOV      r5,r0
;;;190      int ysize = WM_GetWindowSizeY(hWin);
00019e  4630              MOV      r0,r6
0001a0  f7fffffe          BL       WM_GetWindowSizeY
0001a4  4606              MOV      r6,r0
;;;191      int BorderSize = pObj->Props.BorderSize;
0001a6  f9b48042          LDRSH    r8,[r4,#0x42]
;;;192      int y0, Index;
;;;193      POSITIONS Pos;
;;;194      GUI_RECT r, rText;
;;;195    
;;;196      /* Perform computations */
;;;197      FRAMEWIN__CalcPositions(pObj, &Pos);
0001aa  a904              ADD      r1,sp,#0x10
0001ac  4620              MOV      r0,r4
0001ae  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;198      Index = (pObj->Flags & FRAMEWIN_SF_ACTIVE) ? 1 : 0;
0001b2  f8b4005a          LDRH     r0,[r4,#0x5a]
0001b6  f3c007c0          UBFX     r7,r0,#3,#1
;;;199    
;;;200      if (pObj->hText) {
0001ba  f9b40050          LDRSH    r0,[r4,#0x50]
0001be  b110              CBZ      r0,|L1.454|
;;;201        pText = (const char*) GUI_ALLOC_h2p(pObj->hText);
0001c0  f7fffffe          BL       GUI_ALLOC_h2p
0001c4  9009              STR      r0,[sp,#0x24]
                  |L1.454|
;;;202      }
;;;203      r.x0 = Pos.rClient.x0;
0001c6  f8bd0014          LDRH     r0,[sp,#0x14]
0001ca  f8ad0008          STRH     r0,[sp,#8]
;;;204      r.x1 = Pos.rClient.x1;
0001ce  f8bd0018          LDRH     r0,[sp,#0x18]
0001d2  f8ad000c          STRH     r0,[sp,#0xc]
;;;205      r.y0 = Pos.rTitleText.y0;
0001d6  f8bd001e          LDRH     r0,[sp,#0x1e]
0001da  f8ad000a          STRH     r0,[sp,#0xa]
;;;206      r.y1 = Pos.rTitleText.y1;
0001de  f8bd1022          LDRH     r1,[sp,#0x22]
0001e2  f8ad100e          STRH     r1,[sp,#0xe]
;;;207      Pos.rTitleText.y0++;
0001e6  1c40              ADDS     r0,r0,#1
0001e8  f8ad001e          STRH     r0,[sp,#0x1e]
;;;208      Pos.rTitleText.x0++;
0001ec  f8bd001c          LDRH     r0,[sp,#0x1c]
0001f0  1c40              ADDS     r0,r0,#1
0001f2  f8ad001c          STRH     r0,[sp,#0x1c]
;;;209      Pos.rTitleText.x1--;
0001f6  f8bd0020          LDRH     r0,[sp,#0x20]
0001fa  1e40              SUBS     r0,r0,#1
0001fc  f8ad0020          STRH     r0,[sp,#0x20]
;;;210      GUI_SetFont(pObj->Props.pFont);
000200  6aa0              LDR      r0,[r4,#0x28]
000202  f7fffffe          BL       GUI_SetFont
;;;211      GUI__CalcTextRect(pText, &Pos.rTitleText, &rText, pObj->Props.TextAlign);
000206  f9b43046          LDRSH    r3,[r4,#0x46]
00020a  466a              MOV      r2,sp
00020c  f10d0b10          ADD      r11,sp,#0x10
000210  a907              ADD      r1,sp,#0x1c
000212  9809              LDR      r0,[sp,#0x24]
000214  f7fffffe          BL       GUI__CalcTextRect
;;;212      y0 = Pos.TitleHeight + BorderSize;
000218  f9bd0010          LDRSH    r0,[sp,#0x10]
00021c  eb000a08          ADD      r10,r0,r8
;;;213    
;;;214      /* Perform drawing operations */
;;;215      WM_ITERATE_START(NULL) {
000220  2000              MOVS     r0,#0
000222  f7fffffe          BL       WM__InitIVRSearch
000226  2800              CMP      r0,#0
000228  d045              BEQ      |L1.694|
;;;216        /* Draw Title */
;;;217        LCD_SetBkColor(pObj->Props.aBarColor[Index]);
;;;218        LCD_SetColor(pObj->Props.aTextColor[Index]);
;;;219        WIDGET__FillStringInRect(pText, &r, &Pos.rTitleText, &rText);
;;;220        /* Draw Frame */
;;;221        LCD_SetColor(FRAMEWIN_FRAMECOLOR_DEFAULT);
;;;222        GUI_FillRect(0, 0, xsize-1, BorderSize-1);
;;;223    	  GUI_FillRect(0, 0, Pos.rClient.x0-1, ysize-1);
;;;224    	  GUI_FillRect(Pos.rClient.x1+1, 0, xsize-1, ysize-1);
;;;225        GUI_FillRect(0, Pos.rClient.y1+1, xsize-1, ysize-1);
;;;226        GUI_FillRect(0, y0, xsize - 1, y0 + pObj->Props.IBorderSize - 1);
00022a  f1aa0901          SUB      r9,r10,#1
00022e  eb040787          ADD      r7,r4,r7,LSL #2       ;217
                  |L1.562|
000232  6af8              LDR      r0,[r7,#0x2c]         ;217
000234  f7fffffe          BL       LCD_SetBkColor
000238  6b78              LDR      r0,[r7,#0x34]         ;218
00023a  f7fffffe          BL       LCD_SetColor
00023e  466b              MOV      r3,sp                 ;219
000240  f10b020c          ADD      r2,r11,#0xc           ;219
000244  a902              ADD      r1,sp,#8              ;219
000246  9809              LDR      r0,[sp,#0x24]         ;219
000248  f7fffffe          BL       WIDGET__FillStringInRect
00024c  488c              LDR      r0,|L1.1152|
00024e  f7fffffe          BL       LCD_SetColor
000252  2100              MOVS     r1,#0                 ;222
000254  f1a80301          SUB      r3,r8,#1              ;222
000258  1e6a              SUBS     r2,r5,#1              ;222
00025a  4608              MOV      r0,r1                 ;222
00025c  f7fffffe          BL       GUI_FillRect
000260  f9bd0014          LDRSH    r0,[sp,#0x14]         ;223
000264  2100              MOVS     r1,#0                 ;223
000266  1e42              SUBS     r2,r0,#1              ;223
000268  1e73              SUBS     r3,r6,#1              ;223
00026a  4608              MOV      r0,r1                 ;223
00026c  f7fffffe          BL       GUI_FillRect
000270  f9bd0018          LDRSH    r0,[sp,#0x18]         ;224
000274  1e73              SUBS     r3,r6,#1              ;224
000276  1c40              ADDS     r0,r0,#1              ;224
000278  1e6a              SUBS     r2,r5,#1              ;224
00027a  2100              MOVS     r1,#0                 ;224
00027c  f7fffffe          BL       GUI_FillRect
000280  f9bd001a          LDRSH    r0,[sp,#0x1a]         ;225
000284  1e73              SUBS     r3,r6,#1              ;225
000286  1c41              ADDS     r1,r0,#1              ;225
000288  1e6a              SUBS     r2,r5,#1              ;225
00028a  2000              MOVS     r0,#0                 ;225
00028c  f7fffffe          BL       GUI_FillRect
000290  f9b40044          LDRSH    r0,[r4,#0x44]
000294  1e6a              SUBS     r2,r5,#1
000296  eb000309          ADD      r3,r0,r9
00029a  4651              MOV      r1,r10
00029c  2000              MOVS     r0,#0
00029e  f7fffffe          BL       GUI_FillRect
;;;227        /* Draw the 3D effect (if configured) */
;;;228        if (pObj->Props.BorderSize >= 2) {
0002a2  f9b40042          LDRSH    r0,[r4,#0x42]
0002a6  2802              CMP      r0,#2
0002a8  db01              BLT      |L1.686|
;;;229          WIDGET_EFFECT_3D_DrawUp();  /* pObj->Widget.pEffect->pfDrawUp(); */
0002aa  f7fffffe          BL       WIDGET_EFFECT_3D_DrawUp
                  |L1.686|
;;;230        }
;;;231    
;;;232      } WM_ITERATE_END();
0002ae  f7fffffe          BL       WM__GetNextIVR
0002b2  2800              CMP      r0,#0
0002b4  d1bd              BNE      |L1.562|
                  |L1.694|
;;;233    
;;;234    
;;;235    }
0002b6  b00b              ADD      sp,sp,#0x2c
0002b8  e8bd8ff0          POP      {r4-r11,pc}
;;;236    
                          ENDP

                  _OnChildHasFocus PROC
;;;250    */
;;;251    static void _OnChildHasFocus(FRAMEWIN_Handle hWin, FRAMEWIN_Obj* pObj, WM_MESSAGE *pMsg) {
0002bc  b570              PUSH     {r4-r6,lr}
0002be  4606              MOV      r6,r0
0002c0  460d              MOV      r5,r1
;;;252      if (pMsg->Data.p) {
0002c2  6894              LDR      r4,[r2,#8]
0002c4  2c00              CMP      r4,#0
0002c6  d018              BEQ      |L1.762|
;;;253        const WM_NOTIFY_CHILD_HAS_FOCUS_INFO * pInfo = (const WM_NOTIFY_CHILD_HAS_FOCUS_INFO *)pMsg->Data.p;
;;;254        int IsDesc = WM__IsAncestorOrSelf(pInfo->hNew, hWin);
0002c8  f9b40002          LDRSH    r0,[r4,#2]
0002cc  4631              MOV      r1,r6
0002ce  f7fffffe          BL       WM__IsAncestorOrSelf
;;;255        if (IsDesc) {                         /* A child has received the focus, Framewindow needs to be activated */
0002d2  b120              CBZ      r0,|L1.734|
;;;256          _SetActive(hWin, 1);
0002d4  4630              MOV      r0,r6
0002d6  e8bd4070          POP      {r4-r6,lr}
0002da  2101              MOVS     r1,#1
0002dc  e7fe              B        _SetActive
                  |L1.734|
;;;257        } else {                  /* A child has lost the focus, we need to deactivate */
;;;258          _SetActive(hWin, 0);
0002de  2100              MOVS     r1,#0
0002e0  4630              MOV      r0,r6
0002e2  f7fffffe          BL       _SetActive
;;;259          /* Remember the child which had the focus so we can reactive this child */
;;;260          if (WM__IsAncestor(pInfo->hOld, hWin)) {
0002e6  f9b40000          LDRSH    r0,[r4,#0]
0002ea  4631              MOV      r1,r6
0002ec  f7fffffe          BL       WM__IsAncestor
0002f0  2800              CMP      r0,#0
0002f2  d002              BEQ      |L1.762|
;;;261            pObj->hFocussedChild = pInfo->hOld;
0002f4  8820              LDRH     r0,[r4,#0]
0002f6  f8a5005c          STRH     r0,[r5,#0x5c]
                  |L1.762|
;;;262          }
;;;263        }
;;;264      }
;;;265    }
0002fa  bd70              POP      {r4-r6,pc}
;;;266    
                          ENDP

                  FRAMEWIN__cbClient PROC
;;;270    */
;;;271    static void FRAMEWIN__cbClient(WM_MESSAGE* pMsg) {
0002fc  e92d41f0          PUSH     {r4-r8,lr}
000300  b084              SUB      sp,sp,#0x10
000302  4604              MOV      r4,r0
;;;272      WM_HWIN hWin, hParent;
;;;273      FRAMEWIN_Obj * pObj;
;;;274      WM_CALLBACK * cb;
;;;275    
;;;276      hWin    = pMsg->hWin;
000304  f9b47004          LDRSH    r7,[r4,#4]
;;;277      hParent = WM_GetParent(pMsg->hWin);
000308  4638              MOV      r0,r7
00030a  f7fffffe          BL       WM_GetParent
00030e  4680              MOV      r8,r0
;;;278      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hParent); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000310  4640              MOV      r0,r8
000312  f7fffffe          BL       GUI_ALLOC_h2p
000316  4605              MOV      r5,r0
;;;279      cb = pObj->cb;
000318  6cae              LDR      r6,[r5,#0x48]
;;;280      switch (pMsg->MsgId) {
00031a  6822              LDR      r2,[r4,#0]
00031c  2a17              CMP      r2,#0x17
00031e  d06b              BEQ      |L1.1016|
000320  dc08              BGT      |L1.820|
000322  2a0e              CMP      r2,#0xe
000324  d041              BEQ      |L1.938|
000326  2a0f              CMP      r2,#0xf
000328  d00b              BEQ      |L1.834|
00032a  2a14              CMP      r2,#0x14
00032c  d064              BEQ      |L1.1016|
00032e  2a15              CMP      r2,#0x15
000330  d144              BNE      |L1.956|
000332  e061              B        |L1.1016|
                  |L1.820|
000334  2a1e              CMP      r2,#0x1e
000336  d01c              BEQ      |L1.882|
000338  2a1f              CMP      r2,#0x1f
00033a  d02f              BEQ      |L1.924|
00033c  2a22              CMP      r2,#0x22
00033e  d13d              BNE      |L1.956|
000340  e055              B        |L1.1006|
                  |L1.834|
;;;281      case WM_PAINT:
;;;282        if (pObj->Props.ClientColor != GUI_INVALID_COLOR) {
000342  6be8              LDR      r0,[r5,#0x3c]
000344  f06f4170          MVN      r1,#0xf0000000
000348  4288              CMP      r0,r1
00034a  d003              BEQ      |L1.852|
;;;283          LCD_SetBkColor(pObj->Props.ClientColor);
00034c  f7fffffe          BL       LCD_SetBkColor
;;;284          GUI_Clear();
000350  f7fffffe          BL       GUI_Clear
                  |L1.852|
;;;285        }
;;;286        /* Give the user callback  a chance to draw.
;;;287         * Note that we can not run into the bottom part, as this passes the parents handle
;;;288         */
;;;289        if (cb) {
000354  2e00              CMP      r6,#0
000356  d009              BEQ      |L1.876|
;;;290    	    WM_MESSAGE Msg;
;;;291          Msg      = *pMsg;
000358  68a2              LDR      r2,[r4,#8]
00035a  6861              LDR      r1,[r4,#4]
00035c  6820              LDR      r0,[r4,#0]
00035e  9203              STR      r2,[sp,#0xc]
000360  9102              STR      r1,[sp,#8]
000362  9001              STR      r0,[sp,#4]
;;;292          Msg.hWin = hWin;
000364  f8ad7008          STRH     r7,[sp,#8]
;;;293          (*cb)(&Msg);
000368  a801              ADD      r0,sp,#4
00036a  47b0              BLX      r6
                  |L1.876|
;;;294        }
;;;295        return;
;;;296      case WM_SET_FOCUS:
;;;297        if (pMsg->Data.v) {     /* Focus received */
;;;298          if (pObj->hFocussedChild && (pObj->hFocussedChild != hWin)) {
;;;299            WM_SetFocus(pObj->hFocussedChild);
;;;300          } else {
;;;301            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;302          }
;;;303          pMsg->Data.v = 0;     /* Focus change accepted */
;;;304        }
;;;305        return;
;;;306      case WM_GET_ACCEPT_FOCUS:
;;;307        WIDGET_HandleActive(hParent, pMsg);
;;;308        return;
;;;309      case WM_KEY:
;;;310        if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
;;;311          int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;312          switch (Key) {
;;;313          case GUI_KEY_BACKTAB:
;;;314            pObj->hFocussedChild = WM_SetFocusOnPrevChild(hWin);
;;;315            return;
;;;316          case GUI_KEY_TAB:
;;;317            pObj->hFocussedChild = WM_SetFocusOnNextChild(hWin);
;;;318            return;
;;;319          }
;;;320        }
;;;321        break;	                       /* Send to parent by not doing anything */
;;;322      case WM_GET_BKCOLOR:
;;;323        pMsg->Data.Color = pObj->Props.ClientColor;
;;;324        return;                       /* Message handled */
;;;325      case WM_GET_INSIDE_RECT:        /* This should not be passed to parent ... (We do not want parents coordinates)*/
;;;326      case WM_GET_ID:                 /* This should not be passed to parent ... (Possible recursion problem)*/
;;;327      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;328        WM_DefaultProc(pMsg);
;;;329        return;                       /* We are done ! */
;;;330      }
;;;331      /* Call user callback. Note that the user callback gets the handle of the Framewindow itself, NOT the Client. */
;;;332      if (cb) {
;;;333        pMsg->hWin = hParent;
;;;334        (*cb)(pMsg);
;;;335      } else {
;;;336        WM_DefaultProc(pMsg);
;;;337      }
;;;338    }
00036c  b004              ADD      sp,sp,#0x10
00036e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.882|
000372  68a0              LDR      r0,[r4,#8]            ;297
000374  2800              CMP      r0,#0                 ;297
000376  d0f9              BEQ      |L1.876|
000378  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;298
00037c  b120              CBZ      r0,|L1.904|
00037e  42b8              CMP      r0,r7                 ;298
000380  d002              BEQ      |L1.904|
000382  f7fffffe          BL       WM_SetFocus
000386  e004              B        |L1.914|
                  |L1.904|
000388  4638              MOV      r0,r7                 ;301
00038a  f7fffffe          BL       WM_SetFocusOnNextChild
00038e  f8a5005c          STRH     r0,[r5,#0x5c]         ;301
                  |L1.914|
000392  2000              MOVS     r0,#0                 ;303
000394  60a0              STR      r0,[r4,#8]            ;303
000396  b004              ADD      sp,sp,#0x10
000398  e8bd81f0          POP      {r4-r8,pc}
                  |L1.924|
00039c  b004              ADD      sp,sp,#0x10           ;307
00039e  4621              MOV      r1,r4                 ;307
0003a0  4640              MOV      r0,r8                 ;307
0003a2  e8bd41f0          POP      {r4-r8,lr}            ;307
0003a6  f7ffbffe          B.W      WIDGET_HandleActive
                  |L1.938|
0003aa  68a0              LDR      r0,[r4,#8]            ;310
0003ac  6841              LDR      r1,[r0,#4]            ;310
0003ae  2900              CMP      r1,#0                 ;310
0003b0  dd04              BLE      |L1.956|
0003b2  6800              LDR      r0,[r0,#0]            ;311
0003b4  2809              CMP      r0,#9                 ;312
0003b6  d012              BEQ      |L1.990|
0003b8  280a              CMP      r0,#0xa               ;312
0003ba  d008              BEQ      |L1.974|
                  |L1.956|
0003bc  b316              CBZ      r6,|L1.1028|
0003be  f8a48004          STRH     r8,[r4,#4]            ;333
0003c2  b004              ADD      sp,sp,#0x10           ;334
0003c4  4620              MOV      r0,r4                 ;334
0003c6  46b4              MOV      r12,r6                ;334
0003c8  e8bd41f0          POP      {r4-r8,lr}            ;334
0003cc  4760              BX       r12                   ;334
                  |L1.974|
0003ce  4638              MOV      r0,r7                 ;314
0003d0  f7fffffe          BL       WM_SetFocusOnPrevChild
0003d4  f8a5005c          STRH     r0,[r5,#0x5c]         ;314
0003d8  b004              ADD      sp,sp,#0x10
0003da  e8bd81f0          POP      {r4-r8,pc}
                  |L1.990|
0003de  4638              MOV      r0,r7                 ;317
0003e0  f7fffffe          BL       WM_SetFocusOnNextChild
0003e4  f8a5005c          STRH     r0,[r5,#0x5c]         ;317
0003e8  b004              ADD      sp,sp,#0x10
0003ea  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1006|
0003ee  6be8              LDR      r0,[r5,#0x3c]         ;323
0003f0  60a0              STR      r0,[r4,#8]            ;323
0003f2  b004              ADD      sp,sp,#0x10
0003f4  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1016|
0003f8  b004              ADD      sp,sp,#0x10           ;328
0003fa  4620              MOV      r0,r4                 ;328
0003fc  e8bd41f0          POP      {r4-r8,lr}            ;328
000400  f7ffbffe          B.W      WM_DefaultProc
                  |L1.1028|
000404  b004              ADD      sp,sp,#0x10           ;336
000406  4620              MOV      r0,r4                 ;336
000408  e8bd41f0          POP      {r4-r8,lr}            ;336
00040c  f7ffbffe          B.W      WM_DefaultProc
;;;339    
                          ENDP

                  FRAMEWIN__UpdatePositions PROC
;;;436    */
;;;437    void FRAMEWIN__UpdatePositions(FRAMEWIN_Obj* pObj) {
000410  b510              PUSH     {r4,lr}
000412  b086              SUB      sp,sp,#0x18
000414  4604              MOV      r4,r0
;;;438      /* Move client window accordingly */
;;;439      if (pObj->hClient || pObj->hMenu) {
000416  f8b4004c          LDRH     r0,[r4,#0x4c]
00041a  b918              CBNZ     r0,|L1.1060|
00041c  f8b4004e          LDRH     r0,[r4,#0x4e]
000420  2800              CMP      r0,#0
000422  d029              BEQ      |L1.1144|
                  |L1.1060|
;;;440        POSITIONS Pos;
;;;441        FRAMEWIN__CalcPositions(pObj, &Pos);
000424  a901              ADD      r1,sp,#4
000426  4620              MOV      r0,r4
000428  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;442        if (pObj->hClient) {
00042c  f9b4004c          LDRSH    r0,[r4,#0x4c]
000430  b1a8              CBZ      r0,|L1.1118|
;;;443          WM_MoveChildTo(pObj->hClient, Pos.rClient.x0, Pos.rClient.y0);
000432  f9bd200a          LDRSH    r2,[sp,#0xa]
000436  f9bd1008          LDRSH    r1,[sp,#8]
00043a  f7fffffe          BL       WM_MoveChildTo
;;;444          WM_SetSize(pObj->hClient, 
00043e  f9bd000e          LDRSH    r0,[sp,#0xe]
000442  f9bd100a          LDRSH    r1,[sp,#0xa]
000446  1a40              SUBS     r0,r0,r1
000448  1c42              ADDS     r2,r0,#1
00044a  f9bd000c          LDRSH    r0,[sp,#0xc]
00044e  f9bd1008          LDRSH    r1,[sp,#8]
000452  1a40              SUBS     r0,r0,r1
000454  1c41              ADDS     r1,r0,#1
000456  f9b4004c          LDRSH    r0,[r4,#0x4c]
00045a  f7fffffe          BL       WM_SetSize
                  |L1.1118|
;;;445                     Pos.rClient.x1 - Pos.rClient.x0 + 1, 
;;;446                     Pos.rClient.y1 - Pos.rClient.y0 + 1);
;;;447        }
;;;448        if (pObj->hMenu) {
00045e  f9b4004e          LDRSH    r0,[r4,#0x4e]
000462  2800              CMP      r0,#0
000464  d008              BEQ      |L1.1144|
;;;449          WM_MoveChildTo(pObj->hMenu, Pos.rClient.x0, Pos.rClient.y0 - Pos.MenuHeight);
000466  f9bd100a          LDRSH    r1,[sp,#0xa]
00046a  f9bd2006          LDRSH    r2,[sp,#6]
00046e  1a8a              SUBS     r2,r1,r2
000470  f9bd1008          LDRSH    r1,[sp,#8]
000474  f7fffffe          BL       WM_MoveChildTo
                  |L1.1144|
;;;450        }
;;;451      }
;;;452    }
000478  b006              ADD      sp,sp,#0x18
00047a  bd10              POP      {r4,pc}
                  |L1.1148|
                          DCD      ||.data||
                  |L1.1152|
                          DCD      0x00aaaaaa
                          ENDP

                  FRAMEWIN_SetActive PROC
;;;668    */
;;;669    void FRAMEWIN_SetActive(FRAMEWIN_Handle hObj, int State) {
000484  b570              PUSH     {r4-r6,lr}
000486  4604              MOV      r4,r0
000488  460d              MOV      r5,r1
;;;670      if (hObj) {
00048a  2c00              CMP      r4,#0
00048c  d009              BEQ      |L1.1186|
;;;671        WM_LOCK();
00048e  f7fffffe          BL       GUI_Lock
;;;672        _SetActive(hObj, State);
000492  4629              MOV      r1,r5
000494  4620              MOV      r0,r4
000496  f7fffffe          BL       _SetActive
;;;673        WM_UNLOCK();
00049a  e8bd4070          POP      {r4-r6,lr}
00049e  f7ffbffe          B.W      GUI_Unlock
                  |L1.1186|
;;;674      }
;;;675    }
0004a2  bd70              POP      {r4-r6,pc}
;;;676    
                          ENDP

                  FRAMEWIN_Callback PROC
;;;463    */
;;;464    void FRAMEWIN_Callback (WM_MESSAGE *pMsg) {
0004a4  e92d41f0          PUSH     {r4-r8,lr}
0004a8  b088              SUB      sp,sp,#0x20
0004aa  4604              MOV      r4,r0
;;;465      FRAMEWIN_Handle hWin;
;;;466      FRAMEWIN_Obj * pObj;
;;;467      GUI_RECT * pRect;
;;;468      POSITIONS Pos;
;;;469      GUI_HOOK * pHook;
;;;470      hWin = (FRAMEWIN_Handle)(pMsg->hWin);
0004ac  f9b47004          LDRSH    r7,[r4,#4]
;;;471      pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hWin); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0004b0  4638              MOV      r0,r7
0004b2  f7fffffe          BL       GUI_ALLOC_h2p
0004b6  4605              MOV      r5,r0
;;;472      pRect = (GUI_RECT*)(pMsg->Data.p);
0004b8  f8d48008          LDR      r8,[r4,#8]
;;;473      /* Call hook functions */
;;;474      for (pHook = pObj->pFirstHook; pHook; pHook = pHook->pNext) {
0004bc  6e6e              LDR      r6,[r5,#0x64]
0004be  b13e              CBZ      r6,|L1.1232|
                  |L1.1216|
;;;475        int r;
;;;476        r = (*pHook->pHookFunc)(pMsg);
0004c0  6871              LDR      r1,[r6,#4]
0004c2  4620              MOV      r0,r4
0004c4  4788              BLX      r1
;;;477        if (r) {
0004c6  2800              CMP      r0,#0
0004c8  d11e              BNE      |L1.1288|
0004ca  6836              LDR      r6,[r6,#0]            ;474
0004cc  2e00              CMP      r6,#0                 ;474
0004ce  d1f7              BNE      |L1.1216|
                  |L1.1232|
;;;478          return;   /* Message handled */
;;;479        }
;;;480      }
;;;481      switch (pMsg->MsgId) {
0004d0  6820              LDR      r0,[r4,#0]
0004d2  2817              CMP      r0,#0x17
0004d4  d039              BEQ      |L1.1354|
0004d6  dc0c              BGT      |L1.1266|
0004d8  280d              CMP      r0,#0xd
0004da  d073              BEQ      |L1.1476|
0004dc  dc04              BGT      |L1.1256|
0004de  280b              CMP      r0,#0xb
0004e0  d06e              BEQ      |L1.1472|
0004e2  280c              CMP      r0,#0xc
0004e4  d16d              BNE      |L1.1474|
0004e6  e01b              B        |L1.1312|
                  |L1.1256|
0004e8  280f              CMP      r0,#0xf
0004ea  d015              BEQ      |L1.1304|
0004ec  2814              CMP      r0,#0x14
0004ee  d168              BNE      |L1.1474|
0004f0  e01e              B        |L1.1328|
                  |L1.1266|
0004f2  281e              CMP      r0,#0x1e
0004f4  d040              BEQ      |L1.1400|
0004f6  2820              CMP      r0,#0x20
0004f8  d073              BEQ      |L1.1506|
0004fa  2826              CMP      r0,#0x26
0004fc  d02b              BEQ      |L1.1366|
0004fe  282a              CMP      r0,#0x2a
000500  d179              BNE      |L1.1526|
;;;482      case WM_HANDLE_DIALOG_STATUS:
;;;483        if (pMsg->Data.p) {                           /* set pointer to Dialog status */
000502  68a0              LDR      r0,[r4,#8]
000504  b118              CBZ      r0,|L1.1294|
;;;484          pObj->pDialogStatus = (WM_DIALOG_STATUS*)pMsg->Data.p;
000506  6628              STR      r0,[r5,#0x60]
                  |L1.1288|
;;;485        } else {                                      /* return pointer to Dialog status */
;;;486          pMsg->Data.p = pObj->pDialogStatus;      
;;;487        }
;;;488        return;
;;;489      case WM_PAINT:
;;;490        _Paint(pObj);
;;;491        break;
;;;492      case WM_TOUCH:
;;;493        _OnTouch(hWin, pObj, pMsg);
;;;494        return;                       /* Return here ... Message handled */
;;;495      case WM_GET_INSIDE_RECT:
;;;496        FRAMEWIN__CalcPositions(pObj, &Pos);
;;;497    		*pRect = Pos.rClient;
;;;498        return;                       /* Return here ... Message handled */
;;;499      case WM_GET_CLIENT_WINDOW:      /* return handle to client window. For most windows, there is no seperate client window, so it is the same handle */
;;;500        pMsg->Data.v = (int)pObj->hClient;
;;;501        return;                       /* Return here ... Message handled */
;;;502      case WM_NOTIFY_PARENT:
;;;503        if (pMsg->Data.v == WM_NOTIFICATION_RELEASED) {
;;;504          WM_MESSAGE Msg;
;;;505          Msg.hWinSrc = hWin;
;;;506          Msg.Data    = pMsg->Data;
;;;507          Msg.MsgId   = WM_NOTIFY_PARENT_REFLECTION;
;;;508          WM__SendMessage(pMsg->hWinSrc, &Msg);
;;;509        }
;;;510        return;
;;;511      case WM_SET_FOCUS:                 /* We have received or lost focus */
;;;512        if (pMsg->Data.v == 1) {
;;;513          if (WM_IsWindow(pObj->hFocussedChild)) {
;;;514            WM_SetFocus(pObj->hFocussedChild);
;;;515          } else {
;;;516            pObj->hFocussedChild = WM_SetFocusOnNextChild(pObj->hClient);
;;;517          }
;;;518          FRAMEWIN_SetActive(hWin, 1);
;;;519          pMsg->Data.v = 0;              /* Focus could be accepted */
;;;520        } else {
;;;521          FRAMEWIN_SetActive(hWin, 0);
;;;522        }
;;;523        return;
;;;524      case WM_TOUCH_CHILD:
;;;525        /* If a child of this framewindow has been touched and the frame window was not active,
;;;526           the framewindow will receive the focus.
;;;527         */
;;;528        if (!(pObj->Flags & FRAMEWIN_SF_ACTIVE)) {
;;;529          const WM_MESSAGE * pMsgOrg;
;;;530          const GUI_PID_STATE * pState;
;;;531          pMsgOrg = (const WM_MESSAGE*)pMsg->Data.p;      /* The original touch message */
;;;532          pState = (const GUI_PID_STATE*)pMsgOrg->Data.p;
;;;533          if (pState) {          /* Message may not have a valid pointer (moved out) ! */
;;;534            if (pState->Pressed) {
;;;535              WM_SetFocus(hWin);
;;;536            }
;;;537          }
;;;538        }
;;;539        break;
;;;540      case WM_NOTIFY_CHILD_HAS_FOCUS:
;;;541        _OnChildHasFocus(hWin, pObj, pMsg);
;;;542        break;
;;;543      case WM_DELETE:
;;;544        GUI_DEBUG_LOG("FRAMEWIN: FRAMEWIN_Callback(WM_DELETE)\n");
;;;545        GUI_ALLOC_FreePtr(&pObj->hText);
;;;546        break;
;;;547      }
;;;548      /* Let widget handle the standard messages */
;;;549      if (WIDGET_HandleActive(hWin, pMsg) == 0) {
;;;550        return;
;;;551      }
;;;552      WM_DefaultProc(pMsg);
;;;553    }
000508  b008              ADD      sp,sp,#0x20
00050a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1294|
00050e  6e28              LDR      r0,[r5,#0x60]         ;486
000510  60a0              STR      r0,[r4,#8]            ;486
000512  b008              ADD      sp,sp,#0x20
000514  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1304|
000518  4628              MOV      r0,r5                 ;490
00051a  f7fffffe          BL       _Paint
00051e  e06a              B        |L1.1526|
                  |L1.1312|
000520  4622              MOV      r2,r4                 ;493
000522  4629              MOV      r1,r5                 ;493
000524  4638              MOV      r0,r7                 ;493
000526  f7fffffe          BL       _OnTouch
00052a  b008              ADD      sp,sp,#0x20
00052c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1328|
000530  a903              ADD      r1,sp,#0xc            ;496
000532  4628              MOV      r0,r5                 ;496
000534  f7fffffe          BL       FRAMEWIN__CalcPositions
000538  9804              LDR      r0,[sp,#0x10]         ;497
00053a  f8c80000          STR      r0,[r8,#0]            ;497
00053e  9805              LDR      r0,[sp,#0x14]         ;497
000540  f8c80004          STR      r0,[r8,#4]            ;497
000544  b008              ADD      sp,sp,#0x20
000546  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1354|
00054a  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;500
00054e  60a0              STR      r0,[r4,#8]            ;500
                  |L1.1360|
000550  b008              ADD      sp,sp,#0x20
000552  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1366|
000556  68a0              LDR      r0,[r4,#8]            ;503
000558  2802              CMP      r0,#2                 ;503
00055a  d1f9              BNE      |L1.1360|
00055c  f8ad7006          STRH     r7,[sp,#6]            ;505
000560  68a0              LDR      r0,[r4,#8]            ;506
000562  9002              STR      r0,[sp,#8]            ;506
000564  2027              MOVS     r0,#0x27              ;507
000566  9000              STR      r0,[sp,#0]            ;507
000568  f9b40006          LDRSH    r0,[r4,#6]            ;508
00056c  4669              MOV      r1,sp                 ;508
00056e  f7fffffe          BL       WM__SendMessage
000572  b008              ADD      sp,sp,#0x20
000574  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1400|
000578  68a0              LDR      r0,[r4,#8]            ;512
00057a  2801              CMP      r0,#1                 ;512
00057c  d006              BEQ      |L1.1420|
00057e  2100              MOVS     r1,#0                 ;521
000580  4638              MOV      r0,r7                 ;521
000582  f7fffffe          BL       FRAMEWIN_SetActive
000586  b008              ADD      sp,sp,#0x20
000588  e8bd81f0          POP      {r4-r8,pc}
                  |L1.1420|
00058c  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;513
000590  f7fffffe          BL       WM_IsWindow
000594  b120              CBZ      r0,|L1.1440|
000596  f9b5005c          LDRSH    r0,[r5,#0x5c]         ;514
00059a  f7fffffe          BL       WM_SetFocus
00059e  e005              B        |L1.1452|
                  |L1.1440|
0005a0  f9b5004c          LDRSH    r0,[r5,#0x4c]         ;516
0005a4  f7fffffe          BL       WM_SetFocusOnNextChild
0005a8  f8a5005c          STRH     r0,[r5,#0x5c]         ;516
                  |L1.1452|
0005ac  2101              MOVS     r1,#1                 ;518
0005ae  4638              MOV      r0,r7                 ;518
0005b0  f7fffffe          BL       FRAMEWIN_SetActive
0005b4  2000              MOVS     r0,#0                 ;519
0005b6  60a0              STR      r0,[r4,#8]            ;519
                  |L1.1464|
0005b8  b008              ADD      sp,sp,#0x20
0005ba  e8bd81f0          POP      {r4-r8,pc}
0005be  e001              B        |L1.1476|
                  |L1.1472|
0005c0  e015              B        |L1.1518|
                  |L1.1474|
0005c2  e018              B        |L1.1526|
                  |L1.1476|
0005c4  f8b5005a          LDRH     r0,[r5,#0x5a]         ;528
0005c8  f0100f08          TST      r0,#8                 ;528
0005cc  d113              BNE      |L1.1526|
0005ce  68a0              LDR      r0,[r4,#8]            ;531
0005d0  6880              LDR      r0,[r0,#8]            ;532
0005d2  b180              CBZ      r0,|L1.1526|
0005d4  7a00              LDRB     r0,[r0,#8]            ;534
0005d6  b170              CBZ      r0,|L1.1526|
0005d8  4638              MOV      r0,r7                 ;535
0005da  f7fffffe          BL       WM_SetFocus
0005de  e00a              B        |L1.1526|
0005e0  e7ff              B        |L1.1506|
                  |L1.1506|
0005e2  4622              MOV      r2,r4                 ;541
0005e4  4629              MOV      r1,r5                 ;541
0005e6  4638              MOV      r0,r7                 ;541
0005e8  f7fffffe          BL       _OnChildHasFocus
0005ec  e003              B        |L1.1526|
                  |L1.1518|
0005ee  f1050050          ADD      r0,r5,#0x50           ;545
0005f2  f7fffffe          BL       GUI_ALLOC_FreePtr
                  |L1.1526|
0005f6  4621              MOV      r1,r4                 ;549
0005f8  4638              MOV      r0,r7                 ;549
0005fa  f7fffffe          BL       WIDGET_HandleActive
0005fe  2800              CMP      r0,#0                 ;549
000600  d0da              BEQ      |L1.1464|
000602  4620              MOV      r0,r4                 ;552
000604  f7fffffe          BL       WM_DefaultProc
000608  e7d6              B        |L1.1464|
;;;554    
                          ENDP

                  FRAMEWIN_SetText PROC
;;;617    */
;;;618    void FRAMEWIN_SetText(FRAMEWIN_Handle hObj, const char* s) {
00060a  b570              PUSH     {r4-r6,lr}
00060c  4604              MOV      r4,r0
00060e  460d              MOV      r5,r1
;;;619      if (hObj) {
000610  2c00              CMP      r4,#0
000612  d010              BEQ      |L1.1590|
;;;620        FRAMEWIN_Obj* pObj;
;;;621        GUI_LOCK();
000614  f7fffffe          BL       GUI_Lock
;;;622        pObj = FRAMEWIN_H2P(hObj);
000618  4620              MOV      r0,r4
00061a  f7fffffe          BL       GUI_ALLOC_h2p
;;;623        if (GUI__SetText(&pObj->hText, s)) {
00061e  4629              MOV      r1,r5
000620  3050              ADDS     r0,r0,#0x50
000622  f7fffffe          BL       GUI__SetText
000626  b110              CBZ      r0,|L1.1582|
;;;624          FRAMEWIN_Invalidate(hObj);
000628  4620              MOV      r0,r4
00062a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1582|
;;;625        }
;;;626        GUI_UNLOCK();
00062e  e8bd4070          POP      {r4-r6,lr}
000632  f7ffbffe          B.W      GUI_Unlock
                  |L1.1590|
;;;627      }
;;;628    }
000636  bd70              POP      {r4-r6,pc}
;;;629    
                          ENDP

                  FRAMEWIN_CreateEx PROC
;;;564    */
;;;565    FRAMEWIN_Handle FRAMEWIN_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
000638  e92d4fff          PUSH     {r0-r11,lr}
;;;566                                      int WinFlags, int ExFlags, int Id, const char* pTitle, WM_CALLBACK* cb)
;;;567    {
00063c  b089              SUB      sp,sp,#0x24
00063e  ac16              ADD      r4,sp,#0x58
000640  4606              MOV      r6,r0
000642  e8940530          LDM      r4,{r4,r5,r8,r10}
000646  468b              MOV      r11,r1
000648  f8dd906c          LDR      r9,[sp,#0x6c]
00064c  9f1a              LDR      r7,[sp,#0x68]
;;;568      FRAMEWIN_Handle hObj;
;;;569      /* Create the window */
;;;570      GUI_LOCK();
00064e  f7fffffe          BL       GUI_Lock
;;;571      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
000652  f4455580          ORR      r5,r5,#0x1000
;;;572      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, FRAMEWIN_Callback,
000656  2348              MOVS     r3,#0x48
000658  f2af12b7          ADR      r2,FRAMEWIN_Callback + 1
00065c  b2a9              UXTH     r1,r5
00065e  9202              STR      r2,[sp,#8]
000660  9101              STR      r1,[sp,#4]
000662  9303              STR      r3,[sp,#0xc]
000664  9400              STR      r4,[sp,#0]
000666  4659              MOV      r1,r11
000668  4630              MOV      r0,r6
00066a  9b0c              LDR      r3,[sp,#0x30]
00066c  9a0b              LDR      r2,[sp,#0x2c]
00066e  f7fffffe          BL       WM_CreateWindowAsChild
000672  4606              MOV      r6,r0
;;;573                                    sizeof(FRAMEWIN_Obj) - sizeof(WM_Obj));
;;;574      if (hObj) {
000674  b3f6              CBZ      r6,|L1.1780|
;;;575        FRAMEWIN_Obj* pObj;
;;;576        POSITIONS Pos;
;;;577        pObj = (FRAMEWIN_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000676  4630              MOV      r0,r6
000678  f7fffffe          BL       GUI_ALLOC_h2p
00067c  4604              MOV      r4,r0
;;;578        /* init widget specific variables */
;;;579        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE | FRAMEWIN_SF_TITLEVIS);
00067e  2230              MOVS     r2,#0x30
000680  4651              MOV      r1,r10
000682  4620              MOV      r0,r4
000684  f7fffffe          BL       WIDGET__Init
;;;580        /* init member variables */
;;;581        FRAMEWIN_INIT_ID(pObj);
;;;582        pObj->Props = FRAMEWIN__DefaultProps;
000688  4942              LDR      r1,|L1.1940|
00068a  4620              MOV      r0,r4
00068c  f8d1c00c          LDR      r12,[r1,#0xc]  ; FRAMEWIN__DefaultProps
000690  f8d1a010          LDR      r10,[r1,#0x10]  ; FRAMEWIN__DefaultProps
000694  688b              LDR      r3,[r1,#8]  ; FRAMEWIN__DefaultProps
000696  684a              LDR      r2,[r1,#4]  ; FRAMEWIN__DefaultProps
000698  f8c4c030          STR      r12,[r4,#0x30]
00069c  f8c4a034          STR      r10,[r4,#0x34]
0006a0  62e3              STR      r3,[r4,#0x2c]
0006a2  62a2              STR      r2,[r4,#0x28]
0006a4  f8d1c01c          LDR      r12,[r1,#0x1c]  ; FRAMEWIN__DefaultProps
0006a8  698b              LDR      r3,[r1,#0x18]  ; FRAMEWIN__DefaultProps
0006aa  694a              LDR      r2,[r1,#0x14]  ; FRAMEWIN__DefaultProps
0006ac  6a09              LDR      r1,[r1,#0x20]  ; FRAMEWIN__DefaultProps
0006ae  f8c4c040          STR      r12,[r4,#0x40]
0006b2  63e3              STR      r3,[r4,#0x3c]
0006b4  63a2              STR      r2,[r4,#0x38]
0006b6  6441              STR      r1,[r0,#0x44]
;;;583        pObj->cb             = cb;
0006b8  f8c49048          STR      r9,[r4,#0x48]
;;;584        pObj->Flags          = ExFlags;
0006bc  f8a4805a          STRH     r8,[r4,#0x5a]
;;;585        pObj->hFocussedChild = 0;
0006c0  2100              MOVS     r1,#0
0006c2  f8a4105c          STRH     r1,[r4,#0x5c]
;;;586        pObj->hMenu          = 0;
0006c6  f8a4104e          STRH     r1,[r4,#0x4e]
;;;587        pObj->pFirstHook     = NULL;
0006ca  6661              STR      r1,[r4,#0x64]
;;;588        FRAMEWIN__CalcPositions(pObj, &Pos);
0006cc  a904              ADD      r1,sp,#0x10
0006ce  f7fffffe          BL       FRAMEWIN__CalcPositions
;;;589        pObj->hClient = WM_CreateWindowAsChild(Pos.rClient.x0,Pos.rClient.y0,
0006d2  f2417182          MOV      r1,#0x1782
0006d6  9101              STR      r1,[sp,#4]
0006d8  9600              STR      r6,[sp,#0]
0006da  f9bd001a          LDRSH    r0,[sp,#0x1a]
0006de  f9bd1016          LDRSH    r1,[sp,#0x16]
0006e2  2300              MOVS     r3,#0
0006e4  4a2c              LDR      r2,|L1.1944|
0006e6  9303              STR      r3,[sp,#0xc]
0006e8  9202              STR      r2,[sp,#8]
0006ea  1a40              SUBS     r0,r0,r1
0006ec  1c43              ADDS     r3,r0,#1
0006ee  f9bd2018          LDRSH    r2,[sp,#0x18]
0006f2  e000              B        |L1.1782|
                  |L1.1780|
0006f4  e012              B        |L1.1820|
                  |L1.1782|
0006f6  f9bd0014          LDRSH    r0,[sp,#0x14]
0006fa  1a12              SUBS     r2,r2,r0
0006fc  1c52              ADDS     r2,r2,#1
0006fe  f7fffffe          BL       WM_CreateWindowAsChild
000702  f8a4004c          STRH     r0,[r4,#0x4c]
;;;590                                               Pos.rClient.x1 - Pos.rClient.x0 +1,
;;;591                                               Pos.rClient.y1 - Pos.rClient.y0 +1,
;;;592                                               hObj, 
;;;593                                               WM_CF_ANCHOR_RIGHT | WM_CF_ANCHOR_LEFT | WM_CF_ANCHOR_TOP | WM_CF_ANCHOR_BOTTOM | WM_CF_SHOW | WM_CF_LATE_CLIP, 
;;;594                                               FRAMEWIN__cbClient, 0);
;;;595        /* Normally we disable memory devices for the frame window:
;;;596         * The frame window does not flicker, and not using memory devices is usually faster.
;;;597         * You can still use memory by explicitly specifying the flag
;;;598         */
;;;599        if ((WinFlags & (WM_CF_MEMDEV | (WM_CF_MEMDEV_ON_REDRAW))) == 0) {
000706  f2420004          MOV      r0,#0x2004
00070a  4205              TST      r5,r0
00070c  d102              BNE      |L1.1812|
;;;600          WM_DisableMemdev(hObj);
00070e  4630              MOV      r0,r6
000710  f7fffffe          BL       WM_DisableMemdev
                  |L1.1812|
;;;601        }
;;;602        FRAMEWIN_SetText(hObj, pTitle);
000714  4639              MOV      r1,r7
000716  4630              MOV      r0,r6
000718  f7fffffe          BL       FRAMEWIN_SetText
                  |L1.1820|
;;;603      }
;;;604      GUI_UNLOCK();
00071c  f7fffffe          BL       GUI_Unlock
;;;605      return hObj;
;;;606    }
000720  b00d              ADD      sp,sp,#0x34
000722  4630              MOV      r0,r6                 ;605
000724  e8bd8ff0          POP      {r4-r11,pc}
;;;607    
                          ENDP

                  FRAMEWIN_SetTextAlign PROC
;;;633    */
;;;634    void FRAMEWIN_SetTextAlign(FRAMEWIN_Handle hObj, int Align) {
000728  b570              PUSH     {r4-r6,lr}
00072a  4605              MOV      r5,r0
00072c  460c              MOV      r4,r1
;;;635      if (hObj) {
00072e  2d00              CMP      r5,#0
000730  d011              BEQ      |L1.1878|
;;;636        FRAMEWIN_Obj* pObj;
;;;637        GUI_LOCK();
000732  f7fffffe          BL       GUI_Lock
;;;638        pObj = FRAMEWIN_H2P(hObj);
000736  4628              MOV      r0,r5
000738  f7fffffe          BL       GUI_ALLOC_h2p
;;;639        if (pObj->Props.TextAlign != Align) {
00073c  f9b01046          LDRSH    r1,[r0,#0x46]
000740  42a1              CMP      r1,r4
000742  d004              BEQ      |L1.1870|
;;;640          pObj->Props.TextAlign = Align;
000744  f8a04046          STRH     r4,[r0,#0x46]
;;;641          FRAMEWIN_Invalidate(hObj);
000748  4628              MOV      r0,r5
00074a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1870|
;;;642        }
;;;643        GUI_UNLOCK();
00074e  e8bd4070          POP      {r4-r6,lr}
000752  f7ffbffe          B.W      GUI_Unlock
                  |L1.1878|
;;;644      }
;;;645    }
000756  bd70              POP      {r4-r6,pc}
;;;646    
                          ENDP

                  FRAMEWIN_SetMoveable PROC
;;;650    */
;;;651    void FRAMEWIN_SetMoveable(FRAMEWIN_Handle hObj, int State) {
000758  b570              PUSH     {r4-r6,lr}
00075a  4605              MOV      r5,r0
00075c  460c              MOV      r4,r1
;;;652      if (hObj) {
00075e  2d00              CMP      r5,#0
000760  d016              BEQ      |L1.1936|
;;;653        FRAMEWIN_Obj* pObj;
;;;654        GUI_LOCK();
000762  f7fffffe          BL       GUI_Lock
;;;655        pObj = FRAMEWIN_H2P(hObj);
000766  4628              MOV      r0,r5
000768  f7fffffe          BL       GUI_ALLOC_h2p
;;;656        if (State) {
00076c  b134              CBZ      r4,|L1.1916|
;;;657          pObj->Flags |= FRAMEWIN_CF_MOVEABLE;
00076e  f8b0105a          LDRH     r1,[r0,#0x5a]
000772  f0410110          ORR      r1,r1,#0x10
000776  f8a0105a          STRH     r1,[r0,#0x5a]
00077a  e005              B        |L1.1928|
                  |L1.1916|
;;;658        } else {
;;;659          pObj->Flags &= ~FRAMEWIN_CF_MOVEABLE;
00077c  f8b0105a          LDRH     r1,[r0,#0x5a]
000780  f0210110          BIC      r1,r1,#0x10
000784  f8a0105a          STRH     r1,[r0,#0x5a]
                  |L1.1928|
;;;660        }
;;;661        GUI_UNLOCK();
000788  e8bd4070          POP      {r4-r6,lr}
00078c  f7ffbffe          B.W      GUI_Unlock
                  |L1.1936|
;;;662      }
;;;663    }
000790  bd70              POP      {r4-r6,pc}
;;;664    
                          ENDP

000792  0000              DCW      0x0000
                  |L1.1940|
                          DCD      ||.data||
                  |L1.1944|
                          DCD      FRAMEWIN__cbClient

                          AREA ||.data||, DATA, ALIGN=2

                  FRAMEWIN__MinVisibility
000000  0005              DCW      0x0005
000002  0000              DCB      0x00,0x00
                  FRAMEWIN__DefaultProps
                          DCD      GUI_Font8_1
                          DCD      0x00404040
                          DCD      0x00ff0000
                          DCD      0x00ffffff
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
00001c  00000003          DCW      0x0000,0x0003
000020  00010000          DCW      0x0001,0x0000
