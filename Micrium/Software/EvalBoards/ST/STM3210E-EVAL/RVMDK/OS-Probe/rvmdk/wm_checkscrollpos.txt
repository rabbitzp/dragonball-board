; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\wm_checkscrollpos.o --depend=.\rvmdk\wm_checkscrollpos.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\wm_checkscrollpos.crf ..\..\..\..\..\uCGUI\GUI\WM\WM_CheckScrollPos.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  WM_CheckScrollBounds PROC
;;;37     */
;;;38     void WM_CheckScrollBounds(WM_SCROLL_STATE* pScrollState) {
000000  6882              LDR      r2,[r0,#8]
;;;39       int Max;
;;;40       Max = pScrollState->NumItems - pScrollState->PageSize;
000002  6801              LDR      r1,[r0,#0]
000004  1a89              SUBS     r1,r1,r2
;;;41       if (Max < 0) {
000006  2900              CMP      r1,#0
000008  da00              BGE      |L1.12|
;;;42         Max = 0;
00000a  2100              MOVS     r1,#0
                  |L1.12|
;;;43       }
;;;44       /* Make sure scroll pos is in bounds */
;;;45       if (pScrollState->v < 0) {
00000c  6842              LDR      r2,[r0,#4]
00000e  2a00              CMP      r2,#0
000010  da01              BGE      |L1.22|
;;;46         pScrollState->v = 0;
000012  2200              MOVS     r2,#0
000014  6042              STR      r2,[r0,#4]
                  |L1.22|
;;;47       }
;;;48       if (pScrollState->v > Max) {
000016  6842              LDR      r2,[r0,#4]
000018  428a              CMP      r2,r1
00001a  dd00              BLE      |L1.30|
;;;49         pScrollState->v = Max;
00001c  6041              STR      r1,[r0,#4]
                  |L1.30|
;;;50       }
;;;51     }
00001e  4770              BX       lr
;;;52     
                          ENDP

                  WM_CheckScrollPos PROC
;;;60     */
;;;61     int  WM_CheckScrollPos(WM_SCROLL_STATE* pScrollState, int Pos, int LowerDist, int UpperDist) {
000020  b530              PUSH     {r4,r5,lr}
000022  4604              MOV      r4,r0
;;;62       int vOld;
;;;63       vOld = pScrollState->v;
000024  6865              LDR      r5,[r4,#4]
;;;64       /* Check upper limit */
;;;65       if (Pos > pScrollState->v + pScrollState->PageSize - 1) {
000026  68a0              LDR      r0,[r4,#8]
000028  eb050c00          ADD      r12,r5,r0
00002c  f1ac0c01          SUB      r12,r12,#1
000030  458c              CMP      r12,r1
000032  da03              BGE      |L1.60|
;;;66         pScrollState->v = Pos - (pScrollState->PageSize - 1) + UpperDist;
000034  1a08              SUBS     r0,r1,r0
000036  4418              ADD      r0,r0,r3
000038  1c40              ADDS     r0,r0,#1
00003a  6060              STR      r0,[r4,#4]
                  |L1.60|
;;;67       }
;;;68       /* Check lower limit */
;;;69       if (Pos < pScrollState->v) {
00003c  6860              LDR      r0,[r4,#4]
00003e  4288              CMP      r0,r1
000040  dd01              BLE      |L1.70|
;;;70         pScrollState->v = Pos - LowerDist;
000042  1a88              SUBS     r0,r1,r2
000044  6060              STR      r0,[r4,#4]
                  |L1.70|
;;;71       }
;;;72       WM_CheckScrollBounds(pScrollState);
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       WM_CheckScrollBounds
;;;73       return pScrollState->v - vOld;
00004c  6860              LDR      r0,[r4,#4]
00004e  1b40              SUBS     r0,r0,r5
;;;74     }
000050  bd30              POP      {r4,r5,pc}
;;;75     
                          ENDP

                  WM_SetScrollValue PROC
;;;82     */
;;;83     int  WM_SetScrollValue(WM_SCROLL_STATE* pScrollState, int v) {
000052  b510              PUSH     {r4,lr}
000054  4603              MOV      r3,r0
;;;84       int vOld;
;;;85       vOld = pScrollState->v;
000056  685c              LDR      r4,[r3,#4]
;;;86       pScrollState->v = v;
000058  6059              STR      r1,[r3,#4]
;;;87       WM_CheckScrollBounds(pScrollState);
00005a  4618              MOV      r0,r3
00005c  f7fffffe          BL       WM_CheckScrollBounds
;;;88       return pScrollState->v - vOld;
000060  6858              LDR      r0,[r3,#4]
000062  1b00              SUBS     r0,r0,r4
;;;89     }
000064  bd10              POP      {r4,pc}
;;;90     
                          ENDP

