; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_errorout.o --depend=.\rvmdk\gui_errorout.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_errorout.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_ErrorOut.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _CopyString PROC
;;;43     */
;;;44     static void _CopyString(char*d, const char*s, int MaxLen) {
000000  e003              B        |L1.10|
                  |L1.2|
;;;45       while ((MaxLen > 0) && *s) {
;;;46         *d++ = *s++;
000002  f8003b01          STRB     r3,[r0],#1
000006  1c49              ADDS     r1,r1,#1
;;;47         MaxLen--;
000008  1e52              SUBS     r2,r2,#1
                  |L1.10|
00000a  2a00              CMP      r2,#0                 ;45
00000c  dd02              BLE      |L1.20|
00000e  780b              LDRB     r3,[r1,#0]            ;45
000010  2b00              CMP      r3,#0                 ;45
000012  d1f6              BNE      |L1.2|
                  |L1.20|
;;;48       }
;;;49       *d = 0;
000014  2100              MOVS     r1,#0
000016  7001              STRB     r1,[r0,#0]
;;;50     }
000018  4770              BX       lr
;;;51     
                          ENDP

                  GUI_ErrorOut PROC
;;;61     */
;;;62     void GUI_ErrorOut(const char *s) { GUI_X_ErrorOut(s); }
00001a  f7ffbffe          B.W      GUI_X_ErrorOut
;;;63     
                          ENDP

                  GUI_ErrorOut1 PROC
;;;67     */
;;;68     void GUI_ErrorOut1(const char *s, int p0) {
00001e  b530              PUSH     {r4,r5,lr}
000020  b091              SUB      sp,sp,#0x44
000022  4605              MOV      r5,r0
000024  460c              MOV      r4,r1
;;;69       char ac[MAXLEN + 10];
;;;70       char* sOut = ac;
000026  a802              ADD      r0,sp,#8
000028  9001              STR      r0,[sp,#4]
;;;71       GUI_MEMSET((U8*)ac, 0, sizeof(ac));
00002a  223c              MOVS     r2,#0x3c
00002c  2100              MOVS     r1,#0
00002e  f7fffffe          BL       GUI__memset
;;;72       _CopyString(ac, s, MAXLEN);
000032  2232              MOVS     r2,#0x32
000034  4629              MOV      r1,r5
000036  a802              ADD      r0,sp,#8
000038  f7fffffe          BL       _CopyString
;;;73       sOut += strlen(sOut);
00003c  9801              LDR      r0,[sp,#4]
00003e  f7fffffe          BL       strlen
000042  9901              LDR      r1,[sp,#4]
000044  4408              ADD      r0,r0,r1
000046  9001              STR      r0,[sp,#4]
;;;74       GUI__AddSpaceHex(p0, 8, &sOut);
000048  aa01              ADD      r2,sp,#4
00004a  2108              MOVS     r1,#8
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       GUI__AddSpaceHex
;;;75       GUI_ErrorOut(ac);
000052  a802              ADD      r0,sp,#8
000054  f7fffffe          BL       GUI_ErrorOut
;;;76     }
000058  b011              ADD      sp,sp,#0x44
00005a  bd30              POP      {r4,r5,pc}
;;;77     
                          ENDP

                  GUI_ErrorOut2 PROC
;;;81     */
;;;82     void GUI_ErrorOut2(const char *s, int p0, int p1) {
00005c  b570              PUSH     {r4-r6,lr}
00005e  b094              SUB      sp,sp,#0x50
000060  4606              MOV      r6,r0
000062  460c              MOV      r4,r1
000064  4615              MOV      r5,r2
;;;83       char ac[MAXLEN + 20];
;;;84       char* sOut = ac;
000066  a802              ADD      r0,sp,#8
000068  9001              STR      r0,[sp,#4]
;;;85       GUI_MEMSET((U8*)ac, 0, sizeof(ac));
00006a  2246              MOVS     r2,#0x46
00006c  2100              MOVS     r1,#0
00006e  f7fffffe          BL       GUI__memset
;;;86       _CopyString(ac, s, MAXLEN);
000072  2232              MOVS     r2,#0x32
000074  4631              MOV      r1,r6
000076  a802              ADD      r0,sp,#8
000078  f7fffffe          BL       _CopyString
;;;87       sOut += strlen(sOut);
00007c  9801              LDR      r0,[sp,#4]
00007e  f7fffffe          BL       strlen
000082  9901              LDR      r1,[sp,#4]
000084  4408              ADD      r0,r0,r1
000086  9001              STR      r0,[sp,#4]
;;;88       GUI__AddSpaceHex(p0, 8, &sOut);
000088  aa01              ADD      r2,sp,#4
00008a  2108              MOVS     r1,#8
00008c  4620              MOV      r0,r4
00008e  f7fffffe          BL       GUI__AddSpaceHex
;;;89       GUI__AddSpaceHex(p1, 8, &sOut);
000092  aa01              ADD      r2,sp,#4
000094  2108              MOVS     r1,#8
000096  4628              MOV      r0,r5
000098  f7fffffe          BL       GUI__AddSpaceHex
;;;90       GUI_ErrorOut(ac);
00009c  a802              ADD      r0,sp,#8
00009e  f7fffffe          BL       GUI_ErrorOut
;;;91     }
0000a2  b014              ADD      sp,sp,#0x50
0000a4  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP

                  GUI_ErrorOut3 PROC
;;;96     */
;;;97     void GUI_ErrorOut3(const char *s, int p0, int p1, int p2) {
0000a6  b5f0              PUSH     {r4-r7,lr}
0000a8  b097              SUB      sp,sp,#0x5c
0000aa  4607              MOV      r7,r0
0000ac  460c              MOV      r4,r1
0000ae  4615              MOV      r5,r2
0000b0  461e              MOV      r6,r3
;;;98       char ac[MAXLEN + 30];
;;;99       char* sOut = ac;
0000b2  a802              ADD      r0,sp,#8
0000b4  9001              STR      r0,[sp,#4]
;;;100      GUI_MEMSET((U8*)ac, 0, sizeof(ac));
0000b6  2250              MOVS     r2,#0x50
0000b8  2100              MOVS     r1,#0
0000ba  f7fffffe          BL       GUI__memset
;;;101      _CopyString(ac, s, MAXLEN);
0000be  2232              MOVS     r2,#0x32
0000c0  4639              MOV      r1,r7
0000c2  a802              ADD      r0,sp,#8
0000c4  f7fffffe          BL       _CopyString
;;;102      sOut += strlen(sOut);
0000c8  9801              LDR      r0,[sp,#4]
0000ca  f7fffffe          BL       strlen
0000ce  9901              LDR      r1,[sp,#4]
0000d0  4408              ADD      r0,r0,r1
0000d2  9001              STR      r0,[sp,#4]
;;;103      GUI__AddSpaceHex(p0, 8, &sOut);
0000d4  aa01              ADD      r2,sp,#4
0000d6  2108              MOVS     r1,#8
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       GUI__AddSpaceHex
;;;104      GUI__AddSpaceHex(p1, 8, &sOut);
0000de  aa01              ADD      r2,sp,#4
0000e0  2108              MOVS     r1,#8
0000e2  4628              MOV      r0,r5
0000e4  f7fffffe          BL       GUI__AddSpaceHex
;;;105      GUI__AddSpaceHex(p2, 8, &sOut);
0000e8  aa01              ADD      r2,sp,#4
0000ea  2108              MOVS     r1,#8
0000ec  4630              MOV      r0,r6
0000ee  f7fffffe          BL       GUI__AddSpaceHex
;;;106      GUI_ErrorOut(ac);
0000f2  a802              ADD      r0,sp,#8
0000f4  f7fffffe          BL       GUI_ErrorOut
;;;107    }
0000f8  b017              ADD      sp,sp,#0x5c
0000fa  bdf0              POP      {r4-r7,pc}
;;;108    
                          ENDP

                  GUI_ErrorOut4 PROC
;;;112    */
;;;113    void GUI_ErrorOut4(const char *s, int p0, int p1, int p2, int p3) {
0000fc  e92d41f0          PUSH     {r4-r8,lr}
000100  b098              SUB      sp,sp,#0x60
000102  4680              MOV      r8,r0
000104  9c1e              LDR      r4,[sp,#0x78]
000106  460d              MOV      r5,r1
000108  4616              MOV      r6,r2
00010a  461f              MOV      r7,r3
;;;114      char ac[MAXLEN + 40] = {0};
00010c  215c              MOVS     r1,#0x5c
00010e  a801              ADD      r0,sp,#4
000110  f7fffffe          BL       __aeabi_memclr4
;;;115      char* sOut = ac;
000114  a801              ADD      r0,sp,#4
000116  9000              STR      r0,[sp,#0]
;;;116      GUI_MEMSET((U8*)ac, 0, sizeof(ac));
000118  225a              MOVS     r2,#0x5a
00011a  2100              MOVS     r1,#0
00011c  f7fffffe          BL       GUI__memset
;;;117      _CopyString(ac, s, MAXLEN);
000120  2232              MOVS     r2,#0x32
000122  4641              MOV      r1,r8
000124  a801              ADD      r0,sp,#4
000126  f7fffffe          BL       _CopyString
;;;118      sOut += strlen(sOut);
00012a  9800              LDR      r0,[sp,#0]
00012c  f7fffffe          BL       strlen
000130  9900              LDR      r1,[sp,#0]
000132  4408              ADD      r0,r0,r1
000134  9000              STR      r0,[sp,#0]
;;;119      GUI__AddSpaceHex(p0, 8, &sOut);
000136  466a              MOV      r2,sp
000138  2108              MOVS     r1,#8
00013a  4628              MOV      r0,r5
00013c  f7fffffe          BL       GUI__AddSpaceHex
;;;120      GUI__AddSpaceHex(p1, 8, &sOut);
000140  466a              MOV      r2,sp
000142  2108              MOVS     r1,#8
000144  4630              MOV      r0,r6
000146  f7fffffe          BL       GUI__AddSpaceHex
;;;121      GUI__AddSpaceHex(p2, 8, &sOut);
00014a  466a              MOV      r2,sp
00014c  2108              MOVS     r1,#8
00014e  4638              MOV      r0,r7
000150  f7fffffe          BL       GUI__AddSpaceHex
;;;122      GUI__AddSpaceHex(p3, 8, &sOut);
000154  466a              MOV      r2,sp
000156  2108              MOVS     r1,#8
000158  4620              MOV      r0,r4
00015a  f7fffffe          BL       GUI__AddSpaceHex
;;;123      GUI_ErrorOut(ac);
00015e  a801              ADD      r0,sp,#4
000160  f7fffffe          BL       GUI_ErrorOut
;;;124    }
000164  b018              ADD      sp,sp,#0x60
000166  e8bd81f0          POP      {r4-r8,pc}
;;;125    
                          ENDP

