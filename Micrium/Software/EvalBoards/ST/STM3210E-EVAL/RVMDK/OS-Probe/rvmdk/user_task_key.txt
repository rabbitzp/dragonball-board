; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\user_task_key.o --depend=.\rvmdk\user_task_key.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\user_task_key.crf ..\..\..\..\..\User\user_task_key.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  UKey_EventLoop PROC
;;;105    
;;;106    void UKey_EventLoop(void)
000000  4c68              LDR      r4,|L1.420|
;;;107    {
;;;108        while (1)
;;;109        {
;;;110            /* HOME, PD3 */
;;;111            if(0 == GPIO_ReadInputDataBit(GPIOD, PIN_USER_KEY_HOME))//按键按下
;;;112            {
;;;113                /* 延迟去抖 */
;;;114                OSTimeDlyHMSM(0, 0, 0, 50);
;;;115                if(0 == GPIO_ReadInputDataBit(GPIOD, PIN_USER_KEY_HOME))//按键按下
;;;116                {
;;;117                    UCore_PostMessage1(UCORE_MESSAGE_TYPE_KEY_HOME, 0, NULL); 
;;;118                }
;;;119            }
;;;120    
;;;121            /* OK, PC6 */
;;;122            if(0 == GPIO_ReadInputDataBit(GPIOC, PIN_USER_KEY_OK))//按键按下
;;;123            {
;;;124                /* 延迟去抖 */
;;;125                OSTimeDlyHMSM(0, 0, 0, 50);
;;;126                if(0 == GPIO_ReadInputDataBit(GPIOC, PIN_USER_KEY_OK))//按键按下
;;;127                {
;;;128                    UCore_PostMessage1(UCORE_MESSAGE_TYPE_KEY_OK, 0, NULL); 
;;;129                }
;;;130            }
;;;131    
;;;132            /* UP, PC7 */
;;;133            if(0 == GPIO_ReadInputDataBit(GPIOC, PIN_USER_KEY_UP))//按键按下
;;;134            {
;;;135                /* 延迟去抖 */
;;;136                OSTimeDlyHMSM(0, 0, 0, 50);
;;;137                if(0 == GPIO_ReadInputDataBit(GPIOC, PIN_USER_KEY_UP))//按键按下
;;;138                {
;;;139                    UCore_PostMessage1(UCORE_MESSAGE_TYPE_KEY_UP, 0, NULL); 
;;;140                }
;;;141            } 
;;;142    
;;;143            /* DOWN, PA8 */
;;;144            if(0 == GPIO_ReadInputDataBit(GPIOA, PIN_USER_KEY_DOWN))//按键按下
000002  4d69              LDR      r5,|L1.424|
;;;145            {
;;;146                /* 延迟去抖 */
;;;147                OSTimeDlyHMSM(0, 0, 0, 50);
;;;148                if(0 == GPIO_ReadInputDataBit(GPIOA, PIN_USER_KEY_DOWN))//按键按下
;;;149                {
;;;150                    UCore_PostMessage1(UCORE_MESSAGE_TYPE_KEY_DOWN, 0, NULL); 
;;;151                }
;;;152            } 
;;;153    
;;;154            /* RETURN, PG7 */
;;;155            if(0 == GPIO_ReadInputDataBit(GPIOG, PIN_USER_KEY_RETURN))//按键按下
000004  4e69              LDR      r6,|L1.428|
000006  4f6a              LDR      r7,|L1.432|
000008  e06b              B        |L1.226|
                  |L1.10|
00000a  2200              MOVS     r2,#0                 ;114
00000c  2332              MOVS     r3,#0x32              ;114
00000e  4611              MOV      r1,r2                 ;114
000010  4610              MOV      r0,r2                 ;114
000012  f7fffffe          BL       OSTimeDlyHMSM
000016  2108              MOVS     r1,#8                 ;115
000018  4638              MOV      r0,r7                 ;115
00001a  f7fffffe          BL       GPIO_ReadInputDataBit
00001e  b920              CBNZ     r0,|L1.42|
000020  2200              MOVS     r2,#0                 ;117
000022  4611              MOV      r1,r2                 ;117
000024  2064              MOVS     r0,#0x64              ;117
000026  f7fffffe          BL       UCore_PostMessage1
                  |L1.42|
00002a  2140              MOVS     r1,#0x40              ;122
00002c  4620              MOV      r0,r4                 ;122
00002e  f7fffffe          BL       GPIO_ReadInputDataBit
000032  b978              CBNZ     r0,|L1.84|
000034  2200              MOVS     r2,#0                 ;125
000036  2332              MOVS     r3,#0x32              ;125
000038  4611              MOV      r1,r2                 ;125
00003a  4610              MOV      r0,r2                 ;125
00003c  f7fffffe          BL       OSTimeDlyHMSM
000040  2140              MOVS     r1,#0x40              ;126
000042  4620              MOV      r0,r4                 ;126
000044  f7fffffe          BL       GPIO_ReadInputDataBit
000048  b920              CBNZ     r0,|L1.84|
00004a  2200              MOVS     r2,#0                 ;128
00004c  4611              MOV      r1,r2                 ;128
00004e  2065              MOVS     r0,#0x65              ;128
000050  f7fffffe          BL       UCore_PostMessage1
                  |L1.84|
000054  2180              MOVS     r1,#0x80              ;133
000056  4620              MOV      r0,r4                 ;133
000058  f7fffffe          BL       GPIO_ReadInputDataBit
00005c  b978              CBNZ     r0,|L1.126|
00005e  2200              MOVS     r2,#0                 ;136
000060  2332              MOVS     r3,#0x32              ;136
000062  4611              MOV      r1,r2                 ;136
000064  4610              MOV      r0,r2                 ;136
000066  f7fffffe          BL       OSTimeDlyHMSM
00006a  2180              MOVS     r1,#0x80              ;137
00006c  4620              MOV      r0,r4                 ;137
00006e  f7fffffe          BL       GPIO_ReadInputDataBit
000072  b920              CBNZ     r0,|L1.126|
000074  2200              MOVS     r2,#0                 ;139
000076  4611              MOV      r1,r2                 ;139
000078  2066              MOVS     r0,#0x66              ;139
00007a  f7fffffe          BL       UCore_PostMessage1
                  |L1.126|
00007e  f44f7180          MOV      r1,#0x100             ;144
000082  4628              MOV      r0,r5                 ;144
000084  f7fffffe          BL       GPIO_ReadInputDataBit
000088  b980              CBNZ     r0,|L1.172|
00008a  2200              MOVS     r2,#0                 ;147
00008c  2332              MOVS     r3,#0x32              ;147
00008e  4611              MOV      r1,r2                 ;147
000090  4610              MOV      r0,r2                 ;147
000092  f7fffffe          BL       OSTimeDlyHMSM
000096  f44f7180          MOV      r1,#0x100             ;148
00009a  4628              MOV      r0,r5                 ;148
00009c  f7fffffe          BL       GPIO_ReadInputDataBit
0000a0  b920              CBNZ     r0,|L1.172|
0000a2  2200              MOVS     r2,#0                 ;150
0000a4  4611              MOV      r1,r2                 ;150
0000a6  2067              MOVS     r0,#0x67              ;150
0000a8  f7fffffe          BL       UCore_PostMessage1
                  |L1.172|
0000ac  2180              MOVS     r1,#0x80
0000ae  4630              MOV      r0,r6
0000b0  f7fffffe          BL       GPIO_ReadInputDataBit
0000b4  b978              CBNZ     r0,|L1.214|
;;;156            {
;;;157                /* 延迟去抖 */
;;;158                OSTimeDlyHMSM(0, 0, 0, 50);
0000b6  2200              MOVS     r2,#0
0000b8  2332              MOVS     r3,#0x32
0000ba  4611              MOV      r1,r2
0000bc  4610              MOV      r0,r2
0000be  f7fffffe          BL       OSTimeDlyHMSM
;;;159                if(0 == GPIO_ReadInputDataBit(GPIOG, PIN_USER_KEY_RETURN))//按键按下
0000c2  2180              MOVS     r1,#0x80
0000c4  4630              MOV      r0,r6
0000c6  f7fffffe          BL       GPIO_ReadInputDataBit
0000ca  b920              CBNZ     r0,|L1.214|
;;;160                {
;;;161                    UCore_PostMessage1(UCORE_MESSAGE_TYPE_KEY_RETURN, 0, NULL); 
0000cc  2200              MOVS     r2,#0
0000ce  4611              MOV      r1,r2
0000d0  2068              MOVS     r0,#0x68
0000d2  f7fffffe          BL       UCore_PostMessage1
                  |L1.214|
;;;162                }
;;;163            }        
;;;164                    
;;;165            OSTimeDlyHMSM(0, 0, 0, 200);
0000d6  2200              MOVS     r2,#0
0000d8  23c8              MOVS     r3,#0xc8
0000da  4611              MOV      r1,r2
0000dc  4610              MOV      r0,r2
0000de  f7fffffe          BL       OSTimeDlyHMSM
                  |L1.226|
0000e2  2108              MOVS     r1,#8                 ;111
0000e4  4638              MOV      r0,r7                 ;111
0000e6  f7fffffe          BL       GPIO_ReadInputDataBit
0000ea  2800              CMP      r0,#0                 ;111
0000ec  d19d              BNE      |L1.42|
0000ee  e78c              B        |L1.10|
;;;166        }
;;;167    }
;;;168    
                          ENDP

                  UKey_Init PROC
;;;64     
;;;65     void UKey_Init(void)
0000f0  b538              PUSH     {r3-r5,lr}
;;;66     {
;;;67         GPIO_InitTypeDef GPIO_InitStructure;                    //声明GPIO_InitStructure
;;;68         
;;;69         /* HOME KEY PD3 */
;;;70         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);    //开GPIO时钟
0000f2  2101              MOVS     r1,#1
0000f4  2020              MOVS     r0,#0x20
0000f6  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;71     
;;;72         GPIO_InitStructure.GPIO_Pin = PIN_USER_KEY_HOME;
0000fa  2008              MOVS     r0,#8
0000fc  f8ad0000          STRH     r0,[sp,#0]
;;;73         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;           //上拉输入
000100  2448              MOVS     r4,#0x48
000102  f88d4003          STRB     r4,[sp,#3]
;;;74         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;        //最高输出速率2MHz
000106  2502              MOVS     r5,#2
000108  f88d5002          STRB     r5,[sp,#2]
;;;75     
;;;76         GPIO_Init(GPIOD, &GPIO_InitStructure);                  //初始化GPIO
00010c  4669              MOV      r1,sp
00010e  4828              LDR      r0,|L1.432|
000110  f7fffffe          BL       GPIO_Init
;;;77     
;;;78         /* OK/UP KEY PC6 */
;;;79         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);    //开GPIO时钟
000114  2101              MOVS     r1,#1
000116  2010              MOVS     r0,#0x10
000118  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;80     
;;;81         GPIO_InitStructure.GPIO_Pin = PIN_USER_KEY_OK | PIN_USER_KEY_UP;
00011c  20c0              MOVS     r0,#0xc0
00011e  f8ad0000          STRH     r0,[sp,#0]
;;;82         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;           //上拉输入
000122  f88d4003          STRB     r4,[sp,#3]
;;;83         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;        //最高输出速率2MHz
000126  f88d5002          STRB     r5,[sp,#2]
;;;84     
;;;85         GPIO_Init(GPIOC, &GPIO_InitStructure);                  //初始化GPIO    
00012a  4669              MOV      r1,sp
00012c  481d              LDR      r0,|L1.420|
00012e  f7fffffe          BL       GPIO_Init
;;;86     
;;;87         /* DOWN KEY PA8 */
;;;88         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);    //开GPIO时钟
000132  2101              MOVS     r1,#1
000134  2004              MOVS     r0,#4
000136  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;89     
;;;90         GPIO_InitStructure.GPIO_Pin = PIN_USER_KEY_DOWN;
00013a  01e8              LSLS     r0,r5,#7
00013c  f8ad0000          STRH     r0,[sp,#0]
;;;91         GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;           //上拉输入
000140  f88d4003          STRB     r4,[sp,#3]
;;;92         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;        //最高输出速率2MHz
000144  f88d5002          STRB     r5,[sp,#2]
;;;93     
;;;94         GPIO_Init(GPIOA, &GPIO_InitStructure);                  //初始化GPIO    
000148  4669              MOV      r1,sp
00014a  4817              LDR      r0,|L1.424|
00014c  f7fffffe          BL       GPIO_Init
;;;95     
;;;96         /* RETURN KEY PG7 */
;;;97         RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOG, ENABLE);    //开GPIO时钟
000150  2101              MOVS     r1,#1
000152  0208              LSLS     r0,r1,#8
000154  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;98     
;;;99         GPIO_InitStructure.GPIO_Pin = PIN_USER_KEY_RETURN;
000158  2080              MOVS     r0,#0x80
00015a  f8ad0000          STRH     r0,[sp,#0]
;;;100        GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;           //上拉输入
00015e  f88d4003          STRB     r4,[sp,#3]
;;;101        GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;        //最高输出速率2MHz
000162  f88d5002          STRB     r5,[sp,#2]
;;;102    
;;;103        GPIO_Init(GPIOG, &GPIO_InitStructure);                  //初始化GPIO      
000166  4669              MOV      r1,sp
000168  4810              LDR      r0,|L1.428|
00016a  f7fffffe          BL       GPIO_Init
;;;104    }
00016e  bd38              POP      {r3-r5,pc}
;;;105    
                          ENDP

                  UKey_TaskProc PROC
;;;51     
;;;52     void UKey_TaskProc(void *p_arg)
000170  a010              ADR      r0,|L1.436|
;;;53     {
;;;54         printf("User key Task Start.\r\n");
000172  f7fffffe          BL       __2printf
;;;55     
;;;56         /* call init */
;;;57         UKey_Init();
000176  f7fffffe          BL       UKey_Init
;;;58     
;;;59         /* enter event loop */
;;;60         UKey_EventLoop();
00017a  f7fffffe          BL       UKey_EventLoop
;;;61     
;;;62         printf("User key Task Exit.\r\n");
;;;63     }
;;;64     
                          ENDP

                  UKey_Start PROC
;;;33     
;;;34     u8 UKey_Start(void)
00017e  b510              PUSH     {r4,lr}
;;;35     {
;;;36         u8          ucResult    = UCORE_ERR_COMMON_FAILED;
;;;37     
;;;38         printf("starting user task key...\r\n");
000180  a012              ADR      r0,|L1.460|
000182  f7fffffe          BL       __2printf
;;;39     
;;;40         ucResult = OSTaskCreate(UKey_TaskProc, (void *)0, (OS_STK *)&g_UserTaskKeySTK[DEFAULT_USER_KEY_STK_SIZE - 1], DEFAULT_USER_TASK_KEY_PRIO);
000186  230b              MOVS     r3,#0xb
000188  4a17              LDR      r2,|L1.488|
00018a  2100              MOVS     r1,#0
00018c  4817              LDR      r0,|L1.492|
00018e  f7fffffe          BL       OSTaskCreate
;;;41     
;;;42         if (OS_ERR_NONE == ucResult)
000192  b128              CBZ      r0,|L1.416|
;;;43         {
;;;44             return UCORE_ERR_SUCCESS;
;;;45         }
;;;46     
;;;47         printf("User task Key Failed value:%d.\r\n", ucResult);
000194  4601              MOV      r1,r0
000196  a016              ADR      r0,|L1.496|
000198  f7fffffe          BL       __2printf
;;;48     
;;;49         return UCORE_ERR_CREATE_TASK_FAILED;
00019c  2004              MOVS     r0,#4
;;;50     }
00019e  bd10              POP      {r4,pc}
                  |L1.416|
0001a0  2000              MOVS     r0,#0                 ;44
0001a2  bd10              POP      {r4,pc}
;;;51     
                          ENDP

                  |L1.420|
                          DCD      0x40011000
                  |L1.424|
                          DCD      0x40010800
                  |L1.428|
                          DCD      0x40012000
                  |L1.432|
                          DCD      0x40011400
                  |L1.436|
0001b4  55736572          DCB      "User key Task Start.\r\n",0
0001b8  206b6579
0001bc  20546173
0001c0  6b205374
0001c4  6172742e
0001c8  0d0a00  
0001cb  00                DCB      0
                  |L1.460|
0001cc  73746172          DCB      "starting user task key...\r\n",0
0001d0  74696e67
0001d4  20757365
0001d8  72207461
0001dc  736b206b
0001e0  65792e2e
0001e4  2e0d0a00
                  |L1.488|
                          DCD      ||.bss||+0xfc
                  |L1.492|
                          DCD      UKey_TaskProc
                  |L1.496|
0001f0  55736572          DCB      "User task Key Failed value:%d.\r\n",0
0001f4  20746173
0001f8  6b204b65
0001fc  79204661
000200  696c6564
000204  2076616c
000208  75653a25
00020c  642e0d0a
000210  00      
000211  00                DCB      0
000212  00                DCB      0
000213  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  g_UserTaskKeySTK
                          %        256
