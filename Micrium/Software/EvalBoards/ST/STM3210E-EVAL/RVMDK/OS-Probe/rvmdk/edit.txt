; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\edit.o --depend=.\rvmdk\edit.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\edit.crf ..\..\..\..\..\uCGUI\GUI\Widget\EDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _Paint PROC
;;;100    */
;;;101    static void _Paint(EDIT_Obj* pObj, EDIT_Handle hObj) {
000000  e92d43f0          PUSH     {r4-r9,lr}
000004  b08b              SUB      sp,sp,#0x2c
000006  4604              MOV      r4,r0
000008  4608              MOV      r0,r1
;;;102      GUI_RECT rFillRect, rInside, rText, rInvert;
;;;103      const char GUI_UNI_PTR * pText = NULL;
00000a  2700              MOVS     r7,#0
;;;104      int IsEnabled, CursorWidth;
;;;105      IsEnabled = WM__IsEnabled(hObj);
00000c  f7fffffe          BL       WM__IsEnabled
;;;106      /* Set colors and font */
;;;107      LCD_SetBkColor(pObj->Props.aBkColor[IsEnabled]);
000010  eb040080          ADD      r0,r4,r0,LSL #2
000014  6e80              LDR      r0,[r0,#0x68]
000016  f7fffffe          BL       LCD_SetBkColor
;;;108      LCD_SetColor(pObj->Props.aTextColor[0]);
00001a  6e20              LDR      r0,[r4,#0x60]
00001c  f7fffffe          BL       LCD_SetColor
;;;109      GUI_SetFont(pObj->Props.pFont);
000020  6de0              LDR      r0,[r4,#0x5c]
000022  f7fffffe          BL       GUI_SetFont
;;;110      /* Calculate size */
;;;111      WIDGET__GetInsideRect(&pObj->Widget, &rFillRect);
000026  a908              ADD      r1,sp,#0x20
000028  4620              MOV      r0,r4
00002a  f7fffffe          BL       WIDGET__GetInsideRect
;;;112      if (pObj->hpText) {
00002e  f9b40028          LDRSH    r0,[r4,#0x28]
000032  b110              CBZ      r0,|L1.58|
;;;113        pText = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000034  f7fffffe          BL       GUI_ALLOC_h2p
000038  4607              MOV      r7,r0
                  |L1.58|
;;;114      }
;;;115      rInside = rFillRect;
00003a  9909              LDR      r1,[sp,#0x24]
00003c  9808              LDR      r0,[sp,#0x20]
00003e  9107              STR      r1,[sp,#0x1c]
000040  9006              STR      r0,[sp,#0x18]
;;;116      rInside.x0 += pObj->Props.Border + EDIT_XOFF;
000042  f8bd1018          LDRH     r1,[sp,#0x18]
000046  6da0              LDR      r0,[r4,#0x58]
000048  4401              ADD      r1,r1,r0
00004a  1c49              ADDS     r1,r1,#1
00004c  f8ad1018          STRH     r1,[sp,#0x18]
;;;117      rInside.x1 -= pObj->Props.Border + EDIT_XOFF;
000050  f8bd101c          LDRH     r1,[sp,#0x1c]
000054  1a08              SUBS     r0,r1,r0
000056  1e40              SUBS     r0,r0,#1
000058  f8ad001c          STRH     r0,[sp,#0x1c]
;;;118      GUI__CalcTextRect(pText, &rInside, &rText, pObj->Props.Align);
00005c  aa04              ADD      r2,sp,#0x10
00005e  a906              ADD      r1,sp,#0x18
000060  4638              MOV      r0,r7
000062  6d63              LDR      r3,[r4,#0x54]
000064  f7fffffe          BL       GUI__CalcTextRect
;;;119      /* Calculate position and size of cursor */
;;;120      if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
000068  8ce0              LDRH     r0,[r4,#0x26]
00006a  f0100f01          TST      r0,#1
00006e  d04a              BEQ      |L1.262|
;;;121        int NumChars;
;;;122        CursorWidth = ((pObj->XSizeCursor > 0) ? (pObj->XSizeCursor) : (1));
000070  f8945049          LDRB     r5,[r4,#0x49]
000074  b905              CBNZ     r5,|L1.120|
000076  2501              MOVS     r5,#1
                  |L1.120|
;;;123        NumChars    = GUI__GetNumChars(pText);
000078  4638              MOV      r0,r7
00007a  f7fffffe          BL       GUI__GetNumChars
00007e  4680              MOV      r8,r0
;;;124        if (pText) {
000080  b3f7              CBZ      r7,|L1.256|
;;;125          U16 Char;
;;;126          int i, IsRTL = 0;
000082  2000              MOVS     r0,#0
000084  9001              STR      r0,[sp,#4]
;;;127          if ((pObj->EditMode != GUI_EDIT_MODE_INSERT) || (pObj->SelSize)) {
000086  f8940048          LDRB     r0,[r4,#0x48]
00008a  b908              CBNZ     r0,|L1.144|
00008c  6c60              LDR      r0,[r4,#0x44]
00008e  b318              CBZ      r0,|L1.216|
                  |L1.144|
;;;128            if (pObj->CursorPos < NumChars) {
000090  6c21              LDR      r1,[r4,#0x40]
000092  4541              CMP      r1,r8
000094  da20              BGE      |L1.216|
;;;129              if (pObj->SelSize) {
000096  6c60              LDR      r0,[r4,#0x44]
000098  b1b0              CBZ      r0,|L1.200|
;;;130                CursorWidth = 0;
00009a  2500              MOVS     r5,#0
;;;131                for (i = pObj->CursorPos; i < (int)(pObj->CursorPos + pObj->SelSize); i++) {
00009c  460e              MOV      r6,r1
00009e  4408              ADD      r0,r0,r1
0000a0  42b0              CMP      r0,r6
0000a2  dd0e              BLE      |L1.194|
                  |L1.164|
;;;132                  Char = GUI__GetCursorCharacter(pText, i, NumChars, 0);
0000a4  2300              MOVS     r3,#0
0000a6  4642              MOV      r2,r8
0000a8  4631              MOV      r1,r6
0000aa  4638              MOV      r0,r7
0000ac  f7fffffe          BL       GUI__GetCursorCharacter
;;;133                  CursorWidth += GUI_GetCharDistX(Char);
0000b0  f7fffffe          BL       GUI_GetCharDistX
0000b4  4405              ADD      r5,r5,r0
0000b6  1c76              ADDS     r6,r6,#1              ;131
0000b8  6c61              LDR      r1,[r4,#0x44]         ;131
0000ba  6c20              LDR      r0,[r4,#0x40]         ;131
0000bc  4408              ADD      r0,r0,r1              ;131
0000be  42b0              CMP      r0,r6                 ;131
0000c0  dcf0              BGT      |L1.164|
                  |L1.194|
;;;134                }
;;;135                if (!CursorWidth) {
0000c2  b94d              CBNZ     r5,|L1.216|
;;;136                  CursorWidth = 1;
0000c4  2501              MOVS     r5,#1
0000c6  e007              B        |L1.216|
                  |L1.200|
;;;137                }
;;;138              } else {
;;;139                Char = GUI__GetCursorCharacter(pText, pObj->CursorPos, NumChars, &IsRTL);
0000c8  ab01              ADD      r3,sp,#4
0000ca  4642              MOV      r2,r8
0000cc  4638              MOV      r0,r7
0000ce  f7fffffe          BL       GUI__GetCursorCharacter
;;;140                CursorWidth = GUI_GetCharDistX(Char);
0000d2  f7fffffe          BL       GUI_GetCharDistX
0000d6  4605              MOV      r5,r0
                  |L1.216|
;;;141              }
;;;142            }
;;;143          }
;;;144          rInvert = rText;
0000d8  9905              LDR      r1,[sp,#0x14]
0000da  9804              LDR      r0,[sp,#0x10]
0000dc  9103              STR      r1,[sp,#0xc]
0000de  9002              STR      r0,[sp,#8]
;;;145          if (IsRTL) {
0000e0  9801              LDR      r0,[sp,#4]
0000e2  b120              CBZ      r0,|L1.238|
;;;146            rInvert.x0 -= CursorWidth;
0000e4  f8bd0008          LDRH     r0,[sp,#8]
0000e8  1b40              SUBS     r0,r0,r5
0000ea  f8ad0008          STRH     r0,[sp,#8]
                  |L1.238|
;;;147          }
;;;148          rInvert.x0 += GUI__GetCursorPosX(pText, pObj->CursorPos, NumChars);
0000ee  4642              MOV      r2,r8
0000f0  4638              MOV      r0,r7
0000f2  6c21              LDR      r1,[r4,#0x40]
0000f4  f7fffffe          BL       GUI__GetCursorPosX
0000f8  f8bd1008          LDRH     r1,[sp,#8]
0000fc  4408              ADD      r0,r0,r1
0000fe  e000              B        |L1.258|
                  |L1.256|
000100  e001              B        |L1.262|
                  |L1.258|
000102  f8ad0008          STRH     r0,[sp,#8]
                  |L1.262|
;;;149        }
;;;150      }
;;;151      /* WM loop */
;;;152      WM_ITERATE_START(NULL) {
000106  2000              MOVS     r0,#0
000108  f7fffffe          BL       WM__InitIVRSearch
00010c  2800              CMP      r0,#0
00010e  d025              BEQ      |L1.348|
;;;153        /* Set clipping rectangle */
;;;154        WM_SetUserClipRect(&rFillRect);
;;;155        /* Display text */
;;;156        WIDGET__FillStringInRect(pText, &rFillRect, &rInside, &rText);
;;;157        /* Display cursor if needed */
;;;158        if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
;;;159          GUI_InvertRect(rInvert.x0, rInvert.y0, rInvert.x0 + CursorWidth - 1, rInvert.y1);
000110  1e68              SUBS     r0,r5,#1
000112  f9bd9008          LDRSH    r9,[sp,#8]
000116  f9bd500a          LDRSH    r5,[sp,#0xa]
00011a  f9bd800e          LDRSH    r8,[sp,#0xe]
00011e  eb090600          ADD      r6,r9,r0
                  |L1.290|
000122  a808              ADD      r0,sp,#0x20           ;154
000124  f7fffffe          BL       WM_SetUserClipRect
000128  ab04              ADD      r3,sp,#0x10           ;156
00012a  aa06              ADD      r2,sp,#0x18           ;156
00012c  a908              ADD      r1,sp,#0x20           ;156
00012e  4638              MOV      r0,r7                 ;156
000130  f7fffffe          BL       WIDGET__FillStringInRect
000134  8ce0              LDRH     r0,[r4,#0x26]         ;158
000136  f0100f01          TST      r0,#1                 ;158
00013a  d005              BEQ      |L1.328|
00013c  4643              MOV      r3,r8
00013e  4632              MOV      r2,r6
000140  4629              MOV      r1,r5
000142  4648              MOV      r0,r9
000144  f7fffffe          BL       GUI_InvertRect
                  |L1.328|
;;;160        }
;;;161        WM_SetUserClipRect(NULL);
000148  2000              MOVS     r0,#0
00014a  f7fffffe          BL       WM_SetUserClipRect
;;;162        /* Draw the 3D effect (if configured) */
;;;163        WIDGET__EFFECT_DrawDown(&pObj->Widget);
00014e  4620              MOV      r0,r4
000150  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;164      } WM_ITERATE_END();
000154  f7fffffe          BL       WM__GetNextIVR
000158  2800              CMP      r0,#0
00015a  d1e2              BNE      |L1.290|
                  |L1.348|
;;;165    }
00015c  b00b              ADD      sp,sp,#0x2c
00015e  e8bd83f0          POP      {r4-r9,pc}
;;;166    
                          ENDP

                  _Delete PROC
;;;170    */
;;;171    static void _Delete(EDIT_Obj* pObj) {
000162  3028              ADDS     r0,r0,#0x28
;;;172      GUI_ALLOC_FreePtr(&pObj->hpText);
000164  f7ffbffe          B.W      GUI_ALLOC_FreePtr
;;;173    }
;;;174    
                          ENDP

                  _IncrementBuffer PROC
;;;180    */
;;;181    static int _IncrementBuffer(EDIT_Obj* pObj, unsigned AddBytes) {
000168  b570              PUSH     {r4-r6,lr}
00016a  4604              MOV      r4,r0
;;;182      WM_HMEM hNew;
;;;183      int NewSize;
;;;184      NewSize = pObj->BufferSize + AddBytes;
00016c  8da0              LDRH     r0,[r4,#0x2c]
00016e  1846              ADDS     r6,r0,r1
;;;185      hNew    = GUI_ALLOC_Realloc(pObj->hpText, NewSize);
000170  f9b40028          LDRSH    r0,[r4,#0x28]
000174  4631              MOV      r1,r6
000176  f7fffffe          BL       GUI_ALLOC_Realloc
00017a  4605              MOV      r5,r0
;;;186      if (hNew) {
00017c  b155              CBZ      r5,|L1.404|
;;;187        if (!(pObj->hpText)) {
00017e  8d20              LDRH     r0,[r4,#0x28]
000180  b920              CBNZ     r0,|L1.396|
;;;188          char* pText;
;;;189          pText  = (char*) GUI_ALLOC_h2p(hNew);
000182  4628              MOV      r0,r5
000184  f7fffffe          BL       GUI_ALLOC_h2p
;;;190          *pText = 0;
000188  2100              MOVS     r1,#0
00018a  7001              STRB     r1,[r0,#0]
                  |L1.396|
;;;191        }
;;;192        pObj->BufferSize = NewSize;
00018c  85a6              STRH     r6,[r4,#0x2c]
;;;193        pObj->hpText     = hNew;
00018e  8525              STRH     r5,[r4,#0x28]
;;;194        return 1;
000190  2001              MOVS     r0,#1
;;;195      }
;;;196      return 0;
;;;197    }
000192  bd70              POP      {r4-r6,pc}
                  |L1.404|
000194  2000              MOVS     r0,#0                 ;196
000196  bd70              POP      {r4-r6,pc}
;;;198    
                          ENDP

                  _IsSpaceInBuffer PROC
;;;209    */
;;;210    static int _IsSpaceInBuffer(EDIT_Obj* pObj, int BytesNeeded) {
000198  b570              PUSH     {r4-r6,lr}
00019a  4604              MOV      r4,r0
00019c  460d              MOV      r5,r1
;;;211      int NumBytes = 0;
00019e  2000              MOVS     r0,#0
;;;212      if (pObj->hpText) {
0001a0  f9b42028          LDRSH    r2,[r4,#0x28]
0001a4  b122              CBZ      r2,|L1.432|
;;;213        NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hpText));
0001a6  4610              MOV      r0,r2
0001a8  f7fffffe          BL       GUI_ALLOC_h2p
0001ac  f7fffffe          BL       strlen
                  |L1.432|
;;;214      }
;;;215      BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
0001b0  8da1              LDRH     r1,[r4,#0x2c]
0001b2  4428              ADD      r0,r0,r5
0001b4  1a40              SUBS     r0,r0,r1
0001b6  1c40              ADDS     r0,r0,#1
;;;216      if (BytesNeeded > 0) {
0001b8  2800              CMP      r0,#0
0001ba  dd05              BLE      |L1.456|
;;;217        if (!_IncrementBuffer(pObj, BytesNeeded + EDIT_REALLOC_SIZE)) {
0001bc  f1000110          ADD      r1,r0,#0x10
0001c0  4620              MOV      r0,r4
0001c2  f7fffffe          BL       _IncrementBuffer
0001c6  b108              CBZ      r0,|L1.460|
                  |L1.456|
;;;218          return 0;
;;;219        }
;;;220      }
;;;221      return 1;
0001c8  2001              MOVS     r0,#1
;;;222    }
0001ca  bd70              POP      {r4-r6,pc}
                  |L1.460|
0001cc  2000              MOVS     r0,#0                 ;218
0001ce  bd70              POP      {r4-r6,pc}
;;;223    
                          ENDP

                  _IsCharsAvailable PROC
;;;233    */
;;;234    static int _IsCharsAvailable(EDIT_Obj* pObj, int CharsNeeded) {
0001d0  b570              PUSH     {r4-r6,lr}
0001d2  4604              MOV      r4,r0
0001d4  460d              MOV      r5,r1
;;;235      if ((CharsNeeded > 0) && (pObj->MaxLen > 0)) {
0001d6  2d00              CMP      r5,#0
0001d8  dd13              BLE      |L1.514|
0001da  f9b4002a          LDRSH    r0,[r4,#0x2a]
0001de  2800              CMP      r0,#0
0001e0  dd0f              BLE      |L1.514|
;;;236        int NumChars = 0;
0001e2  2000              MOVS     r0,#0
;;;237        if (pObj->hpText) {
0001e4  f9b42028          LDRSH    r2,[r4,#0x28]
0001e8  b122              CBZ      r2,|L1.500|
;;;238          NumChars = GUI__GetNumChars((char*)GUI_ALLOC_h2p(pObj->hpText));
0001ea  4610              MOV      r0,r2
0001ec  f7fffffe          BL       GUI_ALLOC_h2p
0001f0  f7fffffe          BL       GUI__GetNumChars
                  |L1.500|
;;;239        }
;;;240        if ((CharsNeeded + NumChars) > pObj->MaxLen) {
0001f4  f9b4102a          LDRSH    r1,[r4,#0x2a]
0001f8  4428              ADD      r0,r0,r5
0001fa  4288              CMP      r0,r1
0001fc  dd01              BLE      |L1.514|
;;;241          return 0;
0001fe  2000              MOVS     r0,#0
;;;242        }
;;;243      }
;;;244      return 1;
;;;245    }
000200  bd70              POP      {r4-r6,pc}
                  |L1.514|
000202  2001              MOVS     r0,#1                 ;244
000204  bd70              POP      {r4-r6,pc}
;;;246    
                          ENDP

                  _DeleteChar PROC
;;;253    */
;;;254    static void _DeleteChar(EDIT_Handle hObj, EDIT_Obj* pObj) {
000206  b570              PUSH     {r4-r6,lr}
000208  4606              MOV      r6,r0
00020a  460c              MOV      r4,r1
;;;255      if (pObj->hpText) {
00020c  f9b40028          LDRSH    r0,[r4,#0x28]
000210  2800              CMP      r0,#0
000212  d01a              BEQ      |L1.586|
;;;256        unsigned CursorOffset;
;;;257        char* pText;
;;;258        pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000214  f7fffffe          BL       GUI_ALLOC_h2p
000218  4605              MOV      r5,r0
;;;259        CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00021a  4628              MOV      r0,r5
00021c  6c21              LDR      r1,[r4,#0x40]
00021e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000222  4604              MOV      r4,r0
;;;260        if (CursorOffset < strlen(pText)) {
000224  4628              MOV      r0,r5
000226  f7fffffe          BL       strlen
00022a  42a0              CMP      r0,r4
00022c  d90d              BLS      |L1.586|
;;;261          int NumBytes;
;;;262          pText += CursorOffset;
00022e  442c              ADD      r4,r4,r5
;;;263          NumBytes = GUI_UC_GetCharSize(pText);
000230  4620              MOV      r0,r4
000232  f7fffffe          BL       GUI_UC_GetCharSize
;;;264          strcpy(pText, pText + NumBytes);
000236  1821              ADDS     r1,r4,r0
000238  4620              MOV      r0,r4
00023a  f7fffffe          BL       strcpy
;;;265          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00023e  4630              MOV      r0,r6
000240  e8bd4070          POP      {r4-r6,lr}
000244  2105              MOVS     r1,#5
000246  f7ffbffe          B.W      WM_NotifyParent
                  |L1.586|
;;;266        }
;;;267      }
;;;268    }
00024a  bd70              POP      {r4-r6,pc}
;;;269    
                          ENDP

                  _InsertChar PROC
;;;275    */
;;;276    static int _InsertChar(EDIT_Handle hObj, EDIT_Obj* pObj, U16 Char) {
00024c  e92d41f0          PUSH     {r4-r8,lr}
000250  4680              MOV      r8,r0
000252  460c              MOV      r4,r1
000254  4617              MOV      r7,r2
;;;277      if (_IsCharsAvailable(pObj, 1)) {
000256  2101              MOVS     r1,#1
000258  4620              MOV      r0,r4
00025a  f7fffffe          BL       _IsCharsAvailable
00025e  b328              CBZ      r0,|L1.684|
;;;278        int BytesNeeded;
;;;279        BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
000260  4638              MOV      r0,r7
000262  f7fffffe          BL       GUI_UC__CalcSizeOfChar
000266  4606              MOV      r6,r0
;;;280        if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
000268  4631              MOV      r1,r6
00026a  4620              MOV      r0,r4
00026c  f7fffffe          BL       _IsSpaceInBuffer
000270  b1e0              CBZ      r0,|L1.684|
;;;281          int CursorOffset;
;;;282          char* pText;
;;;283          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000272  f9b40028          LDRSH    r0,[r4,#0x28]
000276  f7fffffe          BL       GUI_ALLOC_h2p
00027a  4605              MOV      r5,r0
;;;284          CursorOffset = GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00027c  4628              MOV      r0,r5
00027e  6c21              LDR      r1,[r4,#0x40]
000280  f7fffffe          BL       GUI_UC__NumChars2NumBytes
;;;285          pText += CursorOffset;
000284  182c              ADDS     r4,r5,r0
;;;286          memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
000286  4620              MOV      r0,r4
000288  f7fffffe          BL       strlen
00028c  1c42              ADDS     r2,r0,#1
00028e  19a0              ADDS     r0,r4,r6
000290  4621              MOV      r1,r4
000292  f7fffffe          BL       __aeabi_memmove
;;;287          GUI_UC_Encode(pText, Char);
000296  4639              MOV      r1,r7
000298  4620              MOV      r0,r4
00029a  f7fffffe          BL       GUI_UC_Encode
;;;288          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00029e  2105              MOVS     r1,#5
0002a0  4640              MOV      r0,r8
0002a2  f7fffffe          BL       WM_NotifyParent
;;;289          return 1;
0002a6  2001              MOVS     r0,#1
;;;290        }
;;;291      }
;;;292      return 0;
;;;293    }
0002a8  e8bd81f0          POP      {r4-r8,pc}
                  |L1.684|
0002ac  2000              MOVS     r0,#0                 ;292
0002ae  e8bd81f0          POP      {r4-r8,pc}
;;;294    
                          ENDP

                  EDIT__SetCursorPos PROC
;;;397    */
;;;398    void EDIT__SetCursorPos(EDIT_Obj* pObj, int CursorPos) {
0002b2  b570              PUSH     {r4-r6,lr}
0002b4  4605              MOV      r5,r0
0002b6  460c              MOV      r4,r1
;;;399      if (pObj->hpText) {
0002b8  f9b50028          LDRSH    r0,[r5,#0x28]
0002bc  2800              CMP      r0,#0
0002be  d01c              BEQ      |L1.762|
;;;400        char* pText;
;;;401        int NumChars, Offset;
;;;402        pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
0002c0  f7fffffe          BL       GUI_ALLOC_h2p
;;;403        NumChars = GUI__GetNumChars(pText);
0002c4  f7fffffe          BL       GUI__GetNumChars
0002c8  4601              MOV      r1,r0
;;;404        Offset   = (pObj->EditMode == GUI_EDIT_MODE_INSERT) ? 0 : 1;
0002ca  f8950048          LDRB     r0,[r5,#0x48]
0002ce  b108              CBZ      r0,|L1.724|
0002d0  2001              MOVS     r0,#1
0002d2  e000              B        |L1.726|
                  |L1.724|
0002d4  2000              MOVS     r0,#0
                  |L1.726|
;;;405        if (CursorPos < 0) {
0002d6  2c00              CMP      r4,#0
0002d8  da00              BGE      |L1.732|
;;;406          CursorPos = 0;
0002da  2400              MOVS     r4,#0
                  |L1.732|
;;;407        }
;;;408        if (CursorPos > NumChars) {
0002dc  428c              CMP      r4,r1
0002de  dd00              BLE      |L1.738|
;;;409          CursorPos = NumChars;
0002e0  460c              MOV      r4,r1
                  |L1.738|
;;;410        }
;;;411        if (CursorPos > (pObj->MaxLen - Offset)) {
0002e2  f9b5102a          LDRSH    r1,[r5,#0x2a]
0002e6  1a08              SUBS     r0,r1,r0
0002e8  42a0              CMP      r0,r4
0002ea  da00              BGE      |L1.750|
;;;412          CursorPos = pObj->MaxLen - Offset;
0002ec  4604              MOV      r4,r0
                  |L1.750|
;;;413        }
;;;414        if (pObj->CursorPos != CursorPos) {
0002ee  6c28              LDR      r0,[r5,#0x40]
0002f0  42a0              CMP      r0,r4
0002f2  d000              BEQ      |L1.758|
;;;415          pObj->CursorPos = CursorPos;
0002f4  642c              STR      r4,[r5,#0x40]
                  |L1.758|
;;;416        }
;;;417        pObj->SelSize = 0;
0002f6  2000              MOVS     r0,#0
0002f8  6468              STR      r0,[r5,#0x44]
                  |L1.762|
;;;418      }
;;;419    }
0002fa  bd70              POP      {r4-r6,pc}
;;;420    
                          ENDP

                  EDIT_SetCursorAtPixel PROC
;;;534    */
;;;535    void EDIT_SetCursorAtPixel(EDIT_Handle hObj, int xPos) {
0002fc  e92d47f0          PUSH     {r4-r10,lr}
000300  4607              MOV      r7,r0
000302  460d              MOV      r5,r1
;;;536      if (hObj) {
000304  2f00              CMP      r7,#0
000306  d058              BEQ      |L1.954|
;;;537        EDIT_Obj* pObj;
;;;538        WM_LOCK();
000308  f7fffffe          BL       GUI_Lock
;;;539        pObj = EDIT_H2P(hObj);
00030c  4638              MOV      r0,r7
00030e  f7fffffe          BL       GUI_ALLOC_h2p
000312  4604              MOV      r4,r0
;;;540        if (pObj->hpText) {    
000314  f9b40028          LDRSH    r0,[r4,#0x28]
000318  b3a0              CBZ      r0,|L1.900|
;;;541          const GUI_FONT GUI_UNI_PTR *pOldFont;
;;;542          int xSize, TextWidth, NumChars;
;;;543          const char GUI_UNI_PTR * pText;
;;;544          pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
00031a  f7fffffe          BL       GUI_ALLOC_h2p
00031e  4681              MOV      r9,r0
;;;545          pOldFont = GUI_SetFont(pObj->Props.pFont);
000320  6de0              LDR      r0,[r4,#0x5c]
000322  f7fffffe          BL       GUI_SetFont
000326  4680              MOV      r8,r0
;;;546          xSize = WM_GetWindowSizeX(hObj);
000328  4638              MOV      r0,r7
00032a  f7fffffe          BL       WM_GetWindowSizeX
00032e  4682              MOV      r10,r0
;;;547          TextWidth = GUI_GetStringDistX(pText);
000330  4648              MOV      r0,r9
000332  f7fffffe          BL       GUI_GetStringDistX
000336  4606              MOV      r6,r0
;;;548          switch (pObj->Props.Align & GUI_TA_HORIZONTAL) {
000338  6d60              LDR      r0,[r4,#0x54]
00033a  f0000003          AND      r0,r0,#3
00033e  2801              CMP      r0,#1
000340  d019              BEQ      |L1.886|
000342  2802              CMP      r0,#2
000344  d00f              BEQ      |L1.870|
;;;549          case GUI_TA_HCENTER:
;;;550            xPos -= (xSize - TextWidth + 1) / 2;
;;;551            break;
;;;552          case GUI_TA_RIGHT:
;;;553            xPos -= xSize - TextWidth - (pObj->Props.Border + EDIT_XOFF);
;;;554            break;
;;;555          default:
;;;556            xPos -= (pObj->Props.Border + EDIT_XOFF) + pObj->Widget.pEffect->EffectSize;
000346  6a21              LDR      r1,[r4,#0x20]
000348  6da0              LDR      r0,[r4,#0x58]
00034a  6949              LDR      r1,[r1,#0x14]
00034c  4408              ADD      r0,r0,r1
00034e  1a28              SUBS     r0,r5,r0
000350  1e45              SUBS     r5,r0,#1
                  |L1.850|
;;;557          }
;;;558          NumChars = GUI__GetNumChars(pText);
000352  4648              MOV      r0,r9
000354  f7fffffe          BL       GUI__GetNumChars
;;;559          if (xPos < 0) {
000358  2d00              CMP      r5,#0
00035a  da14              BGE      |L1.902|
;;;560            EDIT__SetCursorPos(pObj, 0);
00035c  2100              MOVS     r1,#0
00035e  4620              MOV      r0,r4
000360  f7fffffe          BL       EDIT__SetCursorPos
000364  e01f              B        |L1.934|
                  |L1.870|
000366  ebaa0006          SUB      r0,r10,r6             ;550
00036a  1c40              ADDS     r0,r0,#1              ;550
00036c  eb0070d0          ADD      r0,r0,r0,LSR #31      ;550
000370  eba50560          SUB      r5,r5,r0,ASR #1       ;550
000374  e7ed              B        |L1.850|
                  |L1.886|
000376  6da1              LDR      r1,[r4,#0x58]         ;553
000378  ebaa0006          SUB      r0,r10,r6             ;553
00037c  1a40              SUBS     r0,r0,r1              ;553
00037e  1a28              SUBS     r0,r5,r0              ;553
000380  1c45              ADDS     r5,r0,#1              ;553
000382  e7e6              B        |L1.850|
                  |L1.900|
000384  e015              B        |L1.946|
                  |L1.902|
;;;561          } else if (xPos > TextWidth) {
000386  42b5              CMP      r5,r6
000388  dd04              BLE      |L1.916|
;;;562            EDIT__SetCursorPos(pObj, NumChars);
00038a  4601              MOV      r1,r0
00038c  4620              MOV      r0,r4
00038e  f7fffffe          BL       EDIT__SetCursorPos
000392  e008              B        |L1.934|
                  |L1.916|
;;;563          } else {
;;;564            EDIT__SetCursorPos(pObj, GUI__GetCursorPosChar(pText, xPos, NumChars));
000394  4602              MOV      r2,r0
000396  4629              MOV      r1,r5
000398  4648              MOV      r0,r9
00039a  f7fffffe          BL       GUI__GetCursorPosChar
00039e  4601              MOV      r1,r0
0003a0  4620              MOV      r0,r4
0003a2  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.934|
;;;565          }
;;;566          GUI_SetFont(pOldFont);
0003a6  4640              MOV      r0,r8
0003a8  f7fffffe          BL       GUI_SetFont
;;;567          EDIT_Invalidate(hObj);
0003ac  4638              MOV      r0,r7
0003ae  f7fffffe          BL       WM_InvalidateWindow
                  |L1.946|
;;;568        }
;;;569        WM_UNLOCK();
0003b2  e8bd47f0          POP      {r4-r10,lr}
0003b6  f7ffbffe          B.W      GUI_Unlock
                  |L1.954|
;;;570      }
;;;571    }
0003ba  e8bd87f0          POP      {r4-r10,pc}
;;;572    
                          ENDP

                  _OnTouch PROC
;;;298    */
;;;299    static void _OnTouch(EDIT_Handle hObj, EDIT_Obj* pObj, WM_MESSAGE*pMsg) {
0003be  b510              PUSH     {r4,lr}
0003c0  4604              MOV      r4,r0
;;;300      const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
0003c2  6891              LDR      r1,[r2,#8]
;;;301      GUI_USE_PARA(pObj);
;;;302      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0003c4  b189              CBZ      r1,|L1.1002|
;;;303        if (pState->Pressed) {
0003c6  7a08              LDRB     r0,[r1,#8]
0003c8  b148              CBZ      r0,|L1.990|
;;;304          GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Pressed, Handle %d)\n",1);
;;;305          EDIT_SetCursorAtPixel(hObj, pState->x);
0003ca  6809              LDR      r1,[r1,#0]
0003cc  4620              MOV      r0,r4
0003ce  f7fffffe          BL       EDIT_SetCursorAtPixel
;;;306          WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
0003d2  4620              MOV      r0,r4
0003d4  e8bd4010          POP      {r4,lr}
0003d8  2101              MOVS     r1,#1
0003da  f7ffbffe          B.W      WM_NotifyParent
                  |L1.990|
;;;307        } else {
;;;308          GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Released, Handle %d)\n",1);
;;;309          WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
0003de  4620              MOV      r0,r4
0003e0  e8bd4010          POP      {r4,lr}
0003e4  2102              MOVS     r1,#2
0003e6  f7ffbffe          B.W      WM_NotifyParent
                  |L1.1002|
;;;310        }
;;;311      } else {
;;;312        GUI_DEBUG_LOG1("EDIT_Callback(WM_TOUCH, Moved out, Handle %d)\n",1);
;;;313        WM_NotifyParent(hObj, WM_NOTIFICATION_MOVED_OUT);
0003ea  4620              MOV      r0,r4
0003ec  e8bd4010          POP      {r4,lr}
0003f0  2103              MOVS     r1,#3
0003f2  f7ffbffe          B.W      WM_NotifyParent
;;;314      }
;;;315    }
;;;316    
                          ENDP

                  _SetValue PROC
;;;320    */
;;;321    static void _SetValue(EDIT_Handle hObj, I32 Value, int Unsigned) {
0003f6  b570              PUSH     {r4-r6,lr}
0003f8  4605              MOV      r5,r0
0003fa  460c              MOV      r4,r1
0003fc  4616              MOV      r6,r2
;;;322      EDIT_Obj* pObj;
;;;323      if (hObj) {
0003fe  2d00              CMP      r5,#0
000400  d029              BEQ      |L1.1110|
;;;324        WM_LOCK();
000402  f7fffffe          BL       GUI_Lock
;;;325        pObj = EDIT_H2P(hObj);
000406  4628              MOV      r0,r5
000408  f7fffffe          BL       GUI_ALLOC_h2p
;;;326        /* Put in min/max range */
;;;327        if (Unsigned) {
00040c  b146              CBZ      r6,|L1.1056|
;;;328          if ((unsigned)Value < (unsigned)pObj->Min) {
00040e  6b01              LDR      r1,[r0,#0x30]
000410  42a1              CMP      r1,r4
000412  d900              BLS      |L1.1046|
;;;329            Value = pObj->Min;
000414  460c              MOV      r4,r1
                  |L1.1046|
;;;330          }
;;;331          if ((unsigned)Value > (unsigned)pObj->Max) {
000416  6b41              LDR      r1,[r0,#0x34]
000418  42a1              CMP      r1,r4
00041a  d209              BCS      |L1.1072|
;;;332            Value = pObj->Max;
00041c  460c              MOV      r4,r1
00041e  e007              B        |L1.1072|
                  |L1.1056|
;;;333          }
;;;334        } else {
;;;335          if (Value < pObj->Min) {
000420  6b01              LDR      r1,[r0,#0x30]
000422  42a1              CMP      r1,r4
000424  dd00              BLE      |L1.1064|
;;;336            Value = pObj->Min;
000426  460c              MOV      r4,r1
                  |L1.1064|
;;;337          }
;;;338          if (Value > pObj->Max) {
000428  6b41              LDR      r1,[r0,#0x34]
00042a  42a1              CMP      r1,r4
00042c  da00              BGE      |L1.1072|
;;;339            Value = pObj->Max;
00042e  460c              MOV      r4,r1
                  |L1.1072|
;;;340          }
;;;341        }
;;;342        if (pObj->CurrentValue != (U32)Value) {
000430  6bc1              LDR      r1,[r0,#0x3c]
000432  42a1              CMP      r1,r4
000434  d00b              BEQ      |L1.1102|
;;;343          pObj->CurrentValue = Value;
000436  63c4              STR      r4,[r0,#0x3c]
;;;344          if (pObj->pfUpdateBuffer) {
000438  6d01              LDR      r1,[r0,#0x50]
00043a  b109              CBZ      r1,|L1.1088|
;;;345            pObj->pfUpdateBuffer(hObj);
00043c  4628              MOV      r0,r5
00043e  4788              BLX      r1
                  |L1.1088|
;;;346          }
;;;347          WM_InvalidateWindow(hObj);
000440  4628              MOV      r0,r5
000442  f7fffffe          BL       WM_InvalidateWindow
;;;348          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000446  2105              MOVS     r1,#5
000448  4628              MOV      r0,r5
00044a  f7fffffe          BL       WM_NotifyParent
                  |L1.1102|
;;;349        }
;;;350        WM_UNLOCK();
00044e  e8bd4070          POP      {r4-r6,lr}
000452  f7ffbffe          B.W      GUI_Unlock
                  |L1.1110|
;;;351      }
;;;352    }
000456  bd70              POP      {r4-r6,pc}
;;;353    
                          ENDP

                  EDIT__GetCurrentChar PROC
;;;380    */
;;;381    U16 EDIT__GetCurrentChar(EDIT_Obj* pObj) {
000458  b570              PUSH     {r4-r6,lr}
00045a  4604              MOV      r4,r0
;;;382      U16 Char = 0;
00045c  2100              MOVS     r1,#0
;;;383      if (pObj->hpText) {
00045e  f9b40028          LDRSH    r0,[r4,#0x28]
000462  b150              CBZ      r0,|L1.1146|
;;;384        const char* pText;
;;;385        pText  = (const char*) GUI_ALLOC_h2p(pObj->hpText);
000464  f7fffffe          BL       GUI_ALLOC_h2p
000468  4605              MOV      r5,r0
;;;386        pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
00046a  4628              MOV      r0,r5
00046c  6c21              LDR      r1,[r4,#0x40]
00046e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000472  4428              ADD      r0,r0,r5
;;;387        Char   = GUI_UC_GetCharCode(pText);
000474  f7fffffe          BL       GUI_UC_GetCharCode
000478  4601              MOV      r1,r0
                  |L1.1146|
;;;388      }
;;;389      return Char;
00047a  4608              MOV      r0,r1
;;;390    }
00047c  bd70              POP      {r4-r6,pc}
;;;391    
                          ENDP

                  EDIT__SetValueUnsigned PROC
;;;424    */
;;;425    void EDIT__SetValueUnsigned(EDIT_Handle hObj, I32 Value) {
00047e  2201              MOVS     r2,#1
;;;426      _SetValue(hObj, Value, 1);
000480  e7fe              B        _SetValue
;;;427    }
;;;428    
                          ENDP

                  EDIT_AddKey PROC
;;;576    */
;;;577    void EDIT_AddKey(EDIT_Handle hObj, int Key) {
000482  b570              PUSH     {r4-r6,lr}
000484  4606              MOV      r6,r0
000486  460d              MOV      r5,r1
;;;578      if (hObj) {
000488  2e00              CMP      r6,#0
00048a  d073              BEQ      |L1.1396|
;;;579        EDIT_Obj* pObj;
;;;580        WM_LOCK();
00048c  f7fffffe          BL       GUI_Lock
;;;581        pObj = EDIT_H2P(hObj);
000490  4630              MOV      r0,r6
000492  f7fffffe          BL       GUI_ALLOC_h2p
000496  4604              MOV      r4,r0
;;;582        if (pObj) {
000498  b364              CBZ      r4,|L1.1268|
;;;583          if (pObj->pfAddKeyEx) {
00049a  6ce2              LDR      r2,[r4,#0x4c]
00049c  b11a              CBZ      r2,|L1.1190|
;;;584            pObj->pfAddKeyEx(hObj, Key);
00049e  4629              MOV      r1,r5
0004a0  4630              MOV      r0,r6
0004a2  4790              BLX      r2
0004a4  e023              B        |L1.1262|
                  |L1.1190|
;;;585          } else {
;;;586            switch (Key) {
0004a6  2d12              CMP      r5,#0x12
0004a8  d058              BEQ      |L1.1372|
0004aa  dc06              BGT      |L1.1210|
0004ac  2d08              CMP      r5,#8
0004ae  d062              BEQ      |L1.1398|
0004b0  2d10              CMP      r5,#0x10
0004b2  d059              BEQ      |L1.1384|
0004b4  2d11              CMP      r5,#0x11
0004b6  d106              BNE      |L1.1222|
0004b8  e020              B        |L1.1276|
                  |L1.1210|
0004ba  2d13              CMP      r5,#0x13
0004bc  d036              BEQ      |L1.1324|
0004be  2d1d              CMP      r5,#0x1d
0004c0  d068              BEQ      |L1.1428|
0004c2  2d1e              CMP      r5,#0x1e
0004c4  d061              BEQ      |L1.1418|
                  |L1.1222|
;;;587            case GUI_KEY_UP:
;;;588              if (pObj->hpText) {
;;;589                char* pText;
;;;590                U16 Char;
;;;591                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
;;;592                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
;;;593                Char   = GUI_UC_GetCharCode(pText);
;;;594                if (Char < 0x7f) {  
;;;595                  *pText = Char + 1;
;;;596                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
;;;597                }
;;;598              }
;;;599              break;
;;;600            case GUI_KEY_DOWN:
;;;601              if (pObj->hpText) {
;;;602                char* pText;
;;;603                U16 Char;
;;;604                pText  = (char*) GUI_ALLOC_h2p(pObj->hpText);
;;;605                pText += GUI_UC__NumChars2NumBytes(pText, pObj->CursorPos);
;;;606                Char   = GUI_UC_GetCharCode(pText);
;;;607                if (Char > 0x20) {  
;;;608                  *pText = Char - 1;
;;;609                  WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
;;;610                }
;;;611              }
;;;612              break;
;;;613            case GUI_KEY_RIGHT:
;;;614              EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
;;;615              break;
;;;616            case GUI_KEY_LEFT:
;;;617              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
;;;618              break;
;;;619            case GUI_KEY_BACKSPACE:
;;;620              EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
;;;621              _DeleteChar(hObj, pObj);
;;;622              break;
;;;623            case GUI_KEY_DELETE:
;;;624              _DeleteChar(hObj, pObj);
;;;625              break;
;;;626            case GUI_KEY_INSERT:
;;;627              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
;;;628                pObj->EditMode = GUI_EDIT_MODE_INSERT;
;;;629              } else {
;;;630                pObj->EditMode = GUI_EDIT_MODE_OVERWRITE;
;;;631                EDIT__SetCursorPos(pObj, pObj->CursorPos);
;;;632              }
;;;633              break;
;;;634            default:
;;;635              if (Key >= 0x20) {
0004c6  2d20              CMP      r5,#0x20
0004c8  db11              BLT      |L1.1262|
;;;636                if (pObj->EditMode != GUI_EDIT_MODE_INSERT) {
0004ca  f8940048          LDRB     r0,[r4,#0x48]
0004ce  b118              CBZ      r0,|L1.1240|
;;;637                  _DeleteChar(hObj, pObj);
0004d0  4621              MOV      r1,r4
0004d2  4630              MOV      r0,r6
0004d4  f7fffffe          BL       _DeleteChar
                  |L1.1240|
;;;638                }
;;;639                if (_InsertChar(hObj, pObj, Key)) {
0004d8  b2aa              UXTH     r2,r5
0004da  4621              MOV      r1,r4
0004dc  4630              MOV      r0,r6
0004de  f7fffffe          BL       _InsertChar
0004e2  b120              CBZ      r0,|L1.1262|
;;;640                  EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0004e4  6c20              LDR      r0,[r4,#0x40]
0004e6  1c41              ADDS     r1,r0,#1
0004e8  4620              MOV      r0,r4
0004ea  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.1262|
;;;641                }
;;;642              }
;;;643            }
;;;644          }
;;;645          EDIT_Invalidate(hObj);
0004ee  4630              MOV      r0,r6
0004f0  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1268|
;;;646        }
;;;647        WM_UNLOCK();
0004f4  e8bd4070          POP      {r4-r6,lr}
0004f8  f7ffbffe          B.W      GUI_Unlock
                  |L1.1276|
0004fc  f9b40028          LDRSH    r0,[r4,#0x28]         ;588
000500  2800              CMP      r0,#0                 ;588
000502  d0f4              BEQ      |L1.1262|
000504  f7fffffe          BL       GUI_ALLOC_h2p
000508  4605              MOV      r5,r0                 ;591
00050a  4628              MOV      r0,r5                 ;592
00050c  6c21              LDR      r1,[r4,#0x40]         ;592
00050e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000512  1944              ADDS     r4,r0,r5              ;592
000514  4620              MOV      r0,r4                 ;593
000516  f7fffffe          BL       GUI_UC_GetCharCode
00051a  287f              CMP      r0,#0x7f              ;594
00051c  d2e7              BCS      |L1.1262|
00051e  1c40              ADDS     r0,r0,#1              ;595
000520  7020              STRB     r0,[r4,#0]            ;595
000522  2105              MOVS     r1,#5                 ;596
000524  4630              MOV      r0,r6                 ;596
000526  f7fffffe          BL       WM_NotifyParent
00052a  e7e0              B        |L1.1262|
                  |L1.1324|
00052c  f9b40028          LDRSH    r0,[r4,#0x28]         ;601
000530  2800              CMP      r0,#0                 ;601
000532  d0dc              BEQ      |L1.1262|
000534  f7fffffe          BL       GUI_ALLOC_h2p
000538  4605              MOV      r5,r0                 ;604
00053a  4628              MOV      r0,r5                 ;605
00053c  6c21              LDR      r1,[r4,#0x40]         ;605
00053e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000542  1944              ADDS     r4,r0,r5              ;605
000544  4620              MOV      r0,r4                 ;606
000546  f7fffffe          BL       GUI_UC_GetCharCode
00054a  2820              CMP      r0,#0x20              ;607
00054c  d9cf              BLS      |L1.1262|
00054e  1e40              SUBS     r0,r0,#1              ;608
000550  7020              STRB     r0,[r4,#0]            ;608
000552  2105              MOVS     r1,#5                 ;609
000554  4630              MOV      r0,r6                 ;609
000556  f7fffffe          BL       WM_NotifyParent
00055a  e7c8              B        |L1.1262|
                  |L1.1372|
00055c  6c20              LDR      r0,[r4,#0x40]         ;614
00055e  1c41              ADDS     r1,r0,#1              ;614
000560  4620              MOV      r0,r4                 ;614
000562  f7fffffe          BL       EDIT__SetCursorPos
000566  e7c2              B        |L1.1262|
                  |L1.1384|
000568  6c20              LDR      r0,[r4,#0x40]         ;617
00056a  1e41              SUBS     r1,r0,#1              ;617
00056c  4620              MOV      r0,r4                 ;617
00056e  f7fffffe          BL       EDIT__SetCursorPos
000572  e7bc              B        |L1.1262|
                  |L1.1396|
000574  e01e              B        |L1.1460|
                  |L1.1398|
000576  6c20              LDR      r0,[r4,#0x40]         ;620
000578  1e41              SUBS     r1,r0,#1              ;620
00057a  4620              MOV      r0,r4                 ;620
00057c  f7fffffe          BL       EDIT__SetCursorPos
000580  4621              MOV      r1,r4                 ;621
000582  4630              MOV      r0,r6                 ;621
000584  f7fffffe          BL       _DeleteChar
000588  e7b1              B        |L1.1262|
                  |L1.1418|
00058a  4621              MOV      r1,r4                 ;624
00058c  4630              MOV      r0,r6                 ;624
00058e  f7fffffe          BL       _DeleteChar
000592  e7ac              B        |L1.1262|
                  |L1.1428|
000594  f8940048          LDRB     r0,[r4,#0x48]         ;627
000598  2801              CMP      r0,#1                 ;627
00059a  d007              BEQ      |L1.1452|
00059c  2001              MOVS     r0,#1                 ;630
00059e  f8840048          STRB     r0,[r4,#0x48]         ;630
0005a2  4620              MOV      r0,r4                 ;631
0005a4  6c21              LDR      r1,[r4,#0x40]         ;631
0005a6  f7fffffe          BL       EDIT__SetCursorPos
0005aa  e7a0              B        |L1.1262|
                  |L1.1452|
0005ac  2000              MOVS     r0,#0                 ;628
0005ae  f8840048          STRB     r0,[r4,#0x48]         ;628
0005b2  e79c              B        |L1.1262|
                  |L1.1460|
;;;648      }
;;;649    }
0005b4  bd70              POP      {r4-r6,pc}
;;;650    
                          ENDP

                  EDIT_Callback PROC
;;;438    */
;;;439    void EDIT_Callback (WM_MESSAGE * pMsg) {
0005b6  e92d41f0          PUSH     {r4-r8,lr}
0005ba  4604              MOV      r4,r0
;;;440      int IsEnabled;
;;;441      EDIT_Handle hObj;
;;;442      EDIT_Obj*   pObj;
;;;443      hObj = (EDIT_Handle) pMsg->hWin;       
0005bc  f9b45004          LDRSH    r5,[r4,#4]
;;;444      pObj = (EDIT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0005c0  4628              MOV      r0,r5
0005c2  f7fffffe          BL       GUI_ALLOC_h2p
0005c6  4607              MOV      r7,r0
;;;445      IsEnabled = WM__IsEnabled(hObj);
0005c8  4628              MOV      r0,r5
0005ca  f7fffffe          BL       WM__IsEnabled
0005ce  4606              MOV      r6,r0
;;;446      /* Let widget handle the standard messages */
;;;447      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0005d0  4621              MOV      r1,r4
0005d2  4628              MOV      r0,r5
0005d4  f7fffffe          BL       WIDGET_HandleActive
0005d8  2800              CMP      r0,#0
0005da  d02f              BEQ      |L1.1596|
;;;448        return;
;;;449      }
;;;450      switch (pMsg->MsgId) {
0005dc  6820              LDR      r0,[r4,#0]
0005de  280b              CMP      r0,#0xb
0005e0  d011              BEQ      |L1.1542|
0005e2  280c              CMP      r0,#0xc
0005e4  d004              BEQ      |L1.1520|
0005e6  280e              CMP      r0,#0xe
0005e8  d011              BEQ      |L1.1550|
0005ea  280f              CMP      r0,#0xf
0005ec  d121              BNE      |L1.1586|
0005ee  e005              B        |L1.1532|
                  |L1.1520|
;;;451      case WM_TOUCH:
;;;452        _OnTouch(hObj, pObj, pMsg);
0005f0  4622              MOV      r2,r4
0005f2  4639              MOV      r1,r7
0005f4  4628              MOV      r0,r5
0005f6  f7fffffe          BL       _OnTouch
;;;453        break;
0005fa  e01a              B        |L1.1586|
                  |L1.1532|
;;;454      case WM_PAINT:
;;;455        GUI_DEBUG_LOG("EDIT: _Callback(WM_PAINT)\n");
;;;456        _Paint(pObj, hObj);
0005fc  4629              MOV      r1,r5
0005fe  4638              MOV      r0,r7
000600  e8bd41f0          POP      {r4-r8,lr}
000604  e7fe              B        _Paint
                  |L1.1542|
;;;457        return;
;;;458      case WM_DELETE:
;;;459        GUI_DEBUG_LOG("EDIT: _Callback(WM_DELETE)\n");
;;;460        _Delete(pObj);
000606  4638              MOV      r0,r7
000608  f7fffffe          BL       _Delete
;;;461        break;       /* No return here ... WM_DefaultProc needs to be called */
00060c  e011              B        |L1.1586|
                  |L1.1550|
;;;462      case WM_KEY:
;;;463        if (IsEnabled) {
00060e  b186              CBZ      r6,|L1.1586|
;;;464          if ( ((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
000610  68a0              LDR      r0,[r4,#8]
000612  6841              LDR      r1,[r0,#4]
000614  2900              CMP      r1,#0
000616  dd0c              BLE      |L1.1586|
;;;465            int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
000618  6801              LDR      r1,[r0,#0]
;;;466            switch (Key) {
00061a  2909              CMP      r1,#9
00061c  d009              BEQ      |L1.1586|
00061e  290a              CMP      r1,#0xa
000620  d007              BEQ      |L1.1586|
000622  290d              CMP      r1,#0xd
000624  d005              BEQ      |L1.1586|
000626  291b              CMP      r1,#0x1b
000628  d003              BEQ      |L1.1586|
;;;467              case GUI_KEY_ENTER:
;;;468              case GUI_KEY_ESCAPE:
;;;469              case GUI_KEY_TAB:
;;;470              case GUI_KEY_BACKTAB:
;;;471                break;                    /* Send to parent by not doing anything */
;;;472              default:
;;;473                EDIT_AddKey(hObj, Key);
00062a  4628              MOV      r0,r5
00062c  e8bd41f0          POP      {r4-r8,lr}
000630  e7fe              B        EDIT_AddKey
                  |L1.1586|
;;;474                return;
;;;475            }
;;;476          }
;;;477        }
;;;478        break;
;;;479      }
;;;480      WM_DefaultProc(pMsg);
000632  4620              MOV      r0,r4
000634  e8bd41f0          POP      {r4-r8,lr}
000638  f7ffbffe          B.W      WM_DefaultProc
                  |L1.1596|
;;;481    }
00063c  e8bd81f0          POP      {r4-r8,pc}
;;;482    
                          ENDP

                  EDIT_CreateEx PROC
;;;492    */
;;;493    EDIT_Handle EDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
000640  e92d4ff0          PUSH     {r4-r11,lr}
;;;494                              int Id, int MaxLen)
;;;495    {
000644  b085              SUB      sp,sp,#0x14
000646  4605              MOV      r5,r0
000648  4688              MOV      r8,r1
00064a  4691              MOV      r9,r2
00064c  469a              MOV      r10,r3
00064e  f8ddb03c          LDR      r11,[sp,#0x3c]
000652  9f11              LDR      r7,[sp,#0x44]
000654  9e12              LDR      r6,[sp,#0x48]
000656  9c0e              LDR      r4,[sp,#0x38]
;;;496      EDIT_Handle hObj;
;;;497      GUI_USE_PARA(ExFlags);
;;;498      WM_LOCK();
000658  f7fffffe          BL       GUI_Lock
;;;499      /* Alloc memory for obj */
;;;500      WinFlags |= WM_CF_LATE_CLIP;    /* Always use late clipping since widget is optimized for it. */
00065c  f44b5c80          ORR      r12,r11,#0x1000
;;;501      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WM_CF_SHOW | WinFlags, EDIT_Callback,
000660  2350              MOVS     r3,#0x50
000662  f2af02ad          ADR      r2,EDIT_Callback + 1
000666  fa1ff08c          UXTH     r0,r12
00066a  f0400102          ORR      r1,r0,#2
00066e  9303              STR      r3,[sp,#0xc]
000670  9202              STR      r2,[sp,#8]
000672  9101              STR      r1,[sp,#4]
000674  9400              STR      r4,[sp,#0]
000676  4653              MOV      r3,r10
000678  464a              MOV      r2,r9
00067a  4641              MOV      r1,r8
00067c  4628              MOV      r0,r5
00067e  f7fffffe          BL       WM_CreateWindowAsChild
000682  4605              MOV      r5,r0
;;;502                                    sizeof(EDIT_Obj) - sizeof(WM_Obj));
;;;503      if (hObj) {
000684  b365              CBZ      r5,|L1.1760|
;;;504        EDIT_Obj* pObj;
;;;505        pObj = (EDIT_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000686  4628              MOV      r0,r5
000688  f7fffffe          BL       GUI_ALLOC_h2p
00068c  4604              MOV      r4,r0
;;;506        /* init widget specific variables */
;;;507        WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
00068e  2210              MOVS     r2,#0x10
000690  4639              MOV      r1,r7
000692  4620              MOV      r0,r4
000694  f7fffffe          BL       WIDGET__Init
;;;508        /* init member variables */
;;;509        EDIT_INIT_ID(pObj);
;;;510        pObj->Props         = EDIT__DefaultProps;
000698  49a1              LDR      r1,|L1.2336|
00069a  f8d1c008          LDR      r12,[r1,#8]  ; EDIT__DefaultProps
00069e  68cf              LDR      r7,[r1,#0xc]  ; EDIT__DefaultProps
0006a0  684b              LDR      r3,[r1,#4]  ; EDIT__DefaultProps
0006a2  680a              LDR      r2,[r1,#0]  ; EDIT__DefaultProps
0006a4  f8c4c05c          STR      r12,[r4,#0x5c]
0006a8  6627              STR      r7,[r4,#0x60]
0006aa  65a3              STR      r3,[r4,#0x58]
0006ac  6562              STR      r2,[r4,#0x54]
0006ae  694b              LDR      r3,[r1,#0x14]  ; EDIT__DefaultProps
0006b0  690a              LDR      r2,[r1,#0x10]  ; EDIT__DefaultProps
0006b2  6989              LDR      r1,[r1,#0x18]  ; EDIT__DefaultProps
0006b4  66a3              STR      r3,[r4,#0x68]
0006b6  6662              STR      r2,[r4,#0x64]
0006b8  66e1              STR      r1,[r4,#0x6c]
;;;511        pObj->XSizeCursor   = 1;
0006ba  2001              MOVS     r0,#1
0006bc  f8840049          STRB     r0,[r4,#0x49]
;;;512        pObj->MaxLen        = (MaxLen == 0) ? 8 : MaxLen;
0006c0  b906              CBNZ     r6,|L1.1732|
0006c2  2608              MOVS     r6,#8
                  |L1.1732|
0006c4  b230              SXTH     r0,r6
0006c6  8560              STRH     r0,[r4,#0x2a]
;;;513        pObj->BufferSize    = 0;
0006c8  2100              MOVS     r1,#0
0006ca  85a1              STRH     r1,[r4,#0x2c]
;;;514        pObj->hpText        = 0;
0006cc  8521              STRH     r1,[r4,#0x28]
;;;515        if (_IncrementBuffer(pObj, pObj->MaxLen + 1) == 0) {
0006ce  1c41              ADDS     r1,r0,#1
0006d0  4620              MOV      r0,r4
0006d2  f7fffffe          BL       _IncrementBuffer
0006d6  b918              CBNZ     r0,|L1.1760|
;;;516          GUI_DEBUG_ERROROUT("EDIT_Create failed to alloc buffer");
;;;517          EDIT_Delete(hObj);
0006d8  4628              MOV      r0,r5
0006da  f7fffffe          BL       WM_DeleteWindow
;;;518          hObj = 0;
0006de  2500              MOVS     r5,#0
                  |L1.1760|
;;;519        }
;;;520      }
;;;521      WM_UNLOCK();
0006e0  f7fffffe          BL       GUI_Unlock
;;;522      return hObj;
;;;523    }
0006e4  b005              ADD      sp,sp,#0x14
0006e6  4628              MOV      r0,r5                 ;522
0006e8  e8bd8ff0          POP      {r4-r11,pc}
;;;524    
                          ENDP

                  EDIT_SetFont PROC
;;;654    */
;;;655    void EDIT_SetFont(EDIT_Handle hObj, const GUI_FONT GUI_UNI_PTR * pfont) {
0006ec  b570              PUSH     {r4-r6,lr}
0006ee  4605              MOV      r5,r0
0006f0  460c              MOV      r4,r1
;;;656      EDIT_Obj* pObj;
;;;657      if (hObj == 0)
0006f2  2d00              CMP      r5,#0
0006f4  d00d              BEQ      |L1.1810|
;;;658        return;
;;;659      WM_LOCK();
0006f6  f7fffffe          BL       GUI_Lock
;;;660      pObj = EDIT_H2P(hObj);
0006fa  4628              MOV      r0,r5
0006fc  f7fffffe          BL       GUI_ALLOC_h2p
;;;661      if (pObj) {
000700  b118              CBZ      r0,|L1.1802|
;;;662        pObj->Props.pFont = pfont;
000702  65c4              STR      r4,[r0,#0x5c]
;;;663        EDIT_Invalidate(hObj);
000704  4628              MOV      r0,r5
000706  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1802|
;;;664      }
;;;665      WM_UNLOCK();
00070a  e8bd4070          POP      {r4-r6,lr}
00070e  f7ffbffe          B.W      GUI_Unlock
                  |L1.1810|
;;;666    }
000712  bd70              POP      {r4-r6,pc}
;;;667    
                          ENDP

                  EDIT_SetBkColor PROC
;;;671    */
;;;672    void EDIT_SetBkColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
000714  b570              PUSH     {r4-r6,lr}
000716  4606              MOV      r6,r0
000718  460c              MOV      r4,r1
00071a  4615              MOV      r5,r2
;;;673      EDIT_Obj* pObj;
;;;674      if (hObj == 0)
00071c  2e00              CMP      r6,#0
00071e  d011              BEQ      |L1.1860|
;;;675        return;
;;;676      WM_LOCK();
000720  f7fffffe          BL       GUI_Lock
;;;677      pObj = EDIT_H2P(hObj);
000724  4630              MOV      r0,r6
000726  f7fffffe          BL       GUI_ALLOC_h2p
;;;678      if (pObj) {
00072a  b138              CBZ      r0,|L1.1852|
;;;679        if (Index < GUI_COUNTOF(pObj->Props.aBkColor)) {
00072c  2c02              CMP      r4,#2
00072e  d205              BCS      |L1.1852|
;;;680          pObj->Props.aBkColor[Index] = color;
000730  eb000084          ADD      r0,r0,r4,LSL #2
000734  6685              STR      r5,[r0,#0x68]
;;;681          EDIT_Invalidate(hObj);
000736  4630              MOV      r0,r6
000738  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1852|
;;;682        }
;;;683      }
;;;684      WM_UNLOCK();
00073c  e8bd4070          POP      {r4-r6,lr}
000740  f7ffbffe          B.W      GUI_Unlock
                  |L1.1860|
;;;685    }
000744  bd70              POP      {r4-r6,pc}
;;;686    
                          ENDP

                  EDIT_SetTextColor PROC
;;;690    */
;;;691    void EDIT_SetTextColor(EDIT_Handle hObj, unsigned int Index, GUI_COLOR color) {
000746  b570              PUSH     {r4-r6,lr}
000748  4606              MOV      r6,r0
00074a  460c              MOV      r4,r1
00074c  4615              MOV      r5,r2
;;;692      EDIT_Obj* pObj;
;;;693      if (hObj == 0)
00074e  2e00              CMP      r6,#0
000750  d011              BEQ      |L1.1910|
;;;694        return;
;;;695      WM_LOCK();
000752  f7fffffe          BL       GUI_Lock
;;;696      pObj = EDIT_H2P(hObj);
000756  4630              MOV      r0,r6
000758  f7fffffe          BL       GUI_ALLOC_h2p
;;;697      if (pObj) {
00075c  b138              CBZ      r0,|L1.1902|
;;;698        if (Index < GUI_COUNTOF(pObj->Props.aTextColor)) {
00075e  2c02              CMP      r4,#2
000760  d205              BCS      |L1.1902|
;;;699          pObj->Props.aTextColor[Index] = color;
000762  eb000084          ADD      r0,r0,r4,LSL #2
000766  6605              STR      r5,[r0,#0x60]
;;;700          EDIT_Invalidate(hObj);
000768  4630              MOV      r0,r6
00076a  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1902|
;;;701        }
;;;702      }
;;;703      WM_UNLOCK();
00076e  e8bd4070          POP      {r4-r6,lr}
000772  f7ffbffe          B.W      GUI_Unlock
                  |L1.1910|
;;;704    }
000776  bd70              POP      {r4-r6,pc}
;;;705    
                          ENDP

                  EDIT_SetText PROC
;;;709    */
;;;710    void EDIT_SetText(EDIT_Handle hObj, const char* s) {
000778  e92d47f0          PUSH     {r4-r10,lr}
00077c  4607              MOV      r7,r0
00077e  4689              MOV      r9,r1
;;;711      if (hObj) {
000780  2f00              CMP      r7,#0
000782  d048              BEQ      |L1.2070|
;;;712        EDIT_Obj* pObj;
;;;713        WM_LOCK();
000784  f7fffffe          BL       GUI_Lock
;;;714        pObj = EDIT_H2P(hObj);
000788  4638              MOV      r0,r7
00078a  f7fffffe          BL       GUI_ALLOC_h2p
00078e  4604              MOV      r4,r0
;;;715        if (s) {
000790  f1b90f00          CMP      r9,#0
000794  d031              BEQ      |L1.2042|
;;;716          int NumBytesNew, NumBytesOld = 0;
000796  2600              MOVS     r6,#0
;;;717          int NumCharsNew;
;;;718          if (pObj->hpText) {
000798  f9b40028          LDRSH    r0,[r4,#0x28]
00079c  b120              CBZ      r0,|L1.1960|
;;;719            char* pText;
;;;720            pText       = (char*) GUI_ALLOC_h2p(pObj->hpText);
00079e  f7fffffe          BL       GUI_ALLOC_h2p
;;;721            NumBytesOld = strlen(pText) + 1;
0007a2  f7fffffe          BL       strlen
0007a6  1c46              ADDS     r6,r0,#1
                  |L1.1960|
;;;722          }
;;;723          NumCharsNew = GUI__GetNumChars(s);
0007a8  4648              MOV      r0,r9
0007aa  f7fffffe          BL       GUI__GetNumChars
0007ae  4605              MOV      r5,r0
;;;724          if (NumCharsNew > pObj->MaxLen) {
0007b0  f9b4002a          LDRSH    r0,[r4,#0x2a]
0007b4  42a8              CMP      r0,r5
0007b6  da00              BGE      |L1.1978|
;;;725            NumCharsNew = pObj->MaxLen;
0007b8  4605              MOV      r5,r0
                  |L1.1978|
;;;726          }
;;;727          NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew) + 1;
0007ba  4629              MOV      r1,r5
0007bc  4648              MOV      r0,r9
0007be  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0007c2  f1000801          ADD      r8,r0,#1
;;;728          if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
0007c6  eba80106          SUB      r1,r8,r6
0007ca  4620              MOV      r0,r4
0007cc  f7fffffe          BL       _IsSpaceInBuffer
0007d0  b1d0              CBZ      r0,|L1.2056|
;;;729            char* pText;
;;;730            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
0007d2  f9b40028          LDRSH    r0,[r4,#0x28]
0007d6  f7fffffe          BL       GUI_ALLOC_h2p
;;;731            memcpy(pText, s, NumBytesNew);
0007da  4642              MOV      r2,r8
0007dc  4649              MOV      r1,r9
0007de  f7fffffe          BL       __aeabi_memcpy
;;;732            pObj->CursorPos = NumCharsNew;
0007e2  6425              STR      r5,[r4,#0x40]
;;;733            if (pObj->CursorPos == pObj->MaxLen) {
0007e4  f9b4002a          LDRSH    r0,[r4,#0x2a]
0007e8  4285              CMP      r5,r0
0007ea  d10d              BNE      |L1.2056|
;;;734              if (pObj->EditMode == GUI_EDIT_MODE_OVERWRITE) {
0007ec  f8940048          LDRB     r0,[r4,#0x48]
0007f0  2801              CMP      r0,#1
0007f2  d109              BNE      |L1.2056|
;;;735                pObj->CursorPos--;
0007f4  1e68              SUBS     r0,r5,#1
0007f6  6420              STR      r0,[r4,#0x40]
0007f8  e006              B        |L1.2056|
                  |L1.2042|
;;;736              }
;;;737            }
;;;738          }
;;;739        } else {
;;;740          GUI_ALLOC_FreePtr(&pObj->hpText);
0007fa  f1040028          ADD      r0,r4,#0x28
0007fe  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;741          pObj->BufferSize = 0;
000802  2000              MOVS     r0,#0
000804  85a0              STRH     r0,[r4,#0x2c]
;;;742          pObj->CursorPos  = 0;
000806  6420              STR      r0,[r4,#0x40]
                  |L1.2056|
;;;743        }
;;;744        EDIT_Invalidate(hObj);
000808  4638              MOV      r0,r7
00080a  f7fffffe          BL       WM_InvalidateWindow
;;;745        WM_UNLOCK();
00080e  e8bd47f0          POP      {r4-r10,lr}
000812  f7ffbffe          B.W      GUI_Unlock
                  |L1.2070|
;;;746      }
;;;747    }
000816  e8bd87f0          POP      {r4-r10,pc}
;;;748    
                          ENDP

                  EDIT_GetText PROC
;;;752    */
;;;753    void EDIT_GetText(EDIT_Handle hObj, char* sDest, int MaxLen) {
00081a  e92d41f0          PUSH     {r4-r8,lr}
00081e  4607              MOV      r7,r0
000820  460c              MOV      r4,r1
000822  4615              MOV      r5,r2
;;;754      if (sDest) {
000824  2c00              CMP      r4,#0
000826  d023              BEQ      |L1.2160|
;;;755        *sDest = 0;
000828  2600              MOVS     r6,#0
00082a  7026              STRB     r6,[r4,#0]
;;;756        if (hObj) {
00082c  2f00              CMP      r7,#0
00082e  d01f              BEQ      |L1.2160|
;;;757          EDIT_Obj* pObj;
;;;758          WM_LOCK();
000830  f7fffffe          BL       GUI_Lock
;;;759          pObj = EDIT_H2P(hObj);
000834  4638              MOV      r0,r7
000836  f7fffffe          BL       GUI_ALLOC_h2p
;;;760          if (pObj->hpText) {
00083a  f9b00028          LDRSH    r0,[r0,#0x28]
00083e  b198              CBZ      r0,|L1.2152|
;;;761            char* pText;
;;;762            int NumChars, NumBytes;
;;;763            pText = (char*) GUI_ALLOC_h2p(pObj->hpText);
000840  f7fffffe          BL       GUI_ALLOC_h2p
000844  4607              MOV      r7,r0
;;;764            NumChars = GUI__GetNumChars(pText);
000846  4638              MOV      r0,r7
000848  f7fffffe          BL       GUI__GetNumChars
00084c  4601              MOV      r1,r0
;;;765            if (NumChars > MaxLen) {
00084e  42a9              CMP      r1,r5
000850  dd00              BLE      |L1.2132|
;;;766              NumChars = MaxLen;
000852  4629              MOV      r1,r5
                  |L1.2132|
;;;767            }
;;;768            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
000854  4638              MOV      r0,r7
000856  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00085a  4605              MOV      r5,r0
;;;769            memcpy(sDest, pText, NumBytes);
00085c  462a              MOV      r2,r5
00085e  4639              MOV      r1,r7
000860  4620              MOV      r0,r4
000862  f7fffffe          BL       __aeabi_memcpy
;;;770            *(sDest + NumBytes) = 0;
000866  5566              STRB     r6,[r4,r5]
                  |L1.2152|
;;;771          }
;;;772          WM_UNLOCK();
000868  e8bd41f0          POP      {r4-r8,lr}
00086c  f7ffbffe          B.W      GUI_Unlock
                  |L1.2160|
;;;773        }
;;;774      }
;;;775    }
000870  e8bd81f0          POP      {r4-r8,pc}
;;;776    
                          ENDP

                  EDIT_GetValue PROC
;;;780    */
;;;781    I32  EDIT_GetValue(EDIT_Handle hObj) {
000874  b570              PUSH     {r4-r6,lr}
000876  4605              MOV      r5,r0
;;;782      EDIT_Obj* pObj;
;;;783      I32 r = 0;
000878  2400              MOVS     r4,#0
;;;784      if (hObj) {
00087a  b13d              CBZ      r5,|L1.2188|
;;;785        WM_LOCK();
00087c  f7fffffe          BL       GUI_Lock
;;;786        pObj = EDIT_H2P(hObj);
000880  4628              MOV      r0,r5
000882  f7fffffe          BL       GUI_ALLOC_h2p
;;;787        r = pObj->CurrentValue;
000886  6bc4              LDR      r4,[r0,#0x3c]
;;;788        WM_UNLOCK();
000888  f7fffffe          BL       GUI_Unlock
                  |L1.2188|
;;;789      }
;;;790      return r;
00088c  4620              MOV      r0,r4
;;;791    }
00088e  bd70              POP      {r4-r6,pc}
;;;792    
                          ENDP

                  EDIT_SetValue PROC
;;;796    */
;;;797    void EDIT_SetValue(EDIT_Handle hObj, I32 Value) {
000890  2200              MOVS     r2,#0
;;;798      _SetValue(hObj, Value, 0);
000892  e7fe              B        _SetValue
;;;799    }
;;;800    
                          ENDP

                  EDIT_SetMaxLen PROC
;;;804    */
;;;805    void EDIT_SetMaxLen(EDIT_Handle  hObj, int MaxLen) {
000894  e92d41f0          PUSH     {r4-r8,lr}
000898  4606              MOV      r6,r0
00089a  460c              MOV      r4,r1
;;;806      if (hObj) {
00089c  2e00              CMP      r6,#0
00089e  d029              BEQ      |L1.2292|
;;;807        EDIT_Obj* pObj;
;;;808        WM_LOCK();
0008a0  f7fffffe          BL       GUI_Lock
;;;809        pObj = EDIT_H2P(hObj);
0008a4  4630              MOV      r0,r6
0008a6  f7fffffe          BL       GUI_ALLOC_h2p
0008aa  4605              MOV      r5,r0
;;;810        if (MaxLen != pObj->MaxLen) {
0008ac  f9b5002a          LDRSH    r0,[r5,#0x2a]
0008b0  42a0              CMP      r0,r4
0008b2  d01b              BEQ      |L1.2284|
;;;811          if (MaxLen < pObj->MaxLen) {
0008b4  dd10              BLE      |L1.2264|
;;;812            if (pObj->hpText) {
0008b6  f9b50028          LDRSH    r0,[r5,#0x28]
0008ba  b168              CBZ      r0,|L1.2264|
;;;813              char* pText;
;;;814              int   NumChars;
;;;815              pText    = (char*) GUI_ALLOC_h2p(pObj->hpText);
0008bc  f7fffffe          BL       GUI_ALLOC_h2p
0008c0  4607              MOV      r7,r0
;;;816              NumChars = GUI__GetNumChars(pText);
0008c2  4638              MOV      r0,r7
0008c4  f7fffffe          BL       GUI__GetNumChars
;;;817              if (NumChars > MaxLen) {
0008c8  42a0              CMP      r0,r4
0008ca  dd05              BLE      |L1.2264|
;;;818                int NumBytes;
;;;819                NumBytes = GUI_UC__NumChars2NumBytes(pText, MaxLen);
0008cc  4621              MOV      r1,r4
0008ce  4638              MOV      r0,r7
0008d0  f7fffffe          BL       GUI_UC__NumChars2NumBytes
;;;820                *(pText + NumBytes) = 0;
0008d4  2100              MOVS     r1,#0
0008d6  5439              STRB     r1,[r7,r0]
                  |L1.2264|
;;;821              }
;;;822            }
;;;823          }
;;;824          _IncrementBuffer(pObj, MaxLen - pObj->BufferSize + 1);
0008d8  8da8              LDRH     r0,[r5,#0x2c]
0008da  1a20              SUBS     r0,r4,r0
0008dc  1c41              ADDS     r1,r0,#1
0008de  4628              MOV      r0,r5
0008e0  f7fffffe          BL       _IncrementBuffer
;;;825          pObj->MaxLen = MaxLen;
0008e4  856c              STRH     r4,[r5,#0x2a]
;;;826          EDIT_Invalidate(hObj);
0008e6  4630              MOV      r0,r6
0008e8  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2284|
;;;827        }
;;;828        WM_UNLOCK();
0008ec  e8bd41f0          POP      {r4-r8,lr}
0008f0  f7ffbffe          B.W      GUI_Unlock
                  |L1.2292|
;;;829      }
;;;830    }
0008f4  e8bd81f0          POP      {r4-r8,pc}
;;;831    
                          ENDP

                  EDIT_SetTextAlign PROC
;;;835    */
;;;836    void EDIT_SetTextAlign(EDIT_Handle hObj, int Align) {
0008f8  b570              PUSH     {r4-r6,lr}
0008fa  4605              MOV      r5,r0
0008fc  460c              MOV      r4,r1
;;;837      EDIT_Obj* pObj;
;;;838      if (hObj == 0)
0008fe  2d00              CMP      r5,#0
000900  d00d              BEQ      |L1.2334|
;;;839        return;
;;;840      WM_LOCK();
000902  f7fffffe          BL       GUI_Lock
;;;841      pObj = EDIT_H2P(hObj);
000906  4628              MOV      r0,r5
000908  f7fffffe          BL       GUI_ALLOC_h2p
;;;842      if (pObj) {
00090c  b118              CBZ      r0,|L1.2326|
;;;843        pObj->Props.Align = Align;
00090e  6544              STR      r4,[r0,#0x54]
;;;844        EDIT_Invalidate(hObj);
000910  4628              MOV      r0,r5
000912  f7fffffe          BL       WM_InvalidateWindow
                  |L1.2326|
;;;845      }
;;;846      WM_UNLOCK();
000916  e8bd4070          POP      {r4-r6,lr}
00091a  f7ffbffe          B.W      GUI_Unlock
                  |L1.2334|
;;;847    }
00091e  bd70              POP      {r4-r6,pc}
;;;848    
                          ENDP

                  |L1.2336|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  EDIT__DefaultProps
                          DCD      0x0000000c
                          DCD      0x00000001
                          DCD      GUI_Font13_1
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00c0c0c0
                          DCD      0x00ffffff
