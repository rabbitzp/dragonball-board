; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guivalf.o --depend=.\rvmdk\guivalf.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guivalf.crf ..\..\..\..\..\uCGUI\GUI\Core\GUIValf.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DispFloatFix PROC
;;;32     */
;;;33     static void _DispFloatFix(float f, char Len, char Decs, int DrawPlusSign) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4607              MOV      r7,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
;;;34       f *= GUI_Pow10[(unsigned)Decs];
00000c  4841              LDR      r0,|L1.276|
00000e  f8500024          LDR      r0,[r0,r4,LSL #2]
000012  f7fffffe          BL       __aeabi_ui2f
000016  4639              MOV      r1,r7
000018  f7fffffe          BL       __aeabi_fmul
;;;35       f += 0.5;
00001c  f7fffffe          BL       __aeabi_f2d
000020  2200              MOVS     r2,#0
000022  4b3d              LDR      r3,|L1.280|
000024  f7fffffe          BL       __aeabi_dadd
000028  f7fffffe          BL       __aeabi_d2f
;;;36       f = (float) floor (f);
00002c  f7fffffe          BL       __aeabi_f2d
000030  f7fffffe          BL       floor
000034  f7fffffe          BL       __aeabi_d2f
;;;37       if (DrawPlusSign) {
000038  b13d              CBZ      r5,|L1.74|
;;;38         GUI_DispSDecShift((long)f, Len, Decs);
00003a  f7fffffe          BL       __aeabi_f2iz
00003e  4622              MOV      r2,r4
000040  4631              MOV      r1,r6
000042  e8bd41f0          POP      {r4-r8,lr}
000046  f7ffbffe          B.W      GUI_DispSDecShift
                  |L1.74|
;;;39       } else {
;;;40         GUI_DispDecShift((long)f, Len, Decs);
00004a  f7fffffe          BL       __aeabi_f2iz
00004e  4622              MOV      r2,r4
000050  4631              MOV      r1,r6
000052  e8bd41f0          POP      {r4-r8,lr}
000056  f7ffbffe          B.W      GUI_DispDecShift
;;;41       }
;;;42     }
;;;43     
                          ENDP

                  GUI_DispFloatFix PROC
;;;53     */
;;;54     void GUI_DispFloatFix(float f, char Len, char Decs) {
00005a  2300              MOVS     r3,#0
;;;55       _DispFloatFix(f, Len, Decs, 0);
00005c  e7fe              B        _DispFloatFix
;;;56     }
;;;57     
                          ENDP

                  GUI_DispFloatMin PROC
;;;61     */
;;;62     void GUI_DispFloatMin(float f, char Fract) {
00005e  b570              PUSH     {r4-r6,lr}
000060  4605              MOV      r5,r0
000062  460c              MOV      r4,r1
;;;63       char Len;
;;;64       Len = GUI_Long2Len((long)f);
000064  4628              MOV      r0,r5
000066  f7fffffe          BL       __aeabi_f2iz
00006a  f7fffffe          BL       GUI_Long2Len
00006e  b2c0              UXTB     r0,r0
;;;65       if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) increment length by 1 */
000070  f10541ff          ADD      r1,r5,#0x7f800000
000074  f1b15f7c          CMP      r1,#0x3f000000
000078  d201              BCS      |L1.126|
;;;66         Len++;
00007a  1c40              ADDS     r0,r0,#1
00007c  b2c0              UXTB     r0,r0
                  |L1.126|
;;;67       }
;;;68       _DispFloatFix(f, (char)(Len + Fract + (Fract ? 1 : 0)), (char)Fract, 0);
00007e  1901              ADDS     r1,r0,r4
000080  b10c              CBZ      r4,|L1.134|
000082  2001              MOVS     r0,#1
000084  e000              B        |L1.136|
                  |L1.134|
000086  2000              MOVS     r0,#0
                  |L1.136|
000088  4408              ADD      r0,r0,r1
00008a  b2c1              UXTB     r1,r0
00008c  4622              MOV      r2,r4
00008e  4628              MOV      r0,r5
000090  e8bd4070          POP      {r4-r6,lr}
000094  2300              MOVS     r3,#0
000096  e7fe              B        _DispFloatFix
;;;69     }
;;;70     
                          ENDP

                  GUI_DispFloat PROC
;;;74     */
;;;75     void GUI_DispFloat(float f, char Len) {
000098  b570              PUSH     {r4-r6,lr}
00009a  4605              MOV      r5,r0
00009c  460c              MOV      r4,r1
;;;76       int Decs;
;;;77       Decs =  Len - GUI_Long2Len((long)f)-1;
00009e  4628              MOV      r0,r5
0000a0  f7fffffe          BL       __aeabi_f2iz
0000a4  f7fffffe          BL       GUI_Long2Len
0000a8  1a20              SUBS     r0,r4,r0
0000aa  1e40              SUBS     r0,r0,#1
;;;78       if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) decrement Decs */
0000ac  f10541ff          ADD      r1,r5,#0x7f800000
0000b0  f1b15f7c          CMP      r1,#0x3f000000
0000b4  d200              BCS      |L1.184|
;;;79         Decs--;
0000b6  1e40              SUBS     r0,r0,#1
                  |L1.184|
;;;80       }
;;;81       if (Decs<0)
0000b8  2800              CMP      r0,#0
0000ba  da00              BGE      |L1.190|
;;;82         Decs =0;
0000bc  2000              MOVS     r0,#0
                  |L1.190|
;;;83       _DispFloatFix(f, Len, (char)Decs, 0);
0000be  b2c2              UXTB     r2,r0
0000c0  4621              MOV      r1,r4
0000c2  4628              MOV      r0,r5
0000c4  e8bd4070          POP      {r4-r6,lr}
0000c8  2300              MOVS     r3,#0
0000ca  e7fe              B        _DispFloatFix
;;;84     }
;;;85     
                          ENDP

                  GUI_DispSFloatFix PROC
;;;89     */
;;;90     void GUI_DispSFloatFix(float f, char Len, char Fract) {
0000cc  2301              MOVS     r3,#1
;;;91       _DispFloatFix (f, Len, Fract, 1);
0000ce  e7fe              B        _DispFloatFix
;;;92     }
;;;93     
                          ENDP

                  GUI_DispSFloatMin PROC
;;;97     */
;;;98     void GUI_DispSFloatMin(float f, char Fract) {
0000d0  b570              PUSH     {r4-r6,lr}
0000d2  4605              MOV      r5,r0
0000d4  460c              MOV      r4,r1
;;;99       char Len;
;;;100      Len = GUI_Long2Len((long)f);
0000d6  4628              MOV      r0,r5
0000d8  f7fffffe          BL       __aeabi_f2iz
0000dc  f7fffffe          BL       GUI_Long2Len
0000e0  b2c3              UXTB     r3,r0
;;;101      if ((f < 0) && (f > -1)) { /* If value < 0 and > -1 (e.g. -0.123) increment length by 1 */
0000e2  f10540ff          ADD      r0,r5,#0x7f800000
0000e6  f1b05f7c          CMP      r0,#0x3f000000
0000ea  d201              BCS      |L1.240|
;;;102        Len++;
0000ec  1c58              ADDS     r0,r3,#1
0000ee  b2c3              UXTB     r3,r0
                  |L1.240|
;;;103      }
;;;104      if (f>0) {
0000f0  f5b50f00          CMP      r5,#0x800000
0000f4  db01              BLT      |L1.250|
;;;105        Len++;
0000f6  1c58              ADDS     r0,r3,#1
0000f8  b2c3              UXTB     r3,r0
                  |L1.250|
;;;106      }
;;;107      _DispFloatFix(f, (char)(Len + Fract + (Fract ? 1 : 0)), (char)Fract, 1);
0000fa  1918              ADDS     r0,r3,r4
0000fc  b10c              CBZ      r4,|L1.258|
0000fe  2301              MOVS     r3,#1
000100  e000              B        |L1.260|
                  |L1.258|
000102  2300              MOVS     r3,#0
                  |L1.260|
000104  4418              ADD      r0,r0,r3
000106  b2c1              UXTB     r1,r0
000108  4622              MOV      r2,r4
00010a  4628              MOV      r0,r5
00010c  e8bd4070          POP      {r4-r6,lr}
000110  2301              MOVS     r3,#1
000112  e7fe              B        _DispFloatFix
;;;108    }
;;;109    
                          ENDP

                  |L1.276|
                          DCD      GUI_Pow10
                  |L1.280|
                          DCD      0x3fe00000
