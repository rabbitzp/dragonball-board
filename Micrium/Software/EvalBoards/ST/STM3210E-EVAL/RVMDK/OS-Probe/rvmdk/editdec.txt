; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\editdec.o --depend=.\rvmdk\editdec.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\editdec.crf ..\..\..\..\..\uCGUI\GUI\Widget\EDITDec.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _DecChar2Int PROC
;;;48     */
;;;49     static int _DecChar2Int(int Char) {
000000  f1a00130          SUB      r1,r0,#0x30
;;;50       if ((Char >= '0') && (Char <= '9'))
000004  2909              CMP      r1,#9
000006  d801              BHI      |L1.12|
;;;51         return Char - '0';
000008  3830              SUBS     r0,r0,#0x30
;;;52       return -1;
;;;53     }
00000a  4770              BX       lr
                  |L1.12|
00000c  f04f30ff          MOV      r0,#0xffffffff        ;52
000010  4770              BX       lr
;;;54     
                          ENDP

                  _UpdateBuffer PROC
;;;58     */
;;;59     static void _UpdateBuffer(EDIT_Handle hObj) {
000012  b538              PUSH     {r3-r5,lr}
;;;60       char * s;
;;;61       EDIT_Obj * pObj;
;;;62       pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
000014  f7fffffe          BL       GUI_ALLOC_h2p
000018  4604              MOV      r4,r0
;;;63       s = (char*) GUI_ALLOC_h2p(pObj->hpText);
00001a  f9b40028          LDRSH    r0,[r4,#0x28]
00001e  f7fffffe          BL       GUI_ALLOC_h2p
000022  9000              STR      r0,[sp,#0]
;;;64       if (pObj->Flags == GUI_EDIT_SIGNED) {
000024  f894004a          LDRB     r0,[r4,#0x4a]
000028  2801              CMP      r0,#1
00002a  d008              BEQ      |L1.62|
;;;65         I32 Result = GUI_AddSign(pObj->CurrentValue, &s);
;;;66         GUI_AddDecShift(Result, pObj->MaxLen - 1, pObj->NumDecs, &s);
;;;67       } else {
;;;68         GUI_AddDecShift(pObj->CurrentValue, pObj->MaxLen, pObj->NumDecs, &s);
00002c  8d60              LDRH     r0,[r4,#0x2a]
00002e  f8942038          LDRB     r2,[r4,#0x38]
000032  b2c1              UXTB     r1,r0
000034  466b              MOV      r3,sp
000036  6be0              LDR      r0,[r4,#0x3c]
000038  f7fffffe          BL       GUI_AddDecShift
;;;69       }
;;;70     }
00003c  bd38              POP      {r3-r5,pc}
                  |L1.62|
00003e  4669              MOV      r1,sp                 ;65
000040  6be0              LDR      r0,[r4,#0x3c]         ;65
000042  f7fffffe          BL       GUI_AddSign
000046  8d61              LDRH     r1,[r4,#0x2a]         ;66
000048  f8942038          LDRB     r2,[r4,#0x38]         ;66
00004c  1e49              SUBS     r1,r1,#1              ;66
00004e  b2c9              UXTB     r1,r1                 ;66
000050  466b              MOV      r3,sp                 ;66
000052  f7fffffe          BL       GUI_AddDecShift
000056  bd38              POP      {r3-r5,pc}
;;;71     
                          ENDP

                  _EditDec PROC
;;;75     */
;;;76     static void _EditDec(int Digit, EDIT_Obj* pObj, EDIT_Handle hObj) {
000058  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
00005c  4680              MOV      r8,r0
00005e  460f              MOV      r7,r1
;;;77       I32 Result = 0;
000060  2400              MOVS     r4,#0
;;;78       int i, Pos = 0;
000062  2500              MOVS     r5,#0
;;;79       char * s = (char*) GUI_ALLOC_h2p(pObj->hpText);
000064  f9b70028          LDRSH    r0,[r7,#0x28]
000068  f7fffffe          BL       GUI_ALLOC_h2p
00006c  4682              MOV      r10,r0
;;;80       for (i = 0; i < pObj->MaxLen; i++) {
00006e  2600              MOVS     r6,#0
000070  f9b7002a          LDRSH    r0,[r7,#0x2a]
000074  2800              CMP      r0,#0
000076  dd25              BLE      |L1.196|
;;;81         int Index = pObj->MaxLen - i - 1;
;;;82         if (Index == pObj->CursorPos) {
;;;83           Result += GUI_Pow10[Pos++] * Digit;
000078  f8df9274          LDR      r9,|L1.752|
                  |L1.124|
00007c  f9b7002a          LDRSH    r0,[r7,#0x2a]         ;81
000080  1b80              SUBS     r0,r0,r6              ;81
000082  1e41              SUBS     r1,r0,#1              ;81
000084  6c38              LDR      r0,[r7,#0x40]         ;82
000086  4288              CMP      r0,r1                 ;82
000088  d106              BNE      |L1.152|
00008a  4628              MOV      r0,r5
00008c  1c6d              ADDS     r5,r5,#1
00008e  f8590020          LDR      r0,[r9,r0,LSL #2]
000092  fb004408          MLA      r4,r0,r8,r4
000096  e010              B        |L1.186|
                  |L1.152|
;;;84         } else {
;;;85           char c = *(s + Index);
000098  f81ab001          LDRB     r11,[r10,r1]
;;;86           int Value = _DecChar2Int(c);
00009c  4658              MOV      r0,r11
00009e  f7fffffe          BL       _DecChar2Int
;;;87           if (Value >= 0) {
0000a2  2800              CMP      r0,#0
0000a4  db05              BLT      |L1.178|
;;;88             Result += GUI_Pow10[Pos++] * Value;
0000a6  4629              MOV      r1,r5
0000a8  1c6d              ADDS     r5,r5,#1
0000aa  f8591021          LDR      r1,[r9,r1,LSL #2]
0000ae  fb014400          MLA      r4,r1,r0,r4
                  |L1.178|
;;;89           }
;;;90           if (c == '-') {
0000b2  f1bb0f2d          CMP      r11,#0x2d
0000b6  d100              BNE      |L1.186|
;;;91             Result *= -1;
0000b8  4264              RSBS     r4,r4,#0
                  |L1.186|
0000ba  1c76              ADDS     r6,r6,#1              ;80
0000bc  f9b7002a          LDRSH    r0,[r7,#0x2a]         ;80
0000c0  42b0              CMP      r0,r6                 ;80
0000c2  dcdb              BGT      |L1.124|
                  |L1.196|
;;;92           }
;;;93         }
;;;94       }
;;;95       EDIT_SetValue(hObj, Result);
0000c4  9802              LDR      r0,[sp,#8]
0000c6  b003              ADD      sp,sp,#0xc
0000c8  4621              MOV      r1,r4
0000ca  e8bd4ff0          POP      {r4-r11,lr}
0000ce  f7ffbffe          B.W      EDIT_SetValue
;;;96     }
;;;97     
                          ENDP

                  _MakePositive PROC
;;;111    */
;;;112    static void _MakePositive(EDIT_Obj* pObj, EDIT_Handle hObj) {
0000d2  460a              MOV      r2,r1
;;;113      if ((I32)pObj->CurrentValue < 0) {
0000d4  6bc0              LDR      r0,[r0,#0x3c]
0000d6  2800              CMP      r0,#0
0000d8  da03              BGE      |L1.226|
;;;114        EDIT_SetValue(hObj, (I32)pObj->CurrentValue * -1);
0000da  4241              RSBS     r1,r0,#0
0000dc  4610              MOV      r0,r2
0000de  f7ffbffe          B.W      EDIT_SetValue
                  |L1.226|
;;;115      }
;;;116    }
0000e2  4770              BX       lr
;;;117    
                          ENDP

                  _MakeNegative PROC
;;;121    */
;;;122    static void _MakeNegative(EDIT_Obj* pObj, EDIT_Handle hObj) {
0000e4  460a              MOV      r2,r1
;;;123      if ((I32)pObj->CurrentValue > 0) {
0000e6  6bc0              LDR      r0,[r0,#0x3c]
0000e8  2800              CMP      r0,#0
0000ea  dd03              BLE      |L1.244|
;;;124        EDIT_SetValue(hObj, (I32)pObj->CurrentValue * -1);
0000ec  4241              RSBS     r1,r0,#0
0000ee  4610              MOV      r0,r2
0000f0  f7ffbffe          B.W      EDIT_SetValue
                  |L1.244|
;;;125      }
;;;126    }
0000f4  4770              BX       lr
;;;127    
                          ENDP

                  _SwapSign PROC
;;;131    */
;;;132    static void _SwapSign(EDIT_Obj* pObj, EDIT_Handle hObj) {
0000f6  6bc2              LDR      r2,[r0,#0x3c]
;;;133      if ((I32)pObj->CurrentValue > 0)
0000f8  2a00              CMP      r2,#0
0000fa  dd00              BLE      |L1.254|
;;;134        _MakeNegative(pObj, hObj);
0000fc  e7fe              B        _MakeNegative
                  |L1.254|
;;;135      else
;;;136        _MakePositive(pObj, hObj);
0000fe  e7fe              B        _MakePositive
;;;137    }
;;;138    
                          ENDP

                  _IncrementCursor PROC
;;;142    */
;;;143    static void _IncrementCursor(EDIT_Obj* pObj) {
000100  b510              PUSH     {r4,lr}
000102  4604              MOV      r4,r0
;;;144      EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000104  6c20              LDR      r0,[r4,#0x40]
000106  1c41              ADDS     r1,r0,#1
000108  4620              MOV      r0,r4
00010a  f7fffffe          BL       EDIT__SetCursorPos
;;;145      if (EDIT__GetCurrentChar(pObj) == '.') {
00010e  4620              MOV      r0,r4
000110  f7fffffe          BL       EDIT__GetCurrentChar
000114  282e              CMP      r0,#0x2e
000116  d111              BNE      |L1.316|
;;;146        if (pObj->CursorPos < (pObj->MaxLen - 1)) {
000118  f9b4102a          LDRSH    r1,[r4,#0x2a]
00011c  6c20              LDR      r0,[r4,#0x40]
00011e  1e49              SUBS     r1,r1,#1
000120  4288              CMP      r0,r1
000122  da05              BGE      |L1.304|
;;;147          EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
000124  1c41              ADDS     r1,r0,#1
000126  4620              MOV      r0,r4
000128  e8bd4010          POP      {r4,lr}
00012c  f7ffbffe          B.W      EDIT__SetCursorPos
                  |L1.304|
;;;148        } else {
;;;149          EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
000130  1e41              SUBS     r1,r0,#1
000132  4620              MOV      r0,r4
000134  e8bd4010          POP      {r4,lr}
000138  f7ffbffe          B.W      EDIT__SetCursorPos
                  |L1.316|
;;;150        }
;;;151      }
;;;152    }
00013c  bd10              POP      {r4,pc}
;;;153    
                          ENDP

                  _AddPosition PROC
;;;158    #if !EDIT_DEC_DIGITONLY
;;;159    static void _AddPosition(EDIT_Obj* pObj, EDIT_Handle hObj, int Sign) {
00013e  b430              PUSH     {r4,r5}
000140  4603              MOV      r3,r0
000142  460c              MOV      r4,r1
;;;160      int Pos;
;;;161      I32 v;
;;;162      v = Sign;
;;;163      Pos = pObj->MaxLen - pObj->CursorPos-1;
000144  f9b3002a          LDRSH    r0,[r3,#0x2a]
000148  6c19              LDR      r1,[r3,#0x40]
00014a  1a40              SUBS     r0,r0,r1
00014c  1e40              SUBS     r0,r0,#1
;;;164      if (pObj->NumDecs && (Pos > pObj->NumDecs)) {
00014e  f893c038          LDRB     r12,[r3,#0x38]
000152  f1bc0f00          CMP      r12,#0
000156  d002              BEQ      |L1.350|
000158  4584              CMP      r12,r0
00015a  da00              BGE      |L1.350|
;;;165        Pos--;
00015c  1e40              SUBS     r0,r0,#1
                  |L1.350|
;;;166      }
;;;167      while (Pos--) {
00015e  1e40              SUBS     r0,r0,#1
000160  d304              BCC      |L1.364|
                  |L1.354|
;;;168        v *= 10;
000162  eb020282          ADD      r2,r2,r2,LSL #2
000166  0052              LSLS     r2,r2,#1
000168  1e40              SUBS     r0,r0,#1              ;167
00016a  d2fa              BCS      |L1.354|
                  |L1.364|
;;;169      }
;;;170      EDIT_SetValue(hObj, (I32)pObj->CurrentValue + v);
00016c  6bd8              LDR      r0,[r3,#0x3c]
00016e  1881              ADDS     r1,r0,r2
000170  4620              MOV      r0,r4
000172  bc30              POP      {r4,r5}
000174  f7ffbffe          B.W      EDIT_SetValue
;;;171    }
;;;172    #endif
                          ENDP

                  _AddKeyDec PROC
;;;183    */
;;;184    static void _AddKeyDec(EDIT_Handle hObj, int Key) {
000178  b570              PUSH     {r4-r6,lr}
00017a  4606              MOV      r6,r0
00017c  460c              MOV      r4,r1
;;;185      char c;
;;;186      EDIT_Obj * pObj;
;;;187      pObj = EDIT_H2P(hObj); /* The GUI needs not to be locked here. This function is called only from EDIT_AddKey which has already locked the GUI */
00017e  4630              MOV      r0,r6
000180  f7fffffe          BL       GUI_ALLOC_h2p
000184  4605              MOV      r5,r0
;;;188      if (pObj) {
000186  b30d              CBZ      r5,|L1.460|
;;;189        switch (Key) {
000188  2c13              CMP      r4,#0x13
00018a  d04c              BEQ      |L1.550|
00018c  dc06              BGT      |L1.412|
00018e  2c10              CMP      r4,#0x10
000190  d061              BEQ      |L1.598|
000192  2c11              CMP      r4,#0x11
000194  d034              BEQ      |L1.512|
000196  2c12              CMP      r4,#0x12
000198  d104              BNE      |L1.420|
00019a  e058              B        |L1.590|
                  |L1.412|
00019c  2c2b              CMP      r4,#0x2b
00019e  d019              BEQ      |L1.468|
0001a0  2c2d              CMP      r4,#0x2d
0001a2  d022              BEQ      |L1.490|
                  |L1.420|
;;;190          case '+':
;;;191            if (pObj->CursorPos == 0) {
;;;192              _MakePositive(pObj, hObj);
;;;193              _IncrementCursor(pObj);
;;;194            }
;;;195            break;
;;;196          case '-':
;;;197            if (pObj->CursorPos == 0) {
;;;198              _MakeNegative(pObj, hObj);
;;;199              _IncrementCursor(pObj);
;;;200            }
;;;201            break;
;;;202          #if EDIT_DEC_DIGITONLY
;;;203            case GUI_KEY_UP:
;;;204              c = EDIT__GetCurrentChar(pObj);
;;;205              if ((c == '-') || (c == '+')) {
;;;206                _SwapSign(pObj, hObj);
;;;207              } else {
;;;208                int Digit = GetCurrentDigit(pObj) + 1;
;;;209                if (Digit > 9)
;;;210                  Digit = 0;
;;;211                _EditDec(Digit, pObj, hObj);
;;;212              }
;;;213              break;
;;;214            case GUI_KEY_DOWN:
;;;215              c = EDIT__GetCurrentChar(pObj);
;;;216              if ((c == '-') || (c == '+')) {
;;;217                _SwapSign(pObj, hObj);
;;;218              } else {
;;;219                int Digit = GetCurrentDigit(pObj) - 1;
;;;220                if (Digit < 0)
;;;221                  Digit = 9;
;;;222                _EditDec(Digit, pObj, hObj);
;;;223              }
;;;224              break;
;;;225          #else
;;;226            case GUI_KEY_UP:
;;;227              c = EDIT__GetCurrentChar(pObj);
;;;228              if ((c == '-') || (c == '+')) {
;;;229                _SwapSign(pObj, hObj);
;;;230              } else {
;;;231                _AddPosition(pObj, hObj, 1);
;;;232              }
;;;233              break;
;;;234            case GUI_KEY_DOWN:
;;;235              c = EDIT__GetCurrentChar(pObj);
;;;236              if ((c == '-') || (c == '+')) {
;;;237                _SwapSign(pObj, hObj);
;;;238              } else {
;;;239                _AddPosition(pObj, hObj, -1);
;;;240              }
;;;241              break;
;;;242          #endif
;;;243          case GUI_KEY_RIGHT:
;;;244            _IncrementCursor(pObj);
;;;245            break;
;;;246          case GUI_KEY_LEFT:
;;;247            EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
;;;248            if (EDIT__GetCurrentChar(pObj) == '.') {
;;;249              if (pObj->CursorPos > 0) {
;;;250                EDIT__SetCursorPos(pObj, pObj->CursorPos - 1);
;;;251              } else {
;;;252                EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
;;;253              }
;;;254            }
;;;255            break;
;;;256          default:
;;;257            {
;;;258              char c = EDIT__GetCurrentChar(pObj);
0001a4  4628              MOV      r0,r5
0001a6  f7fffffe          BL       EDIT__GetCurrentChar
0001aa  b2c0              UXTB     r0,r0
;;;259              if ((c != '-') && (c != '+')) {
0001ac  282d              CMP      r0,#0x2d
0001ae  d00d              BEQ      |L1.460|
0001b0  282b              CMP      r0,#0x2b
0001b2  d00b              BEQ      |L1.460|
;;;260                int Digit = _DecChar2Int(Key);
0001b4  4620              MOV      r0,r4
0001b6  f7fffffe          BL       _DecChar2Int
;;;261                if (Digit >= 0) {
0001ba  2800              CMP      r0,#0
0001bc  db06              BLT      |L1.460|
;;;262                  _EditDec(Digit, pObj, hObj);
0001be  4632              MOV      r2,r6
0001c0  4629              MOV      r1,r5
0001c2  f7fffffe          BL       _EditDec
;;;263                  _IncrementCursor(pObj);
0001c6  4628              MOV      r0,r5
0001c8  f7fffffe          BL       _IncrementCursor
                  |L1.460|
;;;264                }
;;;265              }
;;;266            }
;;;267            break;
;;;268        }
;;;269      }
;;;270      _UpdateBuffer(hObj);
0001cc  4630              MOV      r0,r6
0001ce  e8bd4070          POP      {r4-r6,lr}
0001d2  e7fe              B        _UpdateBuffer
                  |L1.468|
0001d4  6c28              LDR      r0,[r5,#0x40]         ;191
0001d6  2800              CMP      r0,#0                 ;191
0001d8  d1f8              BNE      |L1.460|
0001da  4631              MOV      r1,r6                 ;192
0001dc  4628              MOV      r0,r5                 ;192
0001de  f7fffffe          BL       _MakePositive
0001e2  4628              MOV      r0,r5                 ;193
0001e4  f7fffffe          BL       _IncrementCursor
0001e8  e7f0              B        |L1.460|
                  |L1.490|
0001ea  6c28              LDR      r0,[r5,#0x40]         ;197
0001ec  2800              CMP      r0,#0                 ;197
0001ee  d1ed              BNE      |L1.460|
0001f0  4631              MOV      r1,r6                 ;198
0001f2  4628              MOV      r0,r5                 ;198
0001f4  f7fffffe          BL       _MakeNegative
0001f8  4628              MOV      r0,r5                 ;199
0001fa  f7fffffe          BL       _IncrementCursor
0001fe  e7e5              B        |L1.460|
                  |L1.512|
000200  4628              MOV      r0,r5                 ;227
000202  f7fffffe          BL       EDIT__GetCurrentChar
000206  b2c0              UXTB     r0,r0                 ;227
000208  282d              CMP      r0,#0x2d              ;228
00020a  d007              BEQ      |L1.540|
00020c  282b              CMP      r0,#0x2b              ;228
00020e  d005              BEQ      |L1.540|
000210  2201              MOVS     r2,#1                 ;231
000212  4631              MOV      r1,r6                 ;231
000214  4628              MOV      r0,r5                 ;231
000216  f7fffffe          BL       _AddPosition
00021a  e7d7              B        |L1.460|
                  |L1.540|
00021c  4631              MOV      r1,r6                 ;229
00021e  4628              MOV      r0,r5                 ;229
000220  f7fffffe          BL       _SwapSign
000224  e7d2              B        |L1.460|
                  |L1.550|
000226  4628              MOV      r0,r5                 ;235
000228  f7fffffe          BL       EDIT__GetCurrentChar
00022c  b2c0              UXTB     r0,r0                 ;235
00022e  282d              CMP      r0,#0x2d              ;236
000230  d008              BEQ      |L1.580|
000232  282b              CMP      r0,#0x2b              ;236
000234  d006              BEQ      |L1.580|
000236  f04f32ff          MOV      r2,#0xffffffff        ;239
00023a  4631              MOV      r1,r6                 ;239
00023c  4628              MOV      r0,r5                 ;239
00023e  f7fffffe          BL       _AddPosition
000242  e7c3              B        |L1.460|
                  |L1.580|
000244  4631              MOV      r1,r6                 ;237
000246  4628              MOV      r0,r5                 ;237
000248  f7fffffe          BL       _SwapSign
00024c  e7be              B        |L1.460|
                  |L1.590|
00024e  4628              MOV      r0,r5                 ;244
000250  f7fffffe          BL       _IncrementCursor
000254  e7ba              B        |L1.460|
                  |L1.598|
000256  6c28              LDR      r0,[r5,#0x40]         ;247
000258  1e41              SUBS     r1,r0,#1              ;247
00025a  4628              MOV      r0,r5                 ;247
00025c  f7fffffe          BL       EDIT__SetCursorPos
000260  4628              MOV      r0,r5                 ;248
000262  f7fffffe          BL       EDIT__GetCurrentChar
000266  282e              CMP      r0,#0x2e              ;248
000268  d1b0              BNE      |L1.460|
00026a  6c28              LDR      r0,[r5,#0x40]         ;249
00026c  2800              CMP      r0,#0                 ;249
00026e  dd04              BLE      |L1.634|
000270  1e41              SUBS     r1,r0,#1              ;250
000272  4628              MOV      r0,r5                 ;250
000274  f7fffffe          BL       EDIT__SetCursorPos
000278  e7a8              B        |L1.460|
                  |L1.634|
00027a  1c41              ADDS     r1,r0,#1              ;252
00027c  4628              MOV      r0,r5                 ;252
00027e  f7fffffe          BL       EDIT__SetCursorPos
000282  e7a3              B        |L1.460|
;;;271    }
;;;272    
                          ENDP

                  EDIT_SetDecMode PROC
;;;282    */
;;;283    void EDIT_SetDecMode(EDIT_Handle hEdit, I32 Value, I32 Min, I32 Max, int Shift, U8 Flags) {
000284  e92d47f0          PUSH     {r4-r10,lr}
000288  4607              MOV      r7,r0
00028a  4688              MOV      r8,r1
00028c  4691              MOV      r9,r2
00028e  469a              MOV      r10,r3
000290  9e09              LDR      r6,[sp,#0x24]
000292  9d08              LDR      r5,[sp,#0x20]
;;;284      EDIT_Obj* pObj;
;;;285      WM_LOCK();
000294  f7fffffe          BL       GUI_Lock
;;;286      if (hEdit) {
000298  b337              CBZ      r7,|L1.744|
;;;287        pObj = EDIT_H2P(hEdit);
00029a  4638              MOV      r0,r7
00029c  f7fffffe          BL       GUI_ALLOC_h2p
0002a0  4604              MOV      r4,r0
;;;288        pObj->pfAddKeyEx    = _AddKeyDec;
0002a2  4814              LDR      r0,|L1.756|
0002a4  64e0              STR      r0,[r4,#0x4c]
;;;289        pObj->pfUpdateBuffer= _UpdateBuffer;
0002a6  4814              LDR      r0,|L1.760|
0002a8  6520              STR      r0,[r4,#0x50]
;;;290        pObj->CurrentValue  = Value;
0002aa  f8c4803c          STR      r8,[r4,#0x3c]
;;;291        pObj->CursorPos     = 0;
0002ae  2000              MOVS     r0,#0
0002b0  6420              STR      r0,[r4,#0x40]
;;;292        pObj->Min           = Min;
0002b2  f8c49030          STR      r9,[r4,#0x30]
;;;293        pObj->Max           = Max;
0002b6  f8c4a034          STR      r10,[r4,#0x34]
;;;294        pObj->NumDecs       = Shift;
0002ba  f8845038          STRB     r5,[r4,#0x38]
;;;295        pObj->Flags         = Flags;
0002be  f884604a          STRB     r6,[r4,#0x4a]
;;;296        pObj->EditMode      = GUI_EDIT_MODE_OVERWRITE;
0002c2  2001              MOVS     r0,#1
0002c4  f8840048          STRB     r0,[r4,#0x48]
;;;297        _UpdateBuffer(hEdit);
0002c8  4638              MOV      r0,r7
0002ca  f7fffffe          BL       _UpdateBuffer
;;;298        if (EDIT__GetCurrentChar(pObj) == '.') {
0002ce  4620              MOV      r0,r4
0002d0  f7fffffe          BL       EDIT__GetCurrentChar
0002d4  282e              CMP      r0,#0x2e
0002d6  d104              BNE      |L1.738|
;;;299          EDIT__SetCursorPos(pObj, pObj->CursorPos + 1);
0002d8  6c20              LDR      r0,[r4,#0x40]
0002da  1c41              ADDS     r1,r0,#1
0002dc  4620              MOV      r0,r4
0002de  f7fffffe          BL       EDIT__SetCursorPos
                  |L1.738|
;;;300        }
;;;301        WM_Invalidate(hEdit);
0002e2  4638              MOV      r0,r7
0002e4  f7fffffe          BL       WM_InvalidateWindow
                  |L1.744|
;;;302      }
;;;303      WM_UNLOCK();
0002e8  e8bd47f0          POP      {r4-r10,lr}
0002ec  f7ffbffe          B.W      GUI_Unlock
;;;304    }
;;;305    
                          ENDP

                  |L1.752|
                          DCD      GUI_Pow10
                  |L1.756|
                          DCD      _AddKeyDec
                  |L1.760|
                          DCD      _UpdateBuffer
