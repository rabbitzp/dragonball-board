; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_log.o --depend=.\rvmdk\gui_log.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_log.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_Log.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _CopyString PROC
;;;43     */
;;;44     static void _CopyString(char* d, const char* s, int MaxLen) {
000000  e003              B        |L1.10|
                  |L1.2|
;;;45       while ((MaxLen > 0) && *s) {
;;;46         *d++ = *s++;
000002  f8003b01          STRB     r3,[r0],#1
000006  1c49              ADDS     r1,r1,#1
;;;47         MaxLen--;
000008  1e52              SUBS     r2,r2,#1
                  |L1.10|
00000a  2a00              CMP      r2,#0                 ;45
00000c  dd02              BLE      |L1.20|
00000e  780b              LDRB     r3,[r1,#0]            ;45
000010  2b00              CMP      r3,#0                 ;45
000012  d1f6              BNE      |L1.2|
                  |L1.20|
;;;48       }
;;;49       *d = 0;
000014  2100              MOVS     r1,#0
000016  7001              STRB     r1,[r0,#0]
;;;50     }
000018  4770              BX       lr
;;;51     
                          ENDP

                  GUI_Log PROC
;;;63     */
;;;64     void GUI_Log(const char *s) {
00001a  f7ffbffe          B.W      GUI_X_Log
;;;65       GUI_X_Log(s);
;;;66     }
;;;67     
                          ENDP

                  GUI_Log1 PROC
;;;71     */
;;;72     void GUI_Log1(const char *s, int p0) {
00001e  b510              PUSH     {r4,lr}
000020  b090              SUB      sp,sp,#0x40
000022  4603              MOV      r3,r0
000024  460c              MOV      r4,r1
;;;73       char ac[MAXLEN + 10];
;;;74       char* sOut = ac;
000026  a801              ADD      r0,sp,#4
000028  9000              STR      r0,[sp,#0]
;;;75       _CopyString(ac, s, MAXLEN);
00002a  2232              MOVS     r2,#0x32
00002c  4619              MOV      r1,r3
00002e  f7fffffe          BL       _CopyString
;;;76       sOut += strlen(sOut);
000032  9800              LDR      r0,[sp,#0]
000034  f7fffffe          BL       strlen
000038  9900              LDR      r1,[sp,#0]
00003a  4408              ADD      r0,r0,r1
00003c  9000              STR      r0,[sp,#0]
;;;77       GUI__AddSpaceHex(p0, 8, &sOut);
00003e  466a              MOV      r2,sp
000040  2108              MOVS     r1,#8
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       GUI__AddSpaceHex
;;;78       GUI_Log(ac);
000048  a801              ADD      r0,sp,#4
00004a  f7fffffe          BL       GUI_Log
;;;79     }
00004e  b010              ADD      sp,sp,#0x40
000050  bd10              POP      {r4,pc}
;;;80     
                          ENDP

                  GUI_Log2 PROC
;;;84     */
;;;85     void GUI_Log2(const char *s, int p0, int p1) {
000052  b530              PUSH     {r4,r5,lr}
000054  b093              SUB      sp,sp,#0x4c
000056  4603              MOV      r3,r0
000058  460c              MOV      r4,r1
00005a  4615              MOV      r5,r2
;;;86       char ac[MAXLEN + 20];
;;;87       char* sOut = ac;
00005c  a801              ADD      r0,sp,#4
00005e  9000              STR      r0,[sp,#0]
;;;88       _CopyString(ac, s, MAXLEN);
000060  2232              MOVS     r2,#0x32
000062  4619              MOV      r1,r3
000064  f7fffffe          BL       _CopyString
;;;89       sOut += strlen(sOut);
000068  9800              LDR      r0,[sp,#0]
00006a  f7fffffe          BL       strlen
00006e  9900              LDR      r1,[sp,#0]
000070  4408              ADD      r0,r0,r1
000072  9000              STR      r0,[sp,#0]
;;;90       GUI__AddSpaceHex(p0, 8, &sOut);
000074  466a              MOV      r2,sp
000076  2108              MOVS     r1,#8
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       GUI__AddSpaceHex
;;;91       GUI__AddSpaceHex(p1, 8, &sOut);
00007e  466a              MOV      r2,sp
000080  2108              MOVS     r1,#8
000082  4628              MOV      r0,r5
000084  f7fffffe          BL       GUI__AddSpaceHex
;;;92       GUI_Log(ac);
000088  a801              ADD      r0,sp,#4
00008a  f7fffffe          BL       GUI_Log
;;;93     }
00008e  b013              ADD      sp,sp,#0x4c
000090  bd30              POP      {r4,r5,pc}
;;;94     
                          ENDP

                  GUI_Log3 PROC
;;;98     */
;;;99     void GUI_Log3(const char *s, int p0, int p1, int p2) {
000092  b570              PUSH     {r4-r6,lr}
000094  b096              SUB      sp,sp,#0x58
000096  4684              MOV      r12,r0
000098  460c              MOV      r4,r1
00009a  4615              MOV      r5,r2
00009c  461e              MOV      r6,r3
;;;100      char ac[MAXLEN + 30];
;;;101      char* sOut = ac;
00009e  a802              ADD      r0,sp,#8
0000a0  9001              STR      r0,[sp,#4]
;;;102      _CopyString(ac, s, MAXLEN);
0000a2  2232              MOVS     r2,#0x32
0000a4  4661              MOV      r1,r12
0000a6  f7fffffe          BL       _CopyString
;;;103      sOut += strlen(sOut);
0000aa  9801              LDR      r0,[sp,#4]
0000ac  f7fffffe          BL       strlen
0000b0  9901              LDR      r1,[sp,#4]
0000b2  4408              ADD      r0,r0,r1
0000b4  9001              STR      r0,[sp,#4]
;;;104      GUI__AddSpaceHex(p0, 8, &sOut);
0000b6  aa01              ADD      r2,sp,#4
0000b8  2108              MOVS     r1,#8
0000ba  4620              MOV      r0,r4
0000bc  f7fffffe          BL       GUI__AddSpaceHex
;;;105      GUI__AddSpaceHex(p1, 8, &sOut);
0000c0  aa01              ADD      r2,sp,#4
0000c2  2108              MOVS     r1,#8
0000c4  4628              MOV      r0,r5
0000c6  f7fffffe          BL       GUI__AddSpaceHex
;;;106      GUI__AddSpaceHex(p2, 8, &sOut);
0000ca  aa01              ADD      r2,sp,#4
0000cc  2108              MOVS     r1,#8
0000ce  4630              MOV      r0,r6
0000d0  f7fffffe          BL       GUI__AddSpaceHex
;;;107      GUI_Log(ac);
0000d4  a802              ADD      r0,sp,#8
0000d6  f7fffffe          BL       GUI_Log
;;;108    }
0000da  b016              ADD      sp,sp,#0x58
0000dc  bd70              POP      {r4-r6,pc}
;;;109    
                          ENDP

                  GUI_Log4 PROC
;;;113    */
;;;114    void GUI_Log4(const char *s, int p0, int p1, int p2, int p3) {
0000de  b5f0              PUSH     {r4-r7,lr}
0000e0  b099              SUB      sp,sp,#0x64
0000e2  4684              MOV      r12,r0
0000e4  9c1e              LDR      r4,[sp,#0x78]
0000e6  460d              MOV      r5,r1
0000e8  4616              MOV      r6,r2
0000ea  461f              MOV      r7,r3
;;;115      char ac[MAXLEN + 40];
;;;116      char* sOut = ac;
0000ec  a802              ADD      r0,sp,#8
0000ee  9001              STR      r0,[sp,#4]
;;;117      _CopyString(ac, s, MAXLEN);
0000f0  2232              MOVS     r2,#0x32
0000f2  4661              MOV      r1,r12
0000f4  f7fffffe          BL       _CopyString
;;;118      sOut += strlen(sOut);
0000f8  9801              LDR      r0,[sp,#4]
0000fa  f7fffffe          BL       strlen
0000fe  9901              LDR      r1,[sp,#4]
000100  4408              ADD      r0,r0,r1
000102  9001              STR      r0,[sp,#4]
;;;119      GUI__AddSpaceHex(p0, 8, &sOut);
000104  aa01              ADD      r2,sp,#4
000106  2108              MOVS     r1,#8
000108  4628              MOV      r0,r5
00010a  f7fffffe          BL       GUI__AddSpaceHex
;;;120      GUI__AddSpaceHex(p1, 8, &sOut);
00010e  aa01              ADD      r2,sp,#4
000110  2108              MOVS     r1,#8
000112  4630              MOV      r0,r6
000114  f7fffffe          BL       GUI__AddSpaceHex
;;;121      GUI__AddSpaceHex(p2, 8, &sOut);
000118  aa01              ADD      r2,sp,#4
00011a  2108              MOVS     r1,#8
00011c  4638              MOV      r0,r7
00011e  f7fffffe          BL       GUI__AddSpaceHex
;;;122      GUI__AddSpaceHex(p3, 8, &sOut);
000122  aa01              ADD      r2,sp,#4
000124  2108              MOVS     r1,#8
000126  4620              MOV      r0,r4
000128  f7fffffe          BL       GUI__AddSpaceHex
;;;123      GUI_Log(ac);
00012c  a802              ADD      r0,sp,#8
00012e  f7fffffe          BL       GUI_Log
;;;124    }
000132  b019              ADD      sp,sp,#0x64
000134  bdf0              POP      {r4-r7,pc}
;;;125    
                          ENDP

