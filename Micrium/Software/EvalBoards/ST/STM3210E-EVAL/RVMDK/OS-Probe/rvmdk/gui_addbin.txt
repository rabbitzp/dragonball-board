; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_addbin.o --depend=.\rvmdk\gui_addbin.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_addbin.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_AddBin.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_AddBin PROC
;;;32     */
;;;33     void GUI_AddBin(U32 v, U8 Len, char** ps) {
000000  6813              LDR      r3,[r2,#0]
;;;34       char *s = *ps;
;;;35     #if GUI_DEBUG_LEVEL >1
;;;36       if (Len > 32) {
;;;37         GUI_DEBUG_WARN("Can not display more than 32 bin. digits");
;;;38         Len = 32;
;;;39       }
;;;40     #endif
;;;41       (*ps) += Len;
000002  eb030c01          ADD      r12,r3,r1
000006  f8c2c000          STR      r12,[r2,#0]
;;;42       **ps   = '\0';     /* Make sure string is 0-terminated */
00000a  2200              MOVS     r2,#0
00000c  f88c2000          STRB     r2,[r12,#0]
;;;43       while(Len--) {
000010  1e4a              SUBS     r2,r1,#1
000012  b2d2              UXTB     r2,r2
000014  2900              CMP      r1,#0
000016  d009              BEQ      |L1.44|
                  |L1.24|
;;;44         *(s + Len) = (char)('0' + (v & 1));
000018  f0000101          AND      r1,r0,#1
00001c  3130              ADDS     r1,r1,#0x30
00001e  5499              STRB     r1,[r3,r2]
;;;45         v >>= 1;
000020  0840              LSRS     r0,r0,#1
000022  0011              MOVS     r1,r2                 ;43
000024  f1a20201          SUB      r2,r2,#1              ;43
000028  b2d2              UXTB     r2,r2                 ;43
00002a  d1f5              BNE      |L1.24|
                  |L1.44|
;;;46       }
;;;47     }
00002c  4770              BX       lr
;;;48     
                          ENDP

