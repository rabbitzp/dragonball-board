; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_drawbitmap.o --depend=.\rvmdk\gui_drawbitmap.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_drawbitmap.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_DrawBitmap.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmap PROC
;;;38     */
;;;39     void GL_DrawBitmap(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b086              SUB      sp,sp,#0x18
000006  4604              MOV      r4,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
;;;40       GUI_DRAWMODE PrevDraw;
;;;41       const GUI_LOGPALETTE GUI_UNI_PTR * pPal;
;;;42       pPal = pBitmap->pPal;
00000c  68e5              LDR      r5,[r4,#0xc]
;;;43       PrevDraw = GUI_SetDrawMode(0);  /* No Get... at this point */
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       GUI_SetDrawMode
000014  4606              MOV      r6,r0
;;;44       GUI_SetDrawMode((pPal && pPal->HasTrans) ? (PrevDraw|GUI_DRAWMODE_TRANS) : PrevDraw &(~GUI_DRAWMODE_TRANS));
000016  b125              CBZ      r5,|L1.34|
000018  7928              LDRB     r0,[r5,#4]
00001a  b110              CBZ      r0,|L1.34|
00001c  f0460002          ORR      r0,r6,#2
000020  e001              B        |L1.38|
                  |L1.34|
000022  f0260002          BIC      r0,r6,#2
                  |L1.38|
000026  f7fffffe          BL       GUI_SetDrawMode
;;;45       if (pBitmap->pMethods) {
00002a  f8d4c010          LDR      r12,[r4,#0x10]
00002e  f1bc0f00          CMP      r12,#0
000032  d00e              BEQ      |L1.82|
;;;46         #if GUI_COMPILER_SUPPORTS_FP      /* Do not support this on VERY simple chips and compilers */
;;;47           pBitmap->pMethods->pfDraw(x0, y0, pBitmap->XSize ,pBitmap->YSize, (U8 const *)pBitmap->pData, pBitmap->pPal, 1, 1);
000034  68e1              LDR      r1,[r4,#0xc]
000036  68a0              LDR      r0,[r4,#8]
000038  2301              MOVS     r3,#1
00003a  9101              STR      r1,[sp,#4]
00003c  9000              STR      r0,[sp,#0]
00003e  9302              STR      r3,[sp,#8]
000040  9303              STR      r3,[sp,#0xc]
000042  f8dcc000          LDR      r12,[r12,#0]
000046  8863              LDRH     r3,[r4,#2]
000048  8822              LDRH     r2,[r4,#0]
00004a  4641              MOV      r1,r8
00004c  4638              MOV      r0,r7
00004e  47e0              BLX      r12
000050  e018              B        |L1.132|
                  |L1.82|
;;;48         #endif
;;;49       } else {
;;;50         const LCD_PIXELINDEX* pTrans;
;;;51         pTrans = LCD_GetpPalConvTable(pBitmap->pPal);
000052  68e0              LDR      r0,[r4,#0xc]
000054  f7fffffe          BL       LCD_GetpPalConvTable
;;;52         if (!pTrans) {
000058  b928              CBNZ     r0,|L1.102|
;;;53           pTrans = (pBitmap->BitsPerPixel != 1) ? NULL : &LCD_BKCOLORINDEX;
00005a  88e0              LDRH     r0,[r4,#6]
00005c  2801              CMP      r0,#1
00005e  d001              BEQ      |L1.100|
000060  2000              MOVS     r0,#0
000062  e000              B        |L1.102|
                  |L1.100|
000064  4820              LDR      r0,|L1.232|
                  |L1.102|
;;;54         }
;;;55         LCD_DrawBitmap( x0,y0
000066  ad02              ADD      r5,sp,#8
000068  4603              MOV      r3,r0
00006a  88e0              LDRH     r0,[r4,#6]
00006c  88a1              LDRH     r1,[r4,#4]
00006e  68a2              LDR      r2,[r4,#8]
000070  c50f              STM      r5!,{r0-r3}
000072  2301              MOVS     r3,#1
000074  9300              STR      r3,[sp,#0]
000076  9301              STR      r3,[sp,#4]
000078  8863              LDRH     r3,[r4,#2]
00007a  8822              LDRH     r2,[r4,#0]
00007c  4641              MOV      r1,r8
00007e  4638              MOV      r0,r7
000080  f7fffffe          BL       LCD_DrawBitmap
                  |L1.132|
;;;56                         ,pBitmap->XSize ,pBitmap->YSize
;;;57                         ,1,1
;;;58                         ,pBitmap->BitsPerPixel
;;;59                         ,pBitmap->BytesPerLine
;;;60                         ,pBitmap->pData
;;;61                         ,pTrans);
;;;62       }
;;;63       GUI_SetDrawMode(PrevDraw);
000084  b006              ADD      sp,sp,#0x18
000086  4630              MOV      r0,r6
000088  e8bd41f0          POP      {r4-r8,lr}
00008c  f7ffbffe          B.W      GUI_SetDrawMode
;;;64     }
;;;65     
                          ENDP

                  GUI_DrawBitmap PROC
;;;69     */
;;;70     void GUI_DrawBitmap(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0) {
000090  b570              PUSH     {r4-r6,lr}
000092  b082              SUB      sp,sp,#8
000094  4606              MOV      r6,r0
000096  460c              MOV      r4,r1
000098  4615              MOV      r5,r2
;;;71       #if (GUI_WINSUPPORT)
;;;72         GUI_RECT r;
;;;73       #endif
;;;74       GUI_LOCK();
00009a  f7fffffe          BL       GUI_Lock
;;;75       #if (GUI_WINSUPPORT)
;;;76         WM_ADDORG(x0,y0);
00009e  4812              LDR      r0,|L1.232|
0000a0  6c43              LDR      r3,[r0,#0x44]  ; GUI_Context
0000a2  441c              ADD      r4,r4,r3
0000a4  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
0000a6  4405              ADD      r5,r5,r0
;;;77         r.x1 = (r.x0 = x0) + pBitmap->XSize-1;
0000a8  8830              LDRH     r0,[r6,#0]
0000aa  1e61              SUBS     r1,r4,#1
0000ac  4408              ADD      r0,r0,r1
0000ae  f8ad4000          STRH     r4,[sp,#0]
0000b2  f8ad0004          STRH     r0,[sp,#4]
;;;78         r.y1 = (r.y0 = y0) + pBitmap->YSize-1;
0000b6  8870              LDRH     r0,[r6,#2]
0000b8  1e69              SUBS     r1,r5,#1
0000ba  4408              ADD      r0,r0,r1
0000bc  f8ad5002          STRH     r5,[sp,#2]
0000c0  f8ad0006          STRH     r0,[sp,#6]
;;;79         WM_ITERATE_START(&r) {
0000c4  4668              MOV      r0,sp
0000c6  f7fffffe          BL       WM__InitIVRSearch
0000ca  b140              CBZ      r0,|L1.222|
                  |L1.204|
;;;80       #endif
;;;81       GL_DrawBitmap(pBitmap, x0, y0);
0000cc  462a              MOV      r2,r5
0000ce  4621              MOV      r1,r4
0000d0  4630              MOV      r0,r6
0000d2  f7fffffe          BL       GL_DrawBitmap
;;;82       #if (GUI_WINSUPPORT)
;;;83         } WM_ITERATE_END();
0000d6  f7fffffe          BL       WM__GetNextIVR
0000da  2800              CMP      r0,#0
0000dc  d1f6              BNE      |L1.204|
                  |L1.222|
;;;84       #endif
;;;85       GUI_UNLOCK();
0000de  f7fffffe          BL       GUI_Unlock
;;;86     }
0000e2  b002              ADD      sp,sp,#8
0000e4  bd70              POP      {r4-r6,pc}
;;;87     
                          ENDP

0000e6  0000              DCW      0x0000
                  |L1.232|
                          DCD      GUI_Context
