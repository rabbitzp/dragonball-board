; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guidemo.o --depend=.\rvmdk\guidemo.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guidemo.crf ..\..\..\..\..\uCGUI\GUIDemo\GUIDEMO.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _UpdateCmdWin PROC
;;;104    
;;;105    static void _UpdateCmdWin(void) {
000000  4770              BX       lr
;;;106      #if GUI_WINSUPPORT && GUIDEMO_LARGE
;;;107        WM_InvalidateWindow(_ahInfoWin[1]);
;;;108      #endif
;;;109    }
;;;110    
                          ENDP

                  _UpdateInfoWin PROC
;;;129    
;;;130    static void _UpdateInfoWin(void) {
000002  4770              BX       lr
;;;131      #if GUI_WINSUPPORT && GUIDEMO_LARGE
;;;132        GUI_RECT rClient;
;;;133        WM_HWIN hWin;
;;;134        GUI_CONTEXT ContextOld;
;;;135        GUI_SaveContext(&ContextOld);
;;;136        /* Update info  window */
;;;137        WM_ShowWindow(_ahInfoWin[0]);
;;;138        WM_ShowWindow(_ahFrameWin[0]);
;;;139        hWin = WM_SelectWindow(_ahInfoWin[0]);
;;;140        GUI_GetClientRect(&rClient);
;;;141        GUI_SetBkColor(GUI_WHITE);
;;;142        GUI_Clear();
;;;143        GUI_SetColor(GUI_BLACK);
;;;144        GUI_SetFont(&GUI_Font13_1);
;;;145        GUI_SetTextAlign(GUI_TA_HCENTER);
;;;146        GUI_DispStringHCenterAt(_sInfo, (rClient.x1 - rClient.x0) / 2, 0);
;;;147        GUI_SetTextAlign(GUI_TA_LEFT);
;;;148        GUI_SetFont(&GUI_Font8_ASCII);
;;;149        GUI_DispStringAt(_sExplain, 0, 20);
;;;150        WM_SelectWindow(hWin);
;;;151        GUI_RestoreContext(&ContextOld);
;;;152      #endif
;;;153    }
;;;154    
                          ENDP

                  GUIDEMO_SetBkColor PROC
;;;161    
;;;162    GUI_COLOR GUIDEMO_SetBkColor(GUI_COLOR Color) {
000004  b510              PUSH     {r4,lr}
000006  4604              MOV      r4,r0
;;;163      GUI_COLOR r;
;;;164      if (GUI_ColorIsAvailable(GUI_RED)) {
000008  20ff              MOVS     r0,#0xff
00000a  f7fffffe          BL       GUI_ColorIsAvailable
00000e  b900              CBNZ     r0,|L1.18|
;;;165        r = Color;
;;;166      } else {
;;;167        r = GUI_BLACK;
000010  2400              MOVS     r4,#0
                  |L1.18|
;;;168      }
;;;169      GUI_SetBkColor(r);
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       GUI_SetBkColor
;;;170      return r;
000018  4620              MOV      r0,r4
;;;171    }
00001a  bd10              POP      {r4,pc}
;;;172    
                          ENDP

                  GUIDEMO_SetColor PROC
;;;173    GUI_COLOR GUIDEMO_SetColor(GUI_COLOR Color) {
00001c  b510              PUSH     {r4,lr}
00001e  4604              MOV      r4,r0
;;;174      GUI_COLOR r;
;;;175      if (GUI_ColorIsAvailable(GUI_RED)) {
000020  20ff              MOVS     r0,#0xff
000022  f7fffffe          BL       GUI_ColorIsAvailable
000026  b908              CBNZ     r0,|L1.44|
;;;176        r = Color;
;;;177      } else {
;;;178        r = GUI_WHITE;
000028  f06f447f          MVN      r4,#0xff000000
                  |L1.44|
;;;179      }
;;;180      GUI_SetColor(r);
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       GUI_SetColor
;;;181      return r;
000032  4620              MOV      r0,r4
;;;182    }
000034  bd10              POP      {r4,pc}
;;;183    
                          ENDP

                  GUIDEMO_CheckCancel PROC
;;;221    
;;;222    int GUIDEMO_CheckCancel(void) {
000036  b570              PUSH     {r4-r6,lr}
;;;223      int c = GUI_GetKey();
000038  f7fffffe          BL       GUI_GetKey
00003c  4604              MOV      r4,r0
;;;224      #if GUI_WINSUPPORT
;;;225        WM_ExecIdle();
00003e  f7fffffe          BL       WM_Exec
;;;226      #endif
;;;227      if ((c == 'n') || (c=='N'))
;;;228        _CmdNext =1;
000042  4da9              LDR      r5,|L1.744|
000044  2c6e              CMP      r4,#0x6e              ;227
000046  d001              BEQ      |L1.76|
000048  2c4e              CMP      r4,#0x4e              ;227
00004a  d101              BNE      |L1.80|
                  |L1.76|
00004c  2001              MOVS     r0,#1
00004e  7028              STRB     r0,[r5,#0]
                  |L1.80|
;;;229      if ((c == 's') || (c=='S')) {
000050  2c73              CMP      r4,#0x73
000052  d001              BEQ      |L1.88|
000054  2c53              CMP      r4,#0x53
000056  d10c              BNE      |L1.114|
                  |L1.88|
;;;230        GUI_Delay(500);
000058  f44f70fa          MOV      r0,#0x1f4
00005c  f7fffffe          BL       GUI_Delay
                  |L1.96|
;;;231        do {
;;;232          GUI_Delay(10);
000060  200a              MOVS     r0,#0xa
000062  f7fffffe          BL       GUI_Delay
;;;233          #if GUI_WINSUPPORT
;;;234            WM_ExecIdle();
000066  f7fffffe          BL       WM_Exec
;;;235          #endif
;;;236          c = GUI_GetKey();
00006a  f7fffffe          BL       GUI_GetKey
;;;237        } while (!c);
00006e  2800              CMP      r0,#0
000070  d0f6              BEQ      |L1.96|
                  |L1.114|
;;;238      }
;;;239      return _CmdNext;
000072  7828              LDRB     r0,[r5,#0]  ; _CmdNext
;;;240    }
000074  bd70              POP      {r4-r6,pc}
;;;241    
                          ENDP

                  GUIDEMO_Delay PROC
;;;183    
;;;184    int GUIDEMO_Delay(int t) {
000076  e92d41f0          PUSH     {r4-r8,lr}
00007a  4606              MOV      r6,r0
;;;185      int r = 0;
00007c  2700              MOVS     r7,#0
;;;186      #if GUI_WINSUPPORT
;;;187        int tm, value;
;;;188        #if GUIDEMO_LARGE
;;;189          PROGBAR_Handle hProg;
;;;190        #endif
;;;191        WM_SetForegroundWindow(_ahButton[0]);
00007e  489b              LDR      r0,|L1.748|
000080  f9b00000          LDRSH    r0,[r0,#0]  ; _ahButton
000084  f7fffffe          BL       WM_BringToTop
;;;192        #if GUIDEMO_LARGE
;;;193          hProg = (t >100) ? PROGBAR_CreateAsChild(10, 10, 60, 7, _ahInfoWin[1], 0,
;;;194                                            WM_CF_SHOW | WM_CF_STAYONTOP| WM_CF_MEMDEV) : 0;
;;;195          PROGBAR_SetMinMax(hProg, 0, t);
;;;196        #endif
;;;197        tm = GUI_GetTime();
000088  f7fffffe          BL       GUI_GetTime
00008c  4605              MOV      r5,r0
                  |L1.142|
;;;198        do {
;;;199          value = GUI_GetTime() - tm;
00008e  f7fffffe          BL       GUI_GetTime
000092  1b44              SUBS     r4,r0,r5
;;;200          #if GUIDEMO_LARGE
;;;201            PROGBAR_SetValue(hProg, value);
;;;202            WM_ExecIdle();
;;;203          #endif
;;;204          GUI_Delay(10);
000094  200a              MOVS     r0,#0xa
000096  f7fffffe          BL       GUI_Delay
;;;205        } while ((value < t) && !GUIDEMO_CheckCancel());
00009a  42b4              CMP      r4,r6
00009c  da03              BGE      |L1.166|
00009e  f7fffffe          BL       GUIDEMO_CheckCancel
0000a2  2800              CMP      r0,#0
0000a4  d0f3              BEQ      |L1.142|
                  |L1.166|
;;;206        #if GUIDEMO_LARGE
;;;207          PROGBAR_Delete(hProg);
;;;208        #endif
;;;209        _UpdateCmdWin();
0000a6  f7fffffe          BL       _UpdateCmdWin
;;;210        WM_ExecIdle();
0000aa  f7fffffe          BL       WM_Exec
;;;211      #else
;;;212        GUI_Delay(t);
;;;213      #endif
;;;214      return r;
0000ae  4638              MOV      r0,r7
;;;215    }
0000b0  e8bd81f0          POP      {r4-r8,pc}
;;;216    
                          ENDP

                  GUIDEMO_NotifyStartNext PROC
;;;253    
;;;254    void GUIDEMO_NotifyStartNext(void) {
0000b4  b510              PUSH     {r4,lr}
;;;255      _CmdNext = 0;
0000b6  4c8c              LDR      r4,|L1.744|
0000b8  2000              MOVS     r0,#0
0000ba  7020              STRB     r0,[r4,#0]
;;;256      _UpdateCmdWin();
0000bc  f7fffffe          BL       _UpdateCmdWin
;;;257      _iTestMinor++;
0000c0  69a0              LDR      r0,[r4,#0x18]  ; _iTestMinor
0000c2  1c40              ADDS     r0,r0,#1
0000c4  61a0              STR      r0,[r4,#0x18]  ; _iTestMinor
;;;258    }
0000c6  bd10              POP      {r4,pc}
;;;259    
                          ENDP

                  GUIDEMO_Wait PROC
;;;216    
;;;217    void GUIDEMO_Wait(void) {
0000c8  b510              PUSH     {r4,lr}
;;;218      GUIDEMO_Delay(4000);
0000ca  f44f607a          MOV      r0,#0xfa0
0000ce  f7fffffe          BL       GUIDEMO_Delay
;;;219      GUIDEMO_NotifyStartNext();
0000d2  e8bd4010          POP      {r4,lr}
0000d6  e7fe              B        GUIDEMO_NotifyStartNext
;;;220    }
;;;221    
                          ENDP

                  GUIDEMO_ShowInfo PROC
;;;241    
;;;242    void GUIDEMO_ShowInfo(const char* s) {
0000d8  4983              LDR      r1,|L1.744|
;;;243      _sExplain = s;
0000da  61c8              STR      r0,[r1,#0x1c]  ; _sExplain
;;;244      _UpdateInfoWin();
0000dc  e7fe              B        _UpdateInfoWin
;;;245    }
;;;246    
                          ENDP

                  GUIDEMO_HideInfoWin PROC
;;;247    void GUIDEMO_HideInfoWin(void) {
0000de  4884              LDR      r0,|L1.752|
;;;248      #if GUI_WINSUPPORT
;;;249        WM_HideWindow(_ahFrameWin[0]);
0000e0  f9b00000          LDRSH    r0,[r0,#0]  ; _ahFrameWin
0000e4  f7ffbffe          B.W      WM_HideWindow
;;;250      #endif
;;;251    }
;;;252    
                          ENDP

                  GUIDEMO_WaitKey PROC
;;;259    
;;;260    int GUIDEMO_WaitKey(void) {
0000e8  b5f8              PUSH     {r3-r7,lr}
;;;261      int r = 0;
0000ea  2600              MOVS     r6,#0
;;;262      int tMax = GUI_GetTime() + 4000;
0000ec  f7fffffe          BL       GUI_GetTime
0000f0  f500647a          ADD      r4,r0,#0xfa0
;;;263      int tDiff; 
;;;264      #if GUI_WINSUPPORT
;;;265        PROGBAR_Handle hProg = PROGBAR_Create(LCD_GetXSize() - 70, 
0000f4  f7fffffe          BL       LCD_GetYSize
0000f8  f1a00528          SUB      r5,r0,#0x28
0000fc  f7fffffe          BL       LCD_GetXSize
000100  2302              MOVS     r3,#2
000102  9300              STR      r3,[sp,#0]
000104  3846              SUBS     r0,r0,#0x46
000106  2305              MOVS     r3,#5
000108  2250              MOVS     r2,#0x50
00010a  4629              MOV      r1,r5
00010c  f7fffffe          BL       PROGBAR_Create
000110  4605              MOV      r5,r0
;;;266                                              LCD_GetYSize() - 40, 
;;;267                                              80, 5, WM_CF_SHOW);
;;;268      #endif
;;;269      while (tDiff = tMax-GUI_GetTime(), (tDiff > 0) && !GUIDEMO_CheckCancel()) {
000112  e003              B        |L1.284|
                  |L1.276|
;;;270        if ((r = GUI_GetKey()) != 0)
000114  f7fffffe          BL       GUI_GetKey
000118  0006              MOVS     r6,r0
00011a  d108              BNE      |L1.302|
                  |L1.284|
00011c  f7fffffe          BL       GUI_GetTime
000120  1a20              SUBS     r0,r4,r0              ;269
000122  2800              CMP      r0,#0                 ;269
000124  dd03              BLE      |L1.302|
000126  f7fffffe          BL       GUIDEMO_CheckCancel
00012a  2800              CMP      r0,#0                 ;269
00012c  d0f2              BEQ      |L1.276|
                  |L1.302|
;;;271          break;
;;;272      }
;;;273      #if GUI_WINSUPPORT
;;;274        PROGBAR_Delete(hProg);
00012e  4628              MOV      r0,r5
000130  f7fffffe          BL       WM_DeleteWindow
;;;275        WM_ExecIdle();
000134  f7fffffe          BL       WM_Exec
;;;276      #endif
;;;277      return r;
000138  4630              MOV      r0,r6
;;;278    }
00013a  bdf8              POP      {r3-r7,pc}
;;;279    
                          ENDP

                  GUIDEMO_ShowIntro PROC
;;;280    void GUIDEMO_ShowIntro(const char * s, const char * sExp) {
00013c  b570              PUSH     {r4-r6,lr}
00013e  b09a              SUB      sp,sp,#0x68
000140  4606              MOV      r6,r0
000142  460c              MOV      r4,r1
;;;281      GUI_CONTEXT ContextOld;
;;;282      GUI_SaveContext(&ContextOld);
000144  a801              ADD      r0,sp,#4
000146  f7fffffe          BL       GUI_SaveContext_W_M
;;;283    #if GUI_WINSUPPORT && GUIDEMO_LARGE
;;;284      _sInfo = s;
;;;285    #endif
;;;286      _sExplain = sExp;
00014a  4d67              LDR      r5,|L1.744|
00014c  61ec              STR      r4,[r5,#0x1c]  ; _sExplain
;;;287      GUI_SetDefault();
00014e  f7fffffe          BL       GUI_SetDefault
;;;288      GUIDEMO_HideInfoWin();
000152  f7fffffe          BL       GUIDEMO_HideInfoWin
;;;289      GUI_SetBkColor(GUI_BLUE);
000156  f44f007f          MOV      r0,#0xff0000
00015a  f7fffffe          BL       GUI_SetBkColor
;;;290      GUI_SetColor(GUI_WHITE);
00015e  f06f407f          MVN      r0,#0xff000000
000162  f7fffffe          BL       GUI_SetColor
;;;291      GUI_Clear();
000166  f7fffffe          BL       GUI_Clear
;;;292      GUI_SetFont(&GUI_FontComic18B_ASCII);
00016a  4862              LDR      r0,|L1.756|
00016c  f7fffffe          BL       GUI_SetFont
;;;293      GUI_DispStringHCenterAt(s, LCD_GET_XSIZE() / 2, LCD_GET_YSIZE() / 3 - 10);
000170  f7fffffe          BL       LCD_GetYSize
000174  4960              LDR      r1,|L1.760|
000176  fb811000          SMULL    r1,r0,r1,r0
00017a  eba070e0          SUB      r0,r0,r0,ASR #31
00017e  f1a0040a          SUB      r4,r0,#0xa
000182  f7fffffe          BL       LCD_GetXSize
000186  eb0070d0          ADD      r0,r0,r0,LSR #31
00018a  1041              ASRS     r1,r0,#1
00018c  4622              MOV      r2,r4
00018e  4630              MOV      r0,r6
000190  f7fffffe          BL       GUI_DispStringHCenterAt
;;;294      if (_sExplain) {
000194  69e8              LDR      r0,[r5,#0x1c]  ; _sExplain
000196  b198              CBZ      r0,|L1.448|
;;;295        GUI_SetFont(&GUI_Font8_ASCII);
000198  4858              LDR      r0,|L1.764|
00019a  f7fffffe          BL       GUI_SetFont
;;;296        GUI_DispStringHCenterAt(_sExplain, LCD_GET_XSIZE() / 2, LCD_GET_YSIZE() / 2 - 10);
00019e  f7fffffe          BL       LCD_GetYSize
0001a2  4604              MOV      r4,r0
0001a4  f7fffffe          BL       LCD_GetXSize
0001a8  eb0471d4          ADD      r1,r4,r4,LSR #31
0001ac  f06f0209          MVN      r2,#9
0001b0  eb020261          ADD      r2,r2,r1,ASR #1
0001b4  eb0070d0          ADD      r0,r0,r0,LSR #31
0001b8  1041              ASRS     r1,r0,#1
0001ba  69e8              LDR      r0,[r5,#0x1c]  ; _sExplain
0001bc  f7fffffe          BL       GUI_DispStringHCenterAt
                  |L1.448|
;;;297      }
;;;298      GUIDEMO_Delay(_sExplain ? 2000 : 4000);
0001c0  69e8              LDR      r0,[r5,#0x1c]  ; _sExplain
0001c2  b110              CBZ      r0,|L1.458|
0001c4  f44f60fa          MOV      r0,#0x7d0
0001c8  e001              B        |L1.462|
                  |L1.458|
0001ca  f44f607a          MOV      r0,#0xfa0
                  |L1.462|
0001ce  f7fffffe          BL       GUIDEMO_Delay
;;;299    #if GUI_WINSUPPORT
;;;300      _UpdateInfoWin();
0001d2  f7fffffe          BL       _UpdateInfoWin
;;;301      _UpdateCmdWin();
0001d6  f7fffffe          BL       _UpdateCmdWin
;;;302    #endif
;;;303      GUI_RestoreContext(&ContextOld);
0001da  a801              ADD      r0,sp,#4
0001dc  f7fffffe          BL       GUI_RestoreContext
;;;304      #if GUI_WINSUPPORT
;;;305        WM_ExecIdle();
0001e0  f7fffffe          BL       WM_Exec
;;;306      #endif
;;;307      GUIDEMO_NotifyStartNext();
0001e4  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;308      GUI_SetBkColor(GUI_RED);
0001e8  20ff              MOVS     r0,#0xff
0001ea  f7fffffe          BL       GUI_SetBkColor
;;;309      GUI_Clear();
0001ee  f7fffffe          BL       GUI_Clear
;;;310    }
0001f2  b01a              ADD      sp,sp,#0x68
0001f4  bd70              POP      {r4-r6,pc}
;;;311    
                          ENDP

                  GUIDEMO_main PROC
;;;396    */
;;;397    void GUIDEMO_main(void) {
0001f6  b5f0              PUSH     {r4-r7,lr}
0001f8  b099              SUB      sp,sp,#0x64
;;;398      #if GUI_WINSUPPORT
;;;399        int i;
;;;400      #endif
;;;401      #if GUI_WINSUPPORT
;;;402        #if LCD_NUM_DISPLAYS > 1
;;;403          FRAMEWIN_CreateAsChild(10, 10, 100, 100, WM_GetDesktopWindowEx(1), "Display 1", NULL, WM_CF_SHOW);
;;;404          GUI_Delay(1000);
;;;405        #endif
;;;406        WM_SetCreateFlags(WM_CF_MEMDEV);  /* Automatically use memory devices on all windows */
0001fa  2004              MOVS     r0,#4
0001fc  f7fffffe          BL       WM_SetCreateFlags
;;;407        _ButtonSizeX = 27;
000200  4c39              LDR      r4,|L1.744|
000202  201b              MOVS     r0,#0x1b
000204  60e0              STR      r0,[r4,#0xc]  ; _ButtonSizeX
;;;408        _ButtonSizeY = 14;
000206  200e              MOVS     r0,#0xe
000208  6120              STR      r0,[r4,#0x10]  ; _ButtonSizeY
;;;409        _ahButton[0] = BUTTON_Create(LCD_GetXSize() - _ButtonSizeX * 2 - 5,
00020a  f7fffffe          BL       LCD_GetYSize
00020e  6921              LDR      r1,[r4,#0x10]  ; _ButtonSizeY
000210  1a40              SUBS     r0,r0,r1
000212  1ec5              SUBS     r5,r0,#3
000214  f7fffffe          BL       LCD_GetXSize
000218  f8d4c00c          LDR      r12,[r4,#0xc]  ; _ButtonSizeX
00021c  2248              MOVS     r2,#0x48
00021e  f1cc0100          RSB      r1,r12,#0
000222  eb000041          ADD      r0,r0,r1,LSL #1
000226  230e              MOVS     r3,#0xe
000228  9200              STR      r2,[sp,#0]
00022a  9301              STR      r3,[sp,#4]
00022c  1f40              SUBS     r0,r0,#5
00022e  4662              MOV      r2,r12
000230  4629              MOV      r1,r5
000232  6923              LDR      r3,[r4,#0x10]  ; _ButtonSizeY
000234  f7fffffe          BL       BUTTON_Create
000238  1ca6              ADDS     r6,r4,#2
00023a  8030              STRH     r0,[r6,#0]
;;;410                                     LCD_GetYSize() - _ButtonSizeY - 3,
;;;411                                     _ButtonSizeX, _ButtonSizeY, 
;;;412                                     'H' , WM_CF_SHOW | WM_CF_STAYONTOP | WM_CF_MEMDEV);
;;;413        _ahButton[1] = BUTTON_Create(LCD_GetXSize() - _ButtonSizeX - 3,
00023c  f7fffffe          BL       LCD_GetYSize
000240  6921              LDR      r1,[r4,#0x10]  ; _ButtonSizeY
000242  1a40              SUBS     r0,r0,r1
000244  1ec5              SUBS     r5,r0,#3
000246  f7fffffe          BL       LCD_GetXSize
00024a  f8d4c00c          LDR      r12,[r4,#0xc]  ; _ButtonSizeX
00024e  224e              MOVS     r2,#0x4e
000250  230e              MOVS     r3,#0xe
000252  9200              STR      r2,[sp,#0]
000254  eba0000c          SUB      r0,r0,r12
000258  9301              STR      r3,[sp,#4]
00025a  1ec0              SUBS     r0,r0,#3
00025c  4662              MOV      r2,r12
00025e  4629              MOV      r1,r5
000260  6923              LDR      r3,[r4,#0x10]  ; _ButtonSizeY
000262  f7fffffe          BL       BUTTON_Create
000266  8070              STRH     r0,[r6,#2]
;;;414                                     LCD_GetYSize() - _ButtonSizeY - 3,
;;;415                                     _ButtonSizeX, _ButtonSizeY, 
;;;416                                     'N' , WM_CF_SHOW | WM_CF_STAYONTOP | WM_CF_MEMDEV);
;;;417        BUTTON_SetFont(_ahButton[0], &GUI_Font8_ASCII);
000268  f9b60000          LDRSH    r0,[r6,#0]  ; _ahButton
00026c  4923              LDR      r1,|L1.764|
00026e  f7fffffe          BL       BUTTON_SetFont
;;;418        BUTTON_SetFont(_ahButton[1], &GUI_Font8_ASCII);
000272  f9b60002          LDRSH    r0,[r6,#2]  ; _ahButton
000276  4921              LDR      r1,|L1.764|
000278  f7fffffe          BL       BUTTON_SetFont
;;;419        BUTTON_SetText(_ahButton[0], "Stop");
00027c  f9b60000          LDRSH    r0,[r6,#0]  ; _ahButton
000280  a11f              ADR      r1,|L1.768|
000282  f7fffffe          BL       BUTTON_SetText
;;;420        BUTTON_SetText(_ahButton[1], "Next");
000286  f9b60002          LDRSH    r0,[r6,#2]  ; _ahButton
00028a  a11f              ADR      r1,|L1.776|
00028c  f7fffffe          BL       BUTTON_SetText
;;;421        _UpdateCmdWin();
000290  f7fffffe          BL       _UpdateCmdWin
;;;422        WM_ExecIdle();
000294  f7fffffe          BL       WM_Exec
;;;423      #endif
;;;424      /* Show Intro */
;;;425      GUIDEMO_Intro();
000298  f7fffffe          BL       GUIDEMO_Intro
;;;426      /* Run the individual demos !  */
;;;427      for (_iTest = 0; _apfTest[_iTest]; _iTest++) {
00029c  2700              MOVS     r7,#0
00029e  6167              STR      r7,[r4,#0x14]  ; _iTest
0002a0  f1040520          ADD      r5,r4,#0x20
0002a4  6828              LDR      r0,[r5,#0]
0002a6  b1a0              CBZ      r0,|L1.722|
                  |L1.680|
;;;428        GUI_CONTEXT ContextOld;
;;;429        GUI_SaveContext(&ContextOld);
0002a8  4668              MOV      r0,sp
0002aa  f7fffffe          BL       GUI_SaveContext_W_M
;;;430        _iTestMinor = 0;
0002ae  61a7              STR      r7,[r4,#0x18]  ; _iTestMinor
;;;431        _UpdateCmdWin();
0002b0  f7fffffe          BL       _UpdateCmdWin
;;;432        (*_apfTest[_iTest])();
0002b4  6960              LDR      r0,[r4,#0x14]  ; _iTest
0002b6  f8550020          LDR      r0,[r5,r0,LSL #2]
0002ba  4780              BLX      r0
;;;433        _CmdNext = 0;
0002bc  7027              STRB     r7,[r4,#0]
;;;434        GUI_RestoreContext(&ContextOld);
0002be  4668              MOV      r0,sp
0002c0  f7fffffe          BL       GUI_RestoreContext
0002c4  6960              LDR      r0,[r4,#0x14]         ;427  ; _iTest
0002c6  1c40              ADDS     r0,r0,#1              ;427
0002c8  6160              STR      r0,[r4,#0x14]         ;427  ; _iTest
0002ca  f8550020          LDR      r0,[r5,r0,LSL #2]     ;427
0002ce  2800              CMP      r0,#0                 ;427
0002d0  d1ea              BNE      |L1.680|
                  |L1.722|
;;;435      }
;;;436      /* Cleanup */
;;;437      #if GUI_WINSUPPORT
;;;438        for (i = 0; i < countof(_ahButton); i++) {
0002d2  2400              MOVS     r4,#0
                  |L1.724|
;;;439          BUTTON_Delete(_ahButton[i]);
0002d4  f9360014          LDRSH    r0,[r6,r4,LSL #1]
0002d8  f7fffffe          BL       WM_DeleteWindow
0002dc  1c64              ADDS     r4,r4,#1              ;438
0002de  2c02              CMP      r4,#2                 ;438
0002e0  d3f8              BCC      |L1.724|
;;;440        }
;;;441      #endif
;;;442    }
0002e2  b019              ADD      sp,sp,#0x64
0002e4  bdf0              POP      {r4-r7,pc}
;;;443    
                          ENDP

0002e6  0000              DCW      0x0000
                  |L1.744|
                          DCD      ||.data||
                  |L1.748|
                          DCD      ||.data||+0x2
                  |L1.752|
                          DCD      ||.data||+0x6
                  |L1.756|
                          DCD      GUI_FontComic18B_ASCII
                  |L1.760|
                          DCD      0x55555556
                  |L1.764|
                          DCD      GUI_Font8_ASCII
                  |L1.768|
000300  53746f70          DCB      "Stop",0
000304  00      
000305  00                DCB      0
000306  00                DCB      0
000307  00                DCB      0
                  |L1.776|
000308  4e657874          DCB      "Next",0
00030c  00      
00030d  00                DCB      0
00030e  00                DCB      0
00030f  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  _CmdNext
000000  0000              DCB      0x00,0x00
                  _ahButton
000002  0000              DCB      0x00,0x00
000004  0000              DCB      0x00,0x00
                  _ahFrameWin
000006  0000              DCB      0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  _ButtonSizeX
                          DCD      0x00000000
                  _ButtonSizeY
                          DCD      0x00000000
                  _iTest
                          DCD      0x00000000
                  _iTestMinor
                          DCD      0x00000000
                  _sExplain
                          DCD      0x00000000
                  _apfTest
                          DCD      GUIDEMO_HardwareInfo
                          DCD      GUIDEMO_Speed
                          DCD      GUIDEMO_Graph
                          DCD      GUIDEMO_Bitmap
                          DCD      GUIDEMO_Cursor
                          DCD      GUIDEMO_ShowInternationalFonts
                          DCD      GUIDEMO_ShowColorBar
                          DCD      GUIDEMO_ShowColorList
                          DCD      GUIDEMO_DemoPolygon
                          DCD      GUIDEMO_Circle
                          DCD      GUIDEMO_ShowMemoryDevice
                          DCD      GUIDEMO_Automotive
                          DCD      GUIDEMO_Navigation
                          DCD      GUIDEMO_DemoProgBar
                          DCD      GUIDEMO_DemoFrameWin
                          DCD      GUIDEMO_Dialog
                          DCD      GUIDEMO_WM
                          DCD      0x00000000
