; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guiaachar2.o --depend=.\rvmdk\guiaachar2.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guiaachar2.crf ..\..\..\..\..\uCGUI\GUI\AntiAlias\GUIAAChar2.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  DrawNoTrans PROC
;;;61     */
;;;62     static void DrawNoTrans(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8*pData) {
000000  e92d4fff          PUSH     {r0-r11,lr}
000004  b083              SUB      sp,sp,#0xc
000006  4693              MOV      r11,r2
000008  f8dd8044          LDR      r8,[sp,#0x44]
00000c  9f10              LDR      r7,[sp,#0x40]
;;;63       if ((OldColorIndex   != LCD_COLORINDEX) || 
00000e  4894              LDR      r0,|L1.608|
000010  f8df9250          LDR      r9,|L1.612|
000014  4992              LDR      r1,|L1.608|
000016  8846              LDRH     r6,[r0,#2]  ; GUI_Context
000018  f8b90000          LDRH     r0,[r9,#0]  ; OldColorIndex
;;;64           (OldBkColorIndex != LCD_BKCOLORINDEX)) {
00001c  880d              LDRH     r5,[r1,#0]
00001e  4286              CMP      r6,r0                 ;63
000020  d103              BNE      |L1.42|
000022  f8b90002          LDRH     r0,[r9,#2]  ; OldBkColorIndex
000026  4285              CMP      r5,r0
000028  d023              BEQ      |L1.114|
                  |L1.42|
;;;65         int i;
;;;66         LCD_PIXELINDEX BkColorIndex = LCD_BKCOLORINDEX;
;;;67         LCD_PIXELINDEX ColorIndex   = LCD_COLORINDEX;
;;;68         LCD_COLOR BkColor = LCD_Index2Color(BkColorIndex);
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       LCD_Index2Color
000030  9002              STR      r0,[sp,#8]
;;;69         LCD_COLOR Color   = LCD_Index2Color(ColorIndex);
000032  4630              MOV      r0,r6
000034  f7fffffe          BL       LCD_Index2Color
000038  9001              STR      r0,[sp,#4]
;;;70         aColor[0] = BkColor;
00003a  f8dfa22c          LDR      r10,|L1.616|
00003e  9802              LDR      r0,[sp,#8]
000040  f8ca0000          STR      r0,[r10,#0]  ; aColor
;;;71         for (i = 1; i < 3; i++) {
000044  2401              MOVS     r4,#1
                  |L1.70|
;;;72           U8 Intens;
;;;73           Intens = 5 * i;
000046  eb040084          ADD      r0,r4,r4,LSL #2
00004a  b2c2              UXTB     r2,r0
;;;74           aColor[i] = LCD_AA_MixColors(Color, BkColor, Intens);
00004c  9902              LDR      r1,[sp,#8]
00004e  9801              LDR      r0,[sp,#4]
000050  f7fffffe          BL       LCD_AA_MixColors
000054  f84a0024          STR      r0,[r10,r4,LSL #2]
000058  1c64              ADDS     r4,r4,#1              ;71
00005a  2c03              CMP      r4,#3                 ;71
00005c  dbf3              BLT      |L1.70|
;;;75         }
;;;76         aColor[3] = Color;
00005e  9801              LDR      r0,[sp,#4]
000060  f8ca000c          STR      r0,[r10,#0xc]  ; aColor
;;;77         LCD_GetpPalConvTableUncached(&Palette);
000064  4881              LDR      r0,|L1.620|
000066  f7fffffe          BL       LCD_GetpPalConvTableUncached
;;;78         OldColorIndex = ColorIndex;
00006a  f8a96000          STRH     r6,[r9,#0]
;;;79         OldBkColorIndex = BkColorIndex;
00006e  f8a95002          STRH     r5,[r9,#2]
                  |L1.114|
;;;80       }
;;;81       Bitmap.XSize = XSize;
000072  487f              LDR      r0,|L1.624|
000074  f8a0b000          STRH     r11,[r0,#0]
;;;82       Bitmap.YSize = YSize;
000078  9906              LDR      r1,[sp,#0x18]
00007a  8041              STRH     r1,[r0,#2]
;;;83       Bitmap.BytesPerLine = BytesPerLine;
00007c  8087              STRH     r7,[r0,#4]
;;;84       Bitmap.pData = pData;
00007e  f8c08008          STR      r8,[r0,#8]  ; Bitmap
;;;85       GL_DrawBitmap(&Bitmap, x0, y0);
000082  9a04              LDR      r2,[sp,#0x10]
000084  9903              LDR      r1,[sp,#0xc]
000086  b007              ADD      sp,sp,#0x1c
000088  e8bd4ff0          POP      {r4-r11,lr}
00008c  f7ffbffe          B.W      GL_DrawBitmap
;;;86     }
;;;87     
                          ENDP

                  DrawTrans PROC
;;;91     */
;;;92     static void DrawTrans(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8*pData) {
000090  e92d4fff          PUSH     {r0-r11,lr}
000094  b081              SUB      sp,sp,#4
000096  f8dd803c          LDR      r8,[sp,#0x3c]
;;;93       int x, y;
;;;94       for (y = 0; y < YSize; y++) {
00009a  2600              MOVS     r6,#0
00009c  9804              LDR      r0,[sp,#0x10]
00009e  2800              CMP      r0,#0
0000a0  dd6d              BLE      |L1.382|
;;;95         const U8 *pData0 = pData;
;;;96         U8 Rem = XSize & 3;
;;;97         for (x = 0; x < XSize - 1; x += 4) {
0000a2  9803              LDR      r0,[sp,#0xc]
;;;98           LCD_SetPixelAA(x + x0    , y0 + y, aConvTable[((*pData0  ) >> 6)       ]);
0000a4  f8dfa1cc          LDR      r10,|L1.628|
0000a8  f1a00901          SUB      r9,r0,#1              ;97
                  |L1.172|
0000ac  4644              MOV      r4,r8                 ;95
0000ae  9803              LDR      r0,[sp,#0xc]          ;96
0000b0  f0000703          AND      r7,r0,#3              ;96
0000b4  2500              MOVS     r5,#0                 ;97
0000b6  f1b90f00          CMP      r9,#0                 ;97
0000ba  dd33              BLE      |L1.292|
0000bc  9802              LDR      r0,[sp,#8]
0000be  4430              ADD      r0,r0,r6
0000c0  9000              STR      r0,[sp,#0]
                  |L1.194|
0000c2  7820              LDRB     r0,[r4,#0]
0000c4  9900              LDR      r1,[sp,#0]
0000c6  0980              LSRS     r0,r0,#6
0000c8  f85a0020          LDR      r0,[r10,r0,LSL #2]
0000cc  b2c2              UXTB     r2,r0
0000ce  9801              LDR      r0,[sp,#4]
0000d0  eb050b00          ADD      r11,r5,r0
0000d4  4658              MOV      r0,r11
0000d6  f7fffffe          BL       LCD_SetPixelAA
;;;99           LCD_SetPixelAA(x + x0 + 1, y0 + y, aConvTable[((*pData0  ) >> 4) & 0x03]);
0000da  7820              LDRB     r0,[r4,#0]
0000dc  9900              LDR      r1,[sp,#0]
0000de  f3c01001          UBFX     r0,r0,#4,#2
0000e2  f85a0020          LDR      r0,[r10,r0,LSL #2]
0000e6  b2c2              UXTB     r2,r0
0000e8  f10b0001          ADD      r0,r11,#1
0000ec  f7fffffe          BL       LCD_SetPixelAA
;;;100          LCD_SetPixelAA(x + x0 + 2, y0 + y, aConvTable[((*pData0  ) >> 2) & 0x03]);
0000f0  7820              LDRB     r0,[r4,#0]
0000f2  9900              LDR      r1,[sp,#0]
0000f4  f3c00081          UBFX     r0,r0,#2,#2
0000f8  f85a0020          LDR      r0,[r10,r0,LSL #2]
0000fc  b2c2              UXTB     r2,r0
0000fe  f10b0002          ADD      r0,r11,#2
000102  f7fffffe          BL       LCD_SetPixelAA
;;;101          LCD_SetPixelAA(x + x0 + 3, y0 + y, aConvTable[((*pData0++)     ) & 0x03]);
000106  f8140b01          LDRB     r0,[r4],#1
00010a  9900              LDR      r1,[sp,#0]
00010c  f0000003          AND      r0,r0,#3
000110  f85a0020          LDR      r0,[r10,r0,LSL #2]
000114  b2c2              UXTB     r2,r0
000116  f10b0003          ADD      r0,r11,#3
00011a  f7fffffe          BL       LCD_SetPixelAA
00011e  1d2d              ADDS     r5,r5,#4              ;97
000120  454d              CMP      r5,r9                 ;97
000122  dbce              BLT      |L1.194|
                  |L1.292|
;;;102      	}
;;;103        if (Rem) {
000124  b32f              CBZ      r7,|L1.370|
;;;104          LCD_SetPixelAA(x + x0    , y0 + y, aConvTable[((*pData0  ) >> 6)       ]);
000126  7820              LDRB     r0,[r4,#0]
000128  0980              LSRS     r0,r0,#6
00012a  f85a0020          LDR      r0,[r10,r0,LSL #2]
00012e  b2c2              UXTB     r2,r0
000130  9802              LDR      r0,[sp,#8]
000132  eb000b06          ADD      r11,r0,r6
000136  9801              LDR      r0,[sp,#4]
000138  4659              MOV      r1,r11
00013a  4405              ADD      r5,r5,r0
00013c  4628              MOV      r0,r5
00013e  f7fffffe          BL       LCD_SetPixelAA
;;;105          if (Rem > 1) {
000142  2f01              CMP      r7,#1
000144  d915              BLS      |L1.370|
;;;106            LCD_SetPixelAA(x + x0 + 1, y0 + y, aConvTable[((*pData0  ) >> 4) & 0x03]);
000146  7820              LDRB     r0,[r4,#0]
000148  4659              MOV      r1,r11
00014a  f3c01001          UBFX     r0,r0,#4,#2
00014e  f85a0020          LDR      r0,[r10,r0,LSL #2]
000152  b2c2              UXTB     r2,r0
000154  1c68              ADDS     r0,r5,#1
000156  f7fffffe          BL       LCD_SetPixelAA
;;;107            if (Rem > 2) {
00015a  2f02              CMP      r7,#2
00015c  d909              BLS      |L1.370|
;;;108              LCD_SetPixelAA(x + x0 + 2, y0 + y, aConvTable[((*pData0  ) >> 2) & 0x03]);
00015e  7820              LDRB     r0,[r4,#0]
000160  4659              MOV      r1,r11
000162  f3c00081          UBFX     r0,r0,#2,#2
000166  f85a0020          LDR      r0,[r10,r0,LSL #2]
00016a  b2c2              UXTB     r2,r0
00016c  1ca8              ADDS     r0,r5,#2
00016e  f7fffffe          BL       LCD_SetPixelAA
                  |L1.370|
;;;109            }
;;;110          }
;;;111        }
;;;112        pData += BytesPerLine;
000172  980e              LDR      r0,[sp,#0x38]
000174  4480              ADD      r8,r8,r0
000176  1c76              ADDS     r6,r6,#1              ;94
000178  9804              LDR      r0,[sp,#0x10]         ;94
00017a  4286              CMP      r6,r0                 ;94
00017c  db96              BLT      |L1.172|
                  |L1.382|
;;;113      }
;;;114    }
00017e  b005              ADD      sp,sp,#0x14
000180  e8bd8ff0          POP      {r4-r11,pc}
;;;115    
                          ENDP

                  GUIPROP_FindChar PROC
;;;119    */
;;;120    static const GUI_FONT_PROP* GUIPROP_FindChar(const GUI_FONT_PROP* pProp, U16P c) {
000184  4836              LDR      r0,|L1.608|
;;;121      for (pProp = GUI_Context.pAFont->p.pProp; pProp; pProp=(const GUI_FONT_PROP*) pProp->pNext) {
000186  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
000188  6980              LDR      r0,[r0,#0x18]
00018a  2800              CMP      r0,#0
00018c  d008              BEQ      |L1.416|
                  |L1.398|
;;;122        if ((c>=pProp->First) && (c<=pProp->Last))
00018e  8802              LDRH     r2,[r0,#0]
000190  428a              CMP      r2,r1
000192  d802              BHI      |L1.410|
000194  8842              LDRH     r2,[r0,#2]
000196  428a              CMP      r2,r1
000198  d202              BCS      |L1.416|
                  |L1.410|
00019a  6880              LDR      r0,[r0,#8]            ;121
00019c  2800              CMP      r0,#0                 ;121
00019e  d1f6              BNE      |L1.398|
                  |L1.416|
;;;123          break;
;;;124      }
;;;125      return pProp;
;;;126    }
0001a0  4770              BX       lr
;;;127    
                          ENDP

                  GUIPROP_AA2_DispChar PROC
;;;137    */
;;;138    void GUIPROP_AA2_DispChar(U16P c) {
0001a2  e92d41f0          PUSH     {r4-r8,lr}
0001a6  b082              SUB      sp,sp,#8
0001a8  4604              MOV      r4,r0
;;;139      int BytesPerLine;
;;;140      GUI_DRAWMODE DrawMode = GUI_Context.TextMode;
0001aa  4d2d              LDR      r5,|L1.608|
0001ac  f9b5602e          LDRSH    r6,[r5,#0x2e]  ; GUI_Context
;;;141      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
0001b0  69e8              LDR      r0,[r5,#0x1c]  ; GUI_Context
0001b2  4621              MOV      r1,r4
0001b4  6980              LDR      r0,[r0,#0x18]
0001b6  f7fffffe          BL       GUIPROP_FindChar
;;;142      if (pProp) {
0001ba  2800              CMP      r0,#0
0001bc  d02f              BEQ      |L1.542|
;;;143        GUI_DRAWMODE OldDrawMode;
;;;144        const GUI_CHARINFO* pCharInfo = pProp->paCharInfo+(c-pProp->First);
0001be  6841              LDR      r1,[r0,#4]
0001c0  8800              LDRH     r0,[r0,#0]
0001c2  1a20              SUBS     r0,r4,r0
0001c4  eb0104c0          ADD      r4,r1,r0,LSL #3
;;;145        BytesPerLine = pCharInfo->BytesPerLine;
0001c8  f8948002          LDRB     r8,[r4,#2]
;;;146        OldDrawMode  = LCD_SetDrawMode(DrawMode);
0001cc  4630              MOV      r0,r6
0001ce  f7fffffe          BL       LCD_SetDrawMode
0001d2  4607              MOV      r7,r0
;;;147        if (DrawMode & GUI_TM_TRANS) {
0001d4  f0160f02          TST      r6,#2
0001d8  d00d              BEQ      |L1.502|
;;;148          DrawTrans(GUI_Context.DispPosX, 
0001da  6863              LDR      r3,[r4,#4]
0001dc  f8cd8000          STR      r8,[sp,#0]
0001e0  9301              STR      r3,[sp,#4]
0001e2  69e8              LDR      r0,[r5,#0x1c]  ; GUI_Context
0001e4  7822              LDRB     r2,[r4,#0]
0001e6  f9b51028          LDRSH    r1,[r5,#0x28]  ; GUI_Context
0001ea  7d03              LDRB     r3,[r0,#0x14]
0001ec  f9b50026          LDRSH    r0,[r5,#0x26]  ; GUI_Context
0001f0  f7fffffe          BL       DrawTrans
0001f4  e00c              B        |L1.528|
                  |L1.502|
;;;149                    GUI_Context.DispPosY,
;;;150                    pCharInfo->XSize,
;;;151                    GUI_Context.pAFont->YSize,
;;;152                    BytesPerLine,
;;;153                    (U8 const*)pCharInfo->pData
;;;154          );
;;;155        } else {
;;;156          DrawNoTrans(GUI_Context.DispPosX, 
0001f6  6863              LDR      r3,[r4,#4]
0001f8  f8cd8000          STR      r8,[sp,#0]
0001fc  9301              STR      r3,[sp,#4]
0001fe  69e8              LDR      r0,[r5,#0x1c]  ; GUI_Context
000200  7822              LDRB     r2,[r4,#0]
000202  f9b51028          LDRSH    r1,[r5,#0x28]  ; GUI_Context
000206  7d03              LDRB     r3,[r0,#0x14]
000208  f9b50026          LDRSH    r0,[r5,#0x26]  ; GUI_Context
00020c  f7fffffe          BL       DrawNoTrans
                  |L1.528|
;;;157                      GUI_Context.DispPosY,
;;;158                      pCharInfo->XSize,
;;;159                      GUI_Context.pAFont->YSize,
;;;160                      BytesPerLine,
;;;161                      (U8 const*)pCharInfo->pData
;;;162          );
;;;163        }
;;;164        LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
000210  4638              MOV      r0,r7
000212  f7fffffe          BL       LCD_SetDrawMode
;;;165        GUI_Context.DispPosX += pCharInfo->XDist;
000216  8ce8              LDRH     r0,[r5,#0x26]  ; GUI_Context
000218  7861              LDRB     r1,[r4,#1]
00021a  4408              ADD      r0,r0,r1
00021c  84e8              STRH     r0,[r5,#0x26]
                  |L1.542|
;;;166      }
;;;167    }
00021e  b002              ADD      sp,sp,#8
000220  e8bd81f0          POP      {r4-r8,pc}
;;;168    
                          ENDP

                  GUIPROP_AA2_GetCharDistX PROC
;;;172    */
;;;173    int GUIPROP_AA2_GetCharDistX(U16P c) {
000224  b510              PUSH     {r4,lr}
000226  4604              MOV      r4,r0
;;;174      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(GUI_Context.pAFont->p.pProp, c);
000228  480d              LDR      r0,|L1.608|
00022a  4621              MOV      r1,r4
00022c  69c0              LDR      r0,[r0,#0x1c]  ; GUI_Context
00022e  6980              LDR      r0,[r0,#0x18]
000230  f7fffffe          BL       GUIPROP_FindChar
;;;175      return (pProp) ? (pProp->paCharInfo+(c-pProp->First))->XSize : 0;
000234  b128              CBZ      r0,|L1.578|
000236  6842              LDR      r2,[r0,#4]
000238  8800              LDRH     r0,[r0,#0]
00023a  1a20              SUBS     r0,r4,r0
00023c  f8120030          LDRB     r0,[r2,r0,LSL #3]
;;;176    }
000240  bd10              POP      {r4,pc}
                  |L1.578|
000242  2000              MOVS     r0,#0                 ;175
000244  bd10              POP      {r4,pc}
;;;177    
                          ENDP

                  GUIPROP_AA2_GetFontInfo PROC
;;;181    */
;;;182    void GUIPROP_AA2_GetFontInfo(const GUI_FONT * pFont, GUI_FONTINFO* pfi) {
000246  2009              MOVS     r0,#9
;;;183      GUI_USE_PARA(pFont);
;;;184      pfi->Flags = GUI_FONTINFO_FLAG_PROP | GUI_FONTINFO_FLAG_AA2;
000248  8008              STRH     r0,[r1,#0]
;;;185    }
00024a  4770              BX       lr
;;;186    
                          ENDP

                  GUIPROP_AA2_IsInFont PROC
;;;190    */
;;;191    char GUIPROP_AA2_IsInFont(const GUI_FONT * pFont, U16 c) {
00024c  b510              PUSH     {r4,lr}
;;;192      const GUI_FONT_PROP* pProp = GUIPROP_FindChar(pFont->p.pProp, c);
00024e  6980              LDR      r0,[r0,#0x18]
000250  f7fffffe          BL       GUIPROP_FindChar
;;;193      return (pProp==NULL) ? 0 : 1;
000254  b108              CBZ      r0,|L1.602|
000256  2001              MOVS     r0,#1
;;;194    }
000258  bd10              POP      {r4,pc}
                  |L1.602|
00025a  2000              MOVS     r0,#0                 ;193
00025c  bd10              POP      {r4,pc}
;;;195    
                          ENDP

00025e  0000              DCW      0x0000
                  |L1.608|
                          DCD      GUI_Context
                  |L1.612|
                          DCD      ||.data||
                  |L1.616|
                          DCD      ||.bss||
                  |L1.620|
                          DCD      ||.data||+0x4
                  |L1.624|
                          DCD      ||.data||+0x10
                  |L1.628|
                          DCD      ||.constdata||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=6

                  aColor
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  aConvTable
                          DCD      0x00000000
                          DCD      0x00000005
                          DCD      0x0000000a
                          DCD      0x0000000f

                          AREA ||.data||, DATA, ALIGN=2

                  OldColorIndex
000000  0000              DCB      0x00,0x00
                  OldBkColorIndex
000002  0000              DCB      0x00,0x00
                  Palette
                          DCD      0x00000004
000008  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      aColor
                  Bitmap
000010  00000000          DCW      0x0000,0x0000
000014  00000002          DCW      0x0000,0x0002
                          DCD      0x00000000
                          DCD      Palette
                          DCD      0x00000000
