; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\guidemo_speed.o --depend=.\rvmdk\guidemo_speed.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\guidemo_speed.crf ..\..\..\..\..\uCGUI\GUIDemo\GUIDEMO_Speed.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GUIDEMO_Speed PROC
;;;42     
;;;43     void GUIDEMO_Speed(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  b08b              SUB      sp,sp,#0x2c
;;;44       int t = GUI_GetTime();
000006  f7fffffe          BL       GUI_GetTime
00000a  9006              STR      r0,[sp,#0x18]
;;;45       int i = 0;
00000c  2600              MOVS     r6,#0
;;;46       int XSize = LCD_GET_XSIZE();
00000e  f7fffffe          BL       LCD_GetXSize
000012  4604              MOV      r4,r0
;;;47       int YSize = LCD_GET_YSIZE();
000014  f7fffffe          BL       LCD_GetYSize
000018  4605              MOV      r5,r0
;;;48       I32 NumPixels=0;
00001a  2700              MOVS     r7,#0
;;;49       U16 aColorIndex[8];
;;;50       GUIDEMO_ShowIntro("High speed",
00001c  a15d              ADR      r1,|L1.404|
00001e  a069              ADR      r0,|L1.452|
000020  f7fffffe          BL       GUIDEMO_ShowIntro
;;;51                         "Multi layer clipping"
;;;52                         "\nHighly optimized drivers"
;;;53                         );
;;;54       for (i = 0; i< 8; i++) {
;;;55         aColorIndex[i] = GUI_Color2Index(_aColor[i]);
000024  f8df91a8          LDR      r9,|L1.464|
000028  f10d0808          ADD      r8,sp,#8              ;49
                  |L1.44|
00002c  f8590026          LDR      r0,[r9,r6,LSL #2]
000030  f7fffffe          BL       GUI_Color2Index
000034  f8280016          STRH     r0,[r8,r6,LSL #1]
000038  1c76              ADDS     r6,r6,#1              ;54
00003a  2e08              CMP      r6,#8                 ;54
00003c  dbf6              BLT      |L1.44|
;;;56       }  
;;;57       for (i = 0; (((t + 8000) - (int)GUI_GetTime()) > 0) && !GUIDEMO_CheckCancel(); i++) {
00003e  2600              MOVS     r6,#0
;;;58         GUI_RECT r;
;;;59         GUI_SetColorIndex(aColorIndex[i&7]);
;;;60         /* Calculate random positions */
;;;61         r.x0 = rand() % XSize - XSize / 2;
000040  eb0470d4          ADD      r0,r4,r4,LSR #31
000044  1040              ASRS     r0,r0,#1
;;;62         r.y0 = rand() % YSize - YSize / 2;
000046  900a              STR      r0,[sp,#0x28]
000048  eb0570d5          ADD      r0,r5,r5,LSR #31
00004c  1040              ASRS     r0,r0,#1
;;;63         r.x1 = r.x0 + rand() % XSize;
;;;64         r.y1 = r.y0 + rand() % YSize;
;;;65         GUI_FillRect(r.x0, r.y0, r.x1, r.y1);
;;;66         /* Clip rectangle to visible area and add the number of pixels (for speed computation) */
;;;67         if (r.x1 >= XSize)
;;;68           r.x1 = XSize - 1;
00004e  9009              STR      r0,[sp,#0x24]
000050  1e60              SUBS     r0,r4,#1
000052  b200              SXTH     r0,r0
;;;69         if (r.y1 >= YSize)
;;;70           r.y1 = YSize - 1;
000054  9008              STR      r0,[sp,#0x20]
000056  1e68              SUBS     r0,r5,#1
000058  b200              SXTH     r0,r0
00005a  9007              STR      r0,[sp,#0x1c]         ;57
00005c  e05d              B        |L1.282|
                  |L1.94|
00005e  f0060107          AND      r1,r6,#7              ;59
000062  a802              ADD      r0,sp,#8              ;59
000064  f8300011          LDRH     r0,[r0,r1,LSL #1]     ;59
000068  f7fffffe          BL       GUI_SetColorIndex
00006c  f7fffffe          BL       rand
000070  fb90f1f4          SDIV     r1,r0,r4              ;61
000074  fb040111          MLS      r1,r4,r1,r0           ;61
000078  980a              LDR      r0,[sp,#0x28]         ;61
00007a  1a08              SUBS     r0,r1,r0              ;61
00007c  fa0ff980          SXTH     r9,r0                 ;61
000080  f8ad9000          STRH     r9,[sp,#0]            ;61
000084  f7fffffe          BL       rand
000088  fb90f1f5          SDIV     r1,r0,r5              ;62
00008c  fb050111          MLS      r1,r5,r1,r0           ;62
000090  9809              LDR      r0,[sp,#0x24]         ;62
000092  1a08              SUBS     r0,r1,r0              ;62
000094  fa0ffa80          SXTH     r10,r0                ;62
000098  f8ada002          STRH     r10,[sp,#2]           ;62
00009c  f7fffffe          BL       rand
0000a0  fb90f1f4          SDIV     r1,r0,r4              ;63
0000a4  fb040011          MLS      r0,r4,r1,r0           ;63
0000a8  4448              ADD      r0,r0,r9              ;63
0000aa  fa0ffb80          SXTH     r11,r0                ;63
0000ae  f8adb004          STRH     r11,[sp,#4]           ;63
0000b2  f7fffffe          BL       rand
0000b6  fb90f1f5          SDIV     r1,r0,r5              ;64
0000ba  fb050011          MLS      r0,r5,r1,r0           ;64
0000be  4450              ADD      r0,r0,r10             ;64
0000c0  fa0ff880          SXTH     r8,r0                 ;64
0000c4  f8ad8006          STRH     r8,[sp,#6]            ;64
0000c8  4643              MOV      r3,r8                 ;65
0000ca  465a              MOV      r2,r11                ;65
0000cc  4651              MOV      r1,r10                ;65
0000ce  4648              MOV      r0,r9                 ;65
0000d0  f7fffffe          BL       GUI_FillRect
0000d4  45a3              CMP      r11,r4                ;67
0000d6  db02              BLT      |L1.222|
0000d8  9808              LDR      r0,[sp,#0x20]         ;68
0000da  f8ad0004          STRH     r0,[sp,#4]            ;68
                  |L1.222|
0000de  45a8              CMP      r8,r5                 ;69
0000e0  db02              BLT      |L1.232|
0000e2  9807              LDR      r0,[sp,#0x1c]
0000e4  f8ad0006          STRH     r0,[sp,#6]
                  |L1.232|
;;;71         if (r.x0 < 0 )
0000e8  f1b90f00          CMP      r9,#0
0000ec  da02              BGE      |L1.244|
;;;72           r.x0 = 0;
0000ee  2000              MOVS     r0,#0
0000f0  f8ad0000          STRH     r0,[sp,#0]
                  |L1.244|
;;;73         if (r.y1 < 0)
0000f4  f9bd0006          LDRSH    r0,[sp,#6]
0000f8  2800              CMP      r0,#0
0000fa  da02              BGE      |L1.258|
;;;74           r.y1 = 0;
0000fc  2000              MOVS     r0,#0
0000fe  f8ad0006          STRH     r0,[sp,#6]
                  |L1.258|
;;;75         NumPixels += (r.x1 - r.x0) * (r.y1 - r.y0);
000102  f9bd0004          LDRSH    r0,[sp,#4]
000106  f9bd1000          LDRSH    r1,[sp,#0]
00010a  1a40              SUBS     r0,r0,r1
00010c  f9bd1006          LDRSH    r1,[sp,#6]
000110  eba1010a          SUB      r1,r1,r10
000114  fb007701          MLA      r7,r0,r1,r7
000118  1c76              ADDS     r6,r6,#1              ;57
                  |L1.282|
00011a  f7fffffe          BL       GUI_GetTime
00011e  9906              LDR      r1,[sp,#0x18]         ;57
000120  1a08              SUBS     r0,r1,r0              ;57
000122  f50050fa          ADD      r0,r0,#0x1f40         ;57
000126  2800              CMP      r0,#0                 ;57
000128  dd03              BLE      |L1.306|
00012a  f7fffffe          BL       GUIDEMO_CheckCancel
00012e  2800              CMP      r0,#0                 ;57
000130  d095              BEQ      |L1.94|
                  |L1.306|
;;;76         /* Allow short breaks so we do not use all available CPU time ... */
;;;77       }
;;;78       t = (GUI_GetTime() - t) / 100;
000132  f7fffffe          BL       GUI_GetTime
000136  9906              LDR      r1,[sp,#0x18]
000138  1a40              SUBS     r0,r0,r1
00013a  4926              LDR      r1,|L1.468|
00013c  fb811000          SMULL    r1,r0,r1,r0
000140  1141              ASRS     r1,r0,#5
000142  eba174e0          SUB      r4,r1,r0,ASR #31
;;;79       GUI_Clear();
000146  f7fffffe          BL       GUI_Clear
;;;80       GUIDEMO_NotifyStartNext();
00014a  f7fffffe          BL       GUIDEMO_NotifyStartNext
;;;81       #if GUIDEMO_LARGE
;;;82         GUI_SetFont(&GUI_FontComic24B_ASCII);
;;;83       #else
;;;84         GUI_SetFont(&GUI_Font16B_ASCII);
00014e  4822              LDR      r0,|L1.472|
000150  f7fffffe          BL       GUI_SetFont
;;;85       #endif
;;;86       GUI_SetColor(GUI_WHITE);
000154  f06f407f          MVN      r0,#0xff000000
000158  f7fffffe          BL       GUI_SetColor
;;;87       GUI_DispStringAt("Pixels/sec: ", 10, (LCD_GetYSize() - GUI_GetFontSizeY()) / 2);
00015c  f7fffffe          BL       LCD_GetYSize
000160  4605              MOV      r5,r0
000162  f7fffffe          BL       GUI_GetFontSizeY
000166  1a28              SUBS     r0,r5,r0
000168  eb0070d0          ADD      r0,r0,r0,LSR #31
00016c  1042              ASRS     r2,r0,#1
00016e  210a              MOVS     r1,#0xa
000170  a01a              ADR      r0,|L1.476|
000172  f7fffffe          BL       GUI_DispStringAt
;;;88       if (t == 0)
000176  b904              CBNZ     r4,|L1.378|
;;;89         t++;
000178  2401              MOVS     r4,#1
                  |L1.378|
;;;90       GUI_DispDecMin(10 * (NumPixels / t));
00017a  fb97f0f4          SDIV     r0,r7,r4
00017e  eb000080          ADD      r0,r0,r0,LSL #2
000182  0040              LSLS     r0,r0,#1
000184  f7fffffe          BL       GUI_DispDecMin
;;;91       GUIDEMO_Wait();
000188  b00b              ADD      sp,sp,#0x2c
00018a  e8bd4ff0          POP      {r4-r11,lr}
00018e  f7ffbffe          B.W      GUIDEMO_Wait
;;;92     }
;;;93     	 	 			 		    	 				 	  			   	 	 	 	 	 	  	  	      	   		 	 	 		  		  	 		 	  	  			     			       	   	 			  		    	 	     	 				  	 					 	 			   	  	  			 				 		 	 	 			     			 
                          ENDP

000192  0000              DCW      0x0000
                  |L1.404|
000194  4d756c74          DCB      "Multi layer clipping\nHighly optimized drivers",0
000198  69206c61
00019c  79657220
0001a0  636c6970
0001a4  70696e67
0001a8  0a486967
0001ac  686c7920
0001b0  6f707469
0001b4  6d697a65
0001b8  64206472
0001bc  69766572
0001c0  7300    
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L1.452|
0001c4  48696768          DCB      "High speed",0
0001c8  20737065
0001cc  656400  
0001cf  00                DCB      0
                  |L1.464|
                          DCD      ||.constdata||
                  |L1.468|
                          DCD      0x51eb851f
                  |L1.472|
                          DCD      GUI_Font16B_ASCII
                  |L1.476|
0001dc  50697865          DCB      "Pixels/sec: ",0
0001e0  6c732f73
0001e4  65633a20
0001e8  00      
0001e9  00                DCB      0
0001ea  00                DCB      0
0001eb  00                DCB      0

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aColor
                          DCD      0x00000000
                          DCD      0x000000ff
                          DCD      0x0000ff00
                          DCD      0x0000ffff
                          DCD      0x00ff0000
                          DCD      0x00ff00ff
                          DCD      0x00ffff00
                          DCD      0x00ffffff
