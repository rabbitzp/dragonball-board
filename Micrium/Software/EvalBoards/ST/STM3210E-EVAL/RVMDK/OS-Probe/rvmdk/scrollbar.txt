; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\scrollbar.o --depend=.\rvmdk\scrollbar.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\scrollbar.crf ..\..\..\..\..\uCGUI\GUI\Widget\SCROLLBAR.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _GetArrowSize PROC
;;;87     */
;;;88     static int _GetArrowSize(SCROLLBAR_Obj* pObj) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
;;;89       unsigned int r;
;;;90       unsigned int xSize = WIDGET__GetXSize(&pObj->Widget);
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       WIDGET__GetXSize
00000a  4604              MOV      r4,r0
;;;91       unsigned int ySize = WIDGET__GetYSize(&pObj->Widget);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       WIDGET__GetYSize
;;;92       r = ySize/2 + 5;
000012  2105              MOVS     r1,#5
000014  eb010050          ADD      r0,r1,r0,LSR #1
;;;93       if (r > xSize-5)
000018  1f61              SUBS     r1,r4,#5
00001a  4288              CMP      r0,r1
00001c  d900              BLS      |L1.32|
;;;94         r = xSize-5;
00001e  1f60              SUBS     r0,r4,#5
                  |L1.32|
;;;95       return r;
;;;96     }
000020  bd70              POP      {r4-r6,pc}
;;;97     
                          ENDP

                  _WIDGET__RECT2VRECT PROC
;;;108    */
;;;109    static void _WIDGET__RECT2VRECT(const WIDGET* pWidget, GUI_RECT* pRect) {
000022  8cc2              LDRH     r2,[r0,#0x26]
;;;110      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000024  f0120f08          TST      r2,#8
000028  d013              BEQ      |L1.82|
;;;111        int xSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0 + 1;
00002a  8882              LDRH     r2,[r0,#4]
00002c  8800              LDRH     r0,[r0,#0]
00002e  1a10              SUBS     r0,r2,r0
000030  1c40              ADDS     r0,r0,#1
;;;112        int x0, x1;
;;;113        x0 = pRect->x0;
000032  880a              LDRH     r2,[r1,#0]
;;;114        x1 = pRect->x1;
000034  888b              LDRH     r3,[r1,#4]
;;;115        pRect->x0 = pRect->y0;
000036  f8b1c002          LDRH     r12,[r1,#2]
00003a  f8a1c000          STRH     r12,[r1,#0]
;;;116        pRect->x1 = pRect->y1;
00003e  f8b1c006          LDRH     r12,[r1,#6]
000042  f8a1c004          STRH     r12,[r1,#4]
;;;117        pRect->y1 = xSize - 1 - x0;
000046  1a82              SUBS     r2,r0,r2
000048  1e52              SUBS     r2,r2,#1
00004a  80ca              STRH     r2,[r1,#6]
;;;118        pRect->y0 = xSize - 1 - x1;
00004c  1ac0              SUBS     r0,r0,r3
00004e  1e40              SUBS     r0,r0,#1
000050  8048              STRH     r0,[r1,#2]
                  |L1.82|
;;;119      }
;;;120    }
000052  4770              BX       lr
;;;121    
                          ENDP

                  _CalcPositions PROC
;;;128    */
;;;129    static void _CalcPositions(SCROLLBAR_Obj* pObj, SCROLLBAR_POSITIONS* pPos) {
000054  e92d47f0          PUSH     {r4-r10,lr}
000058  b084              SUB      sp,sp,#0x10
00005a  4604              MOV      r4,r0
00005c  460d              MOV      r5,r1
;;;130      int xSizeArrow, xSize, xSizeMoveable, ThumbSize, NumItems, xSizeThumbArea;
;;;131      WM_HWIN hWin;
;;;132      GUI_RECT r, rSub;
;;;133      int x0, y0;
;;;134      r = pObj->Widget.Win.Rect;
00005e  6861              LDR      r1,[r4,#4]
000060  6820              LDR      r0,[r4,#0]
000062  9103              STR      r1,[sp,#0xc]
000064  9002              STR      r0,[sp,#8]
;;;135      x0 = r.x0;
000066  f9bd6008          LDRSH    r6,[sp,#8]
;;;136      y0 = r.y0;
00006a  f9bd700a          LDRSH    r7,[sp,#0xa]
;;;137      pPos->x1  = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? r.y1 : r.x1;
00006e  8ce0              LDRH     r0,[r4,#0x26]
000070  f0100f08          TST      r0,#8
000074  d002              BEQ      |L1.124|
000076  f9bd000e          LDRSH    r0,[sp,#0xe]
00007a  e001              B        |L1.128|
                  |L1.124|
00007c  f9bd000c          LDRSH    r0,[sp,#0xc]
                  |L1.128|
000080  61a8              STR      r0,[r5,#0x18]
;;;138      /* Subtract the rectangle of the other scrollbar (if existing and visible) */
;;;139      if (pObj->Widget.Id == GUI_ID_HSCROLL) {
000082  8ca0              LDRH     r0,[r4,#0x24]
000084  28ff              CMP      r0,#0xff
000086  d112              BNE      |L1.174|
;;;140        hWin = WM_GetScrollbarV(pObj->Widget.Win.hParent);
000088  f9b40016          LDRSH    r0,[r4,#0x16]
00008c  f7fffffe          BL       WM_GetScrollbarV
;;;141        if (hWin) {
000090  b168              CBZ      r0,|L1.174|
;;;142          WM_GetWindowRectEx(hWin, &rSub);
000092  4669              MOV      r1,sp
000094  f7fffffe          BL       WM_GetWindowRectEx
;;;143          if (r.x1 == rSub.x1) {
000098  f9bd000c          LDRSH    r0,[sp,#0xc]
00009c  f9bd1004          LDRSH    r1,[sp,#4]
0000a0  4288              CMP      r0,r1
0000a2  d104              BNE      |L1.174|
;;;144            r.x1 = rSub.x0 -1;
0000a4  f8bd0000          LDRH     r0,[sp,#0]
0000a8  1e40              SUBS     r0,r0,#1
0000aa  f8ad000c          STRH     r0,[sp,#0xc]
                  |L1.174|
;;;145          }
;;;146        }
;;;147      }
;;;148      if (pObj->Widget.Id == GUI_ID_VSCROLL) {
0000ae  8ca0              LDRH     r0,[r4,#0x24]
0000b0  28fe              CMP      r0,#0xfe
0000b2  d112              BNE      |L1.218|
;;;149        hWin = WM_GetScrollbarH(pObj->Widget.Win.hParent);
0000b4  f9b40016          LDRSH    r0,[r4,#0x16]
0000b8  f7fffffe          BL       WM_GetScrollbarH
;;;150        if (hWin) {
0000bc  b168              CBZ      r0,|L1.218|
;;;151          WM_GetWindowRectEx(hWin, &rSub);
0000be  4669              MOV      r1,sp
0000c0  f7fffffe          BL       WM_GetWindowRectEx
;;;152          if (r.y1 == rSub.y1) {
0000c4  f9bd000e          LDRSH    r0,[sp,#0xe]
0000c8  f9bd1006          LDRSH    r1,[sp,#6]
0000cc  4288              CMP      r0,r1
0000ce  d104              BNE      |L1.218|
;;;153            r.y1 = rSub.y0 -1;
0000d0  f8bd0002          LDRH     r0,[sp,#2]
0000d4  1e40              SUBS     r0,r0,#1
0000d6  f8ad000e          STRH     r0,[sp,#0xe]
                  |L1.218|
;;;154          }
;;;155        }
;;;156      }
;;;157      /* Convert coordinates of this window */
;;;158      GUI_MoveRect(&r, -x0, -y0);
0000da  427a              RSBS     r2,r7,#0
0000dc  4271              RSBS     r1,r6,#0
0000de  a802              ADD      r0,sp,#8
0000e0  f7fffffe          BL       GUI_MoveRect
;;;159      /* Convert real into virtual coordinates */
;;;160      _WIDGET__RECT2VRECT(&pObj->Widget, &r);
0000e4  a902              ADD      r1,sp,#8
0000e6  4620              MOV      r0,r4
0000e8  f7fffffe          BL       _WIDGET__RECT2VRECT
;;;161      NumItems      = pObj->NumItems;
0000ec  f8d4a034          LDR      r10,[r4,#0x34]
;;;162      xSize         = r.x1 - r.x0 + 1;
0000f0  f9bd000c          LDRSH    r0,[sp,#0xc]
0000f4  f9bd1008          LDRSH    r1,[sp,#8]
0000f8  1a40              SUBS     r0,r0,r1
0000fa  f1000801          ADD      r8,r0,#1
;;;163      xSizeArrow    = _GetArrowSize(pObj);
0000fe  4620              MOV      r0,r4
000100  f7fffffe          BL       _GetArrowSize
000104  4681              MOV      r9,r0
;;;164      xSizeThumbArea= xSize - 2 * xSizeArrow;     /* Number of pixels available for thumb and movement */
000106  f1c90000          RSB      r0,r9,#0
00010a  eb080740          ADD      r7,r8,r0,LSL #1
;;;165      ThumbSize     = GUI__DivideRound(xSizeThumbArea * pObj->PageSize, NumItems);
00010e  6be0              LDR      r0,[r4,#0x3c]
000110  4651              MOV      r1,r10
000112  4378              MULS     r0,r7,r0
000114  f7fffffe          BL       GUI__DivideRound
000118  4606              MOV      r6,r0
;;;166      if (ThumbSize < SCROLLBAR_THUMB_SIZE_MIN_DEFAULT) {
00011a  2e04              CMP      r6,#4
00011c  da00              BGE      |L1.288|
;;;167        ThumbSize = SCROLLBAR_THUMB_SIZE_MIN_DEFAULT;
00011e  2604              MOVS     r6,#4
                  |L1.288|
;;;168      }
;;;169      if (ThumbSize > xSizeThumbArea) {
000120  42be              CMP      r6,r7
000122  dd00              BLE      |L1.294|
;;;170        ThumbSize = xSizeThumbArea;
000124  463e              MOV      r6,r7
                  |L1.294|
;;;171      }
;;;172      xSizeMoveable = xSizeThumbArea - ThumbSize;
000126  1bbf              SUBS     r7,r7,r6
;;;173      pPos->x0_LeftArrow  = r.x0;
000128  f9bd0008          LDRSH    r0,[sp,#8]
00012c  6028              STR      r0,[r5,#0]
;;;174      pPos->x1_LeftArrow  = xSizeArrow - 1;
00012e  f1a90001          SUB      r0,r9,#1
000132  6068              STR      r0,[r5,#4]
;;;175      pPos->x1_RightArrow = xSize - 1;
000134  f1a80001          SUB      r0,r8,#1
000138  6168              STR      r0,[r5,#0x14]
;;;176      pPos->x0_RightArrow = xSize - xSizeArrow;
00013a  eba80009          SUB      r0,r8,r9
00013e  6128              STR      r0,[r5,#0x10]
;;;177      pPos->x0_Thumb      = pPos->x1_LeftArrow + 1+ GUI__DivideRound(xSizeMoveable * pObj->v, NumItems - pObj->PageSize);
000140  6be0              LDR      r0,[r4,#0x3c]
000142  ebaa0100          SUB      r1,r10,r0
000146  6ba0              LDR      r0,[r4,#0x38]
000148  4378              MULS     r0,r7,r0
00014a  f7fffffe          BL       GUI__DivideRound
00014e  6869              LDR      r1,[r5,#4]
000150  1c40              ADDS     r0,r0,#1
000152  4408              ADD      r0,r0,r1
000154  60a8              STR      r0,[r5,#8]
;;;178      pPos->x1_Thumb      = pPos->x0_Thumb + ThumbSize - 1;
000156  1e71              SUBS     r1,r6,#1
000158  4408              ADD      r0,r0,r1
00015a  60e8              STR      r0,[r5,#0xc]
;;;179      pPos->xSizeMoveable = xSizeMoveable;
00015c  61ef              STR      r7,[r5,#0x1c]
;;;180      pPos->ThumbSize     = ThumbSize;
00015e  622e              STR      r6,[r5,#0x20]
;;;181    }
000160  b004              ADD      sp,sp,#0x10
000162  e8bd87f0          POP      {r4-r10,pc}
;;;182    
                          ENDP

                  _DrawTriangle PROC
;;;186    */
;;;187    static void _DrawTriangle(WIDGET* pWidget, int x, int y, int Size, int Inc) {
000166  e92d41f0          PUSH     {r4-r8,lr}
00016a  460d              MOV      r5,r1
00016c  9f06              LDR      r7,[sp,#0x18]
00016e  4616              MOV      r6,r2
000170  461c              MOV      r4,r3
;;;188      if (pWidget->State & WIDGET_STATE_VERTICAL) {
000172  8cc0              LDRH     r0,[r0,#0x26]
000174  f0100f08          TST      r0,#8
000178  d00c              BEQ      |L1.404|
;;;189        for (; Size >= 0; Size--, x += Inc) {
00017a  2c00              CMP      r4,#0
00017c  db08              BLT      |L1.400|
                  |L1.382|
;;;190          GUI_DrawHLine(x, y - Size, y + Size);
00017e  1932              ADDS     r2,r6,r4
000180  1b31              SUBS     r1,r6,r4
000182  4628              MOV      r0,r5
000184  f7fffffe          BL       GUI_DrawHLine
000188  1e64              SUBS     r4,r4,#1              ;189
00018a  443d              ADD      r5,r5,r7              ;189
00018c  2c00              CMP      r4,#0                 ;189
00018e  daf6              BGE      |L1.382|
                  |L1.400|
;;;191        }
;;;192      } else {
;;;193        for (; Size >= 0; Size--, x += Inc) {
;;;194          GUI_DrawVLine(x, y - Size, y + Size);
;;;195        }
;;;196      }
;;;197    }
000190  e8bd81f0          POP      {r4-r8,pc}
                  |L1.404|
000194  2c00              CMP      r4,#0                 ;193
000196  dbfb              BLT      |L1.400|
                  |L1.408|
000198  1932              ADDS     r2,r6,r4              ;194
00019a  1b31              SUBS     r1,r6,r4              ;194
00019c  4628              MOV      r0,r5                 ;194
00019e  f7fffffe          BL       GUI_DrawVLine
0001a2  1e64              SUBS     r4,r4,#1              ;193
0001a4  443d              ADD      r5,r5,r7              ;193
0001a6  2c00              CMP      r4,#0                 ;193
0001a8  daf6              BGE      |L1.408|
0001aa  e8bd81f0          POP      {r4-r8,pc}
;;;198    
                          ENDP

                  _Paint PROC
;;;202    */
;;;203    static void _Paint(SCROLLBAR_Obj* pObj) {
0001ae  b570              PUSH     {r4-r6,lr}
0001b0  b090              SUB      sp,sp,#0x40
0001b2  4604              MOV      r4,r0
;;;204      int ArrowSize, ArrowOff;
;;;205      SCROLLBAR_POSITIONS Pos;
;;;206      GUI_RECT r, rClient;
;;;207      /*
;;;208        Get / calc position info
;;;209      */
;;;210      _CalcPositions(pObj, &Pos);
0001b4  a906              ADD      r1,sp,#0x18
0001b6  4620              MOV      r0,r4
0001b8  f7fffffe          BL       _CalcPositions
;;;211      WIDGET__GetClientRect(&pObj->Widget, &rClient);
0001bc  a902              ADD      r1,sp,#8
0001be  4620              MOV      r0,r4
0001c0  f7fffffe          BL       WIDGET__GetClientRect
;;;212      r = rClient;
0001c4  9903              LDR      r1,[sp,#0xc]
0001c6  9802              LDR      r0,[sp,#8]
0001c8  9105              STR      r1,[sp,#0x14]
0001ca  9004              STR      r0,[sp,#0x10]
;;;213      ArrowSize = ((r.y1 - r.y0) /3) - 1;
0001cc  f9bd0016          LDRSH    r0,[sp,#0x16]
0001d0  f9bd1012          LDRSH    r1,[sp,#0x12]
0001d4  1a40              SUBS     r0,r0,r1
0001d6  49ff              LDR      r1,|L1.1492|
0001d8  fb812000          SMULL    r2,r0,r1,r0
0001dc  eba070e0          SUB      r0,r0,r0,ASR #31
0001e0  1e45              SUBS     r5,r0,#1
;;;214      ArrowOff = 3 + ArrowSize+ ArrowSize/3;
0001e2  fb811005          SMULL    r1,r0,r1,r5
0001e6  eba070e0          SUB      r0,r0,r0,ASR #31
0001ea  4428              ADD      r0,r0,r5
0001ec  1cc6              ADDS     r6,r0,#3
;;;215      /*
;;;216        Draw left Arrow
;;;217      */
;;;218      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
0001ee  6aa0              LDR      r0,[r4,#0x28]
0001f0  f7fffffe          BL       LCD_SetColor
;;;219      r = rClient;
0001f4  9903              LDR      r1,[sp,#0xc]
0001f6  9802              LDR      r0,[sp,#8]
0001f8  9105              STR      r1,[sp,#0x14]
0001fa  9004              STR      r0,[sp,#0x10]
;;;220      r.x0 = Pos.x0_LeftArrow;
0001fc  9806              LDR      r0,[sp,#0x18]
0001fe  f8ad0010          STRH     r0,[sp,#0x10]
;;;221      r.x1 = Pos.x1_LeftArrow;
000202  9807              LDR      r0,[sp,#0x1c]
000204  f8ad0014          STRH     r0,[sp,#0x14]
;;;222      WIDGET__FillRectEx(&pObj->Widget, &r);
000208  a904              ADD      r1,sp,#0x10
00020a  4620              MOV      r0,r4
00020c  f7fffffe          BL       WIDGET__FillRectEx
;;;223      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_ARROW]);
000210  6b20              LDR      r0,[r4,#0x30]
000212  f7fffffe          BL       LCD_SetColor
;;;224      _DrawTriangle(&pObj->Widget, r.x0 + ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, -1);
000216  f04f33ff          MOV      r3,#0xffffffff
00021a  9300              STR      r3,[sp,#0]
00021c  f9bd0016          LDRSH    r0,[sp,#0x16]
000220  f9bd1012          LDRSH    r1,[sp,#0x12]
000224  462b              MOV      r3,r5
000226  1a40              SUBS     r0,r0,r1
000228  1042              ASRS     r2,r0,#1
00022a  f9bd0010          LDRSH    r0,[sp,#0x10]
00022e  1981              ADDS     r1,r0,r6
000230  4620              MOV      r0,r4
000232  f7fffffe          BL       _DrawTriangle
;;;225      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
000236  a904              ADD      r1,sp,#0x10
000238  4620              MOV      r0,r4
00023a  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;226      /*
;;;227        Draw the thumb area which is not covered by the thumb
;;;228      */
;;;229      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_SHAFT]);
00023e  6ae0              LDR      r0,[r4,#0x2c]
000240  f7fffffe          BL       LCD_SetColor
;;;230      r.x0 = Pos.x1_LeftArrow + 1;
000244  9807              LDR      r0,[sp,#0x1c]
000246  1c40              ADDS     r0,r0,#1
000248  f8ad0010          STRH     r0,[sp,#0x10]
;;;231      r.x1 = Pos.x0_Thumb - 1;
00024c  9808              LDR      r0,[sp,#0x20]
00024e  1e40              SUBS     r0,r0,#1
000250  f8ad0014          STRH     r0,[sp,#0x14]
;;;232      WIDGET__FillRectEx(&pObj->Widget, &r);
000254  a904              ADD      r1,sp,#0x10
000256  4620              MOV      r0,r4
000258  f7fffffe          BL       WIDGET__FillRectEx
;;;233      r = rClient;
00025c  9903              LDR      r1,[sp,#0xc]
00025e  9802              LDR      r0,[sp,#8]
000260  9105              STR      r1,[sp,#0x14]
000262  9004              STR      r0,[sp,#0x10]
;;;234      r.x0 = Pos.x1_Thumb + 1;
000264  9809              LDR      r0,[sp,#0x24]
000266  1c40              ADDS     r0,r0,#1
000268  f8ad0010          STRH     r0,[sp,#0x10]
;;;235      r.x1 = Pos.x0_RightArrow - 1;
00026c  980a              LDR      r0,[sp,#0x28]
00026e  1e40              SUBS     r0,r0,#1
000270  f8ad0014          STRH     r0,[sp,#0x14]
;;;236      WIDGET__FillRectEx(&pObj->Widget, &r);
000274  a904              ADD      r1,sp,#0x10
000276  4620              MOV      r0,r4
000278  f7fffffe          BL       WIDGET__FillRectEx
;;;237      /*
;;;238        Draw Thumb
;;;239      */
;;;240      r = rClient;
00027c  9903              LDR      r1,[sp,#0xc]
00027e  9802              LDR      r0,[sp,#8]
000280  9105              STR      r1,[sp,#0x14]
000282  9004              STR      r0,[sp,#0x10]
;;;241      r.x0 = Pos.x0_Thumb;
000284  9808              LDR      r0,[sp,#0x20]
000286  f8ad0010          STRH     r0,[sp,#0x10]
;;;242      r.x1 = Pos.x1_Thumb;
00028a  9809              LDR      r0,[sp,#0x24]
00028c  f8ad0014          STRH     r0,[sp,#0x14]
;;;243      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000290  6aa0              LDR      r0,[r4,#0x28]
000292  f7fffffe          BL       LCD_SetColor
;;;244      WIDGET__FillRectEx(&pObj->Widget, &r);
000296  a904              ADD      r1,sp,#0x10
000298  4620              MOV      r0,r4
00029a  f7fffffe          BL       WIDGET__FillRectEx
;;;245      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
00029e  a904              ADD      r1,sp,#0x10
0002a0  4620              MOV      r0,r4
0002a2  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;246      /*
;;;247        Draw right Arrow
;;;248      */
;;;249      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
0002a6  6aa0              LDR      r0,[r4,#0x28]
0002a8  f7fffffe          BL       LCD_SetColor
;;;250      r.x0 = Pos.x0_RightArrow;
0002ac  980a              LDR      r0,[sp,#0x28]
0002ae  f8ad0010          STRH     r0,[sp,#0x10]
;;;251      r.x1 = Pos.x1_RightArrow;
0002b2  980b              LDR      r0,[sp,#0x2c]
0002b4  f8ad0014          STRH     r0,[sp,#0x14]
;;;252      WIDGET__FillRectEx(&pObj->Widget, &r);
0002b8  a904              ADD      r1,sp,#0x10
0002ba  4620              MOV      r0,r4
0002bc  f7fffffe          BL       WIDGET__FillRectEx
;;;253      LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_ARROW]);
0002c0  6b20              LDR      r0,[r4,#0x30]
0002c2  f7fffffe          BL       LCD_SetColor
;;;254      _DrawTriangle(&pObj->Widget, r.x1 - ArrowOff, (r.y1 - r.y0) >> 1, ArrowSize, 1);
0002c6  2301              MOVS     r3,#1
0002c8  9300              STR      r3,[sp,#0]
0002ca  f9bd0016          LDRSH    r0,[sp,#0x16]
0002ce  f9bd1012          LDRSH    r1,[sp,#0x12]
0002d2  462b              MOV      r3,r5
0002d4  1a40              SUBS     r0,r0,r1
0002d6  1042              ASRS     r2,r0,#1
0002d8  f9bd0014          LDRSH    r0,[sp,#0x14]
0002dc  1b81              SUBS     r1,r0,r6
0002de  4620              MOV      r0,r4
0002e0  f7fffffe          BL       _DrawTriangle
;;;255      WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
0002e4  a904              ADD      r1,sp,#0x10
0002e6  4620              MOV      r0,r4
0002e8  f7fffffe          BL       WIDGET__EFFECT_DrawUpRect
;;;256      /*
;;;257        Draw overlap area (if any ...)
;;;258      */
;;;259      if (Pos.x1_RightArrow != Pos.x1) {
0002ec  990c              LDR      r1,[sp,#0x30]
0002ee  980b              LDR      r0,[sp,#0x2c]
0002f0  4288              CMP      r0,r1
0002f2  d00d              BEQ      |L1.784|
;;;260        r.x0 = Pos.x1_RightArrow + 1;
0002f4  980b              LDR      r0,[sp,#0x2c]
0002f6  1c40              ADDS     r0,r0,#1
0002f8  f8ad0010          STRH     r0,[sp,#0x10]
;;;261        r.x1 = Pos.x1;
0002fc  980c              LDR      r0,[sp,#0x30]
0002fe  f8ad0014          STRH     r0,[sp,#0x14]
;;;262        LCD_SetColor(pObj->Props.aColor[SCROLLBAR_CI_THUMB]);
000302  6aa0              LDR      r0,[r4,#0x28]
000304  f7fffffe          BL       LCD_SetColor
;;;263        WIDGET__FillRectEx(&pObj->Widget, &r);
000308  a904              ADD      r1,sp,#0x10
00030a  4620              MOV      r0,r4
00030c  f7fffffe          BL       WIDGET__FillRectEx
                  |L1.784|
;;;264      }
;;;265    }
000310  b010              ADD      sp,sp,#0x40
000312  bd70              POP      {r4-r6,pc}
;;;266    
                          ENDP

                  _ScrollbarPressed PROC
;;;270    */
;;;271    static void _ScrollbarPressed(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
000314  b570              PUSH     {r4-r6,lr}
000316  4605              MOV      r5,r0
000318  460c              MOV      r4,r1
;;;272      WIDGET_OrState(hObj, SCROLLBAR_STATE_PRESSED);
00031a  f44f7180          MOV      r1,#0x100
00031e  4628              MOV      r0,r5
000320  f7fffffe          BL       WIDGET_OrState
;;;273      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
000324  8ba1              LDRH     r1,[r4,#0x1c]
000326  f0110f02          TST      r1,#2
00032a  d005              BEQ      |L1.824|
;;;274        WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
00032c  4628              MOV      r0,r5
00032e  e8bd4070          POP      {r4-r6,lr}
000332  2101              MOVS     r1,#1
000334  f7ffbffe          B.W      WM_NotifyParent
                  |L1.824|
;;;275      }
;;;276    }
000338  bd70              POP      {r4-r6,pc}
;;;277    
                          ENDP

                  _ScrollbarReleased PROC
;;;281    */
;;;282    static void _ScrollbarReleased(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj) {
00033a  b570              PUSH     {r4-r6,lr}
00033c  4605              MOV      r5,r0
00033e  460c              MOV      r4,r1
;;;283      WIDGET_AndState(hObj, SCROLLBAR_STATE_PRESSED);
000340  f44f7180          MOV      r1,#0x100
000344  4628              MOV      r0,r5
000346  f7fffffe          BL       WIDGET_AndState
;;;284      if (pObj->Widget.Win.Status & WM_SF_ISVIS) {
00034a  8ba1              LDRH     r1,[r4,#0x1c]
00034c  f0110f02          TST      r1,#2
000350  d005              BEQ      |L1.862|
;;;285        WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
000352  4628              MOV      r0,r5
000354  e8bd4070          POP      {r4-r6,lr}
000358  2102              MOVS     r1,#2
00035a  f7ffbffe          B.W      WM_NotifyParent
                  |L1.862|
;;;286      }
;;;287    }
00035e  bd70              POP      {r4-r6,pc}
;;;288    
                          ENDP

                  SCROLLBAR_SetValue PROC
;;;567    */
;;;568    void SCROLLBAR_SetValue(SCROLLBAR_Handle hObj, int v) {
000360  b570              PUSH     {r4-r6,lr}
000362  4605              MOV      r5,r0
000364  460c              MOV      r4,r1
;;;569      SCROLLBAR_Obj* pObj;
;;;570      int Max;
;;;571      if (hObj) {
000366  2d00              CMP      r5,#0
000368  d01f              BEQ      |L1.938|
;;;572        WM_LOCK();
00036a  f7fffffe          BL       GUI_Lock
;;;573        pObj = SCROLLBAR_H2P(hObj);
00036e  4628              MOV      r0,r5
000370  f7fffffe          BL       GUI_ALLOC_h2p
;;;574        Max = pObj->NumItems - pObj->PageSize;
000374  6bc2              LDR      r2,[r0,#0x3c]
000376  6b41              LDR      r1,[r0,#0x34]
000378  1a89              SUBS     r1,r1,r2
;;;575        if (Max < 0)
00037a  2900              CMP      r1,#0
00037c  da00              BGE      |L1.896|
;;;576          Max =0;
00037e  2100              MOVS     r1,#0
                  |L1.896|
;;;577        /* Put in min/max range */
;;;578        if (v < 0) {
000380  2c00              CMP      r4,#0
000382  da00              BGE      |L1.902|
;;;579          v = 0;
000384  2400              MOVS     r4,#0
                  |L1.902|
;;;580        }
;;;581        if (v > Max) {
000386  428c              CMP      r4,r1
000388  dd00              BLE      |L1.908|
;;;582          v = Max;
00038a  460c              MOV      r4,r1
                  |L1.908|
;;;583        }
;;;584        if (pObj->v != v) {
00038c  6b81              LDR      r1,[r0,#0x38]
00038e  42a1              CMP      r1,r4
000390  d007              BEQ      |L1.930|
;;;585          pObj->v = v;
000392  6384              STR      r4,[r0,#0x38]
;;;586          WM_InvalidateWindow(hObj);
000394  4628              MOV      r0,r5
000396  f7fffffe          BL       WM_InvalidateWindow
;;;587          WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
00039a  2105              MOVS     r1,#5
00039c  4628              MOV      r0,r5
00039e  f7fffffe          BL       WM_NotifyParent
                  |L1.930|
;;;588        }
;;;589        WM_UNLOCK();
0003a2  e8bd4070          POP      {r4-r6,lr}
0003a6  f7ffbffe          B.W      GUI_Unlock
                  |L1.938|
;;;590      }
;;;591    }
0003aa  bd70              POP      {r4-r6,pc}
;;;592    
                          ENDP

                  _OnTouch PROC
;;;292    */
;;;293    static void _OnTouch(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, WM_MESSAGE*pMsg) {
0003ac  b5f0              PUSH     {r4-r7,lr}
0003ae  b089              SUB      sp,sp,#0x24
0003b0  4607              MOV      r7,r0
0003b2  460d              MOV      r5,r1
;;;294      SCROLLBAR_POSITIONS Pos;
;;;295      GUI_PID_STATE* pState = (GUI_PID_STATE*)pMsg->Data.p;
0003b4  6896              LDR      r6,[r2,#8]
;;;296      if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
0003b6  2e00              CMP      r6,#0
0003b8  d04c              BEQ      |L1.1108|
;;;297        if (pState->Pressed) {
0003ba  7a30              LDRB     r0,[r6,#8]
0003bc  b378              CBZ      r0,|L1.1054|
;;;298          int Sel;
;;;299          int Range;
;;;300          int x;
;;;301          Sel = pObj->v;
0003be  6bac              LDR      r4,[r5,#0x38]
;;;302          _CalcPositions(pObj, &Pos);
0003c0  4669              MOV      r1,sp
0003c2  4628              MOV      r0,r5
0003c4  f7fffffe          BL       _CalcPositions
;;;303          Range = pObj->NumItems - pObj->PageSize;
0003c8  6be9              LDR      r1,[r5,#0x3c]
0003ca  6b68              LDR      r0,[r5,#0x34]
0003cc  1a42              SUBS     r2,r0,r1
;;;304          /* Swap mouse coordinates if necessary */
;;;305          if (pObj->Widget.State & WIDGET_STATE_VERTICAL) {
0003ce  8ce8              LDRH     r0,[r5,#0x26]
0003d0  f0100f08          TST      r0,#8
0003d4  d003              BEQ      |L1.990|
;;;306            int t = pState->x;
0003d6  6830              LDR      r0,[r6,#0]
;;;307            pState->x = pState->y;
0003d8  6871              LDR      r1,[r6,#4]
0003da  6031              STR      r1,[r6,#0]
;;;308            pState->y = t;
0003dc  6070              STR      r0,[r6,#4]
                  |L1.990|
;;;309          }
;;;310          x = pState->x;
0003de  6830              LDR      r0,[r6,#0]
;;;311          if (x <= Pos.x1_LeftArrow) {         /* left arrow (line left) */
0003e0  9901              LDR      r1,[sp,#4]
0003e2  4281              CMP      r1,r0
0003e4  db01              BLT      |L1.1002|
;;;312            Sel--;
0003e6  1e64              SUBS     r4,r4,#1
0003e8  e024              B        |L1.1076|
                  |L1.1002|
;;;313          } else if (x < Pos.x0_Thumb) {       /* left area  (page left) */
0003ea  9902              LDR      r1,[sp,#8]
0003ec  4281              CMP      r1,r0
0003ee  dd02              BLE      |L1.1014|
;;;314            Sel -= pObj->PageSize;
0003f0  6be8              LDR      r0,[r5,#0x3c]
0003f2  1a24              SUBS     r4,r4,r0
0003f4  e01e              B        |L1.1076|
                  |L1.1014|
;;;315          } else if (x <= Pos.x1_Thumb) {      /* Thumb area */
0003f6  9903              LDR      r1,[sp,#0xc]
0003f8  4281              CMP      r1,r0
0003fa  db11              BLT      |L1.1056|
;;;316            if (Pos.xSizeMoveable > 0) {
0003fc  9907              LDR      r1,[sp,#0x1c]
0003fe  2900              CMP      r1,#0
000400  dd18              BLE      |L1.1076|
;;;317              x = x - Pos.ThumbSize/2 - Pos.x1_LeftArrow-1;
000402  9908              LDR      r1,[sp,#0x20]
000404  eb0171d1          ADD      r1,r1,r1,LSR #31
000408  eba00061          SUB      r0,r0,r1,ASR #1
00040c  9901              LDR      r1,[sp,#4]
00040e  1a40              SUBS     r0,r0,r1
000410  1e40              SUBS     r0,r0,#1
;;;318              Sel = GUI__DivideRound(Range * x, Pos.xSizeMoveable);
000412  4350              MULS     r0,r2,r0
000414  9907              LDR      r1,[sp,#0x1c]
000416  f7fffffe          BL       GUI__DivideRound
00041a  4604              MOV      r4,r0
00041c  e00a              B        |L1.1076|
                  |L1.1054|
00041e  e01b              B        |L1.1112|
                  |L1.1056|
;;;319            }
;;;320          } else if (x < Pos.x0_RightArrow) {  /* right area (page right) */
000420  9904              LDR      r1,[sp,#0x10]
000422  4281              CMP      r1,r0
000424  dd02              BLE      |L1.1068|
;;;321            Sel += pObj->PageSize;
000426  6be8              LDR      r0,[r5,#0x3c]
000428  4404              ADD      r4,r4,r0
00042a  e003              B        |L1.1076|
                  |L1.1068|
;;;322          } else  if (x <= Pos.x1_RightArrow) {
00042c  9905              LDR      r1,[sp,#0x14]
00042e  4281              CMP      r1,r0
000430  db00              BLT      |L1.1076|
;;;323            Sel++;
000432  1c64              ADDS     r4,r4,#1
                  |L1.1076|
;;;324          }
;;;325          /* WM_SetFocus(hObj); */
;;;326          WM_SetCapture(hObj, 1);
000434  2101              MOVS     r1,#1
000436  4638              MOV      r0,r7
000438  f7fffffe          BL       WM_SetCapture
;;;327          SCROLLBAR_SetValue(hObj, Sel);
00043c  4621              MOV      r1,r4
00043e  4638              MOV      r0,r7
000440  f7fffffe          BL       SCROLLBAR_SetValue
;;;328          if ((pObj->Widget.State & SCROLLBAR_STATE_PRESSED) == 0){   
000444  8ce8              LDRH     r0,[r5,#0x26]
000446  f4107f80          TST      r0,#0x100
00044a  d103              BNE      |L1.1108|
;;;329            _ScrollbarPressed(hObj, pObj);
00044c  4629              MOV      r1,r5
00044e  4638              MOV      r0,r7
000450  f7fffffe          BL       _ScrollbarPressed
                  |L1.1108|
;;;330          }
;;;331        } else {
;;;332          /* React only if button was pressed before ... avoid problems with moving / hiding windows above (such as dropdown) */
;;;333          if (pObj->Widget.State & SCROLLBAR_STATE_PRESSED) {   
;;;334            _ScrollbarReleased(hObj, pObj);
;;;335          }
;;;336        }
;;;337      }
;;;338    }
000454  b009              ADD      sp,sp,#0x24
000456  bdf0              POP      {r4-r7,pc}
                  |L1.1112|
000458  8ce8              LDRH     r0,[r5,#0x26]         ;333
00045a  f4107f80          TST      r0,#0x100             ;333
00045e  d0f9              BEQ      |L1.1108|
000460  4629              MOV      r1,r5                 ;334
000462  4638              MOV      r0,r7                 ;334
000464  f7fffffe          BL       _ScrollbarReleased
000468  b009              ADD      sp,sp,#0x24
00046a  bdf0              POP      {r4-r7,pc}
;;;339    
                          ENDP

                  SCROLLBAR_AddValue PROC
;;;553    */
;;;554    void SCROLLBAR_AddValue(SCROLLBAR_Handle hObj, int Add) {
00046c  b570              PUSH     {r4-r6,lr}
00046e  4604              MOV      r4,r0
000470  460d              MOV      r5,r1
;;;555      SCROLLBAR_Obj* pObj;
;;;556      if (hObj) {
000472  2c00              CMP      r4,#0
000474  d00d              BEQ      |L1.1170|
;;;557        WM_LOCK();
000476  f7fffffe          BL       GUI_Lock
;;;558        pObj = SCROLLBAR_H2P(hObj);
00047a  4620              MOV      r0,r4
00047c  f7fffffe          BL       GUI_ALLOC_h2p
;;;559        SCROLLBAR_SetValue(hObj, pObj->v + Add);
000480  6b80              LDR      r0,[r0,#0x38]
000482  1941              ADDS     r1,r0,r5
000484  4620              MOV      r0,r4
000486  f7fffffe          BL       SCROLLBAR_SetValue
;;;560        WM_UNLOCK();
00048a  e8bd4070          POP      {r4-r6,lr}
00048e  f7ffbffe          B.W      GUI_Unlock
                  |L1.1170|
;;;561      }
;;;562    }
000492  bd70              POP      {r4-r6,pc}
;;;563    
                          ENDP

                  SCROLLBAR_Dec PROC
;;;537    */
;;;538    void SCROLLBAR_Dec(SCROLLBAR_Handle hObj) {
000494  f04f31ff          MOV      r1,#0xffffffff
;;;539      SCROLLBAR_AddValue(hObj, -1);
000498  e7fe              B        SCROLLBAR_AddValue
;;;540    }
;;;541    
                          ENDP

                  SCROLLBAR_Inc PROC
;;;545    */
;;;546    void SCROLLBAR_Inc(SCROLLBAR_Handle hObj) {
00049a  2101              MOVS     r1,#1
;;;547      SCROLLBAR_AddValue(hObj,  1);
00049c  e7fe              B        SCROLLBAR_AddValue
;;;548    }
;;;549    
                          ENDP

                  _OnKey PROC
;;;343    */
;;;344    static void  _OnKey(SCROLLBAR_Handle hObj, WM_MESSAGE*pMsg) {
00049e  688a              LDR      r2,[r1,#8]
;;;345      const WM_KEY_INFO* pKeyInfo;
;;;346      int Key;
;;;347      pKeyInfo = (const WM_KEY_INFO*)(pMsg->Data.p);
;;;348      Key = pKeyInfo->Key;
0004a0  6811              LDR      r1,[r2,#0]
;;;349      if (pKeyInfo->PressedCnt > 0) {
0004a2  6852              LDR      r2,[r2,#4]
0004a4  2a00              CMP      r2,#0
0004a6  dd09              BLE      |L1.1212|
;;;350        switch (Key) {
0004a8  2910              CMP      r1,#0x10
0004aa  d006              BEQ      |L1.1210|
0004ac  2911              CMP      r1,#0x11
0004ae  d004              BEQ      |L1.1210|
0004b0  2912              CMP      r1,#0x12
0004b2  d001              BEQ      |L1.1208|
0004b4  2913              CMP      r1,#0x13
0004b6  d101              BNE      |L1.1212|
                  |L1.1208|
;;;351          case GUI_KEY_RIGHT:
;;;352          case GUI_KEY_DOWN:
;;;353            SCROLLBAR_Inc(hObj);
0004b8  e7fe              B        SCROLLBAR_Inc
                  |L1.1210|
;;;354            break;                    /* Send to parent by not doing anything */
;;;355          case GUI_KEY_LEFT:
;;;356          case GUI_KEY_UP:
;;;357            SCROLLBAR_Dec(hObj);
0004ba  e7fe              B        SCROLLBAR_Dec
                  |L1.1212|
;;;358            break;                    /* Send to parent by not doing anything */
;;;359          default:
;;;360            return;
;;;361        }
;;;362      }
;;;363    }
0004bc  4770              BX       lr
;;;364    
                          ENDP

                  _OnSetScrollState PROC
;;;368    */
;;;369    static void _OnSetScrollState(SCROLLBAR_Handle hObj, SCROLLBAR_Obj* pObj, const WM_SCROLL_STATE* pState) {
0004be  b510              PUSH     {r4,lr}
0004c0  4604              MOV      r4,r0
;;;370      if (  (pState->NumItems != pObj->NumItems)
0004c2  6813              LDR      r3,[r2,#0]
0004c4  6b48              LDR      r0,[r1,#0x34]
0004c6  4283              CMP      r3,r0
0004c8  d109              BNE      |L1.1246|
;;;371          || (pObj->PageSize   != pState->PageSize)
0004ca  6bc8              LDR      r0,[r1,#0x3c]
0004cc  f8d2c008          LDR      r12,[r2,#8]
0004d0  4560              CMP      r0,r12
0004d2  d104              BNE      |L1.1246|
;;;372          || (pObj->v          != pState->v))
0004d4  6b88              LDR      r0,[r1,#0x38]
0004d6  f8d2c004          LDR      r12,[r2,#4]
0004da  4560              CMP      r0,r12
0004dc  d00d              BEQ      |L1.1274|
                  |L1.1246|
;;;373      {
;;;374        pObj->NumItems = pState->NumItems;
0004de  634b              STR      r3,[r1,#0x34]
;;;375        pObj->PageSize = pState->PageSize;
0004e0  6890              LDR      r0,[r2,#8]
0004e2  63c8              STR      r0,[r1,#0x3c]
;;;376        pObj->v        = pState->v;
0004e4  6850              LDR      r0,[r2,#4]
0004e6  6388              STR      r0,[r1,#0x38]
;;;377        WM_InvalidateWindow(hObj);
0004e8  4620              MOV      r0,r4
0004ea  f7fffffe          BL       WM_InvalidateWindow
;;;378        WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
0004ee  4620              MOV      r0,r4
0004f0  e8bd4010          POP      {r4,lr}
0004f4  2105              MOVS     r1,#5
0004f6  f7ffbffe          B.W      WM_NotifyParent
                  |L1.1274|
;;;379      }
;;;380    }
0004fa  bd10              POP      {r4,pc}
;;;381    
                          ENDP

                  SCROLLBAR__InvalidatePartner PROC
;;;408    */
;;;409    void SCROLLBAR__InvalidatePartner(SCROLLBAR_Handle hObj) {     /* Invalidate the partner, since it is also affected */
0004fc  b510              PUSH     {r4,lr}
0004fe  4604              MOV      r4,r0
;;;410      WM_InvalidateWindow(WM_GetScrollPartner(hObj));
000500  4620              MOV      r0,r4
000502  f7fffffe          BL       WM_GetScrollPartner
000506  f7fffffe          BL       WM_InvalidateWindow
;;;411      WM_SendMessageNoPara(WM_GetParent(hObj), WM_NOTIFY_CLIENTCHANGE);   /* Client area may have changed */
00050a  4620              MOV      r0,r4
00050c  f7fffffe          BL       WM_GetParent
000510  e8bd4010          POP      {r4,lr}
000514  2125              MOVS     r1,#0x25
000516  f7ffbffe          B.W      WM_SendMessageNoPara
;;;412    }
;;;413    
                          ENDP

                  SCROLLBAR_Callback PROC
;;;423    */
;;;424    void SCROLLBAR_Callback (WM_MESSAGE *pMsg) {
00051a  b570              PUSH     {r4-r6,lr}
00051c  4604              MOV      r4,r0
;;;425      SCROLLBAR_Handle hObj;
;;;426      SCROLLBAR_Obj* pObj;
;;;427      hObj = pMsg->hWin;
00051e  f9b46004          LDRSH    r6,[r4,#4]
;;;428      pObj = (SCROLLBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
000522  4630              MOV      r0,r6
000524  f7fffffe          BL       GUI_ALLOC_h2p
000528  4605              MOV      r5,r0
;;;429      /* Let widget handle the standard messages */
;;;430      if (WIDGET_HandleActive(hObj, pMsg) == 0) {
00052a  4621              MOV      r1,r4
00052c  4630              MOV      r0,r6
00052e  f7fffffe          BL       WIDGET_HandleActive
000532  2800              CMP      r0,#0
000534  d036              BEQ      |L1.1444|
;;;431        return;
;;;432      }
;;;433      switch (pMsg->MsgId) {
000536  6820              LDR      r0,[r4,#0]
000538  280f              CMP      r0,#0xf
00053a  d010              BEQ      |L1.1374|
00053c  dc06              BGT      |L1.1356|
00053e  280b              CMP      r0,#0xb
000540  d009              BEQ      |L1.1366|
000542  280c              CMP      r0,#0xc
000544  d00f              BEQ      |L1.1382|
000546  280e              CMP      r0,#0xe
000548  d127              BNE      |L1.1434|
00054a  e012              B        |L1.1394|
                  |L1.1356|
00054c  2823              CMP      r0,#0x23
00054e  d01b              BEQ      |L1.1416|
000550  2824              CMP      r0,#0x24
000552  d122              BNE      |L1.1434|
000554  e012              B        |L1.1404|
                  |L1.1366|
;;;434      case WM_DELETE:
;;;435        SCROLLBAR__InvalidatePartner(hObj);
000556  4630              MOV      r0,r6
000558  f7fffffe          BL       SCROLLBAR__InvalidatePartner
;;;436        break;
00055c  e01d              B        |L1.1434|
                  |L1.1374|
;;;437      case WM_PAINT:
;;;438        GUI_DEBUG_LOG("SCROLLBAR: _Callback(WM_PAINT)\n");
;;;439        _Paint(pObj);
00055e  4628              MOV      r0,r5
000560  e8bd4070          POP      {r4-r6,lr}
000564  e7fe              B        _Paint
                  |L1.1382|
;;;440        return;
;;;441      case WM_TOUCH:
;;;442        _OnTouch(hObj, pObj, pMsg);
000566  4622              MOV      r2,r4
000568  4629              MOV      r1,r5
00056a  4630              MOV      r0,r6
00056c  f7fffffe          BL       _OnTouch
;;;443        break;
000570  e013              B        |L1.1434|
                  |L1.1394|
;;;444      case WM_KEY:
;;;445        _OnKey(hObj, pMsg);
000572  4621              MOV      r1,r4
000574  4630              MOV      r0,r6
000576  f7fffffe          BL       _OnKey
;;;446        break;
00057a  e00e              B        |L1.1434|
                  |L1.1404|
;;;447      case WM_SET_SCROLL_STATE:
;;;448        _OnSetScrollState(hObj, pObj, (const WM_SCROLL_STATE*)pMsg->Data.p);
00057c  4629              MOV      r1,r5
00057e  4630              MOV      r0,r6
000580  68a2              LDR      r2,[r4,#8]
000582  f7fffffe          BL       _OnSetScrollState
;;;449        break;
000586  e008              B        |L1.1434|
                  |L1.1416|
;;;450      case WM_GET_SCROLL_STATE:
;;;451        ((WM_SCROLL_STATE*)pMsg->Data.p)->NumItems = pObj->NumItems;
000588  68a1              LDR      r1,[r4,#8]
00058a  6b68              LDR      r0,[r5,#0x34]
00058c  6008              STR      r0,[r1,#0]
;;;452        ((WM_SCROLL_STATE*)pMsg->Data.p)->PageSize = pObj->PageSize;
00058e  68a1              LDR      r1,[r4,#8]
000590  6be8              LDR      r0,[r5,#0x3c]
000592  6088              STR      r0,[r1,#8]
;;;453        ((WM_SCROLL_STATE*)pMsg->Data.p)->v        = pObj->v;
000594  68a1              LDR      r1,[r4,#8]
000596  6ba8              LDR      r0,[r5,#0x38]
000598  6048              STR      r0,[r1,#4]
                  |L1.1434|
;;;454        break;
;;;455      }
;;;456      WM_DefaultProc(pMsg);
00059a  4620              MOV      r0,r4
00059c  e8bd4070          POP      {r4-r6,lr}
0005a0  f7ffbffe          B.W      WM_DefaultProc
                  |L1.1444|
;;;457    }
0005a4  bd70              POP      {r4-r6,pc}
;;;458    
                          ENDP

                  SCROLLBAR_CreateEx PROC
;;;472    */
;;;473    SCROLLBAR_Handle SCROLLBAR_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
0005a6  e92d4fff          PUSH     {r0-r11,lr}
;;;474                                        int WinFlags, int ExFlags, int Id)
;;;475    {
0005aa  b085              SUB      sp,sp,#0x14
0005ac  4682              MOV      r10,r0
0005ae  4689              MOV      r9,r1
0005b0  4614              MOV      r4,r2
0005b2  461d              MOV      r5,r3
0005b4  f8ddb04c          LDR      r11,[sp,#0x4c]
0005b8  f8dd8054          LDR      r8,[sp,#0x54]
0005bc  9e14              LDR      r6,[sp,#0x50]
;;;476      SCROLLBAR_Handle hObj;
;;;477      WM_LOCK();
0005be  f7fffffe          BL       GUI_Lock
;;;478      /* Set defaults if necessary */
;;;479      if ((xsize == 0) && (ysize == 0)) {
;;;480        GUI_RECT Rect;
;;;481        WM_GetInsideRectEx(hParent, &Rect);
;;;482        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
;;;483          xsize = SCROLLBAR__DefaultWidth;
0005c2  4f05              LDR      r7,|L1.1496|
0005c4  ea540005          ORRS     r0,r4,r5              ;479
0005c8  d128              BNE      |L1.1564|
0005ca  a902              ADD      r1,sp,#8              ;481
0005cc  9812              LDR      r0,[sp,#0x48]         ;481
0005ce  f7fffffe          BL       WM_GetInsideRectEx
0005d2  e003              B        |L1.1500|
                  |L1.1492|
                          DCD      0x55555556
                  |L1.1496|
                          DCD      ||.data||
                  |L1.1500|
0005dc  f0160f08          TST      r6,#8                 ;482
0005e0  d00e              BEQ      |L1.1536|
0005e2  f9b74000          LDRSH    r4,[r7,#0]  ; SCROLLBAR__DefaultWidth
;;;484          x0    = Rect.x1 + 1 - xsize;
0005e6  f9bd000c          LDRSH    r0,[sp,#0xc]
0005ea  1b00              SUBS     r0,r0,r4
0005ec  f1000a01          ADD      r10,r0,#1
;;;485          y0    = Rect.y0;
0005f0  f9bd900a          LDRSH    r9,[sp,#0xa]
;;;486          ysize = Rect.y1 - Rect.y0 + 1;
0005f4  f9bd000e          LDRSH    r0,[sp,#0xe]
0005f8  eba00009          SUB      r0,r0,r9
0005fc  1c45              ADDS     r5,r0,#1
0005fe  e00d              B        |L1.1564|
                  |L1.1536|
;;;487        } else {
;;;488          ysize = SCROLLBAR__DefaultWidth;
000600  f9b75000          LDRSH    r5,[r7,#0]  ; SCROLLBAR__DefaultWidth
;;;489          y0    = Rect.y1 + 1 - ysize;
000604  f9bd000e          LDRSH    r0,[sp,#0xe]
000608  1b40              SUBS     r0,r0,r5
00060a  f1000901          ADD      r9,r0,#1
;;;490          x0    = Rect.x0;
00060e  f9bda008          LDRSH    r10,[sp,#8]
;;;491          xsize = Rect.x1 - Rect.x0 + 1;
000612  f9bd000c          LDRSH    r0,[sp,#0xc]
000616  eba0000a          SUB      r0,r0,r10
00061a  1c44              ADDS     r4,r0,#1
                  |L1.1564|
;;;492        }
;;;493      }
;;;494      /* Create the window */
;;;495      hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, SCROLLBAR_Callback,
00061c  2320              MOVS     r3,#0x20
00061e  f2af1205          ADR      r2,SCROLLBAR_Callback + 1
000622  9812              LDR      r0,[sp,#0x48]
000624  fa1ff18b          UXTH     r1,r11
000628  e88d000f          STM      sp,{r0-r3}
00062c  462b              MOV      r3,r5
00062e  4622              MOV      r2,r4
000630  4649              MOV      r1,r9
000632  4650              MOV      r0,r10
000634  f7fffffe          BL       WM_CreateWindowAsChild
000638  4605              MOV      r5,r0
;;;496                                    sizeof(SCROLLBAR_Obj) - sizeof(WM_Obj));
;;;497      if (hObj) {
00063a  b345              CBZ      r5,|L1.1678|
;;;498        SCROLLBAR_Obj * pObj;
;;;499        U16 InitState;
;;;500        pObj = (SCROLLBAR_Obj *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
00063c  4628              MOV      r0,r5
00063e  f7fffffe          BL       GUI_ALLOC_h2p
000642  4604              MOV      r4,r0
;;;501        /* Handle SpecialFlags */
;;;502        InitState = 0;
000644  2200              MOVS     r2,#0
;;;503        if (ExFlags & SCROLLBAR_CF_VERTICAL) {
000646  f0160f08          TST      r6,#8
00064a  d000              BEQ      |L1.1614|
;;;504          InitState |= WIDGET_CF_VERTICAL;
00064c  2208              MOVS     r2,#8
                  |L1.1614|
;;;505        }
;;;506        if (ExFlags & SCROLLBAR_CF_FOCUSSABLE) {
00064e  f0160f10          TST      r6,#0x10
000652  d001              BEQ      |L1.1624|
;;;507          InitState |= WIDGET_STATE_FOCUSSABLE;
000654  f0420210          ORR      r2,r2,#0x10
                  |L1.1624|
;;;508        }
;;;509        if ((Id != GUI_ID_HSCROLL) && (Id != GUI_ID_VSCROLL)) {
000658  f1b80fff          CMP      r8,#0xff
00065c  d004              BEQ      |L1.1640|
00065e  f1b80ffe          CMP      r8,#0xfe
000662  d001              BEQ      |L1.1640|
;;;510          InitState |= WIDGET_STATE_FOCUSSABLE;
000664  f0420210          ORR      r2,r2,#0x10
                  |L1.1640|
;;;511        }
;;;512        /* init widget specific variables */
;;;513        WIDGET__Init(&pObj->Widget, Id, InitState);
000668  4641              MOV      r1,r8
00066a  4620              MOV      r0,r4
00066c  f7fffffe          BL       WIDGET__Init
;;;514        /* init member variables */
;;;515        SCROLLBAR_INIT_ID(pObj);
;;;516        pObj->Props         = SCROLLBAR__DefaultProps;
000670  68fa              LDR      r2,[r7,#0xc]  ; SCROLLBAR__DefaultProps
000672  68b9              LDR      r1,[r7,#8]  ; SCROLLBAR__DefaultProps
000674  6878              LDR      r0,[r7,#4]  ; SCROLLBAR__DefaultProps
000676  6322              STR      r2,[r4,#0x30]
000678  62e1              STR      r1,[r4,#0x2c]
00067a  62a0              STR      r0,[r4,#0x28]
;;;517        pObj->NumItems      = 100;
00067c  2064              MOVS     r0,#0x64
00067e  6360              STR      r0,[r4,#0x34]
;;;518        pObj->PageSize      =  10;
000680  200a              MOVS     r0,#0xa
000682  63e0              STR      r0,[r4,#0x3c]
;;;519        pObj->v             =   0;
000684  2000              MOVS     r0,#0
000686  63a0              STR      r0,[r4,#0x38]
;;;520        SCROLLBAR__InvalidatePartner(hObj);
000688  4628              MOV      r0,r5
00068a  f7fffffe          BL       SCROLLBAR__InvalidatePartner
                  |L1.1678|
;;;521      } else {
;;;522        GUI_DEBUG_ERROROUT_IF(hObj==0, "SCROLLBAR_Create failed")
;;;523      }
;;;524      WM_UNLOCK();
00068e  f7fffffe          BL       GUI_Unlock
;;;525      return hObj;
;;;526    }
000692  b009              ADD      sp,sp,#0x24
000694  4628              MOV      r0,r5                 ;525
000696  e8bd8ff0          POP      {r4-r11,pc}
;;;527    
                          ENDP

                  SCROLLBAR_SetNumItems PROC
;;;596    */
;;;597    void SCROLLBAR_SetNumItems(SCROLLBAR_Handle hObj, int NumItems) {
00069a  b570              PUSH     {r4-r6,lr}
00069c  4605              MOV      r5,r0
00069e  460c              MOV      r4,r1
;;;598      SCROLLBAR_Obj* pObj;
;;;599      if (hObj) {
0006a0  2d00              CMP      r5,#0
0006a2  d00f              BEQ      |L1.1732|
;;;600        WM_LOCK();
0006a4  f7fffffe          BL       GUI_Lock
;;;601        pObj = SCROLLBAR_H2P(hObj);
0006a8  4628              MOV      r0,r5
0006aa  f7fffffe          BL       GUI_ALLOC_h2p
;;;602        if (pObj->NumItems != NumItems) {
0006ae  6b41              LDR      r1,[r0,#0x34]
0006b0  42a1              CMP      r1,r4
0006b2  d003              BEQ      |L1.1724|
;;;603          pObj->NumItems = NumItems;
0006b4  6344              STR      r4,[r0,#0x34]
;;;604          WM_InvalidateWindow(hObj);
0006b6  4628              MOV      r0,r5
0006b8  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1724|
;;;605        }
;;;606        WM_UNLOCK();
0006bc  e8bd4070          POP      {r4-r6,lr}
0006c0  f7ffbffe          B.W      GUI_Unlock
                  |L1.1732|
;;;607      }
;;;608    }
0006c4  bd70              POP      {r4-r6,pc}
;;;609    
                          ENDP

                  SCROLLBAR_SetPageSize PROC
;;;613    */
;;;614    void SCROLLBAR_SetPageSize(SCROLLBAR_Handle hObj, int PageSize) {
0006c6  b570              PUSH     {r4-r6,lr}
0006c8  4605              MOV      r5,r0
0006ca  460c              MOV      r4,r1
;;;615      SCROLLBAR_Obj* pObj;
;;;616      if (hObj) {
0006cc  2d00              CMP      r5,#0
0006ce  d00f              BEQ      |L1.1776|
;;;617        WM_LOCK();
0006d0  f7fffffe          BL       GUI_Lock
;;;618        pObj = SCROLLBAR_H2P(hObj);
0006d4  4628              MOV      r0,r5
0006d6  f7fffffe          BL       GUI_ALLOC_h2p
;;;619        if (pObj->PageSize != PageSize) {
0006da  6bc1              LDR      r1,[r0,#0x3c]
0006dc  42a1              CMP      r1,r4
0006de  d003              BEQ      |L1.1768|
;;;620          pObj->PageSize = PageSize;
0006e0  63c4              STR      r4,[r0,#0x3c]
;;;621          WM_InvalidateWindow(hObj);
0006e2  4628              MOV      r0,r5
0006e4  f7fffffe          BL       WM_InvalidateWindow
                  |L1.1768|
;;;622        }
;;;623        WM_UNLOCK();
0006e8  e8bd4070          POP      {r4-r6,lr}
0006ec  f7ffbffe          B.W      GUI_Unlock
                  |L1.1776|
;;;624      }
;;;625    }
0006f0  bd70              POP      {r4-r6,pc}
;;;626    
                          ENDP

                  SCROLLBAR_SetState PROC
;;;630    */
;;;631    void  SCROLLBAR_SetState   (SCROLLBAR_Handle hObj, const WM_SCROLL_STATE* pState) {
0006f2  b570              PUSH     {r4-r6,lr}
0006f4  4605              MOV      r5,r0
0006f6  460c              MOV      r4,r1
;;;632      if (hObj) {
0006f8  2d00              CMP      r5,#0
0006fa  d00c              BEQ      |L1.1814|
;;;633        SCROLLBAR_SetPageSize(hObj, pState->PageSize);
0006fc  4628              MOV      r0,r5
0006fe  68a1              LDR      r1,[r4,#8]
000700  f7fffffe          BL       SCROLLBAR_SetPageSize
;;;634        SCROLLBAR_SetNumItems(hObj, pState->NumItems);
000704  4628              MOV      r0,r5
000706  6821              LDR      r1,[r4,#0]
000708  f7fffffe          BL       SCROLLBAR_SetNumItems
;;;635        SCROLLBAR_SetValue   (hObj, pState->v);
00070c  4628              MOV      r0,r5
00070e  6861              LDR      r1,[r4,#4]
000710  e8bd4070          POP      {r4-r6,lr}
000714  e7fe              B        SCROLLBAR_SetValue
                  |L1.1814|
;;;636      }
;;;637    }
000716  bd70              POP      {r4-r6,pc}
;;;638    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  SCROLLBAR__DefaultWidth
000000  000b              DCW      0x000b
000002  0000              DCB      0x00,0x00
                  SCROLLBAR__DefaultProps
                          DCD      0x00c0c0c0
                          DCD      0x00808080
                          DCD      0x00000000
