; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\multiedit.o --depend=.\rvmdk\multiedit.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\multiedit.crf ..\..\..\..\..\uCGUI\GUI\Widget\MULTIEDIT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _InvalidateNumChars PROC
;;;164    */
;;;165    static void _InvalidateNumChars(MULTIEDIT_OBJ * pObj) {
000000  f8901079          LDRB     r1,[r0,#0x79]
;;;166      pObj->InvalidFlags |= INVALID_NUMCHARS;
000004  f0410101          ORR      r1,r1,#1
000008  f8801079          STRB     r1,[r0,#0x79]
;;;167    }
00000c  4770              BX       lr
;;;168    
                          ENDP

                  _GetNumChars PROC
;;;174    */
;;;175    static int _GetNumChars(MULTIEDIT_OBJ * pObj) {
00000e  b510              PUSH     {r4,lr}
000010  4604              MOV      r4,r0
;;;176      if (pObj->InvalidFlags & INVALID_NUMCHARS) {
000012  f8940079          LDRB     r0,[r4,#0x79]
000016  f0100f01          TST      r0,#1
00001a  d00c              BEQ      |L1.54|
;;;177        char * pText;
;;;178        pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00001c  f9b40038          LDRSH    r0,[r4,#0x38]
000020  f7fffffe          BL       GUI_ALLOC_h2p
;;;179        pObj->NumChars = GUI__GetNumChars(pText);
000024  f7fffffe          BL       GUI__GetNumChars
000028  87a0              STRH     r0,[r4,#0x3c]
;;;180        pObj->InvalidFlags &= ~INVALID_NUMCHARS;
00002a  f8940079          LDRB     r0,[r4,#0x79]
00002e  f0200001          BIC      r0,r0,#1
000032  f8840079          STRB     r0,[r4,#0x79]
                  |L1.54|
;;;181      }
;;;182      return pObj->NumChars;
000036  8fa0              LDRH     r0,[r4,#0x3c]
;;;183    }
000038  bd10              POP      {r4,pc}
;;;184    
                          ENDP

                  _GetXSize PROC
;;;190    */
;;;191    static int _GetXSize(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
00003a  b510              PUSH     {r4,lr}
00003c  b082              SUB      sp,sp,#8
00003e  460c              MOV      r4,r1
;;;192      GUI_RECT Rect;
;;;193      WM_GetInsideRectExScrollbar(hObj, &Rect);
000040  4669              MOV      r1,sp
000042  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;194      return Rect.x1 - Rect.x0 - (pObj->HBorder * 2) - 1;
000046  f9bd0004          LDRSH    r0,[sp,#4]
00004a  f9bd2000          LDRSH    r2,[sp,#0]
00004e  f894107b          LDRB     r1,[r4,#0x7b]
000052  1a80              SUBS     r0,r0,r2
000054  4249              RSBS     r1,r1,#0
000056  eb000041          ADD      r0,r0,r1,LSL #1
;;;195    }
00005a  b002              ADD      sp,sp,#8
00005c  1e40              SUBS     r0,r0,#1              ;194
00005e  bd10              POP      {r4,pc}
;;;196    
                          ENDP

                  _GetNumCharsInPrompt PROC
;;;200    */
;;;201    static int _GetNumCharsInPrompt(const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
000060  e92d41f0          PUSH     {r4-r8,lr}
000064  4605              MOV      r5,r0
000066  460c              MOV      r4,r1
;;;202      char *pString, *pEndPrompt;
;;;203      int r = 0;
000068  2700              MOVS     r7,#0
;;;204      pString = (char*) GUI_ALLOC_h2p(pObj->hText);
00006a  f9b50038          LDRSH    r0,[r5,#0x38]
00006e  f7fffffe          BL       GUI_ALLOC_h2p
000072  4606              MOV      r6,r0
;;;205      pEndPrompt = pString + GUI_UC__NumChars2NumBytes(pString, pObj->NumCharsPrompt);
000074  8fe9              LDRH     r1,[r5,#0x3e]
000076  4630              MOV      r0,r6
000078  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00007c  1982              ADDS     r2,r0,r6
;;;206      if (pText < pEndPrompt) {
00007e  4294              CMP      r4,r2
000080  d204              BCS      |L1.140|
;;;207        r = GUI_UC__NumBytes2NumChars(pText, pEndPrompt - pText);
000082  1b11              SUBS     r1,r2,r4
000084  4620              MOV      r0,r4
000086  f7fffffe          BL       GUI_UC__NumBytes2NumChars
00008a  4607              MOV      r7,r0
                  |L1.140|
;;;208      }
;;;209      return r;
00008c  4638              MOV      r0,r7
;;;210    }
00008e  e8bd81f0          POP      {r4-r8,pc}
;;;211    
                          ENDP

                  _WrapGetNumCharsDisp PROC
;;;215    */
;;;216    static int _WrapGetNumCharsDisp(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char GUI_UNI_PTR * pText) {
000092  b5f7              PUSH     {r0-r2,r4-r7,lr}
000094  460d              MOV      r5,r1
;;;217      int xSize, r;
;;;218      xSize = _GetXSize(hObj, pObj);
000096  4629              MOV      r1,r5
000098  f7fffffe          BL       _GetXSize
00009c  4606              MOV      r6,r0
;;;219      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
00009e  f8950078          LDRB     r0,[r5,#0x78]
0000a2  f0100f20          TST      r0,#0x20
0000a6  d034              BEQ      |L1.274|
;;;220        int NumCharsPrompt;
;;;221        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
0000a8  4628              MOV      r0,r5
0000aa  9902              LDR      r1,[sp,#8]
0000ac  f7fffffe          BL       _GetNumCharsInPrompt
0000b0  4607              MOV      r7,r0
;;;222        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
0000b2  f895207c          LDRB     r2,[r5,#0x7c]
0000b6  4631              MOV      r1,r6
0000b8  9802              LDR      r0,[sp,#8]
0000ba  f7fffffe          BL       GUI__WrapGetNumCharsDisp
0000be  4604              MOV      r4,r0
;;;223        if (r >= NumCharsPrompt) {
0000c0  42bc              CMP      r4,r7
0000c2  db2d              BLT      |L1.288|
;;;224          int x;
;;;225          switch (pObj->WrapMode) {
0000c4  f895007c          LDRB     r0,[r5,#0x7c]
0000c8  b1f0              CBZ      r0,|L1.264|
;;;226          case GUI_WRAPMODE_NONE:
;;;227            r = GUI__GetNumChars(pText);
;;;228            break;
;;;229          default:
;;;230            r = NumCharsPrompt;
0000ca  463c              MOV      r4,r7
;;;231            x = GUI__GetLineDistX(pText, NumCharsPrompt);
0000cc  4639              MOV      r1,r7
0000ce  9802              LDR      r0,[sp,#8]
0000d0  f7fffffe          BL       GUI__GetLineDistX
0000d4  4605              MOV      r5,r0
;;;232            pText += GUI_UC__NumChars2NumBytes(pText, NumCharsPrompt);
0000d6  4639              MOV      r1,r7
0000d8  9802              LDR      r0,[sp,#8]
0000da  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0000de  9902              LDR      r1,[sp,#8]
0000e0  4408              ADD      r0,r0,r1
0000e2  9002              STR      r0,[sp,#8]
;;;233            while (GUI_UC__GetCharCodeInc(&pText) != 0) {
0000e4  a802              ADD      r0,sp,#8
0000e6  f7fffffe          BL       GUI_UC__GetCharCodeInc
0000ea  b1c8              CBZ      r0,|L1.288|
                  |L1.236|
;;;234              x += GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
0000ec  202a              MOVS     r0,#0x2a
0000ee  f7fffffe          BL       GUI_GetCharDistX
0000f2  4405              ADD      r5,r5,r0
;;;235              if (r && (x > xSize)) {
0000f4  b10c              CBZ      r4,|L1.250|
0000f6  42b5              CMP      r5,r6
0000f8  dc12              BGT      |L1.288|
                  |L1.250|
;;;236                break;
;;;237              }
;;;238              r++;
0000fa  1c64              ADDS     r4,r4,#1
0000fc  a802              ADD      r0,sp,#8              ;233
0000fe  f7fffffe          BL       GUI_UC__GetCharCodeInc
000102  2800              CMP      r0,#0                 ;233
000104  d1f2              BNE      |L1.236|
000106  e00b              B        |L1.288|
                  |L1.264|
000108  9802              LDR      r0,[sp,#8]            ;227
00010a  f7fffffe          BL       GUI__GetNumChars
00010e  4604              MOV      r4,r0                 ;227
000110  e006              B        |L1.288|
                  |L1.274|
;;;239            }
;;;240            break;
;;;241          }
;;;242        }
;;;243      } else {
;;;244        r = GUI__WrapGetNumCharsDisp(pText, xSize, pObj->WrapMode);
000112  f895207c          LDRB     r2,[r5,#0x7c]
000116  4631              MOV      r1,r6
000118  9802              LDR      r0,[sp,#8]
00011a  f7fffffe          BL       GUI__WrapGetNumCharsDisp
00011e  4604              MOV      r4,r0
                  |L1.288|
;;;245      }
;;;246      return r;
;;;247    }
000120  b003              ADD      sp,sp,#0xc
000122  4620              MOV      r0,r4                 ;246
000124  bdf0              POP      {r4-r7,pc}
;;;248    
                          ENDP

                  _WrapGetNumBytesToNextLine PROC
;;;252    */
;;;253    static int _WrapGetNumBytesToNextLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText) {
000126  e92d41f0          PUSH     {r4-r8,lr}
00012a  4607              MOV      r7,r0
00012c  460c              MOV      r4,r1
00012e  4616              MOV      r6,r2
;;;254      int xSize, r;
;;;255      xSize = _GetXSize(hObj, pObj);
000130  4621              MOV      r1,r4
000132  4638              MOV      r0,r7
000134  f7fffffe          BL       _GetXSize
;;;256      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000138  f8941078          LDRB     r1,[r4,#0x78]
00013c  f0110f20          TST      r1,#0x20
000140  d016              BEQ      |L1.368|
;;;257        int NumChars, NumCharsPrompt;
;;;258        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
000142  4631              MOV      r1,r6
000144  4620              MOV      r0,r4
000146  f7fffffe          BL       _GetNumCharsInPrompt
00014a  4605              MOV      r5,r0
;;;259        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
00014c  4632              MOV      r2,r6
00014e  4621              MOV      r1,r4
000150  4638              MOV      r0,r7
000152  f7fffffe          BL       _WrapGetNumCharsDisp
000156  4604              MOV      r4,r0
;;;260        r        = GUI_UC__NumChars2NumBytes(pText, NumChars);
000158  4621              MOV      r1,r4
00015a  4630              MOV      r0,r6
00015c  f7fffffe          BL       GUI_UC__NumChars2NumBytes
;;;261        if (NumChars < NumCharsPrompt) {
000160  42ac              CMP      r4,r5
000162  da03              BGE      |L1.364|
;;;262          if (*(pText + r) == '\n') {
000164  5c31              LDRB     r1,[r6,r0]
000166  290a              CMP      r1,#0xa
000168  d100              BNE      |L1.364|
;;;263            r++;
00016a  1c40              ADDS     r0,r0,#1
                  |L1.364|
;;;264          }
;;;265        }
;;;266      } else {
;;;267        r = GUI__WrapGetNumBytesToNextLine(pText, xSize, pObj->WrapMode);
;;;268      }
;;;269      return r;
;;;270    }
00016c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.368|
000170  4601              MOV      r1,r0                 ;267
000172  f894207c          LDRB     r2,[r4,#0x7c]         ;267
000176  4630              MOV      r0,r6                 ;267
000178  e8bd41f0          POP      {r4-r8,lr}            ;267
00017c  f7ffbffe          B.W      GUI__WrapGetNumBytesToNextLine
;;;271    
                          ENDP

                  _GetCharDistX PROC
;;;275    */
;;;276    static int _GetCharDistX(const MULTIEDIT_OBJ* pObj, const char* pText) {
000180  b510              PUSH     {r4,lr}
000182  460c              MOV      r4,r1
;;;277      int r;
;;;278      if ((pObj->Flags & MULTIEDIT_SF_PASSWORD) && (_GetNumCharsInPrompt(pObj, pText) == 0)) {
000184  f8902078          LDRB     r2,[r0,#0x78]
000188  f0120f20          TST      r2,#0x20
00018c  d003              BEQ      |L1.406|
00018e  4621              MOV      r1,r4
000190  f7fffffe          BL       _GetNumCharsInPrompt
000194  b130              CBZ      r0,|L1.420|
                  |L1.406|
;;;279        r = GUI_GetCharDistX(MULTIEDIT_PASSWORD_CHAR);
;;;280      } else {
;;;281        U16 c;
;;;282        c = GUI_UC_GetCharCode(pText);
000196  4620              MOV      r0,r4
000198  f7fffffe          BL       GUI_UC_GetCharCode
;;;283        r = GUI_GetCharDistX(c);
00019c  e8bd4010          POP      {r4,lr}
0001a0  f7ffbffe          B.W      GUI_GetCharDistX
                  |L1.420|
0001a4  e8bd4010          POP      {r4,lr}               ;279
0001a8  202a              MOVS     r0,#0x2a              ;279
0001aa  f7ffbffe          B.W      GUI_GetCharDistX
;;;284      }
;;;285      return r;
;;;286    }
;;;287    
                          ENDP

                  _DispString PROC
;;;291    */
;;;292    static void _DispString(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, GUI_RECT* pRect) {
0001ae  e92d41f0          PUSH     {r4-r8,lr}
0001b2  460d              MOV      r5,r1
0001b4  4690              MOV      r8,r2
0001b6  461f              MOV      r7,r3
;;;293      int NumCharsDisp;
;;;294      NumCharsDisp = _WrapGetNumCharsDisp(hObj, pObj, pText);
0001b8  4642              MOV      r2,r8
0001ba  4629              MOV      r1,r5
0001bc  f7fffffe          BL       _WrapGetNumCharsDisp
0001c0  4606              MOV      r6,r0
;;;295      if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0001c2  f8950078          LDRB     r0,[r5,#0x78]
0001c6  f0100f20          TST      r0,#0x20
0001ca  d025              BEQ      |L1.536|
;;;296        int x, NumCharsPrompt, NumCharsLeft = 0;
0001cc  2400              MOVS     r4,#0
;;;297        NumCharsPrompt = _GetNumCharsInPrompt(pObj, pText);
0001ce  4641              MOV      r1,r8
0001d0  4628              MOV      r0,r5
0001d2  f7fffffe          BL       _GetNumCharsInPrompt
0001d6  4605              MOV      r5,r0
;;;298        if (NumCharsDisp < NumCharsPrompt) {
0001d8  42ae              CMP      r6,r5
0001da  da01              BGE      |L1.480|
;;;299          NumCharsPrompt = NumCharsDisp;
0001dc  4635              MOV      r5,r6
0001de  e000              B        |L1.482|
                  |L1.480|
;;;300        } else {
;;;301          NumCharsLeft = NumCharsDisp - NumCharsPrompt;
0001e0  1b74              SUBS     r4,r6,r5
                  |L1.482|
;;;302        }
;;;303        GUI_DispStringInRectMax(pText, pRect, GUI_TA_LEFT, NumCharsPrompt);
0001e2  462b              MOV      r3,r5
0001e4  2200              MOVS     r2,#0
0001e6  4639              MOV      r1,r7
0001e8  4640              MOV      r0,r8
0001ea  f7fffffe          BL       GUI_DispStringInRectMax
;;;304        x = pRect->x0 + GUI__GetLineDistX(pText, NumCharsPrompt);
0001ee  4629              MOV      r1,r5
0001f0  4640              MOV      r0,r8
0001f2  f7fffffe          BL       GUI__GetLineDistX
0001f6  f9b71000          LDRSH    r1,[r7,#0]
0001fa  4408              ADD      r0,r0,r1
;;;305        if (NumCharsLeft) {
0001fc  2c00              CMP      r4,#0
0001fe  d014              BEQ      |L1.554|
;;;306          GUI_DispCharAt(MULTIEDIT_PASSWORD_CHAR, x, pRect->y0);
000200  b201              SXTH     r1,r0
000202  f9b72002          LDRSH    r2,[r7,#2]
000206  202a              MOVS     r0,#0x2a
000208  f7fffffe          BL       GUI_DispCharAt
;;;307          GUI_DispChars(MULTIEDIT_PASSWORD_CHAR, NumCharsLeft - 1);
00020c  1e61              SUBS     r1,r4,#1
00020e  e8bd41f0          POP      {r4-r8,lr}
000212  202a              MOVS     r0,#0x2a
000214  f7ffbffe          B.W      GUI_DispChars
                  |L1.536|
;;;308        }
;;;309      } else {
;;;310        GUI_DispStringInRectMax(pText, pRect, pObj->Align, NumCharsDisp);
000218  f8b52058          LDRH     r2,[r5,#0x58]
00021c  4633              MOV      r3,r6
00021e  4639              MOV      r1,r7
000220  4640              MOV      r0,r8
000222  e8bd41f0          POP      {r4-r8,lr}
000226  f7ffbffe          B.W      GUI_DispStringInRectMax
                  |L1.554|
;;;311      }
;;;312    }
00022a  e8bd81f0          POP      {r4-r8,pc}
;;;313    
                          ENDP

                  _GetpLine PROC
;;;326    */
;;;327    static char * _GetpLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, unsigned LineNumber) {
00022e  e92d41f0          PUSH     {r4-r8,lr}
000232  4680              MOV      r8,r0
000234  460c              MOV      r4,r1
000236  4616              MOV      r6,r2
;;;328      char * pText, * pLine;
;;;329      pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000238  f9b40038          LDRSH    r0,[r4,#0x38]
00023c  f7fffffe          BL       GUI_ALLOC_h2p
000240  4607              MOV      r7,r0
;;;330      if ((unsigned)pObj->CacheLineNumber != LineNumber) {
000242  f8b41052          LDRH     r1,[r4,#0x52]
;;;331        if (LineNumber > (unsigned)pObj->CacheLineNumber) {
;;;332          /* If new line number > cache we can start with old pointer */
;;;333          int OldNumber = pObj->CacheLineNumber;
;;;334          pLine = pText + pObj->CacheLinePosByte;
;;;335          pObj->CacheLineNumber  = LineNumber;
000246  b2b0              UXTH     r0,r6
000248  42b1              CMP      r1,r6                 ;330
00024a  d019              BEQ      |L1.640|
00024c  d208              BCS      |L1.608|
00024e  f8b42050          LDRH     r2,[r4,#0x50]         ;334
000252  eb020507          ADD      r5,r2,r7              ;334
000256  f8a40052          STRH     r0,[r4,#0x52]
;;;336          LineNumber -= OldNumber;
00025a  eba60601          SUB      r6,r6,r1
;;;337        } else {
00025e  e002              B        |L1.614|
                  |L1.608|
;;;338          /* If new line number < cache we need to start with first byte */
;;;339          pLine = pText;
000260  463d              MOV      r5,r7
;;;340          pObj->CacheLineNumber  = LineNumber;
000262  f8a40052          STRH     r0,[r4,#0x52]
                  |L1.614|
;;;341        }
;;;342        while (LineNumber--) {
000266  1e76              SUBS     r6,r6,#1
000268  d307              BCC      |L1.634|
                  |L1.618|
;;;343          pLine += _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
00026a  462a              MOV      r2,r5
00026c  4621              MOV      r1,r4
00026e  4640              MOV      r0,r8
000270  f7fffffe          BL       _WrapGetNumBytesToNextLine
000274  4405              ADD      r5,r5,r0
000276  1e76              SUBS     r6,r6,#1              ;342
000278  d2f7              BCS      |L1.618|
                  |L1.634|
;;;344        }
;;;345        pObj->CacheLinePosByte = pLine - pText;
00027a  1be8              SUBS     r0,r5,r7
00027c  f8a40050          STRH     r0,[r4,#0x50]
                  |L1.640|
;;;346      }
;;;347      return pText + pObj->CacheLinePosByte;
000280  f8b40050          LDRH     r0,[r4,#0x50]
000284  4438              ADD      r0,r0,r7
;;;348    }
000286  e8bd81f0          POP      {r4-r8,pc}
;;;349    
                          ENDP

                  _ClearCache PROC
;;;356    */
;;;357    static void _ClearCache(MULTIEDIT_OBJ* pObj) {
00028a  2100              MOVS     r1,#0
;;;358      pObj->CacheLineNumber = 0;
00028c  f8a01052          STRH     r1,[r0,#0x52]
;;;359      pObj->CacheLinePosByte = 0;
000290  f8a01050          STRH     r1,[r0,#0x50]
;;;360      pObj->CacheFirstVisibleByte = 0;
000294  f8a01056          STRH     r1,[r0,#0x56]
;;;361      pObj->CacheFirstVisibleLine = 0;
000298  f8a01054          STRH     r1,[r0,#0x54]
;;;362    }
00029c  4770              BX       lr
;;;363    
                          ENDP

                  _GetCursorLine PROC
;;;369    */
;;;370    static int _GetCursorLine(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj, const char* pText, int CursorPosChar) {
00029e  e92d47f0          PUSH     {r4-r10,lr}
0002a2  4688              MOV      r8,r1
0002a4  4681              MOV      r9,r0
0002a6  4614              MOV      r4,r2
0002a8  4619              MOV      r1,r3
;;;371      const char *pCursor;
;;;372      const char *pEndLine;
;;;373      int NumChars, ByteOffsetNewCursor, LineNumber = 0;
0002aa  2500              MOVS     r5,#0
;;;374      ByteOffsetNewCursor = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
0002ac  4620              MOV      r0,r4
0002ae  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0002b2  4601              MOV      r1,r0
;;;375      pCursor = pText + ByteOffsetNewCursor;
0002b4  1866              ADDS     r6,r4,r1
;;;376      if (pObj->CacheLinePosByte < ByteOffsetNewCursor) {
0002b6  f8b80050          LDRH     r0,[r8,#0x50]
0002ba  4288              CMP      r0,r1
0002bc  da1e              BGE      |L1.764|
;;;377        /* If cache pos < new position we can use it as start position */
;;;378        pText      += pObj->CacheLinePosByte;
0002be  4404              ADD      r4,r4,r0
;;;379        LineNumber += pObj->CacheLineNumber;
0002c0  f8b85052          LDRH     r5,[r8,#0x52]
0002c4  e01a              B        |L1.764|
                  |L1.710|
;;;380      }
;;;381      while (*pText && (pCursor > pText)) {
;;;382        NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
0002c6  4622              MOV      r2,r4
0002c8  4641              MOV      r1,r8
0002ca  4648              MOV      r0,r9
0002cc  f7fffffe          BL       _WrapGetNumCharsDisp
;;;383        pEndLine = pText + GUI_UC__NumChars2NumBytes(pText, NumChars);
0002d0  4601              MOV      r1,r0
0002d2  4620              MOV      r0,r4
0002d4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0002d8  1907              ADDS     r7,r0,r4
;;;384        pText   += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
0002da  4622              MOV      r2,r4
0002dc  4641              MOV      r1,r8
0002de  4648              MOV      r0,r9
0002e0  f7fffffe          BL       _WrapGetNumBytesToNextLine
0002e4  4404              ADD      r4,r4,r0
;;;385        if (pCursor <= pEndLine) {
0002e6  42be              CMP      r6,r7
0002e8  d807              BHI      |L1.762|
;;;386          if ((pCursor == pEndLine) && (pEndLine == pText) && *pText) {
0002ea  42be              CMP      r6,r7
0002ec  d10a              BNE      |L1.772|
0002ee  42a7              CMP      r7,r4
0002f0  d108              BNE      |L1.772|
0002f2  7820              LDRB     r0,[r4,#0]
0002f4  b130              CBZ      r0,|L1.772|
;;;387            LineNumber++;
0002f6  1c6d              ADDS     r5,r5,#1
0002f8  e004              B        |L1.772|
                  |L1.762|
;;;388          }
;;;389          break;
;;;390        }
;;;391        LineNumber++;
0002fa  1c6d              ADDS     r5,r5,#1
                  |L1.764|
0002fc  7820              LDRB     r0,[r4,#0]            ;381
0002fe  b108              CBZ      r0,|L1.772|
000300  42a6              CMP      r6,r4                 ;381
000302  d8e0              BHI      |L1.710|
                  |L1.772|
;;;392      }
;;;393      return LineNumber;
000304  4628              MOV      r0,r5
;;;394    }
000306  e8bd87f0          POP      {r4-r10,pc}
;;;395    
                          ENDP

                  _GetCursorXY PROC
;;;399    */
;;;400    static void _GetCursorXY(MULTIEDIT_HANDLE hObj, /*const*/ MULTIEDIT_OBJ* pObj, int* px, int* py) {
00030a  e92d4fff          PUSH     {r0-r11,lr}
00030e  b081              SUB      sp,sp,#4
000310  460d              MOV      r5,r1
000312  4691              MOV      r9,r2
000314  469a              MOV      r10,r3
;;;401      if (pObj->InvalidFlags & INVALID_CURSORXY) {
000316  f8950079          LDRB     r0,[r5,#0x79]
00031a  f0100f08          TST      r0,#8
00031e  d05f              BEQ      |L1.992|
;;;402        int CursorLine = 0, x = 0;
000320  f04f0800          MOV      r8,#0
000324  2600              MOVS     r6,#0
;;;403        GUI_SetFont(pObj->pFont);
000326  6f68              LDR      r0,[r5,#0x74]
000328  f7fffffe          BL       GUI_SetFont
;;;404        if (pObj->hText) {
00032c  f9b50038          LDRSH    r0,[r5,#0x38]
000330  b3f0              CBZ      r0,|L1.944|
;;;405          const char *pLine;
;;;406          const char *pCursor;
;;;407          pLine      = (const char *)GUI_ALLOC_h2p(pObj->hText);
000332  f7fffffe          BL       GUI_ALLOC_h2p
;;;408          pCursor    = pLine + pObj->CursorPosByte;
000336  f8b5104a          LDRH     r1,[r5,#0x4a]
00033a  180f              ADDS     r7,r1,r0
;;;409          CursorLine = pObj->CursorLine;
00033c  f8b58046          LDRH     r8,[r5,#0x46]
;;;410          pLine      = _GetpLine(hObj, pObj, CursorLine);
000340  4629              MOV      r1,r5
000342  4642              MOV      r2,r8
000344  9801              LDR      r0,[sp,#4]
000346  f7fffffe          BL       _GetpLine
00034a  4604              MOV      r4,r0
;;;411          if ((pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
00034c  f8950078          LDRB     r0,[r5,#0x78]
000350  f0100f20          TST      r0,#0x20
000354  d00d              BEQ      |L1.882|
;;;412            while (pLine < pCursor) {
000356  42bc              CMP      r4,r7
000358  d234              BCS      |L1.964|
                  |L1.858|
;;;413              x     += _GetCharDistX(pObj, pLine);
00035a  4621              MOV      r1,r4
00035c  4628              MOV      r0,r5
00035e  f7fffffe          BL       _GetCharDistX
000362  4406              ADD      r6,r6,r0
;;;414              pLine += GUI_UC_GetCharSize(pLine);
000364  4620              MOV      r0,r4
000366  f7fffffe          BL       GUI_UC_GetCharSize
00036a  4404              ADD      r4,r4,r0
00036c  42bc              CMP      r4,r7                 ;412
00036e  d3f4              BCC      |L1.858|
000370  e028              B        |L1.964|
                  |L1.882|
;;;415            }
;;;416          } else {
;;;417            int xSize;
;;;418            const char *p;
;;;419            int NumChars = 0, NumCharsToNextLine;
000372  2600              MOVS     r6,#0
;;;420            xSize = _GetXSize(hObj, pObj);
000374  4629              MOV      r1,r5
000376  9801              LDR      r0,[sp,#4]
000378  f7fffffe          BL       _GetXSize
00037c  9000              STR      r0,[sp,#0]
;;;421            p = pLine;
00037e  46a3              MOV      r11,r4
;;;422            while (pLine < pCursor) {
000380  42bc              CMP      r4,r7
000382  d206              BCS      |L1.914|
                  |L1.900|
;;;423              NumChars++;
000384  1c76              ADDS     r6,r6,#1
;;;424              pLine += GUI_UC_GetCharSize(pLine);
000386  4620              MOV      r0,r4
000388  f7fffffe          BL       GUI_UC_GetCharSize
00038c  4404              ADD      r4,r4,r0
00038e  42bc              CMP      r4,r7                 ;422
000390  d3f8              BCC      |L1.900|
                  |L1.914|
;;;425            }
;;;426            NumCharsToNextLine = _WrapGetNumCharsDisp(hObj, pObj, p);
000392  465a              MOV      r2,r11
000394  4629              MOV      r1,r5
000396  9801              LDR      r0,[sp,#4]
000398  f7fffffe          BL       _WrapGetNumCharsDisp
00039c  4604              MOV      r4,r0
;;;427            x = GUI__GetCursorPosX(p, NumChars, NumCharsToNextLine);
00039e  4622              MOV      r2,r4
0003a0  4631              MOV      r1,r6
0003a2  4658              MOV      r0,r11
0003a4  f7fffffe          BL       GUI__GetCursorPosX
0003a8  4606              MOV      r6,r0
;;;428            if (pObj->Align == GUI_TA_RIGHT) {
0003aa  f8b50058          LDRH     r0,[r5,#0x58]
0003ae  e000              B        |L1.946|
                  |L1.944|
0003b0  e008              B        |L1.964|
                  |L1.946|
0003b2  2801              CMP      r0,#1
0003b4  d106              BNE      |L1.964|
;;;429              x += xSize - GUI__GetLineDistX(p, NumCharsToNextLine);
0003b6  4621              MOV      r1,r4
0003b8  4658              MOV      r0,r11
0003ba  f7fffffe          BL       GUI__GetLineDistX
0003be  9900              LDR      r1,[sp,#0]
0003c0  1a08              SUBS     r0,r1,r0
0003c2  4406              ADD      r6,r6,r0
                  |L1.964|
;;;430            }
;;;431          }
;;;432        }
;;;433        pObj->CursorPosX = x;
0003c4  f8a5604c          STRH     r6,[r5,#0x4c]
;;;434        pObj->CursorPosY = CursorLine * GUI_GetFontDistY();
0003c8  f7fffffe          BL       GUI_GetFontDistY
0003cc  fb00f008          MUL      r0,r0,r8
0003d0  f8a5004e          STRH     r0,[r5,#0x4e]
;;;435        pObj->InvalidFlags &= ~INVALID_CURSORXY;
0003d4  f8950079          LDRB     r0,[r5,#0x79]
0003d8  f0200008          BIC      r0,r0,#8
0003dc  f8850079          STRB     r0,[r5,#0x79]
                  |L1.992|
;;;436      }
;;;437      *px = pObj->CursorPosX;
0003e0  f9b5004c          LDRSH    r0,[r5,#0x4c]
0003e4  f8c90000          STR      r0,[r9,#0]
;;;438      *py = pObj->CursorPosY;
0003e8  f8b5004e          LDRH     r0,[r5,#0x4e]
0003ec  f8ca0000          STR      r0,[r10,#0]
;;;439    }
0003f0  b005              ADD      sp,sp,#0x14
0003f2  e8bd8ff0          POP      {r4-r11,pc}
;;;440    
                          ENDP

                  _InvalidateCursorXY PROC
;;;444    */
;;;445    static void _InvalidateCursorXY(MULTIEDIT_OBJ * pObj) {
0003f6  f8901079          LDRB     r1,[r0,#0x79]
;;;446      pObj->InvalidFlags |= INVALID_CURSORXY;
0003fa  f0410108          ORR      r1,r1,#8
0003fe  f8801079          STRB     r1,[r0,#0x79]
;;;447    }
000402  4770              BX       lr
;;;448    
                          ENDP

                  _SetScrollState PROC
;;;452    */
;;;453    static void _SetScrollState(WM_HWIN hObj) {
000404  b510              PUSH     {r4,lr}
000406  4604              MOV      r4,r0
;;;454      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
000408  4620              MOV      r0,r4
00040a  f7fffffe          BL       GUI_ALLOC_h2p
;;;455      WIDGET__SetScrollState(hObj, &pObj->ScrollStateV, &pObj->ScrollStateH);
00040e  f1000268          ADD      r2,r0,#0x68
000412  f100015c          ADD      r1,r0,#0x5c
000416  4620              MOV      r0,r4
000418  e8bd4010          POP      {r4,lr}
00041c  f7ffbffe          B.W      WIDGET__SetScrollState
;;;456    }
;;;457    
                          ENDP

                  _CalcScrollPos PROC
;;;467    */
;;;468    static void _CalcScrollPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000420  b530              PUSH     {r4,r5,lr}
000422  b083              SUB      sp,sp,#0xc
000424  4605              MOV      r5,r0
000426  460c              MOV      r4,r1
;;;469      int xCursor, yCursor;
;;;470      _GetCursorXY(hObj, pObj, &xCursor, &yCursor);
000428  ab01              ADD      r3,sp,#4
00042a  aa02              ADD      r2,sp,#8
00042c  4621              MOV      r1,r4
00042e  4628              MOV      r0,r5
000430  f7fffffe          BL       _GetCursorXY
;;;471      yCursor /= GUI_GetYDistOfFont(pObj->pFont);
000434  6f60              LDR      r0,[r4,#0x74]
000436  f7fffffe          BL       GUI_GetYDistOfFont
00043a  9901              LDR      r1,[sp,#4]
00043c  fb91f1f0          SDIV     r1,r1,r0
000440  9101              STR      r1,[sp,#4]
;;;472      WM_CheckScrollPos(&pObj->ScrollStateV, yCursor, 0, 0);       /* Vertical */
000442  2300              MOVS     r3,#0
000444  461a              MOV      r2,r3
000446  f104005c          ADD      r0,r4,#0x5c
00044a  f7fffffe          BL       WM_CheckScrollPos
;;;473      if (pObj->Align == GUI_TA_RIGHT) {
00044e  f8b40058          LDRH     r0,[r4,#0x58]
000452  2801              CMP      r0,#1
000454  d106              BNE      |L1.1124|
;;;474        xCursor = _GetXSize(hObj, pObj) - xCursor;
000456  4621              MOV      r1,r4
000458  4628              MOV      r0,r5
00045a  f7fffffe          BL       _GetXSize
00045e  9902              LDR      r1,[sp,#8]
000460  1a40              SUBS     r0,r0,r1
000462  9002              STR      r0,[sp,#8]
                  |L1.1124|
;;;475      }
;;;476      WM_CheckScrollPos(&pObj->ScrollStateH, xCursor, 30, 30);     /* Horizontal */
000464  231e              MOVS     r3,#0x1e
000466  461a              MOV      r2,r3
000468  f1040068          ADD      r0,r4,#0x68
00046c  9902              LDR      r1,[sp,#8]
00046e  f7fffffe          BL       WM_CheckScrollPos
;;;477      _SetScrollState(hObj);
000472  4628              MOV      r0,r5
000474  f7fffffe          BL       _SetScrollState
;;;478    }
000478  b003              ADD      sp,sp,#0xc
00047a  bd30              POP      {r4,r5,pc}
;;;479    
                          ENDP

                  _GetTextSizeX PROC
;;;485    */
;;;486    static int _GetTextSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
00047c  e92d47f0          PUSH     {r4-r10,lr}
000480  4681              MOV      r9,r0
000482  460d              MOV      r5,r1
;;;487      if (pObj->InvalidFlags & INVALID_TEXTSIZE) {
000484  f8950079          LDRB     r0,[r5,#0x79]
000488  f0100f04          TST      r0,#4
00048c  d041              BEQ      |L1.1298|
;;;488        pObj->TextSizeX = 0;
00048e  2000              MOVS     r0,#0
000490  f8a50042          STRH     r0,[r5,#0x42]
;;;489        if (pObj->hText) {
000494  8f28              LDRH     r0,[r5,#0x38]
000496  b3b0              CBZ      r0,|L1.1286|
;;;490          int NumChars, xSizeLine;
;;;491          char *pText, *pLine;
;;;492          GUI_SetFont(pObj->pFont);
000498  6f68              LDR      r0,[r5,#0x74]
00049a  f7fffffe          BL       GUI_SetFont
;;;493          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00049e  f9b50038          LDRSH    r0,[r5,#0x38]
0004a2  f7fffffe          BL       GUI_ALLOC_h2p
0004a6  4680              MOV      r8,r0
                  |L1.1192|
;;;494          do {
;;;495            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
0004a8  4642              MOV      r2,r8
0004aa  4629              MOV      r1,r5
0004ac  4648              MOV      r0,r9
0004ae  f7fffffe          BL       _WrapGetNumCharsDisp
;;;496            xSizeLine = 0;
0004b2  2400              MOVS     r4,#0
;;;497            pLine = pText;
0004b4  4647              MOV      r7,r8
;;;498            if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0004b6  f8951078          LDRB     r1,[r5,#0x78]
0004ba  f0110f20          TST      r1,#0x20
0004be  d00d              BEQ      |L1.1244|
;;;499              while (NumChars--) {
0004c0  1e46              SUBS     r6,r0,#1
0004c2  b180              CBZ      r0,|L1.1254|
                  |L1.1220|
;;;500                xSizeLine += _GetCharDistX(pObj, pLine);
0004c4  4639              MOV      r1,r7
0004c6  4628              MOV      r0,r5
0004c8  f7fffffe          BL       _GetCharDistX
0004cc  4404              ADD      r4,r4,r0
;;;501                pLine     += GUI_UC_GetCharSize(pLine);
0004ce  4638              MOV      r0,r7
0004d0  f7fffffe          BL       GUI_UC_GetCharSize
0004d4  4407              ADD      r7,r7,r0
0004d6  1e76              SUBS     r6,r6,#1              ;499
0004d8  d2f4              BCS      |L1.1220|
0004da  e004              B        |L1.1254|
                  |L1.1244|
;;;502              }
;;;503            } else {
;;;504              xSizeLine += GUI__GetLineDistX(pLine, NumChars);
0004dc  4601              MOV      r1,r0
0004de  4638              MOV      r0,r7
0004e0  f7fffffe          BL       GUI__GetLineDistX
0004e4  4604              MOV      r4,r0
                  |L1.1254|
;;;505            }
;;;506            if (xSizeLine > pObj->TextSizeX) {
0004e6  f8b50042          LDRH     r0,[r5,#0x42]
0004ea  42a0              CMP      r0,r4
0004ec  da01              BGE      |L1.1266|
;;;507              pObj->TextSizeX = xSizeLine;
0004ee  f8a54042          STRH     r4,[r5,#0x42]
                  |L1.1266|
;;;508            }
;;;509            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
0004f2  4642              MOV      r2,r8
0004f4  4629              MOV      r1,r5
0004f6  4648              MOV      r0,r9
0004f8  f7fffffe          BL       _WrapGetNumBytesToNextLine
0004fc  4480              ADD      r8,r8,r0
;;;510          } while (*pText);
0004fe  f8980000          LDRB     r0,[r8,#0]
000502  2800              CMP      r0,#0
000504  d1d0              BNE      |L1.1192|
                  |L1.1286|
;;;511        }
;;;512        pObj->InvalidFlags &= ~INVALID_TEXTSIZE;
000506  f8950079          LDRB     r0,[r5,#0x79]
00050a  f0200004          BIC      r0,r0,#4
00050e  f8850079          STRB     r0,[r5,#0x79]
                  |L1.1298|
;;;513      }
;;;514      return pObj->TextSizeX;
000512  f8b50042          LDRH     r0,[r5,#0x42]
;;;515    }
000516  e8bd87f0          POP      {r4-r10,pc}
;;;516    
                          ENDP

                  _GetNumVisLines PROC
;;;520    */
;;;521    static int _GetNumVisLines(MULTIEDIT_HANDLE hObj, const MULTIEDIT_OBJ* pObj) {
00051a  b510              PUSH     {r4,lr}
00051c  b082              SUB      sp,sp,#8
00051e  460c              MOV      r4,r1
;;;522      GUI_RECT Rect;
;;;523      WM_GetInsideRectExScrollbar(hObj, &Rect);
000520  4669              MOV      r1,sp
000522  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;524      return (Rect.y1 - Rect.y0 + 1) / GUI_GetYDistOfFont(pObj->pFont);
000526  6f60              LDR      r0,[r4,#0x74]
000528  f7fffffe          BL       GUI_GetYDistOfFont
00052c  f9bd1006          LDRSH    r1,[sp,#6]
000530  f9bd2002          LDRSH    r2,[sp,#2]
;;;525    }
000534  b002              ADD      sp,sp,#8
000536  1a89              SUBS     r1,r1,r2              ;524
000538  1c49              ADDS     r1,r1,#1              ;524
00053a  fb91f0f0          SDIV     r0,r1,r0              ;524
00053e  bd10              POP      {r4,pc}
;;;526    
                          ENDP

                  _GetNumLines PROC
;;;532    */
;;;533    static int _GetNumLines(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000540  e92d41f0          PUSH     {r4-r8,lr}
000544  4680              MOV      r8,r0
000546  460c              MOV      r4,r1
;;;534      if (pObj->InvalidFlags & INVALID_NUMLINES) {
000548  f8940079          LDRB     r0,[r4,#0x79]
00054c  f0100f02          TST      r0,#2
000550  d029              BEQ      |L1.1446|
;;;535        int NumLines = 0;
000552  2600              MOVS     r6,#0
;;;536        if (pObj->hText) {
000554  f9b40038          LDRSH    r0,[r4,#0x38]
000558  b1e0              CBZ      r0,|L1.1428|
;;;537          int NumChars, NumBytes;
;;;538          char *pText;
;;;539          U16 Char;
;;;540          pText = (char*) GUI_ALLOC_h2p(pObj->hText);
00055a  f7fffffe          BL       GUI_ALLOC_h2p
00055e  4605              MOV      r5,r0
;;;541          GUI_SetFont(pObj->pFont);
000560  6f60              LDR      r0,[r4,#0x74]
000562  f7fffffe          BL       GUI_SetFont
                  |L1.1382|
;;;542          do {
;;;543            NumChars = _WrapGetNumCharsDisp(hObj, pObj, pText);
000566  462a              MOV      r2,r5
000568  4621              MOV      r1,r4
00056a  4640              MOV      r0,r8
00056c  f7fffffe          BL       _WrapGetNumCharsDisp
;;;544            NumBytes = GUI_UC__NumChars2NumBytes(pText, NumChars);
000570  4601              MOV      r1,r0
000572  4628              MOV      r0,r5
000574  f7fffffe          BL       GUI_UC__NumChars2NumBytes
;;;545            Char     = GUI_UC_GetCharCode(pText + NumBytes);
000578  4428              ADD      r0,r0,r5
00057a  f7fffffe          BL       GUI_UC_GetCharCode
00057e  4607              MOV      r7,r0
;;;546            if (Char) {
000580  b107              CBZ      r7,|L1.1412|
;;;547              NumLines++;
000582  1c76              ADDS     r6,r6,#1
                  |L1.1412|
;;;548            }
;;;549            pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000584  462a              MOV      r2,r5
000586  4621              MOV      r1,r4
000588  4640              MOV      r0,r8
00058a  f7fffffe          BL       _WrapGetNumBytesToNextLine
00058e  4405              ADD      r5,r5,r0
;;;550          } while (Char);
000590  2f00              CMP      r7,#0
000592  d1e8              BNE      |L1.1382|
                  |L1.1428|
;;;551        }
;;;552        pObj->NumLines = NumLines + 1;
000594  1c70              ADDS     r0,r6,#1
000596  f8a40040          STRH     r0,[r4,#0x40]
;;;553        pObj->InvalidFlags &= ~INVALID_NUMLINES;
00059a  f8940079          LDRB     r0,[r4,#0x79]
00059e  f0200002          BIC      r0,r0,#2
0005a2  f8840079          STRB     r0,[r4,#0x79]
                  |L1.1446|
;;;554      }
;;;555      return pObj->NumLines;
0005a6  f8b40040          LDRH     r0,[r4,#0x40]
;;;556    }
0005aa  e8bd81f0          POP      {r4-r8,pc}
;;;557    
                          ENDP

                  _InvalidateNumLines PROC
;;;563    */
;;;564    static void _InvalidateNumLines(MULTIEDIT_OBJ * pObj) {
0005ae  f8901079          LDRB     r1,[r0,#0x79]
;;;565      pObj->InvalidFlags |= INVALID_NUMLINES;
0005b2  f0410102          ORR      r1,r1,#2
0005b6  f8801079          STRB     r1,[r0,#0x79]
;;;566    }
0005ba  4770              BX       lr
;;;567    
                          ENDP

                  _InvalidateTextSizeX PROC
;;;573    */
;;;574    static void _InvalidateTextSizeX(MULTIEDIT_OBJ * pObj) {
0005bc  f8901079          LDRB     r1,[r0,#0x79]
;;;575      pObj->InvalidFlags |= INVALID_TEXTSIZE;
0005c0  f0410104          ORR      r1,r1,#4
0005c4  f8801079          STRB     r1,[r0,#0x79]
;;;576    }
0005c8  4770              BX       lr
;;;577    
                          ENDP

                  _CalcScrollParas PROC
;;;584    */
;;;585    static void _CalcScrollParas(MULTIEDIT_HANDLE hObj) {
0005ca  b570              PUSH     {r4-r6,lr}
0005cc  4605              MOV      r5,r0
;;;586      MULTIEDIT_OBJ* pObj = MULTIEDIT_H2P(hObj);
0005ce  4628              MOV      r0,r5
0005d0  f7fffffe          BL       GUI_ALLOC_h2p
0005d4  4604              MOV      r4,r0
;;;587      /* Calc vertical scroll parameters */
;;;588      pObj->ScrollStateV.NumItems = _GetNumLines(hObj, pObj);
0005d6  4621              MOV      r1,r4
0005d8  4628              MOV      r0,r5
0005da  f7fffffe          BL       _GetNumLines
0005de  65e0              STR      r0,[r4,#0x5c]
;;;589      pObj->ScrollStateV.PageSize = _GetNumVisLines(hObj, pObj);
0005e0  4621              MOV      r1,r4
0005e2  4628              MOV      r0,r5
0005e4  f7fffffe          BL       _GetNumVisLines
0005e8  6660              STR      r0,[r4,#0x64]
;;;590      /* Calc horizontal scroll parameters */
;;;591      pObj->ScrollStateH.NumItems = _GetTextSizeX(hObj, pObj);
0005ea  4621              MOV      r1,r4
0005ec  4628              MOV      r0,r5
0005ee  f7fffffe          BL       _GetTextSizeX
0005f2  66a0              STR      r0,[r4,#0x68]
;;;592      pObj->ScrollStateH.PageSize = _GetXSize(hObj, pObj);
0005f4  4621              MOV      r1,r4
0005f6  4628              MOV      r0,r5
0005f8  f7fffffe          BL       _GetXSize
0005fc  6720              STR      r0,[r4,#0x70]
;;;593      _CalcScrollPos(hObj, pObj);
0005fe  4621              MOV      r1,r4
000600  4628              MOV      r0,r5
000602  e8bd4070          POP      {r4-r6,lr}
000606  e7fe              B        _CalcScrollPos
;;;594    }
;;;595    
                          ENDP

                  _ManageAutoScrollV PROC
;;;599    */
;;;600    static void _ManageAutoScrollV(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000608  b570              PUSH     {r4-r6,lr}
00060a  4606              MOV      r6,r0
00060c  460d              MOV      r5,r1
;;;601      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_V) {
00060e  f8950078          LDRB     r0,[r5,#0x78]
000612  f0100f08          TST      r0,#8
000616  d020              BEQ      |L1.1626|
;;;602        char IsRequired = _GetNumVisLines(hObj, pObj) < _GetNumLines(hObj, pObj);
000618  4629              MOV      r1,r5
00061a  4630              MOV      r0,r6
00061c  f7fffffe          BL       _GetNumVisLines
000620  4604              MOV      r4,r0
000622  4629              MOV      r1,r5
000624  4630              MOV      r0,r6
000626  f7fffffe          BL       _GetNumLines
00062a  4284              CMP      r4,r0
00062c  da01              BGE      |L1.1586|
00062e  2401              MOVS     r4,#1
000630  e000              B        |L1.1588|
                  |L1.1586|
000632  2400              MOVS     r4,#0
                  |L1.1588|
;;;603        if (WM_SetScrollbarV(hObj, IsRequired) != IsRequired) {
000634  4621              MOV      r1,r4
000636  4630              MOV      r0,r6
000638  f7fffffe          BL       WM_SetScrollbarV
00063c  42a0              CMP      r0,r4
00063e  d00c              BEQ      |L1.1626|
;;;604          _InvalidateNumLines(pObj);
000640  4628              MOV      r0,r5
000642  f7fffffe          BL       _InvalidateNumLines
;;;605          _InvalidateTextSizeX(pObj);
000646  4628              MOV      r0,r5
000648  f7fffffe          BL       _InvalidateTextSizeX
;;;606          _InvalidateCursorXY(pObj);
00064c  4628              MOV      r0,r5
00064e  f7fffffe          BL       _InvalidateCursorXY
;;;607          _ClearCache(pObj);
000652  4628              MOV      r0,r5
000654  e8bd4070          POP      {r4-r6,lr}
000658  e7fe              B        _ClearCache
                  |L1.1626|
;;;608        }
;;;609      }
;;;610    }
00065a  bd70              POP      {r4-r6,pc}
;;;611    
                          ENDP

                  _ManageScrollers PROC
;;;621    */
;;;622    static void _ManageScrollers(MULTIEDIT_HANDLE hObj) {
00065c  b570              PUSH     {r4-r6,lr}
00065e  4606              MOV      r6,r0
;;;623      MULTIEDIT_OBJ* pObj;
;;;624      pObj = MULTIEDIT_H2P(hObj);
000660  4630              MOV      r0,r6
000662  f7fffffe          BL       GUI_ALLOC_h2p
000666  4605              MOV      r5,r0
;;;625      /* 1. Step: Check if vertical scrollbar is required */
;;;626      _ManageAutoScrollV(hObj, pObj);
000668  4629              MOV      r1,r5
00066a  4630              MOV      r0,r6
00066c  f7fffffe          BL       _ManageAutoScrollV
;;;627      /* 2. Step: Check if horizontal scrollbar is required */
;;;628      if (pObj->Flags & MULTIEDIT_SF_AUTOSCROLLBAR_H) {
000670  f8950078          LDRB     r0,[r5,#0x78]
000674  f0100f10          TST      r0,#0x10
000678  d017              BEQ      |L1.1706|
;;;629        char IsRequired;
;;;630        IsRequired = (_GetXSize(hObj, pObj) < _GetTextSizeX(hObj, pObj));
00067a  4629              MOV      r1,r5
00067c  4630              MOV      r0,r6
00067e  f7fffffe          BL       _GetXSize
000682  4604              MOV      r4,r0
000684  4629              MOV      r1,r5
000686  4630              MOV      r0,r6
000688  f7fffffe          BL       _GetTextSizeX
00068c  4284              CMP      r4,r0
00068e  da01              BGE      |L1.1684|
000690  2401              MOVS     r4,#1
000692  e000              B        |L1.1686|
                  |L1.1684|
000694  2400              MOVS     r4,#0
                  |L1.1686|
;;;631        if (WM_SetScrollbarH(hObj, IsRequired) != IsRequired) {
000696  4621              MOV      r1,r4
000698  4630              MOV      r0,r6
00069a  f7fffffe          BL       WM_SetScrollbarH
00069e  42a0              CMP      r0,r4
0006a0  d003              BEQ      |L1.1706|
;;;632          /* 3. Step: Check vertical scrollbar again if horizontal has changed */
;;;633          _ManageAutoScrollV(hObj, pObj);
0006a2  4629              MOV      r1,r5
0006a4  4630              MOV      r0,r6
0006a6  f7fffffe          BL       _ManageAutoScrollV
                  |L1.1706|
;;;634        }
;;;635      }
;;;636      _CalcScrollParas(hObj);
0006aa  4630              MOV      r0,r6
0006ac  e8bd4070          POP      {r4-r6,lr}
0006b0  e7fe              B        _CalcScrollParas
;;;637    }
;;;638    
                          ENDP

                  _Invalidate PROC
;;;642    */
;;;643    static void _Invalidate(MULTIEDIT_HANDLE hObj) {
0006b2  b510              PUSH     {r4,lr}
0006b4  4604              MOV      r4,r0
;;;644      _ManageScrollers(hObj);
0006b6  4620              MOV      r0,r4
0006b8  f7fffffe          BL       _ManageScrollers
;;;645      WM_Invalidate(hObj);
0006bc  4620              MOV      r0,r4
0006be  e8bd4010          POP      {r4,lr}
0006c2  f7ffbffe          B.W      WM_InvalidateWindow
;;;646    }
;;;647    
                          ENDP

                  _InvalidateTextArea PROC
;;;653    */
;;;654    static void _InvalidateTextArea(MULTIEDIT_HANDLE hObj) {
0006c6  b510              PUSH     {r4,lr}
0006c8  b082              SUB      sp,sp,#8
0006ca  4604              MOV      r4,r0
;;;655      GUI_RECT rInsideRect;
;;;656      _ManageScrollers(hObj);
0006cc  4620              MOV      r0,r4
0006ce  f7fffffe          BL       _ManageScrollers
;;;657      WM_GetInsideRectExScrollbar(hObj, &rInsideRect);
0006d2  4669              MOV      r1,sp
0006d4  4620              MOV      r0,r4
0006d6  f7fffffe          BL       WM_GetInsideRectExScrollbar
;;;658      WM_InvalidateRect(hObj, &rInsideRect);
0006da  4669              MOV      r1,sp
0006dc  4620              MOV      r0,r4
0006de  f7fffffe          BL       WM_InvalidateRect
;;;659    }
0006e2  b002              ADD      sp,sp,#8
0006e4  bd10              POP      {r4,pc}
;;;660    
                          ENDP

                  _InvalidateCursorPos PROC
;;;666    */
;;;667    static int _InvalidateCursorPos(MULTIEDIT_OBJ * pObj) {
0006e6  f8b01048          LDRH     r1,[r0,#0x48]
;;;668      int Value;
;;;669      Value = pObj->CursorPosChar;
;;;670      pObj->CursorPosChar = 0xffff;
0006ea  f64f72ff          MOV      r2,#0xffff
0006ee  f8a02048          STRH     r2,[r0,#0x48]
;;;671      return Value;
0006f2  4608              MOV      r0,r1
;;;672    }
0006f4  4770              BX       lr
;;;673    
                          ENDP

                  _SetFlag PROC
;;;677    */
;;;678    static void _SetFlag(MULTIEDIT_HANDLE hObj, int OnOff, U8 Flag) {
0006f6  b570              PUSH     {r4-r6,lr}
0006f8  4605              MOV      r5,r0
0006fa  460e              MOV      r6,r1
0006fc  4614              MOV      r4,r2
;;;679      if (hObj) {
0006fe  2d00              CMP      r5,#0
000700  d017              BEQ      |L1.1842|
;;;680        MULTIEDIT_OBJ * pObj;
;;;681        WM_LOCK();
000702  f7fffffe          BL       GUI_Lock
;;;682        pObj = MULTIEDIT_H2P(hObj);
000706  4628              MOV      r0,r5
000708  f7fffffe          BL       GUI_ALLOC_h2p
;;;683        if (OnOff) {
00070c  b12e              CBZ      r6,|L1.1818|
;;;684          pObj->Flags |= Flag;
00070e  f8901078          LDRB     r1,[r0,#0x78]
000712  4321              ORRS     r1,r1,r4
000714  f8801078          STRB     r1,[r0,#0x78]
000718  e004              B        |L1.1828|
                  |L1.1818|
;;;685        } else {
;;;686          pObj->Flags &= ~Flag;
00071a  f8901078          LDRB     r1,[r0,#0x78]
00071e  43a1              BICS     r1,r1,r4
000720  f8801078          STRB     r1,[r0,#0x78]
                  |L1.1828|
;;;687        }
;;;688        _InvalidateTextArea(hObj);
000724  4628              MOV      r0,r5
000726  f7fffffe          BL       _InvalidateTextArea
;;;689        WM_UNLOCK();
00072a  e8bd4070          POP      {r4-r6,lr}
00072e  f7ffbffe          B.W      GUI_Unlock
                  |L1.1842|
;;;690      }
;;;691    }
000732  bd70              POP      {r4-r6,pc}
;;;692    
                          ENDP

                  _CalcNextValidCursorPos PROC
;;;705    */
;;;706    static int _CalcNextValidCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar, int * pCursorPosByte, int * pCursorLine) {
000734  e92d5fff          PUSH     {r0-r12,lr}
000738  460d              MOV      r5,r1
00073a  9e0e              LDR      r6,[sp,#0x38]
00073c  4614              MOV      r4,r2
00073e  461f              MOV      r7,r3
;;;707      if (pObj->hText) {
000740  f9b50038          LDRSH    r0,[r5,#0x38]
000744  b3f0              CBZ      r0,|L1.1988|
;;;708        char *pNextLine, *pCursor, *pText;
;;;709        int CursorLine, NumChars, CursorPosByte;
;;;710        pText    = (char*) GUI_ALLOC_h2p(pObj->hText);
000746  f7fffffe          BL       GUI_ALLOC_h2p
00074a  4681              MOV      r9,r0
;;;711        NumChars = _GetNumChars(pObj);
00074c  4628              MOV      r0,r5
00074e  f7fffffe          BL       _GetNumChars
000752  4601              MOV      r1,r0
;;;712        /* Set offset in valid range */
;;;713        if (CursorPosChar < pObj->NumCharsPrompt) {
000754  8fe8              LDRH     r0,[r5,#0x3e]
000756  42a0              CMP      r0,r4
000758  dd00              BLE      |L1.1884|
;;;714          CursorPosChar = pObj->NumCharsPrompt;
00075a  4604              MOV      r4,r0
                  |L1.1884|
;;;715        }
;;;716        if (CursorPosChar > NumChars) {
00075c  428c              CMP      r4,r1
00075e  dd00              BLE      |L1.1890|
;;;717          CursorPosChar = NumChars;
000760  460c              MOV      r4,r1
                  |L1.1890|
;;;718        }
;;;719        CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
000762  4621              MOV      r1,r4
000764  4648              MOV      r0,r9
000766  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00076a  4682              MOV      r10,r0
;;;720        CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
00076c  4623              MOV      r3,r4
00076e  464a              MOV      r2,r9
000770  4629              MOV      r1,r5
000772  9800              LDR      r0,[sp,#0]
000774  f7fffffe          BL       _GetCursorLine
000778  4680              MOV      r8,r0
;;;721        pCursor       = pText + CursorPosByte;
00077a  eb090b0a          ADD      r11,r9,r10
;;;722        pNextLine     = _GetpLine(hObj, pObj, CursorLine);
00077e  4642              MOV      r2,r8
000780  4629              MOV      r1,r5
000782  9800              LDR      r0,[sp,#0]
000784  f7fffffe          BL       _GetpLine
;;;723        if (pNextLine > pCursor) {
000788  4558              CMP      r0,r11
00078a  d928              BLS      |L1.2014|
;;;724          if (pObj->CursorPosChar < CursorPosChar) {
00078c  f8b51048          LDRH     r1,[r5,#0x48]
000790  42a1              CMP      r1,r4
000792  db10              BLT      |L1.1974|
;;;725            pCursor = pNextLine;
;;;726          } else {
;;;727            char *pPrevLine;
;;;728            int NumChars;
;;;729            pPrevLine  = _GetpLine(hObj, pObj, CursorLine - 1);
000794  f1a80201          SUB      r2,r8,#1
000798  4629              MOV      r1,r5
00079a  9800              LDR      r0,[sp,#0]
00079c  f7fffffe          BL       _GetpLine
0007a0  4604              MOV      r4,r0
;;;730            NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pPrevLine);
0007a2  4622              MOV      r2,r4
0007a4  4629              MOV      r1,r5
0007a6  9800              LDR      r0,[sp,#0]
0007a8  f7fffffe          BL       _WrapGetNumCharsDisp
;;;731            pPrevLine += GUI_UC__NumChars2NumBytes(pPrevLine, NumChars);
0007ac  4601              MOV      r1,r0
0007ae  4620              MOV      r0,r4
0007b0  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0007b4  4420              ADD      r0,r0,r4
                  |L1.1974|
;;;732            pCursor = pPrevLine;
;;;733          }
;;;734          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pCursor - pText);
0007b6  eba00109          SUB      r1,r0,r9
0007ba  4648              MOV      r0,r9
0007bc  f7fffffe          BL       GUI_UC__NumBytes2NumChars
0007c0  4604              MOV      r4,r0
;;;735          CursorPosByte = GUI_UC__NumChars2NumBytes(pText, CursorPosChar);
0007c2  e000              B        |L1.1990|
                  |L1.1988|
0007c4  e015              B        |L1.2034|
                  |L1.1990|
0007c6  4621              MOV      r1,r4
0007c8  4648              MOV      r0,r9
0007ca  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0007ce  4682              MOV      r10,r0
;;;736          CursorLine    = _GetCursorLine(hObj, pObj, pText, CursorPosChar);
0007d0  4623              MOV      r3,r4
0007d2  464a              MOV      r2,r9
0007d4  4629              MOV      r1,r5
0007d6  9800              LDR      r0,[sp,#0]
0007d8  f7fffffe          BL       _GetCursorLine
0007dc  4680              MOV      r8,r0
                  |L1.2014|
;;;737        }
;;;738        if (pCursorPosByte) {
0007de  b10f              CBZ      r7,|L1.2020|
;;;739          *pCursorPosByte = CursorPosByte;
0007e0  f8c7a000          STR      r10,[r7,#0]
                  |L1.2020|
;;;740        }
;;;741        if (pCursorLine) {
0007e4  b10e              CBZ      r6,|L1.2026|
;;;742          *pCursorLine = CursorLine;
0007e6  f8c68000          STR      r8,[r6,#0]
                  |L1.2026|
;;;743        }
;;;744        return CursorPosChar;
;;;745      }
;;;746      return 0;
;;;747    }
0007ea  b004              ADD      sp,sp,#0x10
0007ec  4620              MOV      r0,r4                 ;744
0007ee  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.2034|
0007f2  b004              ADD      sp,sp,#0x10
0007f4  2000              MOVS     r0,#0                 ;746
0007f6  e8bd9ff0          POP      {r4-r12,pc}
;;;748    
                          ENDP

                  _SetCursorPos PROC
;;;754    */
;;;755    static void _SetCursorPos(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int CursorPosChar) {
0007fa  b530              PUSH     {r4,r5,lr}
0007fc  b083              SUB      sp,sp,#0xc
0007fe  4605              MOV      r5,r0
000800  460c              MOV      r4,r1
;;;756      int CursorPosByte, CursorLine;
;;;757      CursorPosChar = _CalcNextValidCursorPos(hObj, pObj, CursorPosChar, &CursorPosByte, &CursorLine);
000802  ab01              ADD      r3,sp,#4
000804  9300              STR      r3,[sp,#0]
000806  ab02              ADD      r3,sp,#8
000808  4621              MOV      r1,r4
00080a  4628              MOV      r0,r5
00080c  f7fffffe          BL       _CalcNextValidCursorPos
;;;758      /* Assign value and recalc whatever necessary */
;;;759      if (pObj->CursorPosChar != CursorPosChar) {
000810  f8b41048          LDRH     r1,[r4,#0x48]
000814  4281              CMP      r1,r0
000816  d00e              BEQ      |L1.2102|
;;;760        /* Save values */
;;;761        pObj->CursorPosByte = CursorPosByte;
000818  9902              LDR      r1,[sp,#8]
00081a  f8a4104a          STRH     r1,[r4,#0x4a]
;;;762        pObj->CursorPosChar = CursorPosChar;
00081e  f8a40048          STRH     r0,[r4,#0x48]
;;;763        pObj->CursorLine = CursorLine;
000822  9801              LDR      r0,[sp,#4]
000824  f8a40046          STRH     r0,[r4,#0x46]
;;;764        _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
000828  4620              MOV      r0,r4
00082a  f7fffffe          BL       _InvalidateCursorXY
;;;765        _CalcScrollPos(hObj, pObj);
00082e  4621              MOV      r1,r4
000830  4628              MOV      r0,r5
000832  f7fffffe          BL       _CalcScrollPos
                  |L1.2102|
;;;766      }
;;;767    }
000836  b003              ADD      sp,sp,#0xc
000838  bd30              POP      {r4,r5,pc}
;;;768    
                          ENDP

                  _SetWrapMode PROC
;;;772    */
;;;773    static int _SetWrapMode(MULTIEDIT_HANDLE hObj, GUI_WRAPMODE WrapMode) {
00083a  e92d41f0          PUSH     {r4-r8,lr}
00083e  4607              MOV      r7,r0
000840  460d              MOV      r5,r1
;;;774      int r;
;;;775      r = 0;
000842  2400              MOVS     r4,#0
;;;776      if (hObj) {
000844  b30f              CBZ      r7,|L1.2186|
;;;777        MULTIEDIT_OBJ * pObj;
;;;778        WM_LOCK();
000846  f7fffffe          BL       GUI_Lock
;;;779        pObj = MULTIEDIT_H2P(hObj);
00084a  4638              MOV      r0,r7
00084c  f7fffffe          BL       GUI_ALLOC_h2p
000850  4606              MOV      r6,r0
;;;780        r = pObj->WrapMode;
000852  f896407c          LDRB     r4,[r6,#0x7c]
;;;781        if (pObj->WrapMode != WrapMode) {
000856  42ac              CMP      r4,r5
000858  d015              BEQ      |L1.2182|
;;;782          int Position;
;;;783          pObj->WrapMode = WrapMode;
00085a  f886507c          STRB     r5,[r6,#0x7c]
;;;784          _ClearCache(pObj);
00085e  4630              MOV      r0,r6
000860  f7fffffe          BL       _ClearCache
;;;785          _InvalidateNumLines(pObj);
000864  4630              MOV      r0,r6
000866  f7fffffe          BL       _InvalidateNumLines
;;;786          _InvalidateTextSizeX(pObj);
00086a  4630              MOV      r0,r6
00086c  f7fffffe          BL       _InvalidateTextSizeX
;;;787          _InvalidateTextArea(hObj);
000870  4638              MOV      r0,r7
000872  f7fffffe          BL       _InvalidateTextArea
;;;788          Position = _InvalidateCursorPos(pObj);
000876  4630              MOV      r0,r6
000878  f7fffffe          BL       _InvalidateCursorPos
;;;789          _SetCursorPos(hObj, pObj, Position);
00087c  4602              MOV      r2,r0
00087e  4631              MOV      r1,r6
000880  4638              MOV      r0,r7
000882  f7fffffe          BL       _SetCursorPos
                  |L1.2182|
;;;790        }
;;;791        WM_UNLOCK();
000886  f7fffffe          BL       GUI_Unlock
                  |L1.2186|
;;;792      }
;;;793      return r;
00088a  4620              MOV      r0,r4
;;;794    }
00088c  e8bd81f0          POP      {r4-r8,pc}
;;;795    
                          ENDP

                  _SetCursorXY PROC
;;;801    */
;;;802    static void _SetCursorXY(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int x, int y) {
000890  e92d5ff0          PUSH     {r4-r12,lr}
000894  4682              MOV      r10,r0
000896  460c              MOV      r4,r1
000898  4615              MOV      r5,r2
00089a  461e              MOV      r6,r3
;;;803      int CursorPosChar = 0;
00089c  2200              MOVS     r2,#0
;;;804      if ((x < 0) || (y < 0)) {
00089e  2d00              CMP      r5,#0
0008a0  db78              BLT      |L1.2452|
0008a2  2e00              CMP      r6,#0
0008a4  db76              BLT      |L1.2452|
;;;805        return;
;;;806      }
;;;807      if (pObj->hText) {
0008a6  8f20              LDRH     r0,[r4,#0x38]
0008a8  b3f0              CBZ      r0,|L1.2344|
;;;808        char *pLine, *pText;
;;;809        int CursorLine, WrapChars;
;;;810        int SizeX = 0;
0008aa  2700              MOVS     r7,#0
;;;811        U16 Char;
;;;812        GUI_SetFont(pObj->pFont);
0008ac  6f60              LDR      r0,[r4,#0x74]
0008ae  f7fffffe          BL       GUI_SetFont
;;;813        CursorLine = y / GUI_GetFontDistY();
0008b2  f7fffffe          BL       GUI_GetFontDistY
0008b6  fb96f2f0          SDIV     r2,r6,r0
;;;814        pLine      = _GetpLine(hObj, pObj, CursorLine);
0008ba  4621              MOV      r1,r4
0008bc  4650              MOV      r0,r10
0008be  f7fffffe          BL       _GetpLine
0008c2  4606              MOV      r6,r0
;;;815        pText      = (char*) GUI_ALLOC_h2p(pObj->hText);
0008c4  f9b40038          LDRSH    r0,[r4,#0x38]
0008c8  f7fffffe          BL       GUI_ALLOC_h2p
0008cc  4681              MOV      r9,r0
;;;816        WrapChars  = _WrapGetNumCharsDisp(hObj, pObj, pLine);
0008ce  4632              MOV      r2,r6
0008d0  4621              MOV      r1,r4
0008d2  4650              MOV      r0,r10
0008d4  f7fffffe          BL       _WrapGetNumCharsDisp
0008d8  4680              MOV      r8,r0
;;;817        Char       = GUI_UC__GetCharCode(pLine + GUI_UC__NumChars2NumBytes(pLine, WrapChars));
0008da  4641              MOV      r1,r8
0008dc  4630              MOV      r0,r6
0008de  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0008e2  4430              ADD      r0,r0,r6
0008e4  49ff              LDR      r1,|L1.3300|
0008e6  6a09              LDR      r1,[r1,#0x20]  ; GUI_Context
0008e8  6809              LDR      r1,[r1,#0]
0008ea  4788              BLX      r1
;;;818        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
0008ec  f8941078          LDRB     r1,[r4,#0x78]
0008f0  f0110f20          TST      r1,#0x20
0008f4  d003              BEQ      |L1.2302|
;;;819          if (!Char) {
0008f6  b968              CBNZ     r0,|L1.2324|
;;;820            WrapChars++;
0008f8  f1080801          ADD      r8,r8,#1
0008fc  e00a              B        |L1.2324|
                  |L1.2302|
;;;821          }
;;;822        } else {
;;;823          if (!Char || (Char == '\n') || ((Char == ' ') && (pObj->WrapMode == GUI_WRAPMODE_WORD))) {
0008fe  b138              CBZ      r0,|L1.2320|
000900  280a              CMP      r0,#0xa
000902  d005              BEQ      |L1.2320|
000904  2820              CMP      r0,#0x20
000906  d105              BNE      |L1.2324|
000908  f894007c          LDRB     r0,[r4,#0x7c]
00090c  2801              CMP      r0,#1
00090e  d101              BNE      |L1.2324|
                  |L1.2320|
;;;824            WrapChars++;
000910  f1080801          ADD      r8,r8,#1
                  |L1.2324|
;;;825          }
;;;826        }
;;;827        if (pObj->Align == GUI_TA_RIGHT) {
000914  f8b40058          LDRH     r0,[r4,#0x58]
000918  2801              CMP      r0,#1
00091a  d113              BNE      |L1.2372|
;;;828          x -= _GetXSize(hObj, pObj) - GUI__GetLineDistX(pLine, WrapChars);
00091c  4621              MOV      r1,r4
00091e  4650              MOV      r0,r10
000920  f7fffffe          BL       _GetXSize
000924  4683              MOV      r11,r0
000926  e000              B        |L1.2346|
                  |L1.2344|
000928  e041              B        |L1.2478|
                  |L1.2346|
00092a  4641              MOV      r1,r8
00092c  4630              MOV      r0,r6
00092e  f7fffffe          BL       GUI__GetLineDistX
000932  ebab0000          SUB      r0,r11,r0
000936  1a28              SUBS     r0,r5,r0
;;;829          x -= pObj->ScrollStateH.v << 1;
000938  6ee1              LDR      r1,[r4,#0x6c]
00093a  eba00541          SUB      r5,r0,r1,LSL #1
;;;830          if (x < 0) {
00093e  2d00              CMP      r5,#0
000940  da00              BGE      |L1.2372|
;;;831            x = 0;
000942  2500              MOVS     r5,#0
                  |L1.2372|
;;;832          }
;;;833        }
;;;834    
;;;835        if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
000944  f8940078          LDRB     r0,[r4,#0x78]
000948  f0100f20          TST      r0,#0x20
00094c  d023              BEQ      |L1.2454|
;;;836          while (--WrapChars > 0) {
00094e  f1a80801          SUB      r8,r8,#1
000952  f1b80f00          CMP      r8,#0
000956  dd16              BLE      |L1.2438|
                  |L1.2392|
;;;837            Char   = GUI_UC_GetCharCode(pLine);
000958  4630              MOV      r0,r6
00095a  f7fffffe          BL       GUI_UC_GetCharCode
00095e  4683              MOV      r11,r0
;;;838            SizeX += _GetCharDistX(pObj, pLine);
000960  4631              MOV      r1,r6
000962  4620              MOV      r0,r4
000964  f7fffffe          BL       _GetCharDistX
000968  4407              ADD      r7,r7,r0
;;;839            if (!Char || (SizeX > x)) {
00096a  f1bb0f00          CMP      r11,#0
00096e  d00a              BEQ      |L1.2438|
000970  42af              CMP      r7,r5
000972  dc08              BGT      |L1.2438|
;;;840              break;
;;;841            }
;;;842            pLine += GUI_UC_GetCharSize(pLine);
000974  4630              MOV      r0,r6
000976  f7fffffe          BL       GUI_UC_GetCharSize
00097a  4406              ADD      r6,r6,r0
00097c  f1a80801          SUB      r8,r8,#1              ;836
000980  f1b80f00          CMP      r8,#0                 ;836
000984  dce8              BGT      |L1.2392|
                  |L1.2438|
;;;843          }
;;;844          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText);
000986  eba60109          SUB      r1,r6,r9
00098a  4648              MOV      r0,r9
00098c  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000990  4602              MOV      r2,r0
000992  e00c              B        |L1.2478|
                  |L1.2452|
000994  e010              B        |L1.2488|
                  |L1.2454|
;;;845        } else {
;;;846          CursorPosChar = GUI_UC__NumBytes2NumChars(pText, pLine - pText) + GUI__GetCursorPosChar(pLine, x, WrapChars);
000996  eba60109          SUB      r1,r6,r9
00099a  4648              MOV      r0,r9
00099c  f7fffffe          BL       GUI_UC__NumBytes2NumChars
0009a0  4607              MOV      r7,r0
0009a2  4642              MOV      r2,r8
0009a4  4629              MOV      r1,r5
0009a6  4630              MOV      r0,r6
0009a8  f7fffffe          BL       GUI__GetCursorPosChar
0009ac  183a              ADDS     r2,r7,r0
                  |L1.2478|
;;;847        }
;;;848      }
;;;849      _SetCursorPos(hObj, pObj, CursorPosChar);
0009ae  4621              MOV      r1,r4
0009b0  4650              MOV      r0,r10
0009b2  e8bd5ff0          POP      {r4-r12,lr}
0009b6  e7fe              B        _SetCursorPos
                  |L1.2488|
;;;850    }
0009b8  e8bd9ff0          POP      {r4-r12,pc}
;;;851    
                          ENDP

                  _MoveCursorUp PROC
;;;855    */
;;;856    static void _MoveCursorUp(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
0009bc  b530              PUSH     {r4,r5,lr}
0009be  b083              SUB      sp,sp,#0xc
0009c0  4605              MOV      r5,r0
0009c2  460c              MOV      r4,r1
;;;857      int xPos, yPos;
;;;858      _GetCursorXY(hObj, pObj, &xPos, &yPos);
0009c4  ab01              ADD      r3,sp,#4
0009c6  aa02              ADD      r2,sp,#8
0009c8  4621              MOV      r1,r4
0009ca  4628              MOV      r0,r5
0009cc  f7fffffe          BL       _GetCursorXY
;;;859      yPos -= GUI_GetYDistOfFont(pObj->pFont);
0009d0  6f60              LDR      r0,[r4,#0x74]
0009d2  f7fffffe          BL       GUI_GetYDistOfFont
0009d6  9a01              LDR      r2,[sp,#4]
0009d8  1a13              SUBS     r3,r2,r0
0009da  9301              STR      r3,[sp,#4]
;;;860      _SetCursorXY(hObj, pObj, xPos, yPos);
0009dc  4621              MOV      r1,r4
0009de  4628              MOV      r0,r5
0009e0  9a02              LDR      r2,[sp,#8]
0009e2  f7fffffe          BL       _SetCursorXY
;;;861    }
0009e6  b003              ADD      sp,sp,#0xc
0009e8  bd30              POP      {r4,r5,pc}
;;;862    
                          ENDP

                  _MoveCursorDown PROC
;;;866    */
;;;867    static void _MoveCursorDown(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
0009ea  b530              PUSH     {r4,r5,lr}
0009ec  b083              SUB      sp,sp,#0xc
0009ee  4605              MOV      r5,r0
0009f0  460c              MOV      r4,r1
;;;868      int xPos, yPos;
;;;869      _GetCursorXY(hObj, pObj, &xPos, &yPos);
0009f2  ab01              ADD      r3,sp,#4
0009f4  aa02              ADD      r2,sp,#8
0009f6  4621              MOV      r1,r4
0009f8  4628              MOV      r0,r5
0009fa  f7fffffe          BL       _GetCursorXY
;;;870      yPos += GUI_GetYDistOfFont(pObj->pFont);
0009fe  6f60              LDR      r0,[r4,#0x74]
000a00  f7fffffe          BL       GUI_GetYDistOfFont
000a04  9a01              LDR      r2,[sp,#4]
000a06  1883              ADDS     r3,r0,r2
000a08  9301              STR      r3,[sp,#4]
;;;871      _SetCursorXY(hObj, pObj, xPos, yPos);
000a0a  4621              MOV      r1,r4
000a0c  4628              MOV      r0,r5
000a0e  9a02              LDR      r2,[sp,#8]
000a10  f7fffffe          BL       _SetCursorXY
;;;872    }
000a14  b003              ADD      sp,sp,#0xc
000a16  bd30              POP      {r4,r5,pc}
;;;873    
                          ENDP

                  _MoveCursor2NextLine PROC
;;;877    */
;;;878    static void _MoveCursor2NextLine(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a18  b530              PUSH     {r4,r5,lr}
000a1a  b083              SUB      sp,sp,#0xc
000a1c  4605              MOV      r5,r0
000a1e  460c              MOV      r4,r1
;;;879      int xPos, yPos;
;;;880      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a20  ab01              ADD      r3,sp,#4
000a22  aa02              ADD      r2,sp,#8
000a24  4621              MOV      r1,r4
000a26  4628              MOV      r0,r5
000a28  f7fffffe          BL       _GetCursorXY
;;;881      yPos += GUI_GetYDistOfFont(pObj->pFont);
000a2c  6f60              LDR      r0,[r4,#0x74]
000a2e  f7fffffe          BL       GUI_GetYDistOfFont
000a32  9a01              LDR      r2,[sp,#4]
000a34  1883              ADDS     r3,r0,r2
000a36  9301              STR      r3,[sp,#4]
;;;882      _SetCursorXY(hObj, pObj, 0, yPos);
000a38  2200              MOVS     r2,#0
000a3a  4621              MOV      r1,r4
000a3c  4628              MOV      r0,r5
000a3e  f7fffffe          BL       _SetCursorXY
;;;883    }
000a42  b003              ADD      sp,sp,#0xc
000a44  bd30              POP      {r4,r5,pc}
;;;884    
                          ENDP

                  _MoveCursor2LineEnd PROC
;;;888    */
;;;889    static void _MoveCursor2LineEnd(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a46  b530              PUSH     {r4,r5,lr}
000a48  b083              SUB      sp,sp,#0xc
000a4a  4604              MOV      r4,r0
000a4c  460d              MOV      r5,r1
;;;890      int xPos, yPos;
;;;891      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a4e  ab01              ADD      r3,sp,#4
000a50  aa02              ADD      r2,sp,#8
000a52  4629              MOV      r1,r5
000a54  4620              MOV      r0,r4
000a56  f7fffffe          BL       _GetCursorXY
;;;892      _SetCursorXY(hObj, pObj, 0x7FFF, yPos);
000a5a  f64772ff          MOV      r2,#0x7fff
000a5e  4629              MOV      r1,r5
000a60  4620              MOV      r0,r4
000a62  9b01              LDR      r3,[sp,#4]
000a64  f7fffffe          BL       _SetCursorXY
;;;893    }
000a68  b003              ADD      sp,sp,#0xc
000a6a  bd30              POP      {r4,r5,pc}
;;;894    
                          ENDP

                  _MoveCursor2LinePos1 PROC
;;;898    */
;;;899    static void _MoveCursor2LinePos1(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a6c  b530              PUSH     {r4,r5,lr}
000a6e  b083              SUB      sp,sp,#0xc
000a70  4604              MOV      r4,r0
000a72  460d              MOV      r5,r1
;;;900      int xPos, yPos;
;;;901      _GetCursorXY(hObj, pObj, &xPos, &yPos);
000a74  ab01              ADD      r3,sp,#4
000a76  aa02              ADD      r2,sp,#8
000a78  4629              MOV      r1,r5
000a7a  4620              MOV      r0,r4
000a7c  f7fffffe          BL       _GetCursorXY
;;;902      _SetCursorXY(hObj, pObj, 0, yPos);
000a80  2200              MOVS     r2,#0
000a82  4629              MOV      r1,r5
000a84  4620              MOV      r0,r4
000a86  9b01              LDR      r3,[sp,#4]
000a88  f7fffffe          BL       _SetCursorXY
;;;903    }
000a8c  b003              ADD      sp,sp,#0xc
000a8e  bd30              POP      {r4,r5,pc}
;;;904    
                          ENDP

                  _IsOverwriteAtThisChar PROC
;;;908    */
;;;909    static int _IsOverwriteAtThisChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000a90  e92d43f8          PUSH     {r3-r9,lr}
000a94  4607              MOV      r7,r0
000a96  460c              MOV      r4,r1
;;;910      int r = 0;
000a98  2500              MOVS     r5,#0
;;;911      if (pObj->hText && !(pObj->Flags & MULTIEDIT_CF_INSERT)) {
000a9a  f9b40038          LDRSH    r0,[r4,#0x38]
000a9e  b338              CBZ      r0,|L1.2800|
000aa0  f8941078          LDRB     r1,[r4,#0x78]
000aa4  f0110f04          TST      r1,#4
000aa8  d12c              BNE      |L1.2820|
;;;912        const char *pText;
;;;913        int CurPos, Line1, Line2;
;;;914        U16 Char;
;;;915        pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000aaa  f7fffffe          BL       GUI_ALLOC_h2p
000aae  4680              MOV      r8,r0
;;;916        Line1  = pObj->CursorLine;
000ab0  f8b46046          LDRH     r6,[r4,#0x46]
;;;917        CurPos = _CalcNextValidCursorPos(hObj, pObj, pObj->CursorPosChar + 1, 0, 0);
000ab4  2300              MOVS     r3,#0
000ab6  9300              STR      r3,[sp,#0]
000ab8  f8b40048          LDRH     r0,[r4,#0x48]
000abc  4621              MOV      r1,r4
000abe  1c42              ADDS     r2,r0,#1
000ac0  4638              MOV      r0,r7
000ac2  f7fffffe          BL       _CalcNextValidCursorPos
;;;918        Line2  = _GetCursorLine(hObj, pObj, pText, CurPos);
000ac6  4603              MOV      r3,r0
000ac8  4642              MOV      r2,r8
000aca  4621              MOV      r1,r4
000acc  4638              MOV      r0,r7
000ace  f7fffffe          BL       _GetCursorLine
000ad2  4607              MOV      r7,r0
;;;919        pText += pObj->CursorPosByte;
000ad4  f8b4004a          LDRH     r0,[r4,#0x4a]
000ad8  4440              ADD      r0,r0,r8
;;;920        Char   = GUI_UC_GetCharCode(pText);
000ada  f7fffffe          BL       GUI_UC_GetCharCode
;;;921        if (Char) {
000ade  b138              CBZ      r0,|L1.2800|
;;;922          if ((Line1 == Line2) || (pObj->Flags & MULTIEDIT_SF_PASSWORD)) {
000ae0  42be              CMP      r6,r7
000ae2  d004              BEQ      |L1.2798|
000ae4  f8941078          LDRB     r1,[r4,#0x78]
000ae8  f0110f20          TST      r1,#0x20
000aec  d001              BEQ      |L1.2802|
                  |L1.2798|
;;;923            r = 1;
000aee  2501              MOVS     r5,#1
                  |L1.2800|
000af0  e008              B        |L1.2820|
                  |L1.2802|
;;;924          } else {
;;;925            if (Char != '\n') {
000af2  280a              CMP      r0,#0xa
000af4  d006              BEQ      |L1.2820|
;;;926              if ((Char != ' ') || (pObj->WrapMode == GUI_WRAPMODE_CHAR)) {
000af6  2820              CMP      r0,#0x20
000af8  d103              BNE      |L1.2818|
000afa  f894007c          LDRB     r0,[r4,#0x7c]
000afe  2802              CMP      r0,#2
000b00  d100              BNE      |L1.2820|
                  |L1.2818|
;;;927                r = 1;
000b02  2501              MOVS     r5,#1
                  |L1.2820|
;;;928              }
;;;929            }
;;;930          }
;;;931        }
;;;932      }
;;;933      return r;
000b04  4628              MOV      r0,r5
;;;934    }
000b06  e8bd83f8          POP      {r3-r9,pc}
;;;935    
                          ENDP

                  _GetCursorSizeX PROC
;;;942    */
;;;943    static int _GetCursorSizeX(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, int * pIsRTL) {
000b0a  b570              PUSH     {r4-r6,lr}
000b0c  460c              MOV      r4,r1
000b0e  4615              MOV      r5,r2
;;;944      if (_IsOverwriteAtThisChar(hObj, pObj)) {
000b10  4621              MOV      r1,r4
000b12  f7fffffe          BL       _IsOverwriteAtThisChar
000b16  b168              CBZ      r0,|L1.2868|
;;;945        #if (GUI_SUPPORT_ARABIC)
;;;946          if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
;;;947            const char *pText;
;;;948            pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;949            pText += pObj->CursorPosByte;
;;;950            return _GetCharDistX(pObj, pText);
;;;951          } else {
;;;952            const char * pText;
;;;953            U16 Prev = 0, Char, Next = 0, Glyph;
;;;954            pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;955            if (pObj->CursorPosChar) {
;;;956              int NumChars = pObj->CursorPosChar;
;;;957              while (--NumChars) {
;;;958                pText += GUI_UC_GetCharSize(pText);
;;;959              }
;;;960              Prev = GUI_UC__GetCharCodeInc(&pText);
;;;961              Char = GUI_UC__GetCharCodeInc(&pText);
;;;962            } else {
;;;963              pText += pObj->CursorPosByte;
;;;964              Char = GUI_UC__GetCharCodeInc(&pText);
;;;965            }
;;;966            if (pObj->CursorPosChar < (pObj->NumChars - 1)) {
;;;967              Next = GUI_UC_GetCharCode(pText);
;;;968            }
;;;969            Glyph = GUI__GetPresentationForm(Char, Next, Prev, 0);
;;;970            if (Char != 0x20) {
;;;971              *pIsRTL = GUI__IsArabicCharacter(Char) ? 1 : 0;
;;;972            } else {
;;;973              *pIsRTL = GUI__IsArabicCharacter(Prev) ? 1 : 0;
;;;974            }
;;;975            return GUI_GetCharDistX(Glyph);
;;;976          }
;;;977        #else
;;;978          const char *pText;
;;;979          *pIsRTL = 0;
000b18  2000              MOVS     r0,#0
000b1a  6028              STR      r0,[r5,#0]
;;;980          pText  = (const char *)GUI_ALLOC_h2p(pObj->hText);
000b1c  f9b40038          LDRSH    r0,[r4,#0x38]
000b20  f7fffffe          BL       GUI_ALLOC_h2p
;;;981          pText += pObj->CursorPosByte;
000b24  f8b4104a          LDRH     r1,[r4,#0x4a]
000b28  4401              ADD      r1,r1,r0
;;;982          return _GetCharDistX(pObj, pText);
000b2a  4620              MOV      r0,r4
000b2c  e8bd4070          POP      {r4-r6,lr}
000b30  f7ffbffe          B.W      _GetCharDistX
                  |L1.2868|
;;;983        #endif
;;;984      } else {
;;;985        #if (GUI_SUPPORT_ARABIC)
;;;986          const char * pText;
;;;987          U16 Prev = 0, Char;
;;;988          pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;989          if (pObj->CursorPosChar) {
;;;990            int NumChars = pObj->CursorPosChar;
;;;991            while (--NumChars) {
;;;992              pText += GUI_UC_GetCharSize(pText);
;;;993            }
;;;994            Prev = GUI_UC__GetCharCodeInc(&pText);
;;;995            Char = GUI_UC_GetCharCode(pText);
;;;996          } else {
;;;997            pText += pObj->CursorPosByte;
;;;998            Char = GUI_UC_GetCharCode(pText);
;;;999          }
;;;1000         if (Char != 0x20) {
;;;1001           *pIsRTL = GUI__IsArabicCharacter(Char) ? 1 : 0;
;;;1002         } else {
;;;1003           *pIsRTL = GUI__IsArabicCharacter(Prev) ? 1 : 0;
;;;1004         }
;;;1005       #endif
;;;1006       return 2;
000b34  2002              MOVS     r0,#2
;;;1007     }
;;;1008   }
000b36  bd70              POP      {r4-r6,pc}
;;;1009   
                          ENDP

                  _IncrementBuffer PROC
;;;1021   */
;;;1022   static int _IncrementBuffer(MULTIEDIT_OBJ* pObj, unsigned AddBytes) {
000b38  b570              PUSH     {r4-r6,lr}
000b3a  4604              MOV      r4,r0
;;;1023     WM_HMEM hNew;
;;;1024     int NewSize;
;;;1025     NewSize = pObj->BufferSize + AddBytes;
000b3c  f8b40044          LDRH     r0,[r4,#0x44]
000b40  1846              ADDS     r6,r0,r1
;;;1026     hNew    = GUI_ALLOC_Realloc(pObj->hText, NewSize);
000b42  f9b40038          LDRSH    r0,[r4,#0x38]
000b46  4631              MOV      r1,r6
000b48  f7fffffe          BL       GUI_ALLOC_Realloc
000b4c  4605              MOV      r5,r0
;;;1027     if (hNew) {
000b4e  b15d              CBZ      r5,|L1.2920|
;;;1028       if (!(pObj->hText)) {
000b50  8f20              LDRH     r0,[r4,#0x38]
000b52  b920              CBNZ     r0,|L1.2910|
;;;1029         char* pText;
;;;1030         pText  = (char*) GUI_ALLOC_h2p(hNew);
000b54  4628              MOV      r0,r5
000b56  f7fffffe          BL       GUI_ALLOC_h2p
;;;1031         *pText = 0;
000b5a  2100              MOVS     r1,#0
000b5c  7001              STRB     r1,[r0,#0]
                  |L1.2910|
;;;1032       }
;;;1033       pObj->BufferSize = NewSize;
000b5e  f8a46044          STRH     r6,[r4,#0x44]
;;;1034       pObj->hText = hNew;
000b62  8725              STRH     r5,[r4,#0x38]
;;;1035       return 1;
000b64  2001              MOVS     r0,#1
;;;1036     }
;;;1037     return 0;
;;;1038   }
000b66  bd70              POP      {r4-r6,pc}
                  |L1.2920|
000b68  2000              MOVS     r0,#0                 ;1037
000b6a  bd70              POP      {r4-r6,pc}
;;;1039   
                          ENDP

                  _IsSpaceInBuffer PROC
;;;1050   */
;;;1051   static int _IsSpaceInBuffer(MULTIEDIT_OBJ* pObj, int BytesNeeded) {
000b6c  b570              PUSH     {r4-r6,lr}
000b6e  4604              MOV      r4,r0
000b70  460d              MOV      r5,r1
;;;1052     int NumBytes = 0;
000b72  2000              MOVS     r0,#0
;;;1053     if (pObj->hText) {
000b74  f9b42038          LDRSH    r2,[r4,#0x38]
000b78  b122              CBZ      r2,|L1.2948|
;;;1054       NumBytes = strlen((char*)GUI_ALLOC_h2p(pObj->hText));
000b7a  4610              MOV      r0,r2
000b7c  f7fffffe          BL       GUI_ALLOC_h2p
000b80  f7fffffe          BL       strlen
                  |L1.2948|
;;;1055     }
;;;1056     BytesNeeded = (BytesNeeded + NumBytes + 1) - pObj->BufferSize;
000b84  f8b41044          LDRH     r1,[r4,#0x44]
000b88  4428              ADD      r0,r0,r5
000b8a  1a40              SUBS     r0,r0,r1
000b8c  1c40              ADDS     r0,r0,#1
;;;1057     if (BytesNeeded > 0) {
000b8e  2800              CMP      r0,#0
000b90  dd05              BLE      |L1.2974|
;;;1058       if (!_IncrementBuffer(pObj, BytesNeeded + MULTIEDIT_REALLOC_SIZE)) {
000b92  f1000110          ADD      r1,r0,#0x10
000b96  4620              MOV      r0,r4
000b98  f7fffffe          BL       _IncrementBuffer
000b9c  b108              CBZ      r0,|L1.2978|
                  |L1.2974|
;;;1059         return 0;
;;;1060       }
;;;1061     }
;;;1062     return 1;
000b9e  2001              MOVS     r0,#1
;;;1063   }
000ba0  bd70              POP      {r4-r6,pc}
                  |L1.2978|
000ba2  2000              MOVS     r0,#0                 ;1059
000ba4  bd70              POP      {r4-r6,pc}
;;;1064   
                          ENDP

                  _IsCharsAvailable PROC
;;;1074   */
;;;1075   static int _IsCharsAvailable(MULTIEDIT_OBJ* pObj, int CharsNeeded) {
000ba6  b570              PUSH     {r4-r6,lr}
000ba8  4604              MOV      r4,r0
000baa  460d              MOV      r5,r1
;;;1076     if ((CharsNeeded > 0) && (pObj->MaxNumChars > 0)) {
000bac  2d00              CMP      r5,#0
000bae  dd0d              BLE      |L1.3020|
000bb0  8f60              LDRH     r0,[r4,#0x3a]
000bb2  b158              CBZ      r0,|L1.3020|
;;;1077       int NumChars = 0;
000bb4  2000              MOVS     r0,#0
;;;1078       if (pObj->hText) {
000bb6  8f21              LDRH     r1,[r4,#0x38]
000bb8  b111              CBZ      r1,|L1.3008|
;;;1079         NumChars = _GetNumChars(pObj);
000bba  4620              MOV      r0,r4
000bbc  f7fffffe          BL       _GetNumChars
                  |L1.3008|
;;;1080       }
;;;1081       if ((CharsNeeded + NumChars) > pObj->MaxNumChars) {
000bc0  8f61              LDRH     r1,[r4,#0x3a]
000bc2  4428              ADD      r0,r0,r5
000bc4  4288              CMP      r0,r1
000bc6  dd01              BLE      |L1.3020|
;;;1082         return 0;
000bc8  2000              MOVS     r0,#0
;;;1083       }
;;;1084     }
;;;1085     return 1;
;;;1086   }
000bca  bd70              POP      {r4-r6,pc}
                  |L1.3020|
000bcc  2001              MOVS     r0,#1                 ;1085
000bce  bd70              POP      {r4-r6,pc}
;;;1087   
                          ENDP

                  _DeleteChar PROC
;;;1100   */
;;;1101   static void _DeleteChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj) {
000bd0  e92d47f0          PUSH     {r4-r10,lr}
000bd4  4680              MOV      r8,r0
000bd6  460c              MOV      r4,r1
;;;1102     if (pObj->hText) {
000bd8  f9b40038          LDRSH    r0,[r4,#0x38]
000bdc  2800              CMP      r0,#0
000bde  d04e              BEQ      |L1.3198|
;;;1103       unsigned CursorOffset;
;;;1104       char* s;
;;;1105       s = (char*) GUI_ALLOC_h2p(pObj->hText);
000be0  f7fffffe          BL       GUI_ALLOC_h2p
000be4  4681              MOV      r9,r0
;;;1106       CursorOffset = pObj->CursorPosByte;
000be6  f8b4504a          LDRH     r5,[r4,#0x4a]
;;;1107       if (CursorOffset < strlen(s)) {
000bea  4648              MOV      r0,r9
000bec  f7fffffe          BL       strlen
000bf0  42a8              CMP      r0,r5
000bf2  d944              BLS      |L1.3198|
;;;1108         char *pCursor, *pLine, *pEndLine;
;;;1109         int CursorLine, NumChars, NumBytes;
;;;1110         pCursor    = s + CursorOffset;
000bf4  444d              ADD      r5,r5,r9
;;;1111         CursorLine = pObj->CursorLine;
000bf6  f8b42046          LDRH     r2,[r4,#0x46]
;;;1112         pLine      = _GetpLine(hObj, pObj, CursorLine);
000bfa  4621              MOV      r1,r4
000bfc  4640              MOV      r0,r8
000bfe  f7fffffe          BL       _GetpLine
000c02  4607              MOV      r7,r0
;;;1113         NumChars   = _WrapGetNumCharsDisp(hObj, pObj, pLine);
000c04  463a              MOV      r2,r7
000c06  4621              MOV      r1,r4
000c08  4640              MOV      r0,r8
000c0a  f7fffffe          BL       _WrapGetNumCharsDisp
;;;1114         pEndLine   = pLine + GUI_UC__NumChars2NumBytes(pLine, NumChars);
000c0e  4601              MOV      r1,r0
000c10  4638              MOV      r0,r7
000c12  f7fffffe          BL       GUI_UC__NumChars2NumBytes
000c16  19c6              ADDS     r6,r0,r7
;;;1115         pLine      = pLine + _WrapGetNumBytesToNextLine(hObj, pObj, pLine);
000c18  463a              MOV      r2,r7
000c1a  4621              MOV      r1,r4
000c1c  4640              MOV      r0,r8
000c1e  f7fffffe          BL       _WrapGetNumBytesToNextLine
000c22  4438              ADD      r0,r0,r7
;;;1116         if (pCursor == pEndLine) {
000c24  42b5              CMP      r5,r6
000c26  d101              BNE      |L1.3116|
;;;1117           NumBytes = pLine - pEndLine;
000c28  1b86              SUBS     r6,r0,r6
000c2a  e003              B        |L1.3124|
                  |L1.3116|
;;;1118         } else {
;;;1119           NumBytes = GUI_UC_GetCharSize(pCursor);
000c2c  4628              MOV      r0,r5
000c2e  f7fffffe          BL       GUI_UC_GetCharSize
000c32  4606              MOV      r6,r0
                  |L1.3124|
;;;1120         }
;;;1121         NumChars = GUI_UC__NumBytes2NumChars(pCursor, NumBytes);
000c34  4631              MOV      r1,r6
000c36  4628              MOV      r0,r5
000c38  f7fffffe          BL       GUI_UC__NumBytes2NumChars
000c3c  4607              MOV      r7,r0
;;;1122         strcpy(pCursor, pCursor + NumBytes);
000c3e  19a9              ADDS     r1,r5,r6
000c40  4628              MOV      r0,r5
000c42  f7fffffe          BL       strcpy
;;;1123         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000c46  2105              MOVS     r1,#5
000c48  4640              MOV      r0,r8
000c4a  f7fffffe          BL       WM_NotifyParent
;;;1124         pObj->NumChars -= NumChars;
000c4e  8fa0              LDRH     r0,[r4,#0x3c]
000c50  1bc0              SUBS     r0,r0,r7
000c52  87a0              STRH     r0,[r4,#0x3c]
;;;1125         _InvalidateNumLines(pObj);
000c54  4620              MOV      r0,r4
000c56  f7fffffe          BL       _InvalidateNumLines
;;;1126         _InvalidateTextSizeX(pObj);
000c5a  4620              MOV      r0,r4
000c5c  f7fffffe          BL       _InvalidateTextSizeX
;;;1127         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
000c60  4620              MOV      r0,r4
000c62  f7fffffe          BL       _InvalidateCursorXY
;;;1128         _ClearCache(pObj);
000c66  4620              MOV      r0,r4
000c68  f7fffffe          BL       _ClearCache
;;;1129         pObj->CursorLine = _GetCursorLine(hObj, pObj, s, pObj->CursorPosChar);
000c6c  f8b43048          LDRH     r3,[r4,#0x48]
000c70  464a              MOV      r2,r9
000c72  4621              MOV      r1,r4
000c74  4640              MOV      r0,r8
000c76  f7fffffe          BL       _GetCursorLine
000c7a  f8a40046          STRH     r0,[r4,#0x46]
                  |L1.3198|
;;;1130       }
;;;1131     }
;;;1132   }
000c7e  e8bd87f0          POP      {r4-r10,pc}
;;;1133   
                          ENDP

                  _InsertChar PROC
;;;1139   */
;;;1140   static int _InsertChar(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, U16 Char) {
000c82  e92d41f0          PUSH     {r4-r8,lr}
000c86  4607              MOV      r7,r0
000c88  460c              MOV      r4,r1
000c8a  4616              MOV      r6,r2
;;;1141     if (_IsCharsAvailable(pObj, 1)) {
000c8c  2101              MOVS     r1,#1
000c8e  4620              MOV      r0,r4
000c90  f7fffffe          BL       _IsCharsAvailable
000c94  b340              CBZ      r0,|L1.3304|
;;;1142       int BytesNeeded;
;;;1143       BytesNeeded = GUI_UC__CalcSizeOfChar(Char);
000c96  4630              MOV      r0,r6
000c98  f7fffffe          BL       GUI_UC__CalcSizeOfChar
000c9c  4680              MOV      r8,r0
;;;1144       if (_IsSpaceInBuffer(pObj, BytesNeeded)) {
000c9e  4641              MOV      r1,r8
000ca0  4620              MOV      r0,r4
000ca2  f7fffffe          BL       _IsSpaceInBuffer
000ca6  b1f8              CBZ      r0,|L1.3304|
;;;1145         int CursorOffset;
;;;1146         char* pText;
;;;1147         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
000ca8  f9b40038          LDRSH    r0,[r4,#0x38]
000cac  f7fffffe          BL       GUI_ALLOC_h2p
000cb0  4601              MOV      r1,r0
;;;1148         CursorOffset = pObj->CursorPosByte;
000cb2  f8b4004a          LDRH     r0,[r4,#0x4a]
;;;1149         pText += CursorOffset;
000cb6  180d              ADDS     r5,r1,r0
;;;1150         memmove(pText + BytesNeeded, pText, strlen(pText) + 1);
000cb8  4628              MOV      r0,r5
000cba  f7fffffe          BL       strlen
000cbe  1c42              ADDS     r2,r0,#1
000cc0  eb050008          ADD      r0,r5,r8
000cc4  4629              MOV      r1,r5
000cc6  f7fffffe          BL       __aeabi_memmove
;;;1151         GUI_UC_Encode(pText, Char);
000cca  4631              MOV      r1,r6
000ccc  4628              MOV      r0,r5
000cce  f7fffffe          BL       GUI_UC_Encode
;;;1152         WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
000cd2  2105              MOVS     r1,#5
000cd4  4638              MOV      r0,r7
000cd6  f7fffffe          BL       WM_NotifyParent
;;;1153         pObj->NumChars += 1;
000cda  8fa0              LDRH     r0,[r4,#0x3c]
000cdc  1c40              ADDS     r0,r0,#1
000cde  87a0              STRH     r0,[r4,#0x3c]
;;;1154         _InvalidateNumLines(pObj);
000ce0  4620              MOV      r0,r4
000ce2  e002              B        |L1.3306|
                  |L1.3300|
                          DCD      GUI_Context
                  |L1.3304|
000ce8  e00a              B        |L1.3328|
                  |L1.3306|
000cea  f7fffffe          BL       _InvalidateNumLines
;;;1155         _InvalidateTextSizeX(pObj);
000cee  4620              MOV      r0,r4
000cf0  f7fffffe          BL       _InvalidateTextSizeX
;;;1156         _ClearCache(pObj);
000cf4  4620              MOV      r0,r4
000cf6  f7fffffe          BL       _ClearCache
;;;1157         return 1;
000cfa  2001              MOVS     r0,#1
;;;1158       }
;;;1159     }
;;;1160     return 0;
;;;1161   }
000cfc  e8bd81f0          POP      {r4-r8,pc}
                  |L1.3328|
000d00  2000              MOVS     r0,#0                 ;1160
000d02  e8bd81f0          POP      {r4-r8,pc}
;;;1162   
                          ENDP

                  _MULTIEDIT_Paint PROC
;;;1172   */
;;;1173   static void _MULTIEDIT_Paint(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj) {
000d06  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
000d0a  b08f              SUB      sp,sp,#0x3c
000d0c  460c              MOV      r4,r1
;;;1174     int ScrollPosX, ScrollPosY, EffectSize, HBorder, IsRTL = 0;
000d0e  2000              MOVS     r0,#0
000d10  900c              STR      r0,[sp,#0x30]
;;;1175     int x, y, xOff, yOff, ColorIndex, FontSizeY;
;;;1176     GUI_RECT r, rClip;
;;;1177     const GUI_RECT *prOldClip;
;;;1178     /* Init some values */
;;;1179     GUI_SetFont(pObj->pFont);
000d12  6f60              LDR      r0,[r4,#0x74]
000d14  f7fffffe          BL       GUI_SetFont
;;;1180     FontSizeY  = GUI_GetFontDistY();
000d18  f7fffffe          BL       GUI_GetFontDistY
000d1c  4682              MOV      r10,r0
;;;1181     ScrollPosX = pObj->ScrollStateH.v;
000d1e  f8d4906c          LDR      r9,[r4,#0x6c]
;;;1182     ScrollPosY = pObj->ScrollStateV.v;
000d22  6e26              LDR      r6,[r4,#0x60]
;;;1183     EffectSize = pObj->Widget.pEffect->EffectSize;
000d24  6a20              LDR      r0,[r4,#0x20]
000d26  f8d08014          LDR      r8,[r0,#0x14]
;;;1184     HBorder    = pObj->HBorder;
000d2a  f894b07b          LDRB     r11,[r4,#0x7b]
;;;1185     xOff       = EffectSize + HBorder - ScrollPosX;
000d2e  eb08050b          ADD      r5,r8,r11
000d32  eba50009          SUB      r0,r5,r9
000d36  9009              STR      r0,[sp,#0x24]
;;;1186     yOff       = EffectSize - ScrollPosY * FontSizeY;
000d38  fb06801a          MLS      r0,r6,r10,r8
000d3c  9008              STR      r0,[sp,#0x20]
;;;1187     ColorIndex = ((pObj->Flags & MULTIEDIT_SF_READONLY) ? 1 : 0);
000d3e  f8940078          LDRB     r0,[r4,#0x78]
000d42  f0000001          AND      r0,r0,#1
;;;1188     /* Set colors and draw the background */
;;;1189     LCD_SetBkColor(pObj->aBkColor[ColorIndex]);
000d46  eb040780          ADD      r7,r4,r0,LSL #2
000d4a  6ab8              LDR      r0,[r7,#0x28]
000d4c  f7fffffe          BL       LCD_SetBkColor
;;;1190     LCD_SetColor(pObj->aColor[ColorIndex]);
000d50  6b38              LDR      r0,[r7,#0x30]
000d52  f7fffffe          BL       LCD_SetColor
;;;1191     GUI_Clear();
000d56  f7fffffe          BL       GUI_Clear
;;;1192     /* Draw the text if necessary */
;;;1193     rClip.x0 = EffectSize + HBorder;
000d5a  f8ad5010          STRH     r5,[sp,#0x10]
;;;1194     rClip.y0 = EffectSize;
000d5e  fa0ff088          SXTH     r0,r8
000d62  900d              STR      r0,[sp,#0x34]
000d64  f8ad0012          STRH     r0,[sp,#0x12]
;;;1195     rClip.x1 = WM_GetWindowSizeX(hObj) - EffectSize - HBorder - 1;
000d68  980f              LDR      r0,[sp,#0x3c]
000d6a  f7fffffe          BL       WM_GetWindowSizeX
000d6e  eba00008          SUB      r0,r0,r8
000d72  eba0000b          SUB      r0,r0,r11
000d76  1e40              SUBS     r0,r0,#1
000d78  f8ad0014          STRH     r0,[sp,#0x14]
;;;1196     rClip.y1 = WM_GetWindowSizeY(hObj) - EffectSize - 1;
000d7c  980f              LDR      r0,[sp,#0x3c]
000d7e  f7fffffe          BL       WM_GetWindowSizeY
000d82  eba00008          SUB      r0,r0,r8
000d86  1e40              SUBS     r0,r0,#1
000d88  f8ad0016          STRH     r0,[sp,#0x16]
;;;1197     prOldClip = WM_SetUserClipRect(&rClip);
000d8c  a804              ADD      r0,sp,#0x10
000d8e  f7fffffe          BL       WM_SetUserClipRect
000d92  9003              STR      r0,[sp,#0xc]
;;;1198     if (pObj->hText) {
000d94  8f20              LDRH     r0,[r4,#0x38]
000d96  b3f0              CBZ      r0,|L1.3606|
;;;1199       const char* pText;
;;;1200       int Line = 0;
000d98  2500              MOVS     r5,#0
;;;1201       int xSize       = _GetXSize(hObj, pObj);
000d9a  4621              MOV      r1,r4
000d9c  980f              LDR      r0,[sp,#0x3c]
000d9e  f7fffffe          BL       _GetXSize
000da2  9002              STR      r0,[sp,#8]
;;;1202       int NumVisLines = _GetNumVisLines(hObj, pObj);
000da4  4621              MOV      r1,r4
000da6  980f              LDR      r0,[sp,#0x3c]
000da8  f7fffffe          BL       _GetNumVisLines
000dac  9001              STR      r0,[sp,#4]
;;;1203       /* Get the text */
;;;1204       pText = (const char *)GUI_ALLOC_h2p(pObj->hText);
000dae  f9b40038          LDRSH    r0,[r4,#0x38]
000db2  f7fffffe          BL       GUI_ALLOC_h2p
000db6  4607              MOV      r7,r0
;;;1205       /* Set the rectangle for drawing */
;;;1206       r.x0 = xOff;
000db8  9809              LDR      r0,[sp,#0x24]
000dba  b201              SXTH     r1,r0
000dbc  f8ad1018          STRH     r1,[sp,#0x18]
;;;1207       r.y0 = EffectSize;
000dc0  980d              LDR      r0,[sp,#0x34]
000dc2  f8ad001a          STRH     r0,[sp,#0x1a]
;;;1208       r.x1 = xSize + EffectSize + HBorder - 1;
000dc6  9802              LDR      r0,[sp,#8]
000dc8  4440              ADD      r0,r0,r8
000dca  4458              ADD      r0,r0,r11
000dcc  1e40              SUBS     r0,r0,#1
000dce  b202              SXTH     r2,r0
000dd0  f8ad201c          STRH     r2,[sp,#0x1c]
;;;1209       r.y1 = pObj->Widget.Win.Rect.y1 - pObj->Widget.Win.Rect.y0 + 1;
000dd4  88e0              LDRH     r0,[r4,#6]
000dd6  8863              LDRH     r3,[r4,#2]
000dd8  1ac0              SUBS     r0,r0,r3
000dda  1c40              ADDS     r0,r0,#1
000ddc  f8ad001e          STRH     r0,[sp,#0x1e]
;;;1210       /* Use cached position of first visible byte if possible */
;;;1211       if (ScrollPosY >= pObj->CacheFirstVisibleLine) {
000de0  f8b40054          LDRH     r0,[r4,#0x54]
000de4  42b0              CMP      r0,r6
000de6  dc04              BGT      |L1.3570|
;;;1212         if (pObj->CacheFirstVisibleByte) {
000de8  f8b43056          LDRH     r3,[r4,#0x56]
000dec  b10b              CBZ      r3,|L1.3570|
;;;1213           pText += pObj->CacheFirstVisibleByte;
000dee  441f              ADD      r7,r7,r3
;;;1214           Line   = pObj->CacheFirstVisibleLine;
000df0  4605              MOV      r5,r0
                  |L1.3570|
;;;1215         }
;;;1216       }
;;;1217       if (pObj->Align == GUI_TA_RIGHT) {
000df2  f8b40058          LDRH     r0,[r4,#0x58]
000df6  2801              CMP      r0,#1
000df8  d107              BNE      |L1.3594|
;;;1218         r.x0 += ScrollPosX;
000dfa  eb010009          ADD      r0,r1,r9
000dfe  f8ad0018          STRH     r0,[sp,#0x18]
;;;1219         r.x1 += ScrollPosX;
000e02  eb020009          ADD      r0,r2,r9
000e06  f8ad001c          STRH     r0,[sp,#0x1c]
                  |L1.3594|
;;;1220       }
;;;1221       /* Do the drawing of the text */
;;;1222       do {
;;;1223         /* Cache the position of the first visible byte and the depending line number */
;;;1224         if (pObj->CacheFirstVisibleLine != ScrollPosY) {
;;;1225           if (Line == ScrollPosY) {
;;;1226             pObj->CacheFirstVisibleByte = pText - (const char *)GUI_ALLOC_h2p(pObj->hText);
;;;1227             pObj->CacheFirstVisibleLine = ScrollPosY;
000e0a  fa1ff886          UXTH     r8,r6
                  |L1.3598|
000e0e  f8b40054          LDRH     r0,[r4,#0x54]         ;1224
000e12  42b0              CMP      r0,r6                 ;1224
000e14  e000              B        |L1.3608|
                  |L1.3606|
000e16  e02b              B        |L1.3696|
                  |L1.3608|
000e18  d00a              BEQ      |L1.3632|
000e1a  42b5              CMP      r5,r6                 ;1225
000e1c  d108              BNE      |L1.3632|
000e1e  f9b40038          LDRSH    r0,[r4,#0x38]         ;1226
000e22  f7fffffe          BL       GUI_ALLOC_h2p
000e26  1a38              SUBS     r0,r7,r0              ;1226
000e28  f8a40056          STRH     r0,[r4,#0x56]         ;1226
000e2c  f8a48054          STRH     r8,[r4,#0x54]
                  |L1.3632|
;;;1228           }
;;;1229         }
;;;1230         /* Draw it */
;;;1231         if ((Line >= ScrollPosY) && ((Line - ScrollPosY) <= NumVisLines)) {
000e30  42b5              CMP      r5,r6
000e32  db0e              BLT      |L1.3666|
000e34  9801              LDR      r0,[sp,#4]
000e36  1ba9              SUBS     r1,r5,r6
000e38  4281              CMP      r1,r0
000e3a  dc0a              BGT      |L1.3666|
;;;1232           _DispString(hObj, pObj, pText, &r);
000e3c  ab06              ADD      r3,sp,#0x18
000e3e  463a              MOV      r2,r7
000e40  4621              MOV      r1,r4
000e42  980f              LDR      r0,[sp,#0x3c]
000e44  f7fffffe          BL       _DispString
;;;1233           r.y0 += FontSizeY;  /* Next line */
000e48  f8bd001a          LDRH     r0,[sp,#0x1a]
000e4c  4450              ADD      r0,r0,r10
000e4e  f8ad001a          STRH     r0,[sp,#0x1a]
                  |L1.3666|
;;;1234         }
;;;1235         pText += _WrapGetNumBytesToNextLine(hObj, pObj, pText);
000e52  463a              MOV      r2,r7
000e54  4621              MOV      r1,r4
000e56  980f              LDR      r0,[sp,#0x3c]
000e58  f7fffffe          BL       _WrapGetNumBytesToNextLine
000e5c  4407              ADD      r7,r7,r0
;;;1236         Line++;
000e5e  1c6d              ADDS     r5,r5,#1
;;;1237       } while (GUI_UC_GetCharCode(pText) && ((Line - ScrollPosY) <= NumVisLines));
000e60  4638              MOV      r0,r7
000e62  f7fffffe          BL       GUI_UC_GetCharCode
000e66  b118              CBZ      r0,|L1.3696|
000e68  9801              LDR      r0,[sp,#4]
000e6a  1ba9              SUBS     r1,r5,r6
000e6c  4281              CMP      r1,r0
000e6e  ddce              BLE      |L1.3598|
                  |L1.3696|
;;;1238     }
;;;1239     /* Draw cursor if necessary */
;;;1240     if (WM_HasFocus(hObj)) {
000e70  980f              LDR      r0,[sp,#0x3c]
000e72  f7fffffe          BL       WM_HasFocus
000e76  b3e8              CBZ      r0,|L1.3828|
;;;1241       int CursorSize;
;;;1242       _GetCursorXY(hObj, pObj, &x, &y);
000e78  ab0a              ADD      r3,sp,#0x28
000e7a  aa0b              ADD      r2,sp,#0x2c
000e7c  4621              MOV      r1,r4
000e7e  980f              LDR      r0,[sp,#0x3c]
000e80  f7fffffe          BL       _GetCursorXY
;;;1243       CursorSize = _GetCursorSizeX(hObj, pObj, &IsRTL);
000e84  aa0c              ADD      r2,sp,#0x30
000e86  4621              MOV      r1,r4
000e88  980f              LDR      r0,[sp,#0x3c]
000e8a  f7fffffe          BL       _GetCursorSizeX
;;;1244       if (IsRTL) {
000e8e  990c              LDR      r1,[sp,#0x30]
000e90  b151              CBZ      r1,|L1.3752|
;;;1245         r.x0 = x + xOff - CursorSize;
000e92  9a0b              LDR      r2,[sp,#0x2c]
000e94  9909              LDR      r1,[sp,#0x24]
000e96  4411              ADD      r1,r1,r2
000e98  1a09              SUBS     r1,r1,r0
000e9a  f8ad1018          STRH     r1,[sp,#0x18]
;;;1246         r.x1 = r.x0 + CursorSize - 1;
000e9e  1e40              SUBS     r0,r0,#1
000ea0  4408              ADD      r0,r0,r1
000ea2  f8ad001c          STRH     r0,[sp,#0x1c]
000ea6  e008              B        |L1.3770|
                  |L1.3752|
;;;1247       } else {
;;;1248         r.x0 = x + xOff;
000ea8  9a0b              LDR      r2,[sp,#0x2c]
000eaa  9909              LDR      r1,[sp,#0x24]
000eac  4411              ADD      r1,r1,r2
000eae  f8ad1018          STRH     r1,[sp,#0x18]
;;;1249         r.x1 = r.x0 + CursorSize - 1;
000eb2  1e40              SUBS     r0,r0,#1
000eb4  4408              ADD      r0,r0,r1
000eb6  f8ad001c          STRH     r0,[sp,#0x1c]
                  |L1.3770|
;;;1250       }
;;;1251       r.y0 = y + yOff;
000eba  990a              LDR      r1,[sp,#0x28]
000ebc  9808              LDR      r0,[sp,#0x20]
000ebe  4408              ADD      r0,r0,r1
000ec0  b201              SXTH     r1,r0
000ec2  f8ad101a          STRH     r1,[sp,#0x1a]
;;;1252       r.y1 = r.y0 + FontSizeY - 1;
000ec6  f1aa0001          SUB      r0,r10,#1
000eca  4408              ADD      r0,r0,r1
000ecc  b203              SXTH     r3,r0
000ece  f8ad301e          STRH     r3,[sp,#0x1e]
;;;1253       if (pObj->Align == GUI_TA_RIGHT) {
000ed2  f8b40058          LDRH     r0,[r4,#0x58]
000ed6  2801              CMP      r0,#1
000ed8  d10b              BNE      |L1.3826|
;;;1254         r.x0 += ScrollPosX << 1;
000eda  f8bd0018          LDRH     r0,[sp,#0x18]
000ede  eb000049          ADD      r0,r0,r9,LSL #1
000ee2  f8ad0018          STRH     r0,[sp,#0x18]
;;;1255         r.x1 += ScrollPosX << 1;
000ee6  f8bd001c          LDRH     r0,[sp,#0x1c]
000eea  eb000049          ADD      r0,r0,r9,LSL #1
000eee  f8ad001c          STRH     r0,[sp,#0x1c]
                  |L1.3826|
;;;1256       }
;;;1257       GUI_InvertRect(r.x0, r.y0, r.x1, r.y1);
000ef2  e000              B        |L1.3830|
                  |L1.3828|
000ef4  e005              B        |L1.3842|
                  |L1.3830|
000ef6  f9bd201c          LDRSH    r2,[sp,#0x1c]
000efa  f9bd0018          LDRSH    r0,[sp,#0x18]
000efe  f7fffffe          BL       GUI_InvertRect
                  |L1.3842|
;;;1258     }
;;;1259     WM_SetUserClipRect(prOldClip);
000f02  9803              LDR      r0,[sp,#0xc]
000f04  f7fffffe          BL       WM_SetUserClipRect
;;;1260     /* Draw the 3D effect (if configured) */
;;;1261     WIDGET__EFFECT_DrawDown(&pObj->Widget);
000f08  4620              MOV      r0,r4
000f0a  f7fffffe          BL       WIDGET__EFFECT_DrawDown
;;;1262   }
000f0e  b011              ADD      sp,sp,#0x44
000f10  e8bd8ff0          POP      {r4-r11,pc}
;;;1263   
                          ENDP

                  _OnTouch PROC
;;;1267   */
;;;1268   static void _OnTouch(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ* pObj, WM_MESSAGE*pMsg) {
000f14  e92d41f0          PUSH     {r4-r8,lr}
000f18  4607              MOV      r7,r0
000f1a  460c              MOV      r4,r1
;;;1269     int Notification;
;;;1270     const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
000f1c  6895              LDR      r5,[r2,#8]
;;;1271     if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
000f1e  b1fd              CBZ      r5,|L1.3936|
;;;1272       if (pState->Pressed) {
000f20  7a28              LDRB     r0,[r5,#8]
000f22  b1d8              CBZ      r0,|L1.3932|
;;;1273         int Effect, xPos, yPos;
;;;1274         Effect = pObj->Widget.pEffect->EffectSize;
000f24  6a20              LDR      r0,[r4,#0x20]
000f26  6946              LDR      r6,[r0,#0x14]
;;;1275         xPos   = pState->x + pObj->ScrollStateH.v - Effect - pObj->HBorder;
000f28  6828              LDR      r0,[r5,#0]
000f2a  6ee1              LDR      r1,[r4,#0x6c]
000f2c  4408              ADD      r0,r0,r1
000f2e  f894107b          LDRB     r1,[r4,#0x7b]
000f32  1b80              SUBS     r0,r0,r6
000f34  eba00801          SUB      r8,r0,r1
;;;1276         yPos   = pState->y + pObj->ScrollStateV.v * GUI_GetYDistOfFont(pObj->pFont) - Effect;
000f38  6f60              LDR      r0,[r4,#0x74]
000f3a  f7fffffe          BL       GUI_GetYDistOfFont
000f3e  6869              LDR      r1,[r5,#4]
000f40  6e22              LDR      r2,[r4,#0x60]
000f42  fb021000          MLA      r0,r2,r0,r1
000f46  1b83              SUBS     r3,r0,r6
;;;1277         _SetCursorXY(hObj, pObj, xPos, yPos);
000f48  4642              MOV      r2,r8
000f4a  4621              MOV      r1,r4
000f4c  4638              MOV      r0,r7
000f4e  f7fffffe          BL       _SetCursorXY
;;;1278         _Invalidate(hObj);
000f52  4638              MOV      r0,r7
000f54  f7fffffe          BL       _Invalidate
;;;1279         Notification = WM_NOTIFICATION_CLICKED;
000f58  2101              MOVS     r1,#1
;;;1280       } else {
000f5a  e002              B        |L1.3938|
                  |L1.3932|
;;;1281         Notification = WM_NOTIFICATION_RELEASED;
000f5c  2102              MOVS     r1,#2
000f5e  e000              B        |L1.3938|
                  |L1.3936|
;;;1282       }
;;;1283     } else {
;;;1284       Notification = WM_NOTIFICATION_MOVED_OUT;
000f60  2103              MOVS     r1,#3
                  |L1.3938|
;;;1285     }
;;;1286     WM_NotifyParent(hObj, Notification);
000f62  4638              MOV      r0,r7
000f64  e8bd41f0          POP      {r4-r8,lr}
000f68  f7ffbffe          B.W      WM_NotifyParent
;;;1287   }
;;;1288   
                          ENDP

                  _AddKey PROC
;;;1295   */
;;;1296   static int _AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
000f6c  e92d41f0          PUSH     {r4-r8,lr}
000f70  4607              MOV      r7,r0
000f72  460e              MOV      r6,r1
;;;1297     int r = 0;               /* Key has not been consumed */
000f74  2500              MOVS     r5,#0
;;;1298     MULTIEDIT_OBJ* pObj;
;;;1299     pObj = MULTIEDIT_H2P(hObj);
000f76  4638              MOV      r0,r7
000f78  f7fffffe          BL       GUI_ALLOC_h2p
000f7c  4604              MOV      r4,r0
;;;1300     switch (Key) {
000f7e  2e13              CMP      r6,#0x13
000f80  d01d              BEQ      |L1.4030|
000f82  dc0c              BGT      |L1.3998|
000f84  2e10              CMP      r6,#0x10
000f86  d029              BEQ      |L1.4060|
000f88  dc04              BGT      |L1.3988|
000f8a  2e08              CMP      r6,#8
000f8c  d03b              BEQ      |L1.4102|
000f8e  2e0d              CMP      r6,#0xd
000f90  d173              BNE      |L1.4218|
000f92  e068              B        |L1.4198|
                  |L1.3988|
000f94  2e11              CMP      r6,#0x11
000f96  d00c              BEQ      |L1.4018|
000f98  2e12              CMP      r6,#0x12
000f9a  d16e              BNE      |L1.4218|
000f9c  e015              B        |L1.4042|
                  |L1.3998|
000f9e  f1a60017          SUB      r0,r6,#0x17
000fa2  2808              CMP      r0,#8
000fa4  d269              BCS      |L1.4218|
000fa6  e8dff000          TBB      [pc,r0]
000faa  2822              DCB      0x28,0x22
000fac  8282a082          DCB      0x82,0x82,0xa0,0x82
000fb0  4e43              DCB      0x4e,0x43
                  |L1.4018|
;;;1301     case GUI_KEY_UP:
;;;1302       _MoveCursorUp(hObj, pObj);
000fb2  4621              MOV      r1,r4
000fb4  4638              MOV      r0,r7
000fb6  f7fffffe          BL       _MoveCursorUp
;;;1303       r = 1;               /* Key has been consumed */
000fba  2501              MOVS     r5,#1
;;;1304       break;
000fbc  e095              B        |L1.4330|
                  |L1.4030|
;;;1305     case GUI_KEY_DOWN:
;;;1306       _MoveCursorDown(hObj, pObj);
000fbe  4621              MOV      r1,r4
000fc0  4638              MOV      r0,r7
000fc2  f7fffffe          BL       _MoveCursorDown
;;;1307       r = 1;               /* Key has been consumed */
000fc6  2501              MOVS     r5,#1
;;;1308       break;
000fc8  e08f              B        |L1.4330|
                  |L1.4042|
;;;1309     case GUI_KEY_RIGHT:
;;;1310       _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
000fca  f8b40048          LDRH     r0,[r4,#0x48]
000fce  4621              MOV      r1,r4
000fd0  1c42              ADDS     r2,r0,#1
000fd2  4638              MOV      r0,r7
000fd4  f7fffffe          BL       _SetCursorPos
;;;1311       r = 1;               /* Key has been consumed */
000fd8  2501              MOVS     r5,#1
;;;1312       break;
000fda  e086              B        |L1.4330|
                  |L1.4060|
;;;1313     case GUI_KEY_LEFT:
;;;1314       _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
000fdc  f8b40048          LDRH     r0,[r4,#0x48]
000fe0  4621              MOV      r1,r4
000fe2  1e42              SUBS     r2,r0,#1
000fe4  4638              MOV      r0,r7
000fe6  f7fffffe          BL       _SetCursorPos
;;;1315       r = 1;               /* Key has been consumed */
000fea  2501              MOVS     r5,#1
;;;1316       break;
000fec  e07d              B        |L1.4330|
;;;1317     case GUI_KEY_END:
;;;1318       _MoveCursor2LineEnd(hObj, pObj);
000fee  4621              MOV      r1,r4
000ff0  4638              MOV      r0,r7
000ff2  f7fffffe          BL       _MoveCursor2LineEnd
;;;1319       r = 1;               /* Key has been consumed */
000ff6  2501              MOVS     r5,#1
;;;1320       break;
000ff8  e077              B        |L1.4330|
;;;1321     case GUI_KEY_HOME:
;;;1322       _MoveCursor2LinePos1(hObj, pObj);
000ffa  4621              MOV      r1,r4
000ffc  4638              MOV      r0,r7
000ffe  f7fffffe          BL       _MoveCursor2LinePos1
;;;1323       r = 1;               /* Key has been consumed */
001002  2501              MOVS     r5,#1
;;;1324       break;
001004  e071              B        |L1.4330|
                  |L1.4102|
;;;1325     case GUI_KEY_BACKSPACE:
;;;1326       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
001006  f8940078          LDRB     r0,[r4,#0x78]
00100a  f0100f01          TST      r0,#1
00100e  d16c              BNE      |L1.4330|
;;;1327         if (pObj->CursorPosChar > pObj->NumCharsPrompt) {
001010  f8b40048          LDRH     r0,[r4,#0x48]
001014  8fe1              LDRH     r1,[r4,#0x3e]
001016  4288              CMP      r0,r1
001018  d908              BLS      |L1.4140|
;;;1328           _SetCursorPos(hObj, pObj, pObj->CursorPosChar - 1);
00101a  1e42              SUBS     r2,r0,#1
00101c  4621              MOV      r1,r4
00101e  4638              MOV      r0,r7
001020  f7fffffe          BL       _SetCursorPos
;;;1329           _DeleteChar(hObj, pObj);
001024  4621              MOV      r1,r4
001026  4638              MOV      r0,r7
001028  f7fffffe          BL       _DeleteChar
                  |L1.4140|
;;;1330         }
;;;1331         r = 1;               /* Key has been consumed */
00102c  2501              MOVS     r5,#1
00102e  e05c              B        |L1.4330|
;;;1332       }
;;;1333       break;
;;;1334     case GUI_KEY_DELETE:
;;;1335       if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
001030  f8940078          LDRB     r0,[r4,#0x78]
001034  f0100f01          TST      r0,#1
001038  d157              BNE      |L1.4330|
;;;1336         _DeleteChar(hObj, pObj);
00103a  4621              MOV      r1,r4
00103c  4638              MOV      r0,r7
00103e  f7fffffe          BL       _DeleteChar
;;;1337         r = 1;               /* Key has been consumed */
001042  2501              MOVS     r5,#1
001044  e051              B        |L1.4330|
;;;1338       }
;;;1339       break;
;;;1340     case GUI_KEY_INSERT:
;;;1341       if (!(pObj->Flags & MULTIEDIT_CF_INSERT)) {
001046  f8940078          LDRB     r0,[r4,#0x78]
00104a  f0100f04          TST      r0,#4
00104e  d005              BEQ      |L1.4188|
;;;1342         pObj->Flags |= MULTIEDIT_CF_INSERT;
;;;1343       } else {
;;;1344         pObj->Flags &= ~MULTIEDIT_CF_INSERT;
001050  f0200004          BIC      r0,r0,#4
001054  f8840078          STRB     r0,[r4,#0x78]
                  |L1.4184|
;;;1345       }
;;;1346       r = 1;               /* Key has been consumed */
001058  2501              MOVS     r5,#1
;;;1347       break;
00105a  e046              B        |L1.4330|
                  |L1.4188|
00105c  f0400004          ORR      r0,r0,#4              ;1342
001060  f8840078          STRB     r0,[r4,#0x78]         ;1342
001064  e7f8              B        |L1.4184|
                  |L1.4198|
;;;1348     case GUI_KEY_ENTER:
;;;1349       if (pObj->Flags & MULTIEDIT_SF_READONLY) {
001066  f8940078          LDRB     r0,[r4,#0x78]
00106a  f0100f01          TST      r0,#1
00106e  d005              BEQ      |L1.4220|
;;;1350         _MoveCursor2NextLine(hObj, pObj);
001070  4621              MOV      r1,r4
001072  4638              MOV      r0,r7
001074  f7fffffe          BL       _MoveCursor2NextLine
001078  e017              B        |L1.4266|
                  |L1.4218|
00107a  e018              B        |L1.4270|
                  |L1.4220|
;;;1351       } else {
;;;1352         if (_InsertChar(hObj, pObj, (U8)('\n'))) {
00107c  220a              MOVS     r2,#0xa
00107e  4621              MOV      r1,r4
001080  4638              MOV      r0,r7
001082  f7fffffe          BL       _InsertChar
001086  b180              CBZ      r0,|L1.4266|
;;;1353           if (pObj->Flags & MULTIEDIT_SF_PASSWORD) {
001088  f8940078          LDRB     r0,[r4,#0x78]
00108c  f0100f20          TST      r0,#0x20
001090  d007              BEQ      |L1.4258|
;;;1354             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
001092  f8b40048          LDRH     r0,[r4,#0x48]
001096  4621              MOV      r1,r4
001098  1c42              ADDS     r2,r0,#1
00109a  4638              MOV      r0,r7
00109c  f7fffffe          BL       _SetCursorPos
0010a0  e003              B        |L1.4266|
                  |L1.4258|
;;;1355           } else {
;;;1356             _MoveCursor2NextLine(hObj, pObj);
0010a2  4621              MOV      r1,r4
0010a4  4638              MOV      r0,r7
0010a6  f7fffffe          BL       _MoveCursor2NextLine
                  |L1.4266|
;;;1357           }
;;;1358         }
;;;1359       }
;;;1360       r = 1;               /* Key has been consumed */
0010aa  2501              MOVS     r5,#1
;;;1361       break;
0010ac  e01d              B        |L1.4330|
                  |L1.4270|
;;;1362     case GUI_KEY_ESCAPE:
;;;1363       break;
;;;1364     default:
;;;1365       if (!(pObj->Flags & MULTIEDIT_SF_READONLY) && (Key >= 0x20)) {
0010ae  f8940078          LDRB     r0,[r4,#0x78]
0010b2  f0100f01          TST      r0,#1
0010b6  d118              BNE      |L1.4330|
0010b8  2e20              CMP      r6,#0x20
0010ba  d316              BCC      |L1.4330|
;;;1366         if (_IsOverwriteAtThisChar(hObj, pObj)) {
0010bc  4621              MOV      r1,r4
0010be  4638              MOV      r0,r7
0010c0  f7fffffe          BL       _IsOverwriteAtThisChar
0010c4  b118              CBZ      r0,|L1.4302|
;;;1367           _DeleteChar(hObj, pObj);
0010c6  4621              MOV      r1,r4
0010c8  4638              MOV      r0,r7
0010ca  f7fffffe          BL       _DeleteChar
                  |L1.4302|
;;;1368         }
;;;1369         if (_InsertChar(hObj, pObj, Key)) {
0010ce  4632              MOV      r2,r6
0010d0  4621              MOV      r1,r4
0010d2  4638              MOV      r0,r7
0010d4  f7fffffe          BL       _InsertChar
0010d8  b130              CBZ      r0,|L1.4328|
;;;1370           _SetCursorPos(hObj, pObj, pObj->CursorPosChar + 1);
0010da  f8b40048          LDRH     r0,[r4,#0x48]
0010de  4621              MOV      r1,r4
0010e0  1c42              ADDS     r2,r0,#1
0010e2  4638              MOV      r0,r7
0010e4  f7fffffe          BL       _SetCursorPos
                  |L1.4328|
;;;1371         }
;;;1372         r = 1;               /* Key has been consumed */
0010e8  2501              MOVS     r5,#1
                  |L1.4330|
;;;1373       }
;;;1374     }
;;;1375     _InvalidateTextArea(hObj);
0010ea  4638              MOV      r0,r7
0010ec  f7fffffe          BL       _InvalidateTextArea
;;;1376     return r;
0010f0  4628              MOV      r0,r5
;;;1377   }
0010f2  e8bd81f0          POP      {r4-r8,pc}
;;;1378   
                          ENDP

                  _SetText PROC
;;;1382   */
;;;1383   static void _SetText(MULTIEDIT_HANDLE hObj, MULTIEDIT_OBJ * pObj, const char * pNew) {
0010f6  e92d47f0          PUSH     {r4-r10,lr}
0010fa  4681              MOV      r9,r0
0010fc  460c              MOV      r4,r1
0010fe  4615              MOV      r5,r2
;;;1384     int NumCharsNew, NumCharsOld, NumBytesNew, NumBytesOld;
;;;1385     char * pText;
;;;1386     NumCharsNew = NumCharsOld = NumBytesNew = NumBytesOld = 0;
001100  2000              MOVS     r0,#0
001102  4682              MOV      r10,r0
001104  4680              MOV      r8,r0
001106  4607              MOV      r7,r0
001108  4606              MOV      r6,r0
;;;1387     if (pObj->hText) {
00110a  f9b40038          LDRSH    r0,[r4,#0x38]
00110e  b188              CBZ      r0,|L1.4404|
;;;1388       pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
001110  f7fffffe          BL       GUI_ALLOC_h2p
001114  4607              MOV      r7,r0
;;;1389       pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
001116  8fe1              LDRH     r1,[r4,#0x3e]
001118  4638              MOV      r0,r7
00111a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00111e  eb000a07          ADD      r10,r0,r7
;;;1390       NumCharsOld = GUI__GetNumChars(pText);
001122  4650              MOV      r0,r10
001124  f7fffffe          BL       GUI__GetNumChars
001128  4607              MOV      r7,r0
;;;1391       NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
00112a  4639              MOV      r1,r7
00112c  4650              MOV      r0,r10
00112e  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001132  4682              MOV      r10,r0
                  |L1.4404|
;;;1392     }
;;;1393     if (pNew) {
001134  b145              CBZ      r5,|L1.4424|
;;;1394       NumCharsNew = GUI__GetNumChars(pNew);
001136  4628              MOV      r0,r5
001138  f7fffffe          BL       GUI__GetNumChars
00113c  4606              MOV      r6,r0
;;;1395       NumBytesNew = GUI_UC__NumChars2NumBytes(pNew, NumCharsNew);
00113e  4631              MOV      r1,r6
001140  4628              MOV      r0,r5
001142  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001146  4680              MOV      r8,r0
                  |L1.4424|
;;;1396     }
;;;1397     if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
001148  1bf1              SUBS     r1,r6,r7
00114a  4620              MOV      r0,r4
00114c  f7fffffe          BL       _IsCharsAvailable
001150  2800              CMP      r0,#0
001152  d02d              BEQ      |L1.4528|
;;;1398       if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
001154  eba8010a          SUB      r1,r8,r10
001158  4620              MOV      r0,r4
00115a  f7fffffe          BL       _IsSpaceInBuffer
00115e  2800              CMP      r0,#0
001160  d026              BEQ      |L1.4528|
;;;1399         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
001162  f9b40038          LDRSH    r0,[r4,#0x38]
001166  f7fffffe          BL       GUI_ALLOC_h2p
00116a  4606              MOV      r6,r0
;;;1400         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
00116c  8fe1              LDRH     r1,[r4,#0x3e]
00116e  4630              MOV      r0,r6
001170  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001174  4430              ADD      r0,r0,r6
;;;1401         if (pNew) {
001176  b11d              CBZ      r5,|L1.4480|
;;;1402           strcpy(pText, pNew);
001178  4629              MOV      r1,r5
00117a  f7fffffe          BL       strcpy
00117e  e001              B        |L1.4484|
                  |L1.4480|
;;;1403         } else {
;;;1404           *pText = 0;
001180  2100              MOVS     r1,#0
001182  7001              STRB     r1,[r0,#0]
                  |L1.4484|
;;;1405         }
;;;1406         _SetCursorPos(hObj, pObj, pObj->NumCharsPrompt);
001184  8fe2              LDRH     r2,[r4,#0x3e]
001186  4621              MOV      r1,r4
001188  4648              MOV      r0,r9
00118a  f7fffffe          BL       _SetCursorPos
;;;1407         _InvalidateNumChars(pObj);
00118e  4620              MOV      r0,r4
001190  f7fffffe          BL       _InvalidateNumChars
;;;1408         _InvalidateNumLines(pObj);
001194  4620              MOV      r0,r4
001196  f7fffffe          BL       _InvalidateNumLines
;;;1409         _InvalidateTextSizeX(pObj);
00119a  4620              MOV      r0,r4
00119c  f7fffffe          BL       _InvalidateTextSizeX
;;;1410         _InvalidateTextArea(hObj);
0011a0  4648              MOV      r0,r9
0011a2  f7fffffe          BL       _InvalidateTextArea
;;;1411         _InvalidateCursorXY(pObj); /* Invalidate X/Y position */
0011a6  4620              MOV      r0,r4
0011a8  e8bd47f0          POP      {r4-r10,lr}
0011ac  f7ffbffe          B.W      _InvalidateCursorXY
                  |L1.4528|
;;;1412       }
;;;1413     }
;;;1414   }
0011b0  e8bd87f0          POP      {r4-r10,pc}
;;;1415   
                          ENDP

                  MULTIEDIT_Callback PROC
;;;1448   */
;;;1449   void MULTIEDIT_Callback (WM_MESSAGE *pMsg) {
0011b4  b570              PUSH     {r4-r6,lr}
0011b6  b084              SUB      sp,sp,#0x10
0011b8  4604              MOV      r4,r0
;;;1450     MULTIEDIT_HANDLE hObj;
;;;1451     MULTIEDIT_OBJ* pObj;
;;;1452     WM_SCROLL_STATE ScrollState;
;;;1453     hObj = pMsg->hWin;
0011ba  f9b46004          LDRSH    r6,[r4,#4]
;;;1454     /* Let widget handle the standard messages */
;;;1455     if (WIDGET_HandleActive(hObj, pMsg) == 0) {
0011be  4621              MOV      r1,r4
0011c0  4630              MOV      r0,r6
0011c2  f7fffffe          BL       WIDGET_HandleActive
0011c6  2800              CMP      r0,#0
0011c8  d06d              BEQ      |L1.4774|
;;;1456       return;
;;;1457     }
;;;1458     pObj = (MULTIEDIT_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
0011ca  4630              MOV      r0,r6
0011cc  f7fffffe          BL       GUI_ALLOC_h2p
0011d0  4605              MOV      r5,r0
;;;1459     switch (pMsg->MsgId) {
0011d2  6820              LDR      r0,[r4,#0]
0011d4  280e              CMP      r0,#0xe
0011d6  d074              BEQ      |L1.4802|
0011d8  dc06              BGT      |L1.4584|
0011da  2805              CMP      r0,#5
0011dc  d01b              BEQ      |L1.4630|
0011de  280b              CMP      r0,#0xb
0011e0  d069              BEQ      |L1.4790|
0011e2  280c              CMP      r0,#0xc
0011e4  d17e              BNE      |L1.4836|
0011e6  e060              B        |L1.4778|
                  |L1.4584|
0011e8  280f              CMP      r0,#0xf
0011ea  d058              BEQ      |L1.4766|
0011ec  2825              CMP      r0,#0x25
0011ee  d002              BEQ      |L1.4598|
0011f0  2826              CMP      r0,#0x26
0011f2  d177              BNE      |L1.4836|
0011f4  e01f              B        |L1.4662|
                  |L1.4598|
;;;1460     case WM_NOTIFY_CLIENTCHANGE:
;;;1461       _InvalidateCursorXY(pObj);
0011f6  4628              MOV      r0,r5
0011f8  f7fffffe          BL       _InvalidateCursorXY
;;;1462       _InvalidateNumLines(pObj);
0011fc  4628              MOV      r0,r5
0011fe  f7fffffe          BL       _InvalidateNumLines
;;;1463       _InvalidateTextSizeX(pObj);
001202  4628              MOV      r0,r5
001204  f7fffffe          BL       _InvalidateTextSizeX
;;;1464       _ClearCache(pObj);
001208  4628              MOV      r0,r5
00120a  f7fffffe          BL       _ClearCache
;;;1465       _CalcScrollParas(hObj);
00120e  4630              MOV      r0,r6
001210  f7fffffe          BL       _CalcScrollParas
;;;1466       break;
001214  e066              B        |L1.4836|
                  |L1.4630|
;;;1467     case WM_SIZE:
;;;1468       _InvalidateCursorXY(pObj);
001216  4628              MOV      r0,r5
001218  f7fffffe          BL       _InvalidateCursorXY
;;;1469       _InvalidateNumLines(pObj);
00121c  4628              MOV      r0,r5
00121e  f7fffffe          BL       _InvalidateNumLines
;;;1470       _InvalidateTextSizeX(pObj);
001222  4628              MOV      r0,r5
001224  f7fffffe          BL       _InvalidateTextSizeX
;;;1471       _ClearCache(pObj);
001228  4628              MOV      r0,r5
00122a  f7fffffe          BL       _ClearCache
;;;1472       _Invalidate(hObj);
00122e  4630              MOV      r0,r6
001230  f7fffffe          BL       _Invalidate
;;;1473       break;
001234  e056              B        |L1.4836|
                  |L1.4662|
;;;1474     case WM_NOTIFY_PARENT:
;;;1475       switch (pMsg->Data.v) {
001236  68a0              LDR      r0,[r4,#8]
001238  2805              CMP      r0,#5
00123a  d002              BEQ      |L1.4674|
00123c  2806              CMP      r0,#6
00123e  d151              BNE      |L1.4836|
001240  e029              B        |L1.4758|
                  |L1.4674|
;;;1476       case WM_NOTIFICATION_VALUE_CHANGED:
;;;1477         if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
001242  4630              MOV      r0,r6
001244  f7fffffe          BL       WM_GetScrollbarV
001248  4601              MOV      r1,r0
00124a  f9b40006          LDRSH    r0,[r4,#6]
00124e  4281              CMP      r1,r0
001250  d10c              BNE      |L1.4716|
;;;1478           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
001252  a901              ADD      r1,sp,#4
001254  f7fffffe          BL       WM_GetScrollState
;;;1479           pObj->ScrollStateV.v = ScrollState.v;
001258  9802              LDR      r0,[sp,#8]
00125a  6628              STR      r0,[r5,#0x60]
;;;1480           WM_InvalidateWindow(hObj);
00125c  4630              MOV      r0,r6
00125e  f7fffffe          BL       WM_InvalidateWindow
;;;1481           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
001262  210a              MOVS     r1,#0xa
001264  4630              MOV      r0,r6
001266  f7fffffe          BL       WM_NotifyParent
00126a  e03b              B        |L1.4836|
                  |L1.4716|
;;;1482         } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
00126c  4630              MOV      r0,r6
00126e  f7fffffe          BL       WM_GetScrollbarH
001272  4601              MOV      r1,r0
001274  f9b40006          LDRSH    r0,[r4,#6]
001278  4281              CMP      r1,r0
00127a  d133              BNE      |L1.4836|
;;;1483           WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
00127c  a901              ADD      r1,sp,#4
00127e  f7fffffe          BL       WM_GetScrollState
;;;1484           pObj->ScrollStateH.v = ScrollState.v;
001282  9802              LDR      r0,[sp,#8]
001284  66e8              STR      r0,[r5,#0x6c]
;;;1485           WM_InvalidateWindow(hObj);
001286  4630              MOV      r0,r6
001288  f7fffffe          BL       WM_InvalidateWindow
;;;1486           WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
00128c  210a              MOVS     r1,#0xa
00128e  4630              MOV      r0,r6
001290  f7fffffe          BL       WM_NotifyParent
001294  e026              B        |L1.4836|
                  |L1.4758|
;;;1487         }
;;;1488         break;
;;;1489       case WM_NOTIFICATION_SCROLLBAR_ADDED:
;;;1490         #if WIDGET_USE_PARENT_EFFECT
;;;1491           WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
;;;1492         #endif
;;;1493         _SetScrollState(hObj);
001296  4630              MOV      r0,r6
001298  f7fffffe          BL       _SetScrollState
;;;1494         break;
00129c  e022              B        |L1.4836|
                  |L1.4766|
;;;1495       }
;;;1496       break;
;;;1497     case WM_PAINT:
;;;1498       _MULTIEDIT_Paint(hObj, pObj);
00129e  4629              MOV      r1,r5
0012a0  4630              MOV      r0,r6
0012a2  f7fffffe          BL       _MULTIEDIT_Paint
                  |L1.4774|
;;;1499       return;
;;;1500     case WM_TOUCH:
;;;1501       _OnTouch(hObj, pObj, pMsg);
;;;1502       break;
;;;1503     case WM_DELETE:
;;;1504       GUI_ALLOC_FreePtr(&pObj->hText);
;;;1505       break;
;;;1506     case WM_KEY:
;;;1507       if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt >0) {
;;;1508         int Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
;;;1509         /* Leave code for test purpose
;;;1510         switch (Key) {
;;;1511         case '1': Key = GUI_KEY_LEFT;  break;
;;;1512         case '2': Key = GUI_KEY_UP;    break;
;;;1513         case '3': Key = GUI_KEY_RIGHT; break;
;;;1514         case '4': Key = GUI_KEY_DOWN;  break;
;;;1515         }
;;;1516         */
;;;1517         if (_AddKey(hObj, Key)) {
;;;1518           return;
;;;1519         }
;;;1520       } else {
;;;1521         if (!(pObj->Flags & MULTIEDIT_SF_READONLY)) {
;;;1522           return;                /* Key release is consumed (not sent to parent) */
;;;1523         }
;;;1524       }
;;;1525     }
;;;1526     WM_DefaultProc(pMsg);
;;;1527   }
0012a6  b004              ADD      sp,sp,#0x10
0012a8  bd70              POP      {r4-r6,pc}
                  |L1.4778|
0012aa  4622              MOV      r2,r4                 ;1501
0012ac  4629              MOV      r1,r5                 ;1501
0012ae  4630              MOV      r0,r6                 ;1501
0012b0  f7fffffe          BL       _OnTouch
0012b4  e016              B        |L1.4836|
                  |L1.4790|
0012b6  f1050038          ADD      r0,r5,#0x38           ;1504
0012ba  f7fffffe          BL       GUI_ALLOC_FreePtr
0012be  e011              B        |L1.4836|
0012c0  e7ff              B        |L1.4802|
                  |L1.4802|
0012c2  68a0              LDR      r0,[r4,#8]            ;1507
0012c4  6841              LDR      r1,[r0,#4]            ;1507
0012c6  2900              CMP      r1,#0                 ;1507
0012c8  dd07              BLE      |L1.4826|
0012ca  6800              LDR      r0,[r0,#0]            ;1508
0012cc  b281              UXTH     r1,r0                 ;1517
0012ce  4630              MOV      r0,r6                 ;1517
0012d0  f7fffffe          BL       _AddKey
0012d4  2800              CMP      r0,#0                 ;1517
0012d6  d1e6              BNE      |L1.4774|
0012d8  e004              B        |L1.4836|
                  |L1.4826|
0012da  f8950078          LDRB     r0,[r5,#0x78]         ;1521
0012de  f0100f01          TST      r0,#1                 ;1521
0012e2  d0e0              BEQ      |L1.4774|
                  |L1.4836|
0012e4  4620              MOV      r0,r4                 ;1526
0012e6  f7fffffe          BL       WM_DefaultProc
0012ea  b004              ADD      sp,sp,#0x10
0012ec  bd70              POP      {r4-r6,pc}
;;;1528   
                          ENDP

                  MULTIEDIT_SetText PROC
;;;1674   */
;;;1675   void MULTIEDIT_SetText(MULTIEDIT_HANDLE hObj, const char* pNew) {
0012ee  b570              PUSH     {r4-r6,lr}
0012f0  4604              MOV      r4,r0
0012f2  460d              MOV      r5,r1
;;;1676     if (hObj) {
0012f4  2c00              CMP      r4,#0
0012f6  d00d              BEQ      |L1.4884|
;;;1677       MULTIEDIT_OBJ * pObj;
;;;1678       WM_LOCK();
0012f8  f7fffffe          BL       GUI_Lock
;;;1679       pObj = MULTIEDIT_H2P(hObj);
0012fc  4620              MOV      r0,r4
0012fe  f7fffffe          BL       GUI_ALLOC_h2p
;;;1680       _SetText(hObj, pObj, pNew);
001302  4601              MOV      r1,r0
001304  462a              MOV      r2,r5
001306  4620              MOV      r0,r4
001308  f7fffffe          BL       _SetText
;;;1681       WM_UNLOCK();
00130c  e8bd4070          POP      {r4-r6,lr}
001310  f7ffbffe          B.W      GUI_Unlock
                  |L1.4884|
;;;1682     }
;;;1683   }
001314  bd70              POP      {r4-r6,pc}
;;;1684   
                          ENDP

                  MULTIEDIT_CreateEx PROC
;;;1542   */
;;;1543   MULTIEDIT_HANDLE MULTIEDIT_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags,
001316  e92d4fff          PUSH     {r0-r11,lr}
;;;1544                                       int Id, int BufferSize, const char* pText)
;;;1545   {
00131a  b085              SUB      sp,sp,#0x14
00131c  4681              MOV      r9,r0
00131e  468a              MOV      r10,r1
001320  4614              MOV      r4,r2
001322  461e              MOV      r6,r3
001324  f8ddb048          LDR      r11,[sp,#0x48]
001328  f8dd804c          LDR      r8,[sp,#0x4c]
00132c  9f14              LDR      r7,[sp,#0x50]
00132e  9d16              LDR      r5,[sp,#0x58]
;;;1546     MULTIEDIT_HANDLE hObj;
;;;1547     /* Create the window */
;;;1548     WM_LOCK();
001330  f7fffffe          BL       GUI_Lock
;;;1549     if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
001334  ea440006          ORR      r0,r4,r6
001338  ea400009          ORR      r0,r0,r9
00133c  ea50000a          ORRS     r0,r0,r10
001340  d10f              BNE      |L1.4962|
;;;1550       GUI_RECT Rect;
;;;1551       WM_GetClientRectEx(hParent, &Rect);
001342  a902              ADD      r1,sp,#8
001344  4658              MOV      r0,r11
001346  f7fffffe          BL       WM_GetClientRectEx
;;;1552       xsize = Rect.x1 - Rect.x0 + 1;
00134a  f9bd000c          LDRSH    r0,[sp,#0xc]
00134e  f9bd1008          LDRSH    r1,[sp,#8]
001352  1a40              SUBS     r0,r0,r1
001354  1c44              ADDS     r4,r0,#1
;;;1553       ysize = Rect.y1 - Rect.y0 + 1;
001356  f9bd000e          LDRSH    r0,[sp,#0xe]
00135a  f9bd100a          LDRSH    r1,[sp,#0xa]
00135e  1a40              SUBS     r0,r0,r1
001360  1c46              ADDS     r6,r0,#1
                  |L1.4962|
;;;1554     }
;;;1555     hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &MULTIEDIT_Callback,
001362  2360              MOVS     r3,#0x60
001364  f2af12b3          ADR      r2,MULTIEDIT_Callback + 1
001368  fa1ff188          UXTH     r1,r8
00136c  9303              STR      r3,[sp,#0xc]
00136e  9202              STR      r2,[sp,#8]
001370  9101              STR      r1,[sp,#4]
001372  f8cdb000          STR      r11,[sp,#0]
001376  4633              MOV      r3,r6
001378  4622              MOV      r2,r4
00137a  4651              MOV      r1,r10
00137c  4648              MOV      r0,r9
00137e  f7fffffe          BL       WM_CreateWindowAsChild
001382  4606              MOV      r6,r0
;;;1556                                   sizeof(MULTIEDIT_OBJ) - sizeof(WM_Obj));
;;;1557     if (hObj) {
001384  b3ae              CBZ      r6,|L1.5106|
;;;1558       int i;
;;;1559       MULTIEDIT_OBJ * pObj;
;;;1560       pObj = (MULTIEDIT_OBJ *)GUI_ALLOC_h2p(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
001386  4630              MOV      r0,r6
001388  f7fffffe          BL       GUI_ALLOC_h2p
00138c  4604              MOV      r4,r0
;;;1561       /* init widget specific variables */
;;;1562       WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
00138e  2210              MOVS     r2,#0x10
001390  4620              MOV      r0,r4
001392  9915              LDR      r1,[sp,#0x54]
001394  f7fffffe          BL       WIDGET__Init
;;;1563       /* init member variables */
;;;1564       MULTIEDIT_INIT_ID(pObj);
;;;1565       for (i = 0; i < NUM_DISP_MODES; i++) {
001398  2000              MOVS     r0,#0
;;;1566         pObj->aBkColor[i]  = _aDefaultBkColor[i];
00139a  4bff              LDR      r3,|L1.6040|
;;;1567         pObj->aColor[i]    = _aDefaultColor[i];
00139c  f1030208          ADD      r2,r3,#8
                  |L1.5024|
0013a0  eb040180          ADD      r1,r4,r0,LSL #2       ;1566
0013a4  f853c020          LDR      r12,[r3,r0,LSL #2]    ;1566
0013a8  f8c1c028          STR      r12,[r1,#0x28]        ;1566
0013ac  f852c020          LDR      r12,[r2,r0,LSL #2]
0013b0  f8c1c030          STR      r12,[r1,#0x30]
0013b4  1c40              ADDS     r0,r0,#1              ;1565
0013b6  2802              CMP      r0,#2                 ;1565
0013b8  dbf2              BLT      |L1.5024|
;;;1568       }
;;;1569       pObj->pFont          = _pDefaultFont;
0013ba  48f8              LDR      r0,|L1.6044|
0013bc  6800              LDR      r0,[r0,#0]  ; _pDefaultFont
0013be  6760              STR      r0,[r4,#0x74]
;;;1570       pObj->Flags          = ExFlags;
0013c0  f8847078          STRB     r7,[r4,#0x78]
;;;1571       pObj->CursorPosChar  = 0;
0013c4  2000              MOVS     r0,#0
0013c6  f8a40048          STRH     r0,[r4,#0x48]
;;;1572       pObj->CursorPosByte  = 0;
0013ca  f8a4004a          STRH     r0,[r4,#0x4a]
;;;1573       pObj->HBorder        = 1;
0013ce  2101              MOVS     r1,#1
0013d0  f884107b          STRB     r1,[r4,#0x7b]
;;;1574       pObj->MaxNumChars    = 0;
0013d4  8760              STRH     r0,[r4,#0x3a]
;;;1575       pObj->NumCharsPrompt = 0;
0013d6  87e0              STRH     r0,[r4,#0x3e]
;;;1576       pObj->BufferSize     = 0;
0013d8  f8a40044          STRH     r0,[r4,#0x44]
;;;1577       pObj->hText          = 0;
0013dc  8720              STRH     r0,[r4,#0x38]
;;;1578       if (BufferSize > 0) {
0013de  2d00              CMP      r5,#0
0013e0  dd0c              BLE      |L1.5116|
;;;1579         WM_HWIN hText;
;;;1580         if ((hText = GUI_ALLOC_AllocZero(BufferSize)) != 0) {
0013e2  b228              SXTH     r0,r5
0013e4  f7fffffe          BL       GUI_ALLOC_AllocZero
0013e8  b120              CBZ      r0,|L1.5108|
;;;1581           pObj->BufferSize = BufferSize;
0013ea  f8a45044          STRH     r5,[r4,#0x44]
;;;1582           pObj->hText      = hText;
0013ee  8720              STRH     r0,[r4,#0x38]
0013f0  e004              B        |L1.5116|
                  |L1.5106|
0013f2  e00a              B        |L1.5130|
                  |L1.5108|
;;;1583         } else {
;;;1584           GUI_DEBUG_ERROROUT("MULTIEDIT_CreateEx failed to alloc buffer");
;;;1585           WM_DeleteWindow(hObj);
0013f4  4630              MOV      r0,r6
0013f6  f7fffffe          BL       WM_DeleteWindow
;;;1586           hObj = 0;
0013fa  2600              MOVS     r6,#0
                  |L1.5116|
;;;1587         }
;;;1588       }
;;;1589       MULTIEDIT_SetText(hObj, pText);
0013fc  4630              MOV      r0,r6
0013fe  9917              LDR      r1,[sp,#0x5c]
001400  f7fffffe          BL       MULTIEDIT_SetText
;;;1590       _ManageScrollers(hObj);
001404  4630              MOV      r0,r6
001406  f7fffffe          BL       _ManageScrollers
                  |L1.5130|
;;;1591     } else {
;;;1592       GUI_DEBUG_ERROROUT_IF(hObj==0, "MULTIEDIT_CreateEx failed")
;;;1593     }
;;;1594     WM_UNLOCK();
00140a  f7fffffe          BL       GUI_Unlock
;;;1595     return hObj;
;;;1596   }
00140e  b009              ADD      sp,sp,#0x24
001410  4630              MOV      r0,r6                 ;1595
001412  e8bd8ff0          POP      {r4-r11,pc}
;;;1597   
                          ENDP

                  MULTIEDIT_AddKey PROC
;;;1607   */
;;;1608   int MULTIEDIT_AddKey(MULTIEDIT_HANDLE hObj, U16 Key) {
001416  b570              PUSH     {r4-r6,lr}
001418  4605              MOV      r5,r0
00141a  460e              MOV      r6,r1
;;;1609     int r = 0;
00141c  2400              MOVS     r4,#0
;;;1610     if (hObj) {
00141e  b145              CBZ      r5,|L1.5170|
;;;1611       WM_LOCK();
001420  f7fffffe          BL       GUI_Lock
;;;1612       r = _AddKey(hObj, Key);
001424  4631              MOV      r1,r6
001426  4628              MOV      r0,r5
001428  f7fffffe          BL       _AddKey
00142c  4604              MOV      r4,r0
;;;1613       WM_UNLOCK();
00142e  f7fffffe          BL       GUI_Unlock
                  |L1.5170|
;;;1614     }
;;;1615     return r;
001432  4620              MOV      r0,r4
;;;1616   }
001434  bd70              POP      {r4-r6,pc}
;;;1617   
                          ENDP

                  MULTIEDIT_AddText PROC
;;;1621   */
;;;1622   int MULTIEDIT_AddText(MULTIEDIT_HANDLE hObj, const char * s) {
001436  e92d47f0          PUSH     {r4-r10,lr}
00143a  4681              MOV      r9,r0
00143c  4688              MOV      r8,r1
;;;1623     int Result;
;;;1624     Result = 1;
00143e  2601              MOVS     r6,#1
;;;1625     if (hObj && s) {
001440  f1b90f00          CMP      r9,#0
001444  d06b              BEQ      |L1.5406|
001446  f1b80f00          CMP      r8,#0
00144a  d068              BEQ      |L1.5406|
;;;1626       MULTIEDIT_OBJ * pObj;
;;;1627       WM_LOCK();
00144c  f7fffffe          BL       GUI_Lock
;;;1628       pObj = MULTIEDIT_H2P(hObj);
001450  4648              MOV      r0,r9
001452  f7fffffe          BL       GUI_ALLOC_h2p
001456  4604              MOV      r4,r0
;;;1629       if (!pObj->hText) {
001458  f9b40038          LDRSH    r0,[r4,#0x38]
00145c  b3f0              CBZ      r0,|L1.5340|
;;;1630         _SetText(hObj, pObj, s);
;;;1631       } else {
;;;1632         char * pText;
;;;1633         int NumCharsNew, NumCharsOld, NumBytesNew, NumBytesOld;
;;;1634         pText = (char *)GUI_ALLOC_h2p(pObj->hText);
00145e  f7fffffe          BL       GUI_ALLOC_h2p
001462  4605              MOV      r5,r0
;;;1635         NumCharsOld = GUI__GetNumChars(pText);
001464  4628              MOV      r0,r5
001466  f7fffffe          BL       GUI__GetNumChars
00146a  4682              MOV      r10,r0
;;;1636         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
00146c  4651              MOV      r1,r10
00146e  4628              MOV      r0,r5
001470  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001474  4607              MOV      r7,r0
;;;1637         NumCharsNew = GUI__GetNumChars(s);
001476  4640              MOV      r0,r8
001478  f7fffffe          BL       GUI__GetNumChars
00147c  4605              MOV      r5,r0
;;;1638         if (pObj->MaxNumChars > 0) {
00147e  8f60              LDRH     r0,[r4,#0x3a]
001480  b128              CBZ      r0,|L1.5262|
;;;1639           if ((NumCharsOld + NumCharsNew) > pObj->MaxNumChars) {
001482  eb0a0105          ADD      r1,r10,r5
001486  4281              CMP      r1,r0
001488  dd01              BLE      |L1.5262|
;;;1640             NumCharsNew = pObj->MaxNumChars - NumCharsOld;
00148a  eba0050a          SUB      r5,r0,r10
                  |L1.5262|
;;;1641           }
;;;1642         }
;;;1643         if (NumCharsNew > 0) {
00148e  2d00              CMP      r5,#0
001490  dd43              BLE      |L1.5402|
;;;1644           NumBytesNew = GUI_UC__NumChars2NumBytes(s, NumCharsNew);
001492  4629              MOV      r1,r5
001494  4640              MOV      r0,r8
001496  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00149a  4682              MOV      r10,r0
;;;1645           if (_IsSpaceInBuffer(pObj, NumBytesNew)) {
00149c  4651              MOV      r1,r10
00149e  4620              MOV      r0,r4
0014a0  f7fffffe          BL       _IsSpaceInBuffer
0014a4  b3c8              CBZ      r0,|L1.5402|
;;;1646             pText = (char *)GUI_ALLOC_h2p(pObj->hText);
0014a6  f9b40038          LDRSH    r0,[r4,#0x38]
0014aa  f7fffffe          BL       GUI_ALLOC_h2p
0014ae  4606              MOV      r6,r0
;;;1647             memmove(pText + pObj->CursorPosByte + NumBytesNew, 
0014b0  f8b4004a          LDRH     r0,[r4,#0x4a]
0014b4  eb06010a          ADD      r1,r6,r10
0014b8  1843              ADDS     r3,r0,r1
0014ba  1a3a              SUBS     r2,r7,r0
0014bc  1981              ADDS     r1,r0,r6
0014be  4618              MOV      r0,r3
0014c0  f7fffffe          BL       __aeabi_memmove
;;;1648                     pText + pObj->CursorPosByte, 
;;;1649                     NumBytesOld - pObj->CursorPosByte);
;;;1650             memcpy(pText + pObj->CursorPosByte, s, NumBytesNew);
0014c4  f8b4004a          LDRH     r0,[r4,#0x4a]
0014c8  4652              MOV      r2,r10
0014ca  4430              ADD      r0,r0,r6
0014cc  4641              MOV      r1,r8
0014ce  f7fffffe          BL       __aeabi_memcpy
;;;1651             *(pText + NumBytesOld + NumBytesNew) = 0;
0014d2  2000              MOVS     r0,#0
0014d4  19f1              ADDS     r1,r6,r7
0014d6  f801000a          STRB     r0,[r1,r10]
;;;1652             pObj->NumChars += NumCharsNew;
0014da  e000              B        |L1.5342|
                  |L1.5340|
0014dc  e022              B        |L1.5412|
                  |L1.5342|
0014de  8fa0              LDRH     r0,[r4,#0x3c]
0014e0  4428              ADD      r0,r0,r5
0014e2  87a0              STRH     r0,[r4,#0x3c]
;;;1653             _SetCursorPos(hObj, pObj, pObj->CursorPosChar + NumCharsNew);
0014e4  f8b40048          LDRH     r0,[r4,#0x48]
0014e8  4621              MOV      r1,r4
0014ea  1942              ADDS     r2,r0,r5
0014ec  4648              MOV      r0,r9
0014ee  f7fffffe          BL       _SetCursorPos
;;;1654             _InvalidateNumLines(pObj);
0014f2  4620              MOV      r0,r4
0014f4  f7fffffe          BL       _InvalidateNumLines
;;;1655             _InvalidateTextSizeX(pObj);
0014f8  4620              MOV      r0,r4
0014fa  f7fffffe          BL       _InvalidateTextSizeX
;;;1656             _InvalidateTextArea(hObj);
0014fe  4648              MOV      r0,r9
001500  f7fffffe          BL       _InvalidateTextArea
;;;1657             _InvalidateCursorXY(pObj);
001504  4620              MOV      r0,r4
001506  f7fffffe          BL       _InvalidateCursorXY
;;;1658             _ClearCache(pObj);
00150a  4620              MOV      r0,r4
00150c  f7fffffe          BL       _ClearCache
;;;1659             WM_NotifyParent(hObj, WM_NOTIFICATION_VALUE_CHANGED);
001510  2105              MOVS     r1,#5
001512  4648              MOV      r0,r9
001514  f7fffffe          BL       WM_NotifyParent
;;;1660             Result = 0;
001518  2600              MOVS     r6,#0
                  |L1.5402|
;;;1661           }
;;;1662         }
;;;1663       }
;;;1664       WM_UNLOCK();
00151a  f7fffffe          BL       GUI_Unlock
                  |L1.5406|
;;;1665     }
;;;1666     return Result;
00151e  4630              MOV      r0,r6
;;;1667   }
001520  e8bd87f0          POP      {r4-r10,pc}
                  |L1.5412|
001524  4642              MOV      r2,r8                 ;1630
001526  4621              MOV      r1,r4                 ;1630
001528  4648              MOV      r0,r9                 ;1630
00152a  f7fffffe          BL       _SetText
00152e  e7f4              B        |L1.5402|
;;;1668   
                          ENDP

                  MULTIEDIT_GetText PROC
;;;1688   */
;;;1689   void MULTIEDIT_GetText(MULTIEDIT_HANDLE hObj, char* sDest, int MaxLen) {
001530  e92d41f0          PUSH     {r4-r8,lr}
001534  4604              MOV      r4,r0
001536  460f              MOV      r7,r1
001538  4615              MOV      r5,r2
;;;1690     if (hObj) {
00153a  2c00              CMP      r4,#0
00153c  d023              BEQ      |L1.5510|
;;;1691       MULTIEDIT_OBJ* pObj;
;;;1692       WM_LOCK();
00153e  f7fffffe          BL       GUI_Lock
;;;1693       pObj = MULTIEDIT_H2P(hObj);
001542  4620              MOV      r0,r4
001544  f7fffffe          BL       GUI_ALLOC_h2p
001548  4604              MOV      r4,r0
;;;1694       if (pObj) {
00154a  b1c4              CBZ      r4,|L1.5502|
;;;1695         char* pText;
;;;1696         int Len;
;;;1697         pText  = (char*) GUI_ALLOC_h2p(pObj->hText);
00154c  f9b40038          LDRSH    r0,[r4,#0x38]
001550  f7fffffe          BL       GUI_ALLOC_h2p
001554  4606              MOV      r6,r0
;;;1698         pText += GUI_UC__NumChars2NumBytes(pText, pObj->NumCharsPrompt);
001556  8fe1              LDRH     r1,[r4,#0x3e]
001558  4630              MOV      r0,r6
00155a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00155e  4406              ADD      r6,r6,r0
;;;1699         Len    = strlen(pText);
001560  4630              MOV      r0,r6
001562  f7fffffe          BL       strlen
001566  4604              MOV      r4,r0
;;;1700         if (Len > (MaxLen - 1)) {
001568  1e68              SUBS     r0,r5,#1
00156a  4284              CMP      r4,r0
00156c  dd00              BLE      |L1.5488|
;;;1701           Len = MaxLen - 1;
00156e  1e6c              SUBS     r4,r5,#1
                  |L1.5488|
;;;1702         }
;;;1703         memcpy(sDest, pText, Len);
001570  4622              MOV      r2,r4
001572  4631              MOV      r1,r6
001574  4638              MOV      r0,r7
001576  f7fffffe          BL       __aeabi_memcpy
;;;1704         *(sDest + Len) = 0;
00157a  2000              MOVS     r0,#0
00157c  5538              STRB     r0,[r7,r4]
                  |L1.5502|
;;;1705       }
;;;1706       WM_UNLOCK();
00157e  e8bd41f0          POP      {r4-r8,lr}
001582  f7ffbffe          B.W      GUI_Unlock
                  |L1.5510|
;;;1707     }
;;;1708   }
001586  e8bd81f0          POP      {r4-r8,pc}
;;;1709   
                          ENDP

                  MULTIEDIT_GetPrompt PROC
;;;1713   */
;;;1714   void MULTIEDIT_GetPrompt(MULTIEDIT_HANDLE hObj, char * sDest, int MaxLen) {
00158a  e92d41f0          PUSH     {r4-r8,lr}
00158e  4604              MOV      r4,r0
001590  460e              MOV      r6,r1
001592  4615              MOV      r5,r2
;;;1715     if (hObj) {
001594  2c00              CMP      r4,#0
001596  d01f              BEQ      |L1.5592|
;;;1716       MULTIEDIT_OBJ * pObj;
;;;1717       WM_LOCK();
001598  f7fffffe          BL       GUI_Lock
;;;1718       pObj = MULTIEDIT_H2P(hObj);
00159c  4620              MOV      r0,r4
00159e  f7fffffe          BL       GUI_ALLOC_h2p
0015a2  4604              MOV      r4,r0
;;;1719       if (pObj) {
0015a4  b1a4              CBZ      r4,|L1.5584|
;;;1720         char* sSource = (char*)GUI_ALLOC_h2p(pObj->hText);
0015a6  f9b40038          LDRSH    r0,[r4,#0x38]
0015aa  f7fffffe          BL       GUI_ALLOC_h2p
0015ae  4607              MOV      r7,r0
;;;1721         int Len = GUI_UC__NumChars2NumBytes(sSource, pObj->NumCharsPrompt);
0015b0  8fe1              LDRH     r1,[r4,#0x3e]
0015b2  4638              MOV      r0,r7
0015b4  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0015b8  4604              MOV      r4,r0
;;;1722         if (Len > (MaxLen - 1)) {
0015ba  1e68              SUBS     r0,r5,#1
0015bc  4284              CMP      r4,r0
0015be  dd00              BLE      |L1.5570|
;;;1723           Len = MaxLen - 1;
0015c0  1e6c              SUBS     r4,r5,#1
                  |L1.5570|
;;;1724         }
;;;1725         memcpy(sDest, sSource, Len);
0015c2  4622              MOV      r2,r4
0015c4  4639              MOV      r1,r7
0015c6  4630              MOV      r0,r6
0015c8  f7fffffe          BL       __aeabi_memcpy
;;;1726         *(sDest + Len) = 0;
0015cc  2000              MOVS     r0,#0
0015ce  5530              STRB     r0,[r6,r4]
                  |L1.5584|
;;;1727       }
;;;1728       WM_UNLOCK();
0015d0  e8bd41f0          POP      {r4-r8,lr}
0015d4  f7ffbffe          B.W      GUI_Unlock
                  |L1.5592|
;;;1729     }
;;;1730   }
0015d8  e8bd81f0          POP      {r4-r8,pc}
;;;1731   
                          ENDP

                  MULTIEDIT_SetWrapWord PROC
;;;1735   */
;;;1736   void MULTIEDIT_SetWrapWord(MULTIEDIT_HANDLE hObj) {
0015dc  2101              MOVS     r1,#1
;;;1737     _SetWrapMode(hObj, GUI_WRAPMODE_WORD);
0015de  f7ffbffe          B.W      _SetWrapMode
;;;1738   }
;;;1739   
                          ENDP

                  MULTIEDIT_SetWrapChar PROC
;;;1743   */
;;;1744   void MULTIEDIT_SetWrapChar(MULTIEDIT_HANDLE hObj) {
0015e2  2102              MOVS     r1,#2
;;;1745     _SetWrapMode(hObj, GUI_WRAPMODE_CHAR);
0015e4  f7ffbffe          B.W      _SetWrapMode
;;;1746   }
;;;1747   
                          ENDP

                  MULTIEDIT_SetWrapNone PROC
;;;1751   */
;;;1752   void MULTIEDIT_SetWrapNone(MULTIEDIT_HANDLE hObj) {
0015e8  2100              MOVS     r1,#0
;;;1753     _SetWrapMode(hObj, GUI_WRAPMODE_NONE);
0015ea  f7ffbffe          B.W      _SetWrapMode
;;;1754   }
;;;1755   
                          ENDP

                  MULTIEDIT_SetInsertMode PROC
;;;1759   */
;;;1760   void MULTIEDIT_SetInsertMode(MULTIEDIT_HANDLE hObj, int OnOff) {
0015ee  2204              MOVS     r2,#4
;;;1761     _SetFlag(hObj, OnOff, MULTIEDIT_SF_INSERT);
0015f0  f7ffbffe          B.W      _SetFlag
;;;1762   }
;;;1763   
                          ENDP

                  MULTIEDIT_SetReadOnly PROC
;;;1767   */
;;;1768   void MULTIEDIT_SetReadOnly(MULTIEDIT_HANDLE hObj, int OnOff) {
0015f4  2201              MOVS     r2,#1
;;;1769     _SetFlag(hObj, OnOff, MULTIEDIT_SF_READONLY);
0015f6  f7ffbffe          B.W      _SetFlag
;;;1770   }
;;;1771   
                          ENDP

                  MULTIEDIT_SetPasswordMode PROC
;;;1775   */
;;;1776   void MULTIEDIT_SetPasswordMode(MULTIEDIT_HANDLE hObj, int OnOff) {
0015fa  b570              PUSH     {r4-r6,lr}
0015fc  4604              MOV      r4,r0
0015fe  460d              MOV      r5,r1
;;;1777     if (hObj) {
001600  2c00              CMP      r4,#0
001602  d017              BEQ      |L1.5684|
;;;1778       MULTIEDIT_OBJ* pObj;
;;;1779       WM_LOCK();
001604  f7fffffe          BL       GUI_Lock
;;;1780       pObj = MULTIEDIT_H2P(hObj);
001608  4620              MOV      r0,r4
00160a  f7fffffe          BL       GUI_ALLOC_h2p
00160e  4606              MOV      r6,r0
;;;1781       _SetFlag(hObj, OnOff, MULTIEDIT_SF_PASSWORD);
001610  2220              MOVS     r2,#0x20
001612  4629              MOV      r1,r5
001614  4620              MOV      r0,r4
001616  f7fffffe          BL       _SetFlag
;;;1782       _InvalidateCursorXY(pObj);
00161a  4630              MOV      r0,r6
00161c  f7fffffe          BL       _InvalidateCursorXY
;;;1783       _InvalidateNumLines(pObj);
001620  4630              MOV      r0,r6
001622  f7fffffe          BL       _InvalidateNumLines
;;;1784       _InvalidateTextSizeX(pObj);
001626  4630              MOV      r0,r6
001628  f7fffffe          BL       _InvalidateTextSizeX
;;;1785       WM_UNLOCK();
00162c  e8bd4070          POP      {r4-r6,lr}
001630  f7ffbffe          B.W      GUI_Unlock
                  |L1.5684|
;;;1786     }
;;;1787   }
001634  bd70              POP      {r4-r6,pc}
;;;1788   
                          ENDP

                  MULTIEDIT_SetAutoScrollV PROC
;;;1792   */
;;;1793   void MULTIEDIT_SetAutoScrollV(MULTIEDIT_HANDLE hObj, int OnOff) {
001636  2208              MOVS     r2,#8
;;;1794     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_V);
001638  f7ffbffe          B.W      _SetFlag
;;;1795   }
;;;1796   
                          ENDP

                  MULTIEDIT_SetAutoScrollH PROC
;;;1800   */
;;;1801   void MULTIEDIT_SetAutoScrollH(MULTIEDIT_HANDLE hObj, int OnOff) {
00163c  2210              MOVS     r2,#0x10
;;;1802     _SetFlag(hObj, OnOff, MULTIEDIT_SF_AUTOSCROLLBAR_H);
00163e  f7ffbffe          B.W      _SetFlag
;;;1803   }
;;;1804   
                          ENDP

                  MULTIEDIT_SetHBorder PROC
;;;1808   */
;;;1809   void MULTIEDIT_SetHBorder(MULTIEDIT_HANDLE hObj, unsigned HBorder) {
001642  b570              PUSH     {r4-r6,lr}
001644  4605              MOV      r5,r0
001646  460c              MOV      r4,r1
;;;1810     if (hObj) {
001648  2d00              CMP      r5,#0
00164a  d011              BEQ      |L1.5744|
;;;1811       MULTIEDIT_OBJ* pObj;
;;;1812       WM_LOCK();
00164c  f7fffffe          BL       GUI_Lock
;;;1813       pObj = MULTIEDIT_H2P(hObj);
001650  4628              MOV      r0,r5
001652  f7fffffe          BL       GUI_ALLOC_h2p
;;;1814       if ((unsigned)pObj->HBorder != HBorder) {
001656  f890107b          LDRB     r1,[r0,#0x7b]
00165a  42a1              CMP      r1,r4
00165c  d004              BEQ      |L1.5736|
;;;1815         pObj->HBorder = HBorder;
00165e  f880407b          STRB     r4,[r0,#0x7b]
;;;1816         _Invalidate(hObj);
001662  4628              MOV      r0,r5
001664  f7fffffe          BL       _Invalidate
                  |L1.5736|
;;;1817       }
;;;1818       WM_UNLOCK();
001668  e8bd4070          POP      {r4-r6,lr}
00166c  f7ffbffe          B.W      GUI_Unlock
                  |L1.5744|
;;;1819     }
;;;1820   }
001670  bd70              POP      {r4-r6,pc}
;;;1821   
                          ENDP

                  MULTIEDIT_SetFont PROC
;;;1825   */
;;;1826   void MULTIEDIT_SetFont(MULTIEDIT_HANDLE hObj, const GUI_FONT GUI_UNI_PTR * pFont) {
001672  b570              PUSH     {r4-r6,lr}
001674  4606              MOV      r6,r0
001676  460c              MOV      r4,r1
;;;1827     if (hObj) {
001678  2e00              CMP      r6,#0
00167a  d019              BEQ      |L1.5808|
;;;1828       MULTIEDIT_OBJ* pObj;
;;;1829       WM_LOCK();
00167c  f7fffffe          BL       GUI_Lock
;;;1830       pObj = MULTIEDIT_H2P(hObj);
001680  4630              MOV      r0,r6
001682  f7fffffe          BL       GUI_ALLOC_h2p
001686  4605              MOV      r5,r0
;;;1831       if (pObj->pFont != pFont) {
001688  6f68              LDR      r0,[r5,#0x74]
00168a  42a0              CMP      r0,r4
00168c  d00c              BEQ      |L1.5800|
;;;1832         pObj->pFont = pFont;
00168e  676c              STR      r4,[r5,#0x74]
;;;1833         _InvalidateTextArea(hObj);
001690  4630              MOV      r0,r6
001692  f7fffffe          BL       _InvalidateTextArea
;;;1834         _InvalidateCursorXY(pObj);
001696  4628              MOV      r0,r5
001698  f7fffffe          BL       _InvalidateCursorXY
;;;1835         _InvalidateNumLines(pObj);
00169c  4628              MOV      r0,r5
00169e  f7fffffe          BL       _InvalidateNumLines
;;;1836         _InvalidateTextSizeX(pObj);
0016a2  4628              MOV      r0,r5
0016a4  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.5800|
;;;1837       }
;;;1838       WM_UNLOCK();
0016a8  e8bd4070          POP      {r4-r6,lr}
0016ac  f7ffbffe          B.W      GUI_Unlock
                  |L1.5808|
;;;1839     }
;;;1840   }
0016b0  bd70              POP      {r4-r6,pc}
;;;1841   
                          ENDP

                  MULTIEDIT_SetBkColor PROC
;;;1845   */
;;;1846   void MULTIEDIT_SetBkColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
0016b2  b570              PUSH     {r4-r6,lr}
0016b4  4606              MOV      r6,r0
0016b6  460c              MOV      r4,r1
0016b8  4615              MOV      r5,r2
;;;1847     if (hObj && (Index < NUM_DISP_MODES)) {
0016ba  2e00              CMP      r6,#0
0016bc  d010              BEQ      |L1.5856|
0016be  2c02              CMP      r4,#2
0016c0  d20e              BCS      |L1.5856|
;;;1848       MULTIEDIT_OBJ* pObj;
;;;1849       WM_LOCK();
0016c2  f7fffffe          BL       GUI_Lock
;;;1850       pObj = MULTIEDIT_H2P(hObj);
0016c6  4630              MOV      r0,r6
0016c8  f7fffffe          BL       GUI_ALLOC_h2p
;;;1851       pObj->aBkColor[Index] = color;
0016cc  eb000084          ADD      r0,r0,r4,LSL #2
0016d0  6285              STR      r5,[r0,#0x28]
;;;1852       _InvalidateTextArea(hObj);
0016d2  4630              MOV      r0,r6
0016d4  f7fffffe          BL       _InvalidateTextArea
;;;1853       WM_UNLOCK();
0016d8  e8bd4070          POP      {r4-r6,lr}
0016dc  f7ffbffe          B.W      GUI_Unlock
                  |L1.5856|
;;;1854     }
;;;1855   }
0016e0  bd70              POP      {r4-r6,pc}
;;;1856   
                          ENDP

                  MULTIEDIT_SetCursorOffset PROC
;;;1860   */
;;;1861   void MULTIEDIT_SetCursorOffset(MULTIEDIT_HANDLE hObj, int Offset) {
0016e2  b570              PUSH     {r4-r6,lr}
0016e4  4604              MOV      r4,r0
0016e6  460d              MOV      r5,r1
;;;1862     if (hObj) {
0016e8  2c00              CMP      r4,#0
0016ea  d010              BEQ      |L1.5902|
;;;1863       MULTIEDIT_OBJ* pObj;
;;;1864       WM_LOCK();
0016ec  f7fffffe          BL       GUI_Lock
;;;1865       pObj = MULTIEDIT_H2P(hObj);
0016f0  4620              MOV      r0,r4
0016f2  f7fffffe          BL       GUI_ALLOC_h2p
;;;1866       _SetCursorPos(hObj, pObj, Offset);
0016f6  4601              MOV      r1,r0
0016f8  462a              MOV      r2,r5
0016fa  4620              MOV      r0,r4
0016fc  f7fffffe          BL       _SetCursorPos
;;;1867       WM_Invalidate(hObj);
001700  4620              MOV      r0,r4
001702  f7fffffe          BL       WM_InvalidateWindow
;;;1868       WM_UNLOCK();
001706  e8bd4070          POP      {r4-r6,lr}
00170a  f7ffbffe          B.W      GUI_Unlock
                  |L1.5902|
;;;1869     }
;;;1870   }
00170e  bd70              POP      {r4-r6,pc}
;;;1871   
                          ENDP

                  MULTIEDIT_SetTextColor PROC
;;;1875   */
;;;1876   void MULTIEDIT_SetTextColor(MULTIEDIT_HANDLE hObj, unsigned Index, GUI_COLOR color) {
001710  b570              PUSH     {r4-r6,lr}
001712  4606              MOV      r6,r0
001714  460c              MOV      r4,r1
001716  4615              MOV      r5,r2
;;;1877     if (hObj && (Index < NUM_DISP_MODES)) {
001718  2e00              CMP      r6,#0
00171a  d010              BEQ      |L1.5950|
00171c  2c02              CMP      r4,#2
00171e  d20e              BCS      |L1.5950|
;;;1878       MULTIEDIT_OBJ* pObj;
;;;1879       WM_LOCK();
001720  f7fffffe          BL       GUI_Lock
;;;1880       pObj = MULTIEDIT_H2P(hObj);
001724  4630              MOV      r0,r6
001726  f7fffffe          BL       GUI_ALLOC_h2p
;;;1881       pObj->aColor[Index] = color;
00172a  eb000084          ADD      r0,r0,r4,LSL #2
00172e  6305              STR      r5,[r0,#0x30]
;;;1882       WM_Invalidate(hObj);
001730  4630              MOV      r0,r6
001732  f7fffffe          BL       WM_InvalidateWindow
;;;1883       WM_UNLOCK();
001736  e8bd4070          POP      {r4-r6,lr}
00173a  f7ffbffe          B.W      GUI_Unlock
                  |L1.5950|
;;;1884     }
;;;1885   }
00173e  bd70              POP      {r4-r6,pc}
;;;1886   
                          ENDP

                  MULTIEDIT_SetPrompt PROC
;;;1890   */
;;;1891   void MULTIEDIT_SetPrompt(MULTIEDIT_HANDLE hObj, const char* pPrompt) {
001740  e92d47f0          PUSH     {r4-r10,lr}
001744  4682              MOV      r10,r0
001746  4689              MOV      r9,r1
;;;1892     if (hObj) {
001748  f1ba0f00          CMP      r10,#0
00174c  d05d              BEQ      |L1.6154|
;;;1893       MULTIEDIT_OBJ* pObj;
;;;1894       int NumCharsNew = 0, NumCharsOld = 0;
00174e  2500              MOVS     r5,#0
001750  46a8              MOV      r8,r5
;;;1895       int NumBytesNew = 0, NumBytesOld = 0;
001752  2600              MOVS     r6,#0
001754  2700              MOVS     r7,#0
;;;1896       char* pText;
;;;1897       WM_LOCK();
001756  f7fffffe          BL       GUI_Lock
;;;1898       pObj = MULTIEDIT_H2P(hObj);
00175a  4650              MOV      r0,r10
00175c  f7fffffe          BL       GUI_ALLOC_h2p
001760  4604              MOV      r4,r0
;;;1899       if (pObj->hText) {
001762  f9b40038          LDRSH    r0,[r4,#0x38]
001766  b138              CBZ      r0,|L1.6008|
;;;1900         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
001768  f7fffffe          BL       GUI_ALLOC_h2p
;;;1901         NumCharsOld = pObj->NumCharsPrompt;
00176c  f8b4803e          LDRH     r8,[r4,#0x3e]
;;;1902         NumBytesOld = GUI_UC__NumChars2NumBytes(pText, NumCharsOld);
001770  4641              MOV      r1,r8
001772  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001776  4607              MOV      r7,r0
                  |L1.6008|
;;;1903       }
;;;1904       if (pPrompt) {
001778  f1b90f00          CMP      r9,#0
00177c  d008              BEQ      |L1.6032|
;;;1905         NumCharsNew = GUI__GetNumChars(pPrompt);
00177e  4648              MOV      r0,r9
001780  f7fffffe          BL       GUI__GetNumChars
001784  4605              MOV      r5,r0
;;;1906         NumBytesNew = GUI_UC__NumChars2NumBytes(pPrompt, NumCharsNew);
001786  4629              MOV      r1,r5
001788  4648              MOV      r0,r9
00178a  f7fffffe          BL       GUI_UC__NumChars2NumBytes
00178e  4606              MOV      r6,r0
                  |L1.6032|
;;;1907       }
;;;1908       if (_IsCharsAvailable(pObj, NumCharsNew - NumCharsOld)) {
001790  eba50108          SUB      r1,r5,r8
001794  4620              MOV      r0,r4
001796  e003              B        |L1.6048|
                  |L1.6040|
                          DCD      ||.data||+0x4
                  |L1.6044|
                          DCD      ||.data||
                  |L1.6048|
0017a0  f7fffffe          BL       _IsCharsAvailable
0017a4  b368              CBZ      r0,|L1.6146|
;;;1909         if (_IsSpaceInBuffer(pObj, NumBytesNew - NumBytesOld)) {
0017a6  1bf1              SUBS     r1,r6,r7
0017a8  4620              MOV      r0,r4
0017aa  f7fffffe          BL       _IsSpaceInBuffer
0017ae  b340              CBZ      r0,|L1.6146|
;;;1910           pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0017b0  f9b40038          LDRSH    r0,[r4,#0x38]
0017b4  f7fffffe          BL       GUI_ALLOC_h2p
0017b8  4680              MOV      r8,r0
;;;1911           memmove(pText + NumBytesNew, pText + NumBytesOld, strlen(pText + NumBytesOld) + 1);
0017ba  4447              ADD      r7,r7,r8
0017bc  4638              MOV      r0,r7
0017be  f7fffffe          BL       strlen
0017c2  1c42              ADDS     r2,r0,#1
0017c4  eb080006          ADD      r0,r8,r6
0017c8  4639              MOV      r1,r7
0017ca  f7fffffe          BL       __aeabi_memmove
;;;1912           if (pPrompt) {
0017ce  f1b90f00          CMP      r9,#0
0017d2  d004              BEQ      |L1.6110|
;;;1913             memcpy(pText, pPrompt, NumBytesNew);
0017d4  4632              MOV      r2,r6
0017d6  4649              MOV      r1,r9
0017d8  4640              MOV      r0,r8
0017da  f7fffffe          BL       __aeabi_memcpy
                  |L1.6110|
;;;1914           }
;;;1915           pObj->NumCharsPrompt = NumCharsNew;
0017de  87e5              STRH     r5,[r4,#0x3e]
;;;1916           _SetCursorPos(hObj, pObj, NumCharsNew);
0017e0  462a              MOV      r2,r5
0017e2  4621              MOV      r1,r4
0017e4  4650              MOV      r0,r10
0017e6  f7fffffe          BL       _SetCursorPos
;;;1917           _InvalidateTextArea(hObj);
0017ea  4650              MOV      r0,r10
0017ec  f7fffffe          BL       _InvalidateTextArea
;;;1918           _InvalidateNumChars(pObj);
0017f0  4620              MOV      r0,r4
0017f2  f7fffffe          BL       _InvalidateNumChars
;;;1919           _InvalidateNumLines(pObj);
0017f6  4620              MOV      r0,r4
0017f8  f7fffffe          BL       _InvalidateNumLines
;;;1920           _InvalidateTextSizeX(pObj);
0017fc  4620              MOV      r0,r4
0017fe  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6146|
;;;1921         }
;;;1922       }
;;;1923       WM_UNLOCK();
001802  e8bd47f0          POP      {r4-r10,lr}
001806  f7ffbffe          B.W      GUI_Unlock
                  |L1.6154|
;;;1924     }
;;;1925   }
00180a  e8bd87f0          POP      {r4-r10,pc}
;;;1926   
                          ENDP

                  MULTIEDIT_SetBufferSize PROC
;;;1930   */
;;;1931   void MULTIEDIT_SetBufferSize(MULTIEDIT_HANDLE hObj, int BufferSize) {
00180e  e92d41f0          PUSH     {r4-r8,lr}
001812  4607              MOV      r7,r0
001814  460d              MOV      r5,r1
;;;1932     if (hObj) {
001816  2f00              CMP      r7,#0
001818  d02b              BEQ      |L1.6258|
;;;1933       MULTIEDIT_OBJ* pObj;
;;;1934       WM_HMEM hText;
;;;1935       WM_LOCK();
00181a  f7fffffe          BL       GUI_Lock
;;;1936       pObj = MULTIEDIT_H2P(hObj);
00181e  4638              MOV      r0,r7
001820  f7fffffe          BL       GUI_ALLOC_h2p
001824  4604              MOV      r4,r0
;;;1937       if ((hText = GUI_ALLOC_AllocZero(BufferSize)) == 0) {
001826  b228              SXTH     r0,r5
001828  f7fffffe          BL       GUI_ALLOC_AllocZero
00182c  0006              MOVS     r6,r0
00182e  d019              BEQ      |L1.6244|
;;;1938         GUI_DEBUG_ERROROUT("MULTIEDIT_SetBufferSize failed to alloc buffer");
;;;1939       } else {
;;;1940         GUI_ALLOC_FreePtr(&pObj->hText);
001830  f1040038          ADD      r0,r4,#0x38
001834  f7fffffe          BL       GUI_ALLOC_FreePtr
;;;1941         pObj->hText          = hText;
001838  8726              STRH     r6,[r4,#0x38]
;;;1942         pObj->BufferSize     = BufferSize;
00183a  f8a45044          STRH     r5,[r4,#0x44]
;;;1943         pObj->NumCharsPrompt = 0;
00183e  2000              MOVS     r0,#0
001840  87e0              STRH     r0,[r4,#0x3e]
;;;1944         _SetCursorPos(hObj, pObj, 0);
001842  2200              MOVS     r2,#0
001844  4621              MOV      r1,r4
001846  4638              MOV      r0,r7
001848  f7fffffe          BL       _SetCursorPos
;;;1945         _InvalidateNumChars(pObj);
00184c  4620              MOV      r0,r4
00184e  f7fffffe          BL       _InvalidateNumChars
;;;1946         _InvalidateCursorXY(pObj);
001852  4620              MOV      r0,r4
001854  f7fffffe          BL       _InvalidateCursorXY
;;;1947         _InvalidateNumLines(pObj);
001858  4620              MOV      r0,r4
00185a  f7fffffe          BL       _InvalidateNumLines
;;;1948         _InvalidateTextSizeX(pObj);
00185e  4620              MOV      r0,r4
001860  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6244|
;;;1949       }
;;;1950       _InvalidateTextArea(hObj);
001864  4638              MOV      r0,r7
001866  f7fffffe          BL       _InvalidateTextArea
;;;1951       WM_UNLOCK();
00186a  e8bd41f0          POP      {r4-r8,lr}
00186e  f7ffbffe          B.W      GUI_Unlock
                  |L1.6258|
;;;1952     }
;;;1953   }
001872  e8bd81f0          POP      {r4-r8,pc}
;;;1954   
                          ENDP

                  MULTIEDIT_SetMaxNumChars PROC
;;;1958   */
;;;1959   void MULTIEDIT_SetMaxNumChars(MULTIEDIT_HANDLE hObj, unsigned MaxNumChars) {
001876  e92d41f0          PUSH     {r4-r8,lr}
00187a  4606              MOV      r6,r0
00187c  460d              MOV      r5,r1
;;;1960     if (hObj) {
00187e  2e00              CMP      r6,#0
001880  d02c              BEQ      |L1.6364|
;;;1961       MULTIEDIT_OBJ* pObj;
;;;1962       WM_LOCK();
001882  f7fffffe          BL       GUI_Lock
;;;1963       pObj = MULTIEDIT_H2P(hObj);
001886  4630              MOV      r0,r6
001888  f7fffffe          BL       GUI_ALLOC_h2p
00188c  4604              MOV      r4,r0
;;;1964       pObj->MaxNumChars = MaxNumChars;
00188e  b2a8              UXTH     r0,r5
001890  8760              STRH     r0,[r4,#0x3a]
;;;1965       if (MaxNumChars < (unsigned)pObj->NumCharsPrompt) {
001892  8fe1              LDRH     r1,[r4,#0x3e]
001894  42a9              CMP      r1,r5
001896  d900              BLS      |L1.6298|
;;;1966         pObj->NumCharsPrompt = MaxNumChars;
001898  87e0              STRH     r0,[r4,#0x3e]
                  |L1.6298|
;;;1967       }
;;;1968       if (pObj->hText && MaxNumChars) {
00189a  f9b40038          LDRSH    r0,[r4,#0x38]
00189e  b1c8              CBZ      r0,|L1.6356|
0018a0  b1c5              CBZ      r5,|L1.6356|
;;;1969         char* pText;
;;;1970         int Offset;
;;;1971         pText = (char*) GUI_ALLOC_h2p(pObj->hText);
0018a2  f7fffffe          BL       GUI_ALLOC_h2p
0018a6  4607              MOV      r7,r0
;;;1972         Offset = GUI_UC__NumChars2NumBytes(pText, MaxNumChars);
0018a8  4629              MOV      r1,r5
0018aa  4638              MOV      r0,r7
0018ac  f7fffffe          BL       GUI_UC__NumChars2NumBytes
0018b0  4602              MOV      r2,r0
;;;1973         if (Offset < pObj->BufferSize) {
0018b2  f8b40044          LDRH     r0,[r4,#0x44]
0018b6  4290              CMP      r0,r2
0018b8  dd0c              BLE      |L1.6356|
;;;1974           pText += Offset;
0018ba  18b8              ADDS     r0,r7,r2
;;;1975           *pText = 0;
0018bc  2100              MOVS     r1,#0
0018be  7001              STRB     r1,[r0,#0]
;;;1976           _SetCursorPos(hObj, pObj, Offset);
0018c0  4621              MOV      r1,r4
0018c2  4630              MOV      r0,r6
0018c4  f7fffffe          BL       _SetCursorPos
;;;1977           _InvalidateTextArea(hObj);
0018c8  4630              MOV      r0,r6
0018ca  f7fffffe          BL       _InvalidateTextArea
;;;1978           _InvalidateNumChars(pObj);
0018ce  4620              MOV      r0,r4
0018d0  f7fffffe          BL       _InvalidateNumChars
                  |L1.6356|
;;;1979         }
;;;1980       }
;;;1981       WM_UNLOCK();
0018d4  e8bd41f0          POP      {r4-r8,lr}
0018d8  f7ffbffe          B.W      GUI_Unlock
                  |L1.6364|
;;;1982     }
;;;1983   }
0018dc  e8bd81f0          POP      {r4-r8,pc}
;;;1984   
                          ENDP

                  MULTIEDIT_GetTextSize PROC
;;;1993   */
;;;1994   int MULTIEDIT_GetTextSize(MULTIEDIT_HANDLE hObj) {
0018e0  b570              PUSH     {r4-r6,lr}
0018e2  4604              MOV      r4,r0
;;;1995     int r = 0;
0018e4  2500              MOVS     r5,#0
;;;1996     if (hObj) {
0018e6  b1ac              CBZ      r4,|L1.6420|
;;;1997       MULTIEDIT_OBJ* pObj;
;;;1998       WM_LOCK();
0018e8  f7fffffe          BL       GUI_Lock
;;;1999       pObj = MULTIEDIT_H2P(hObj);
0018ec  4620              MOV      r0,r4
0018ee  f7fffffe          BL       GUI_ALLOC_h2p
0018f2  4604              MOV      r4,r0
;;;2000       if (pObj->hText) {
0018f4  f9b40038          LDRSH    r0,[r4,#0x38]
0018f8  b150              CBZ      r0,|L1.6416|
;;;2001         const char* s;
;;;2002         s = (const char*)GUI_ALLOC_h2p(pObj->hText);
0018fa  f7fffffe          BL       GUI_ALLOC_h2p
0018fe  4605              MOV      r5,r0
;;;2003         s += GUI_UC__NumChars2NumBytes(s, pObj->NumCharsPrompt);
001900  8fe1              LDRH     r1,[r4,#0x3e]
001902  4628              MOV      r0,r5
001904  f7fffffe          BL       GUI_UC__NumChars2NumBytes
001908  4428              ADD      r0,r0,r5
;;;2004         r = 1 + strlen(s);
00190a  f7fffffe          BL       strlen
00190e  1c45              ADDS     r5,r0,#1
                  |L1.6416|
;;;2005       }
;;;2006       WM_UNLOCK();
001910  f7fffffe          BL       GUI_Unlock
                  |L1.6420|
;;;2007     }
;;;2008     return r;
001914  4628              MOV      r0,r5
;;;2009   }
001916  bd70              POP      {r4-r6,pc}
;;;2010   
                          ENDP

                  MULTIEDIT_SetTextAlign PROC
;;;2015   */
;;;2016   void MULTIEDIT_SetTextAlign(MULTIEDIT_HANDLE hObj, int Align) {
001918  b570              PUSH     {r4-r6,lr}
00191a  4606              MOV      r6,r0
00191c  460c              MOV      r4,r1
;;;2017     if (hObj) {
00191e  2e00              CMP      r6,#0
001920  d018              BEQ      |L1.6484|
;;;2018       MULTIEDIT_OBJ* pObj;
;;;2019       WM_LOCK();
001922  f7fffffe          BL       GUI_Lock
;;;2020       pObj = MULTIEDIT_H2P(hObj);
001926  4630              MOV      r0,r6
001928  f7fffffe          BL       GUI_ALLOC_h2p
00192c  4605              MOV      r5,r0
;;;2021       if (pObj->Align != Align) {
00192e  f8b50058          LDRH     r0,[r5,#0x58]
001932  42a0              CMP      r0,r4
001934  d00a              BEQ      |L1.6476|
;;;2022         pObj->Align = Align;
001936  f8a54058          STRH     r4,[r5,#0x58]
;;;2023         _InvalidateTextArea(hObj);
00193a  4630              MOV      r0,r6
00193c  f7fffffe          BL       _InvalidateTextArea
;;;2024         _InvalidateCursorXY(pObj);
001940  4628              MOV      r0,r5
001942  f7fffffe          BL       _InvalidateCursorXY
;;;2025         //_InvalidateNumLines(pObj);
;;;2026         _InvalidateTextSizeX(pObj);
001946  4628              MOV      r0,r5
001948  f7fffffe          BL       _InvalidateTextSizeX
                  |L1.6476|
;;;2027       }
;;;2028       WM_UNLOCK();
00194c  e8bd4070          POP      {r4-r6,lr}
001950  f7ffbffe          B.W      GUI_Unlock
                  |L1.6484|
;;;2029     }
;;;2030   }
001954  bd70              POP      {r4-r6,pc}
;;;2031   
                          ENDP

                  MULTIEDIT_GetCursorCharPos PROC
;;;2035   */
;;;2036   int MULTIEDIT_GetCursorCharPos(MULTIEDIT_HANDLE hObj) {
001956  b570              PUSH     {r4-r6,lr}
001958  4605              MOV      r5,r0
;;;2037     int r = 0;
00195a  2400              MOVS     r4,#0
;;;2038     if (hObj) {
00195c  b145              CBZ      r5,|L1.6512|
;;;2039       MULTIEDIT_OBJ* pObj;
;;;2040       WM_LOCK();
00195e  f7fffffe          BL       GUI_Lock
;;;2041       pObj = MULTIEDIT_H2P(hObj);
001962  4628              MOV      r0,r5
001964  f7fffffe          BL       GUI_ALLOC_h2p
;;;2042       r = pObj->CursorPosChar;
001968  f8b04048          LDRH     r4,[r0,#0x48]
;;;2043       WM_UNLOCK();
00196c  f7fffffe          BL       GUI_Unlock
                  |L1.6512|
;;;2044     }
;;;2045     return r;
001970  4620              MOV      r0,r4
;;;2046   }
001972  bd70              POP      {r4-r6,pc}
;;;2047   
                          ENDP

                  MULTIEDIT_GetCursorPixelPos PROC
;;;2051   */
;;;2052   void MULTIEDIT_GetCursorPixelPos(MULTIEDIT_HANDLE hObj, int * pxPos, int * pyPos) {
001974  e92d47f0          PUSH     {r4-r10,lr}
001978  4680              MOV      r8,r0
00197a  460e              MOV      r6,r1
00197c  4617              MOV      r7,r2
;;;2053     if (hObj) {
00197e  f1b80f00          CMP      r8,#0
001982  d023              BEQ      |L1.6604|
;;;2054       MULTIEDIT_OBJ* pObj;
;;;2055       int FontSizeY, EffectSize;
;;;2056       WM_LOCK();
001984  f7fffffe          BL       GUI_Lock
;;;2057       pObj = MULTIEDIT_H2P(hObj);
001988  4640              MOV      r0,r8
00198a  f7fffffe          BL       GUI_ALLOC_h2p
00198e  4604              MOV      r4,r0
;;;2058       FontSizeY  = GUI_GetYSizeOfFont(pObj->pFont);
001990  6f60              LDR      r0,[r4,#0x74]
001992  f7fffffe          BL       GUI_GetYSizeOfFont
001996  4681              MOV      r9,r0
;;;2059       EffectSize = pObj->Widget.pEffect->EffectSize;
001998  6a20              LDR      r0,[r4,#0x20]
00199a  6945              LDR      r5,[r0,#0x14]
;;;2060       _GetCursorXY(hObj, pObj, pxPos, pyPos);
00199c  463b              MOV      r3,r7
00199e  4632              MOV      r2,r6
0019a0  4621              MOV      r1,r4
0019a2  4640              MOV      r0,r8
0019a4  f7fffffe          BL       _GetCursorXY
;;;2061       *pxPos += EffectSize - pObj->ScrollStateH.v + pObj->HBorder;
0019a8  f894107b          LDRB     r1,[r4,#0x7b]
0019ac  6830              LDR      r0,[r6,#0]
0019ae  4408              ADD      r0,r0,r1
0019b0  6ee1              LDR      r1,[r4,#0x6c]
0019b2  1a69              SUBS     r1,r5,r1
0019b4  4408              ADD      r0,r0,r1
0019b6  6030              STR      r0,[r6,#0]
;;;2062       *pyPos += EffectSize - pObj->ScrollStateV.v * FontSizeY;
0019b8  6e21              LDR      r1,[r4,#0x60]
0019ba  6838              LDR      r0,[r7,#0]
0019bc  fb015119          MLS      r1,r1,r9,r5
0019c0  4408              ADD      r0,r0,r1
0019c2  6038              STR      r0,[r7,#0]
;;;2063       WM_UNLOCK();
0019c4  e8bd47f0          POP      {r4-r10,lr}
0019c8  f7ffbffe          B.W      GUI_Unlock
                  |L1.6604|
;;;2064     }
;;;2065   }
0019cc  e8bd87f0          POP      {r4-r10,pc}
;;;2066   
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  _pDefaultFont
                          DCD      GUI_Font13_1
                  _aDefaultBkColor
                          DCD      0x00ffffff
                          DCD      0x00c0c0c0
                  _aDefaultColor
                          DCD      0x00000000
                          DCD      0x00000000
