; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_drawbitmapex.o --depend=.\rvmdk\gui_drawbitmapex.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_drawbitmapex.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_DrawBitmapEx.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GL_DrawBitmapEx PROC
;;;35     */
;;;36     static void GL_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;37                                 int xCenter, int yCenter, int xMag, int yMag) {
000004  b08b              SUB      sp,sp,#0x2c
;;;38       LCD_PIXELINDEX Index, IndexPrev = 0;
000006  2000              MOVS     r0,#0
000008  900a              STR      r0,[sp,#0x28]
;;;39       LCD_COLOR Color;
;;;40       int x, y, xi, yi, xSize, ySize, xAct, xStart, xMagAbs, xiMag, yMin, yMax, yEnd, yPrev, yStep;
;;;41       char Cached, HasTrans = 0;
00000a  9000              STR      r0,[sp,#0]
;;;42       /* Use clipping rect to reduce calculation */
;;;43       yMin = GUI_Context.ClipRect.y0;
00000c  4cbd              LDR      r4,|L1.772|
00000e  f9b4000a          LDRSH    r0,[r4,#0xa]  ; GUI_Context
000012  9005              STR      r0,[sp,#0x14]
;;;44       yMax = GUI_Context.ClipRect.y1;
000014  f9b4000e          LDRSH    r0,[r4,#0xe]  ; GUI_Context
000018  9004              STR      r0,[sp,#0x10]
;;;45       /* Init some values */
;;;46       xSize    = pBitmap->XSize;
00001a  980b              LDR      r0,[sp,#0x2c]
00001c  8800              LDRH     r0,[r0,#0]
00001e  9008              STR      r0,[sp,#0x20]
;;;47       ySize    = pBitmap->YSize;
000020  980b              LDR      r0,[sp,#0x2c]
000022  8840              LDRH     r0,[r0,#2]
000024  9007              STR      r0,[sp,#0x1c]
;;;48       xMagAbs  = ((xMag < 0) ? -xMag : xMag);
000026  9819              LDR      r0,[sp,#0x64]
000028  2800              CMP      r0,#0
00002a  da03              BGE      |L1.52|
00002c  9819              LDR      r0,[sp,#0x64]
00002e  f1c00000          RSB      r0,r0,#0
000032  e000              B        |L1.54|
                  |L1.52|
000034  9819              LDR      r0,[sp,#0x64]
                  |L1.54|
000036  9006              STR      r0,[sp,#0x18]
;;;49       x0      -= (I32)((xMag < 0) ? xSize - xCenter - 1 : xCenter) * (I32)(xMagAbs) / (I32)(1000);
000038  da04              BGE      |L1.68|
00003a  9808              LDR      r0,[sp,#0x20]
00003c  eba00003          SUB      r0,r0,r3
000040  f1a00301          SUB      r3,r0,#1
                  |L1.68|
000044  9806              LDR      r0,[sp,#0x18]
000046  f44f727a          MOV      r2,#0x3e8
00004a  4358              MULS     r0,r3,r0
00004c  fb90f0f2          SDIV     r0,r0,r2
000050  eba10800          SUB      r8,r1,r0
;;;50       yEnd     = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000054  9818              LDR      r0,[sp,#0x60]
000056  4241              RSBS     r1,r0,#0
000058  981a              LDR      r0,[sp,#0x68]
00005a  4348              MULS     r0,r1,r0
00005c  4611              MOV      r1,r2
00005e  f7fffffe          BL       GUI__DivideRound32
000062  990d              LDR      r1,[sp,#0x34]
000064  4408              ADD      r0,r0,r1
000066  9003              STR      r0,[sp,#0xc]
;;;51       yPrev    = yEnd + 1;
000068  9803              LDR      r0,[sp,#0xc]
00006a  1c40              ADDS     r0,r0,#1
00006c  9002              STR      r0,[sp,#8]
;;;52       yStep = (yMag < 0) ? -1 : 1;
00006e  981a              LDR      r0,[sp,#0x68]
000070  2800              CMP      r0,#0
000072  da02              BGE      |L1.122|
000074  f04f30ff          MOV      r0,#0xffffffff
000078  e000              B        |L1.124|
                  |L1.122|
00007a  2001              MOVS     r0,#1
                  |L1.124|
00007c  9001              STR      r0,[sp,#4]
;;;53       if (pBitmap->pPal) {
00007e  980b              LDR      r0,[sp,#0x2c]
000080  68c0              LDR      r0,[r0,#0xc]
000082  b118              CBZ      r0,|L1.140|
;;;54         if (pBitmap->pPal->HasTrans) {
000084  7900              LDRB     r0,[r0,#4]
000086  b108              CBZ      r0,|L1.140|
;;;55           HasTrans = 1;
000088  2001              MOVS     r0,#1
00008a  9000              STR      r0,[sp,#0]
                  |L1.140|
;;;56         }
;;;57       }
;;;58       for (yi = 0; yi < ySize; yi++) {
00008c  2000              MOVS     r0,#0
00008e  9009              STR      r0,[sp,#0x24]
000090  9807              LDR      r0,[sp,#0x1c]
000092  2800              CMP      r0,#0
000094  dd7e              BLE      |L1.404|
                  |L1.150|
;;;59         y = yEnd;
000096  f8ddb00c          LDR      r11,[sp,#0xc]
;;;60         yEnd = y0 + GUI__DivideRound32(((I32)(yi + 1 - yCenter) * (I32)(yMag)), 1000);
00009a  9918              LDR      r1,[sp,#0x60]
00009c  9809              LDR      r0,[sp,#0x24]
00009e  1a40              SUBS     r0,r0,r1
0000a0  1c41              ADDS     r1,r0,#1
0000a2  981a              LDR      r0,[sp,#0x68]
0000a4  4348              MULS     r0,r1,r0
0000a6  f44f717a          MOV      r1,#0x3e8
0000aa  f7fffffe          BL       GUI__DivideRound32
0000ae  990d              LDR      r1,[sp,#0x34]
0000b0  4408              ADD      r0,r0,r1
0000b2  9003              STR      r0,[sp,#0xc]
;;;61         if (y != yPrev) {
0000b4  9802              LDR      r0,[sp,#8]
0000b6  4583              CMP      r11,r0
0000b8  d06d              BEQ      |L1.406|
;;;62           yPrev = y;
0000ba  f8cdb008          STR      r11,[sp,#8]
                  |L1.190|
;;;63           do {
;;;64             if ((y >= yMin) && (y <= yMax)) {
0000be  9805              LDR      r0,[sp,#0x14]
0000c0  4583              CMP      r11,r0
0000c2  db7a              BLT      |L1.442|
0000c4  9804              LDR      r0,[sp,#0x10]
0000c6  4583              CMP      r11,r0
0000c8  dc77              BGT      |L1.442|
;;;65               xStart = -1;
0000ca  f04f36ff          MOV      r6,#0xffffffff
;;;66               x      =  0;
0000ce  2500              MOVS     r5,#0
;;;67               xiMag  =  0;
0000d0  2400              MOVS     r4,#0
;;;68               Cached =  0;
0000d2  46a2              MOV      r10,r4
;;;69               for (xi = 0; xi < xSize; xi++) {
0000d4  2700              MOVS     r7,#0
0000d6  9808              LDR      r0,[sp,#0x20]
0000d8  2800              CMP      r0,#0
0000da  dd63              BLE      |L1.420|
                  |L1.220|
;;;70                 xiMag += xMagAbs;
0000dc  9806              LDR      r0,[sp,#0x18]
0000de  4404              ADD      r4,r4,r0
;;;71                 if (xiMag >= 1000) {
0000e0  f5b47f7a          CMP      r4,#0x3e8
0000e4  db5a              BLT      |L1.412|
;;;72                   xAct  = (xMag > 0) ? xi : xSize - xi - 1;
0000e6  9819              LDR      r0,[sp,#0x64]
0000e8  2800              CMP      r0,#0
0000ea  dd01              BLE      |L1.240|
0000ec  4639              MOV      r1,r7
0000ee  e002              B        |L1.246|
                  |L1.240|
0000f0  9808              LDR      r0,[sp,#0x20]
0000f2  1bc0              SUBS     r0,r0,r7
0000f4  1e41              SUBS     r1,r0,#1
                  |L1.246|
;;;73                   Index = GUI_GetBitmapPixelIndex(pBitmap, xAct, yi);
0000f6  9a09              LDR      r2,[sp,#0x24]
0000f8  980b              LDR      r0,[sp,#0x2c]
0000fa  f7fffffe          BL       GUI_GetBitmapPixelIndex
0000fe  fa1ff980          UXTH     r9,r0
;;;74                   if (Index != IndexPrev || xStart == -1) {
000102  980a              LDR      r0,[sp,#0x28]
000104  4581              CMP      r9,r0
000106  d101              BNE      |L1.268|
000108  1c70              ADDS     r0,r6,#1
00010a  d13d              BNE      |L1.392|
                  |L1.268|
;;;75                     if ((Index == 0) && HasTrans) {
00010c  f1b90f00          CMP      r9,#0
000110  d10f              BNE      |L1.306|
000112  9800              LDR      r0,[sp,#0]
000114  b168              CBZ      r0,|L1.306|
;;;76                       /* Transparent color ... clear cache */
;;;77                       if (Cached) {
000116  f1ba0f00          CMP      r10,#0
00011a  d033              BEQ      |L1.388|
;;;78                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
00011c  eb080005          ADD      r0,r8,r5
000120  1e42              SUBS     r2,r0,#1
000122  eb080006          ADD      r0,r8,r6
000126  4659              MOV      r1,r11
000128  f7fffffe          BL       LCD_DrawHLine
;;;79                         Cached = 0;
00012c  f04f0a00          MOV      r10,#0
000130  e028              B        |L1.388|
                  |L1.306|
;;;80                       }
;;;81                     } else {
;;;82                       /* Another color ... draw contents of cache */
;;;83                       if (Cached && xStart != -1) {
000132  f1ba0f00          CMP      r10,#0
000136  d009              BEQ      |L1.332|
000138  1c70              ADDS     r0,r6,#1
00013a  d007              BEQ      |L1.332|
;;;84                         LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
00013c  eb080005          ADD      r0,r8,r5
000140  1e42              SUBS     r2,r0,#1
000142  eb080006          ADD      r0,r8,r6
000146  4659              MOV      r1,r11
000148  f7fffffe          BL       LCD_DrawHLine
                  |L1.332|
;;;85                       }
;;;86                       xStart    = x;
00014c  462e              MOV      r6,r5
;;;87                       Cached    = 1;
00014e  f04f0a01          MOV      r10,#1
;;;88                       if (pBitmap->pMethods) {
000152  980b              LDR      r0,[sp,#0x2c]
000154  6900              LDR      r0,[r0,#0x10]
000156  b118              CBZ      r0,|L1.352|
;;;89                         Color = pBitmap->pMethods->pfIndex2Color(Index);
000158  6841              LDR      r1,[r0,#4]
00015a  4648              MOV      r0,r9
00015c  4788              BLX      r1
00015e  e00b              B        |L1.376|
                  |L1.352|
;;;90                       } else {
;;;91                         if (pBitmap->pPal->pPalEntries) {
000160  980b              LDR      r0,[sp,#0x2c]
000162  68c0              LDR      r0,[r0,#0xc]
000164  6880              LDR      r0,[r0,#8]
000166  b110              CBZ      r0,|L1.366|
;;;92                           Color = pBitmap->pPal->pPalEntries[Index];
000168  f8500029          LDR      r0,[r0,r9,LSL #2]
00016c  e004              B        |L1.376|
                  |L1.366|
;;;93                         } else {
;;;94                           Color = LCDDEV_L0_Index2Color(Index);
00016e  4865              LDR      r0,|L1.772|
000170  6cc0              LDR      r0,[r0,#0x4c]  ; GUI_Context
000172  6841              LDR      r1,[r0,#4]
000174  4648              MOV      r0,r9
000176  4788              BLX      r1
                  |L1.376|
;;;95                         }
;;;96                       }
;;;97                       LCD_SetColorIndex(LCDDEV_L0_Color2Index(Color));
000178  4962              LDR      r1,|L1.772|
00017a  6cc9              LDR      r1,[r1,#0x4c]  ; GUI_Context
00017c  6809              LDR      r1,[r1,#0]
00017e  4788              BLX      r1
000180  f7fffffe          BL       LCD_SetColorIndex
                  |L1.388|
;;;98                     }
;;;99                     IndexPrev = Index;
000184  f8cd9028          STR      r9,[sp,#0x28]
                  |L1.392|
;;;100                  }
;;;101                  do {
;;;102                    x++;
000188  1c6d              ADDS     r5,r5,#1
;;;103                    xiMag -= 1000;
00018a  f5a4747a          SUB      r4,r4,#0x3e8
;;;104                  } while (xiMag >= 1000);
00018e  f5b47f7a          CMP      r4,#0x3e8
000192  e002              B        |L1.410|
                  |L1.404|
000194  e027              B        |L1.486|
                  |L1.406|
000196  e01e              B        |L1.470|
000198  e00f              B        |L1.442|
                  |L1.410|
00019a  daf5              BGE      |L1.392|
                  |L1.412|
00019c  1c7f              ADDS     r7,r7,#1              ;69
00019e  9808              LDR      r0,[sp,#0x20]         ;69
0001a0  4287              CMP      r7,r0                 ;69
0001a2  db9b              BLT      |L1.220|
                  |L1.420|
;;;105                }
;;;106              }
;;;107              /* Clear cache */
;;;108              if (Cached) {
0001a4  f1ba0f00          CMP      r10,#0
0001a8  d007              BEQ      |L1.442|
;;;109                LCD_DrawHLine(x0 + xStart, y, x0 + x - 1);
0001aa  eb080005          ADD      r0,r8,r5
0001ae  1e42              SUBS     r2,r0,#1
0001b0  eb080006          ADD      r0,r8,r6
0001b4  4659              MOV      r1,r11
0001b6  f7fffffe          BL       LCD_DrawHLine
                  |L1.442|
;;;110              }
;;;111            }
;;;112            y += yStep;
0001ba  9801              LDR      r0,[sp,#4]
0001bc  4483              ADD      r11,r11,r0
;;;113          } while ((yMag < 0) ? (y > yEnd) : (y < yEnd));
0001be  981a              LDR      r0,[sp,#0x68]
0001c0  2800              CMP      r0,#0
0001c2  da04              BGE      |L1.462|
0001c4  9803              LDR      r0,[sp,#0xc]
0001c6  4583              CMP      r11,r0
0001c8  f73faf79          BGT      |L1.190|
0001cc  e003              B        |L1.470|
                  |L1.462|
0001ce  9803              LDR      r0,[sp,#0xc]
0001d0  4583              CMP      r11,r0
0001d2  f6ffaf74          BLT      |L1.190|
                  |L1.470|
0001d6  9809              LDR      r0,[sp,#0x24]         ;58
0001d8  1c40              ADDS     r0,r0,#1              ;58
0001da  9009              STR      r0,[sp,#0x24]         ;58
0001dc  9907              LDR      r1,[sp,#0x1c]         ;58
0001de  9809              LDR      r0,[sp,#0x24]         ;58
0001e0  4288              CMP      r0,r1                 ;58
0001e2  f6ffaf58          BLT      |L1.150|
                  |L1.486|
;;;114        }
;;;115      }
;;;116    }
0001e6  b00f              ADD      sp,sp,#0x3c
0001e8  e8bd8ff0          POP      {r4-r11,pc}
;;;117    
                          ENDP

                  GUI_DrawBitmapEx PROC
;;;127    */
;;;128    void GUI_DrawBitmapEx(const GUI_BITMAP GUI_UNI_PTR * pBitmap, int x0, int y0,
0001ec  e92d4ff0          PUSH     {r4-r11,lr}
;;;129                          int xCenter, int yCenter, int xMag, int yMag) {
0001f0  b087              SUB      sp,sp,#0x1c
0001f2  4680              MOV      r8,r0
0001f4  460c              MOV      r4,r1
0001f6  4615              MOV      r5,r2
0001f8  469a              MOV      r10,r3
0001fa  f8dd9040          LDR      r9,[sp,#0x40]
0001fe  9f12              LDR      r7,[sp,#0x48]
000200  9e11              LDR      r6,[sp,#0x44]
;;;130      int OldIndex;
;;;131      #if (GUI_WINSUPPORT)
;;;132        GUI_RECT r;
;;;133      #endif
;;;134      GUI_LOCK();
000202  f7fffffe          BL       GUI_Lock
;;;135      OldIndex = LCD_GetColorIndex();
000206  f7fffffe          BL       LCD_GetColorIndex
00020a  4683              MOV      r11,r0
;;;136      #if (GUI_WINSUPPORT)
;;;137        WM_ADDORG(x0, y0);
00020c  483d              LDR      r0,|L1.772|
00020e  6c41              LDR      r1,[r0,#0x44]  ; GUI_Context
000210  440c              ADD      r4,r4,r1
000212  6c80              LDR      r0,[r0,#0x48]  ; GUI_Context
000214  4405              ADD      r5,r5,r0
;;;138        if (xMag >= 0) {
;;;139          r.x0 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
000216  f1ca0000          RSB      r0,r10,#0
00021a  4370              MULS     r0,r6,r0
00021c  2e00              CMP      r6,#0                 ;138
00021e  db14              BLT      |L1.586|
000220  f44f717a          MOV      r1,#0x3e8
000224  f7fffffe          BL       GUI__DivideRound32
000228  4420              ADD      r0,r0,r4
00022a  f8ad0010          STRH     r0,[sp,#0x10]
;;;140          r.x1 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
00022e  f8b80000          LDRH     r0,[r8,#0]
000232  f44f717a          MOV      r1,#0x3e8
000236  eba0000a          SUB      r0,r0,r10
00023a  1e40              SUBS     r0,r0,#1
00023c  4370              MULS     r0,r6,r0
00023e  f7fffffe          BL       GUI__DivideRound32
000242  4420              ADD      r0,r0,r4
000244  f8ad0014          STRH     r0,[sp,#0x14]
000248  e013              B        |L1.626|
                  |L1.586|
;;;141        } else {
;;;142          r.x1 = x0 + GUI__DivideRound32(((I32)(-xCenter) * (I32)(xMag)), 1000);
00024a  f44f717a          MOV      r1,#0x3e8
00024e  f7fffffe          BL       GUI__DivideRound32
000252  4420              ADD      r0,r0,r4
000254  f8ad0014          STRH     r0,[sp,#0x14]
;;;143          r.x0 = x0 + GUI__DivideRound32(((I32)(pBitmap->XSize - xCenter - 1) * (I32)(xMag)), 1000);
000258  f8b80000          LDRH     r0,[r8,#0]
00025c  f44f717a          MOV      r1,#0x3e8
000260  eba0000a          SUB      r0,r0,r10
000264  1e40              SUBS     r0,r0,#1
000266  4370              MULS     r0,r6,r0
000268  f7fffffe          BL       GUI__DivideRound32
00026c  4420              ADD      r0,r0,r4
00026e  f8ad0010          STRH     r0,[sp,#0x10]
                  |L1.626|
;;;144        }
;;;145        if (yMag >= 0) {
;;;146          r.y0 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
000272  f1c90000          RSB      r0,r9,#0
000276  4378              MULS     r0,r7,r0
000278  2f00              CMP      r7,#0                 ;145
00027a  db14              BLT      |L1.678|
00027c  f44f717a          MOV      r1,#0x3e8
000280  f7fffffe          BL       GUI__DivideRound32
000284  4428              ADD      r0,r0,r5
000286  f8ad0012          STRH     r0,[sp,#0x12]
;;;147          r.y1 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
00028a  f8b80002          LDRH     r0,[r8,#2]
00028e  f44f717a          MOV      r1,#0x3e8
000292  eba00009          SUB      r0,r0,r9
000296  1e40              SUBS     r0,r0,#1
000298  4378              MULS     r0,r7,r0
00029a  f7fffffe          BL       GUI__DivideRound32
00029e  4428              ADD      r0,r0,r5
0002a0  f8ad0016          STRH     r0,[sp,#0x16]
0002a4  e013              B        |L1.718|
                  |L1.678|
;;;148        } else {
;;;149          r.y1 = y0 + GUI__DivideRound32(((I32)(-yCenter) * (I32)(yMag)), 1000);
0002a6  f44f717a          MOV      r1,#0x3e8
0002aa  f7fffffe          BL       GUI__DivideRound32
0002ae  4428              ADD      r0,r0,r5
0002b0  f8ad0016          STRH     r0,[sp,#0x16]
;;;150          r.y0 = y0 + GUI__DivideRound32(((I32)(pBitmap->YSize - yCenter - 1) * (I32)(yMag)), 1000);
0002b4  f8b80002          LDRH     r0,[r8,#2]
0002b8  f44f717a          MOV      r1,#0x3e8
0002bc  eba00009          SUB      r0,r0,r9
0002c0  1e40              SUBS     r0,r0,#1
0002c2  4378              MULS     r0,r7,r0
0002c4  f7fffffe          BL       GUI__DivideRound32
0002c8  4428              ADD      r0,r0,r5
0002ca  f8ad0012          STRH     r0,[sp,#0x12]
                  |L1.718|
;;;151        }
;;;152        WM_ITERATE_START(&r) {
0002ce  a804              ADD      r0,sp,#0x10
0002d0  f7fffffe          BL       WM__InitIVRSearch
0002d4  b168              CBZ      r0,|L1.754|
                  |L1.726|
;;;153      #endif
;;;154      GL_DrawBitmapEx(pBitmap, x0, y0, xCenter, yCenter, xMag, yMag);
0002d6  4653              MOV      r3,r10
0002d8  462a              MOV      r2,r5
0002da  4621              MOV      r1,r4
0002dc  4640              MOV      r0,r8
0002de  f8cd9000          STR      r9,[sp,#0]
0002e2  9702              STR      r7,[sp,#8]
0002e4  9601              STR      r6,[sp,#4]
0002e6  f7fffffe          BL       GL_DrawBitmapEx
;;;155      #if (GUI_WINSUPPORT)
;;;156        } WM_ITERATE_END();
0002ea  f7fffffe          BL       WM__GetNextIVR
0002ee  2800              CMP      r0,#0
0002f0  d1f1              BNE      |L1.726|
                  |L1.754|
;;;157      #endif
;;;158      LCD_SetColorIndex(OldIndex);
0002f2  4658              MOV      r0,r11
0002f4  f7fffffe          BL       LCD_SetColorIndex
;;;159      GUI_UNLOCK();
0002f8  f7fffffe          BL       GUI_Unlock
;;;160    }
0002fc  b007              ADD      sp,sp,#0x1c
0002fe  e8bd8ff0          POP      {r4-r11,pc}
;;;161    
                          ENDP

000302  0000              DCW      0x0000
                  |L1.772|
                          DCD      GUI_Context
