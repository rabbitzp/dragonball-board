; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_getbitmappixelindex.o --depend=.\rvmdk\gui_getbitmappixelindex.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_getbitmappixelindex.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_GetBitmapPixelIndex.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI_GetBitmapPixelIndex PROC
;;;31     */
;;;32     int GUI_GetBitmapPixelIndex(const GUI_BITMAP GUI_UNI_PTR * pBMP, unsigned x, unsigned y) {
000000  88c3              LDRH     r3,[r0,#6]
;;;33       unsigned Off, Value;
;;;34       switch (pBMP->BitsPerPixel) {
000002  2b04              CMP      r3,#4
000004  d028              BEQ      |L1.88|
000006  dc04              BGT      |L1.18|
000008  2b01              CMP      r3,#1
00000a  d008              BEQ      |L1.30|
00000c  2b02              CMP      r3,#2
00000e  d104              BNE      |L1.26|
000010  e013              B        |L1.58|
                  |L1.18|
000012  2b08              CMP      r3,#8
000014  d02e              BEQ      |L1.116|
000016  2b10              CMP      r3,#0x10
000018  d032              BEQ      |L1.128|
                  |L1.26|
;;;35       case 1:
;;;36         Off = (x >> 3) + (y * pBMP->BytesPerLine);
;;;37         Value = *(pBMP->pData + Off);
;;;38         Value = Value >> (7 - (x & 0x7)) & 0x1;
;;;39         break;
;;;40       case 2:
;;;41         Off = (x >> 2) + (y * pBMP->BytesPerLine);
;;;42         Value = *(pBMP->pData + Off);
;;;43         Value = Value >> (6 - ((x << 1) & 0x6)) & 0x3;
;;;44         break;
;;;45       case 4:
;;;46         Off = (x >> 1) + (y * pBMP->BytesPerLine);
;;;47         Value = *(pBMP->pData + Off);
;;;48         Value = (x & 1) ? (Value & 0xF) : (Value >> 4);
;;;49         break;
;;;50       case 8:
;;;51         Off = x + y * pBMP->BytesPerLine;
;;;52         Value = *(pBMP->pData + Off);
;;;53         break;
;;;54       case 16:
;;;55         Off = (x << 1) + y * pBMP->BytesPerLine;
;;;56         Value = *(pBMP->pData + Off) | (*(pBMP->pData + Off + 1) << 8);
;;;57         break;
;;;58       default:
;;;59         Value = 0;
00001a  2000              MOVS     r0,#0
;;;60       }
;;;61       return Value;
;;;62     }
00001c  4770              BX       lr
                  |L1.30|
00001e  8883              LDRH     r3,[r0,#4]            ;36
000020  435a              MULS     r2,r3,r2              ;36
000022  eb0202d1          ADD      r2,r2,r1,LSR #3       ;36
000026  6880              LDR      r0,[r0,#8]            ;37
000028  5c80              LDRB     r0,[r0,r2]            ;37
00002a  f0010107          AND      r1,r1,#7              ;38
00002e  f1c10107          RSB      r1,r1,#7              ;38
000032  40c8              LSRS     r0,r0,r1              ;38
000034  f0000001          AND      r0,r0,#1              ;38
000038  4770              BX       lr
                  |L1.58|
00003a  8883              LDRH     r3,[r0,#4]            ;41
00003c  435a              MULS     r2,r3,r2              ;41
00003e  eb020291          ADD      r2,r2,r1,LSR #2       ;41
000042  6880              LDR      r0,[r0,#8]            ;42
000044  5c80              LDRB     r0,[r0,r2]            ;42
000046  2206              MOVS     r2,#6                 ;43
000048  ea020141          AND      r1,r2,r1,LSL #1       ;43
00004c  f1c10106          RSB      r1,r1,#6              ;43
000050  40c8              LSRS     r0,r0,r1              ;43
000052  f0000003          AND      r0,r0,#3              ;43
000056  4770              BX       lr
                  |L1.88|
000058  8883              LDRH     r3,[r0,#4]            ;46
00005a  435a              MULS     r2,r3,r2              ;46
00005c  eb020251          ADD      r2,r2,r1,LSR #1       ;46
000060  6880              LDR      r0,[r0,#8]            ;47
000062  5c80              LDRB     r0,[r0,r2]            ;47
000064  f0110f01          TST      r1,#1                 ;48
000068  d002              BEQ      |L1.112|
00006a  f000000f          AND      r0,r0,#0xf            ;48
00006e  4770              BX       lr
                  |L1.112|
000070  0900              LSRS     r0,r0,#4              ;48
000072  4770              BX       lr
                  |L1.116|
000074  8883              LDRH     r3,[r0,#4]            ;51
000076  fb021103          MLA      r1,r2,r3,r1           ;51
00007a  6880              LDR      r0,[r0,#8]            ;52
00007c  5c40              LDRB     r0,[r0,r1]            ;52
00007e  4770              BX       lr
                  |L1.128|
000080  8883              LDRH     r3,[r0,#4]            ;55
000082  435a              MULS     r2,r3,r2              ;55
000084  eb020141          ADD      r1,r2,r1,LSL #1       ;55
000088  6880              LDR      r0,[r0,#8]            ;56
00008a  5c42              LDRB     r2,[r0,r1]            ;56
00008c  1c49              ADDS     r1,r1,#1              ;56
00008e  5c40              LDRB     r0,[r0,r1]            ;56
000090  ea422000          ORR      r0,r2,r0,LSL #8       ;56
000094  4770              BX       lr
;;;63     
                          ENDP

