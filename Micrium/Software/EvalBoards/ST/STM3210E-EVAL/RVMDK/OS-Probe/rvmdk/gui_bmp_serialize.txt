; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui_bmp_serialize.o --depend=.\rvmdk\gui_bmp_serialize.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui_bmp_serialize.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI_BMP_Serialize.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  _SendU16 PROC
;;;43     */
;;;44     static void _SendU16(GUI_CALLBACK_VOID_U8_P * pfSerialize, U16 Data, void * p) {
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;45       (*pfSerialize)((U8)Data, p);
000008  4631              MOV      r1,r6
00000a  b2e0              UXTB     r0,r4
00000c  47a8              BLX      r5
;;;46       (*pfSerialize)(Data >> 8, p);
00000e  0a20              LSRS     r0,r4,#8
000010  4631              MOV      r1,r6
000012  46ac              MOV      r12,r5
000014  e8bd4070          POP      {r4-r6,lr}
000018  4760              BX       r12
;;;47     }
;;;48     
                          ENDP

                  _SendU32 PROC
;;;52     */
;;;53     static void _SendU32(GUI_CALLBACK_VOID_U8_P * pfSerialize, U32 Data, void * p) {
00001a  b570              PUSH     {r4-r6,lr}
00001c  4605              MOV      r5,r0
00001e  460c              MOV      r4,r1
000020  4616              MOV      r6,r2
;;;54       _SendU16(pfSerialize, (U16)Data, p);
000022  4632              MOV      r2,r6
000024  b2a1              UXTH     r1,r4
000026  4628              MOV      r0,r5
000028  f7fffffe          BL       _SendU16
;;;55       _SendU16(pfSerialize, Data >> 16, p);
00002c  0c21              LSRS     r1,r4,#16
00002e  4632              MOV      r2,r6
000030  4628              MOV      r0,r5
000032  e8bd4070          POP      {r4-r6,lr}
000036  e7fe              B        _SendU16
;;;56     }
;;;57     
                          ENDP

                  GUI_BMP_SerializeEx PROC
;;;67     */
;;;68     void GUI_BMP_SerializeEx(GUI_CALLBACK_VOID_U8_P * pfSerialize, int x0, int y0, int xSize, int ySize, void * p) {
000038  e92d4fff          PUSH     {r0-r11,lr}
00003c  b083              SUB      sp,sp,#0xc
00003e  4607              MOV      r7,r0
000040  4688              MOV      r8,r1
000042  461e              MOV      r6,r3
000044  f8ddb040          LDR      r11,[sp,#0x40]
;;;69       int x, y, i, BPP, BytesPerLine, NumColors, Padding;
;;;70       U32 BitmapOffset, FileSize;
;;;71       GUI_LOCK();
000048  f7fffffe          BL       GUI_Lock
;;;72       BPP          = LCD_GetBitsPerPixel();
00004c  f7fffffe          BL       LCD_GetBitsPerPixel
000050  4681              MOV      r9,r0
;;;73       BytesPerLine = ((BPP > 8) ? (2 * xSize + 2) : (xSize + 3)) & ~3;
000052  0070              LSLS     r0,r6,#1
000054  f1b90f08          CMP      r9,#8
000058  dd02              BLE      |L1.96|
00005a  f1000102          ADD      r1,r0,#2
00005e  e001              B        |L1.100|
                  |L1.96|
000060  f1060103          ADD      r1,r6,#3
                  |L1.100|
000064  f0210103          BIC      r1,r1,#3
;;;74       NumColors    = (BPP > 8) ? 0 : (1 << BPP);
000068  dd02              BLE      |L1.112|
00006a  f04f0500          MOV      r5,#0
00006e  e003              B        |L1.120|
                  |L1.112|
000070  f04f0201          MOV      r2,#1
000074  fa02f509          LSL      r5,r2,r9
                  |L1.120|
;;;75       Padding      = BytesPerLine - ((BPP > 8) ? (2 * xSize) : xSize);
000078  dc00              BGT      |L1.124|
00007a  4630              MOV      r0,r6
                  |L1.124|
00007c  eba10a00          SUB      r10,r1,r0
;;;76       /* Write BITMAPFILEHEADER */
;;;77       BitmapOffset   = SIZEOF_BITMAPFILEHEADER
000080  2036              MOVS     r0,#0x36
000082  eb000485          ADD      r4,r0,r5,LSL #2
;;;78                      + SIZEOF_BITMAPINFOHEADER
;;;79                      + NumColors * 4;
;;;80       FileSize       = BitmapOffset
000086  fb0b4001          MLA      r0,r11,r1,r4
00008a  9001              STR      r0,[sp,#4]
;;;81                      + ySize * BytesPerLine;
;;;82       _SendU16(pfSerialize, DIB_HEADER_MARKER, p);       /* bfType */
00008c  f6445142          MOV      r1,#0x4d42
000090  4638              MOV      r0,r7
000092  9a11              LDR      r2,[sp,#0x44]
000094  f7fffffe          BL       _SendU16
;;;83       _SendU32(pfSerialize, FileSize, p);                /* bfSize */
000098  4638              MOV      r0,r7
00009a  9a11              LDR      r2,[sp,#0x44]
00009c  9901              LDR      r1,[sp,#4]
00009e  f7fffffe          BL       _SendU32
;;;84       _SendU32(pfSerialize, 0, p);                       /* bfReserved1, bfReserved2 */
0000a2  2100              MOVS     r1,#0
0000a4  4638              MOV      r0,r7
0000a6  9a11              LDR      r2,[sp,#0x44]
0000a8  f7fffffe          BL       _SendU32
;;;85       _SendU32(pfSerialize, BitmapOffset, p);            /* bfOffBits */
0000ac  4621              MOV      r1,r4
0000ae  4638              MOV      r0,r7
0000b0  9a11              LDR      r2,[sp,#0x44]
0000b2  f7fffffe          BL       _SendU32
;;;86       /* Write BITMAPINFOHEADER */
;;;87       _SendU32(pfSerialize, SIZEOF_BITMAPINFOHEADER, p); /* biSize */
0000b6  2128              MOVS     r1,#0x28
0000b8  4638              MOV      r0,r7
0000ba  9a11              LDR      r2,[sp,#0x44]
0000bc  f7fffffe          BL       _SendU32
;;;88       _SendU32(pfSerialize, xSize, p);                   /* biWidth */
0000c0  4631              MOV      r1,r6
0000c2  4638              MOV      r0,r7
0000c4  9a11              LDR      r2,[sp,#0x44]
0000c6  f7fffffe          BL       _SendU32
;;;89       _SendU32(pfSerialize, ySize, p);                   /* biHeighth */
0000ca  4659              MOV      r1,r11
0000cc  4638              MOV      r0,r7
0000ce  9a11              LDR      r2,[sp,#0x44]
0000d0  f7fffffe          BL       _SendU32
;;;90       _SendU16(pfSerialize, 1, p);                       /* biPlanes */
0000d4  2101              MOVS     r1,#1
0000d6  4638              MOV      r0,r7
0000d8  9a11              LDR      r2,[sp,#0x44]
0000da  f7fffffe          BL       _SendU16
;;;91       _SendU16(pfSerialize, (BPP  <= 8) ? 8 : 16, p);    /* biBitCount */
0000de  f1b90f08          CMP      r9,#8
0000e2  dc01              BGT      |L1.232|
0000e4  2108              MOVS     r1,#8
0000e6  e000              B        |L1.234|
                  |L1.232|
0000e8  2110              MOVS     r1,#0x10
                  |L1.234|
0000ea  4638              MOV      r0,r7
0000ec  9a11              LDR      r2,[sp,#0x44]
0000ee  f7fffffe          BL       _SendU16
;;;92       _SendU32(pfSerialize, 0, p);                       /* biCompression */
0000f2  2100              MOVS     r1,#0
0000f4  4638              MOV      r0,r7
0000f6  9a11              LDR      r2,[sp,#0x44]
0000f8  f7fffffe          BL       _SendU32
;;;93       _SendU32(pfSerialize, 0, p);                       /* biSizeImage */
0000fc  2100              MOVS     r1,#0
0000fe  4638              MOV      r0,r7
000100  9a11              LDR      r2,[sp,#0x44]
000102  f7fffffe          BL       _SendU32
;;;94       _SendU32(pfSerialize, 0, p);                       /* biXPelsPerMeter */
000106  2100              MOVS     r1,#0
000108  4638              MOV      r0,r7
00010a  9a11              LDR      r2,[sp,#0x44]
00010c  f7fffffe          BL       _SendU32
;;;95       _SendU32(pfSerialize, 0, p);                       /* biYPelsPerMeter */
000110  2100              MOVS     r1,#0
000112  4638              MOV      r0,r7
000114  9a11              LDR      r2,[sp,#0x44]
000116  f7fffffe          BL       _SendU32
;;;96       _SendU32(pfSerialize, NumColors, p);               /* biClrUsed */
00011a  4629              MOV      r1,r5
00011c  4638              MOV      r0,r7
00011e  9a11              LDR      r2,[sp,#0x44]
000120  f7fffffe          BL       _SendU32
;;;97       _SendU32(pfSerialize, 0, p);                       /* biClrImportant */
000124  2100              MOVS     r1,#0
000126  4638              MOV      r0,r7
000128  9a11              LDR      r2,[sp,#0x44]
00012a  f7fffffe          BL       _SendU32
;;;98       /* Write palette */
;;;99       for (i = 0; i < NumColors; i++) {
00012e  2400              MOVS     r4,#0
000130  2d00              CMP      r5,#0
000132  dd11              BLE      |L1.344|
                  |L1.308|
;;;100        U32 Color;
;;;101        Color = GUI_Index2Color(i);
000134  4620              MOV      r0,r4
000136  f7fffffe          BL       GUI_Index2Color
;;;102        Color = ((Color >> 16) & 255) | (Color & 0xff00) | ((Color & 0xff) << 16);
00013a  f400417f          AND      r1,r0,#0xff00
00013e  f3c04207          UBFX     r2,r0,#16,#8
000142  4311              ORRS     r1,r1,r2
000144  b2c0              UXTB     r0,r0
000146  ea414100          ORR      r1,r1,r0,LSL #16
;;;103        _SendU32(pfSerialize, Color, p);
00014a  4638              MOV      r0,r7
00014c  9a11              LDR      r2,[sp,#0x44]
00014e  f7fffffe          BL       _SendU32
000152  1c64              ADDS     r4,r4,#1              ;99
000154  42ac              CMP      r4,r5                 ;99
000156  dbed              BLT      |L1.308|
                  |L1.344|
;;;104      }
;;;105      /* Write pixels */
;;;106      for (y = ySize - 1; y >= 0; y--) {
000158  f1ab0501          SUB      r5,r11,#1
00015c  2d00              CMP      r5,#0
00015e  db4c              BLT      |L1.506|
;;;107        for (x = 0; x < xSize; x++) {
;;;108          if (BPP <= 8) {
;;;109            pfSerialize(LCD_GetPixelIndex(x0 + x, y0 + y), p);
;;;110          } else {
;;;111            U16 Color16;
;;;112            U32 Color = LCD_GetPixelColor(x0 + x, y0 + y);
;;;113            int b = ((Color >> 16) * 31 + 127) / 255;
000160  f8dfb0c8          LDR      r11,|L1.556|
                  |L1.356|
000164  2400              MOVS     r4,#0                 ;107
000166  2e00              CMP      r6,#0                 ;107
000168  dd3a              BLE      |L1.480|
00016a  9805              LDR      r0,[sp,#0x14]         ;109
00016c  4428              ADD      r0,r0,r5              ;109
00016e  9002              STR      r0,[sp,#8]            ;109
                  |L1.368|
000170  f1b90f08          CMP      r9,#8                 ;108
000174  dc08              BGT      |L1.392|
000176  eb080004          ADD      r0,r8,r4              ;109
00017a  9902              LDR      r1,[sp,#8]            ;109
00017c  f7fffffe          BL       LCD_GetPixelIndex
000180  b2c0              UXTB     r0,r0                 ;109
000182  9911              LDR      r1,[sp,#0x44]         ;109
000184  47b8              BLX      r7                    ;109
000186  e028              B        |L1.474|
                  |L1.392|
000188  eb080004          ADD      r0,r8,r4              ;112
00018c  9902              LDR      r1,[sp,#8]            ;112
00018e  f7fffffe          BL       LCD_GetPixelColor
000192  4601              MOV      r1,r0                 ;112
000194  0c08              LSRS     r0,r1,#16
000196  ebc01040          RSB      r0,r0,r0,LSL #5
00019a  307f              ADDS     r0,r0,#0x7f
00019c  fbab2000          UMULL    r2,r0,r11,r0
0001a0  09c2              LSRS     r2,r0,#7
;;;114            int g = (((Color >> 8) & 255) * 31 + 127) / 255;
0001a2  f3c12007          UBFX     r0,r1,#8,#8
0001a6  ebc01040          RSB      r0,r0,r0,LSL #5
0001aa  307f              ADDS     r0,r0,#0x7f
0001ac  eb002000          ADD      r0,r0,r0,LSL #8
0001b0  f2001001          ADD      r0,r0,#0x101
0001b4  0c03              LSRS     r3,r0,#16
;;;115            int r = ((Color & 255) * 31 + 127) / 255;
0001b6  b2c8              UXTB     r0,r1
0001b8  ebc01040          RSB      r0,r0,r0,LSL #5
0001bc  307f              ADDS     r0,r0,#0x7f
0001be  eb002000          ADD      r0,r0,r0,LSL #8
0001c2  f2001001          ADD      r0,r0,#0x101
0001c6  0c00              LSRS     r0,r0,#16
;;;116            Color16 = (r << 10) | (g << 5) | b;       /* 16 bpp Bitmaps in windows are 555: rrrrrgggggbbbbb */
0001c8  0280              LSLS     r0,r0,#10
0001ca  ea401043          ORR      r0,r0,r3,LSL #5
0001ce  4310              ORRS     r0,r0,r2
0001d0  b281              UXTH     r1,r0
;;;117            _SendU16(pfSerialize, Color16, p);
0001d2  4638              MOV      r0,r7
0001d4  9a11              LDR      r2,[sp,#0x44]
0001d6  f7fffffe          BL       _SendU16
                  |L1.474|
0001da  1c64              ADDS     r4,r4,#1              ;107
0001dc  42b4              CMP      r4,r6                 ;107
0001de  dbc7              BLT      |L1.368|
                  |L1.480|
;;;118          }
;;;119        }
;;;120        /* Align pointer to next U32 */
;;;121        for (i = 0; i < Padding; i++) {
0001e0  2400              MOVS     r4,#0
0001e2  f1ba0f00          CMP      r10,#0
0001e6  dd05              BLE      |L1.500|
                  |L1.488|
;;;122          pfSerialize(0, p);
0001e8  2000              MOVS     r0,#0
0001ea  9911              LDR      r1,[sp,#0x44]
0001ec  47b8              BLX      r7
0001ee  1c64              ADDS     r4,r4,#1              ;121
0001f0  4554              CMP      r4,r10                ;121
0001f2  dbf9              BLT      |L1.488|
                  |L1.500|
0001f4  1e6d              SUBS     r5,r5,#1              ;106
0001f6  2d00              CMP      r5,#0                 ;106
0001f8  dab4              BGE      |L1.356|
                  |L1.506|
;;;123        }
;;;124      }
;;;125      GUI_UNLOCK();
0001fa  b007              ADD      sp,sp,#0x1c
0001fc  e8bd4ff0          POP      {r4-r11,lr}
000200  f7ffbffe          B.W      GUI_Unlock
;;;126    }
;;;127    
                          ENDP

                  GUI_BMP_Serialize PROC
;;;131    */
;;;132    void GUI_BMP_Serialize(GUI_CALLBACK_VOID_U8_P * pfSerialize, void * p) {
000204  b570              PUSH     {r4-r6,lr}
000206  b082              SUB      sp,sp,#8
000208  4605              MOV      r5,r0
00020a  460c              MOV      r4,r1
;;;133      GUI_BMP_SerializeEx(pfSerialize, 0, 0, LCD_GetXSize(), LCD_GetYSize(), p);
00020c  f7fffffe          BL       LCD_GetYSize
000210  4606              MOV      r6,r0
000212  f7fffffe          BL       LCD_GetXSize
000216  4603              MOV      r3,r0
000218  2200              MOVS     r2,#0
00021a  4611              MOV      r1,r2
00021c  4628              MOV      r0,r5
00021e  9600              STR      r6,[sp,#0]
000220  9401              STR      r4,[sp,#4]
000222  f7fffffe          BL       GUI_BMP_SerializeEx
;;;134    }
000226  b002              ADD      sp,sp,#8
000228  bd70              POP      {r4-r6,pc}
;;;135    
                          ENDP

00022a  0000              DCW      0x0000
                  |L1.556|
                          DCD      0x80808081
