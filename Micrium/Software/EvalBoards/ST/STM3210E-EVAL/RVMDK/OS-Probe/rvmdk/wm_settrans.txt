; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\wm_settrans.o --depend=.\rvmdk\wm_settrans.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\wm_settrans.crf ..\..\..\..\..\uCGUI\GUI\WM\WM_SetTrans.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  WM_SetHasTrans PROC
;;;36     */
;;;37     void WM_SetHasTrans(WM_HWIN hWin) {
000000  b510              PUSH     {r4,lr}
000002  4604              MOV      r4,r0
;;;38       WM_Obj *pWin;
;;;39       WM_LOCK();
000004  f7fffffe          BL       GUI_Lock
;;;40       if (hWin) {
000008  b184              CBZ      r4,|L1.44|
;;;41         pWin = WM_H2P(hWin);  
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       GUI_ALLOC_h2p
;;;42         /* First check if this is necessary at all */
;;;43         if ((pWin->Status & WM_SF_HASTRANS) == 0) {
000010  8b81              LDRH     r1,[r0,#0x1c]
000012  f0110f01          TST      r1,#1
000016  d109              BNE      |L1.44|
;;;44           pWin->Status |= WM_SF_HASTRANS; /* Set Transparency flag */
000018  f0410101          ORR      r1,r1,#1
00001c  8381              STRH     r1,[r0,#0x1c]
;;;45           WM__TransWindowCnt++;          /* Increment counter for transparency windows */
00001e  481a              LDR      r0,|L1.136|
000020  6801              LDR      r1,[r0,#0]  ; WM__TransWindowCnt
000022  1c49              ADDS     r1,r1,#1
000024  6001              STR      r1,[r0,#0]  ; WM__TransWindowCnt
;;;46           WM_InvalidateWindow(hWin);      /* Mark content as invalid */
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       WM_InvalidateWindow
                  |L1.44|
;;;47         }
;;;48       }
;;;49       WM_UNLOCK();
00002c  e8bd4010          POP      {r4,lr}
000030  f7ffbffe          B.W      GUI_Unlock
;;;50     }
;;;51     
                          ENDP

                  WM_ClrHasTrans PROC
;;;55     */
;;;56     void WM_ClrHasTrans(WM_HWIN hWin) {
000034  b510              PUSH     {r4,lr}
000036  4604              MOV      r4,r0
;;;57       WM_Obj *pWin;
;;;58       WM_LOCK();
000038  f7fffffe          BL       GUI_Lock
;;;59       if (hWin) {
00003c  b184              CBZ      r4,|L1.96|
;;;60         pWin = WM_H2P(hWin);  
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       GUI_ALLOC_h2p
;;;61         /* First check if this is necessary at all */
;;;62         if (pWin->Status & WM_SF_HASTRANS) {
000044  8b81              LDRH     r1,[r0,#0x1c]
000046  f0110f01          TST      r1,#1
00004a  d009              BEQ      |L1.96|
;;;63           pWin->Status &= ~WM_SF_HASTRANS;
00004c  f0210101          BIC      r1,r1,#1
000050  8381              STRH     r1,[r0,#0x1c]
;;;64           WM__TransWindowCnt--;            /* Decrement counter for transparency windows */
000052  480d              LDR      r0,|L1.136|
000054  6801              LDR      r1,[r0,#0]  ; WM__TransWindowCnt
000056  1e49              SUBS     r1,r1,#1
000058  6001              STR      r1,[r0,#0]  ; WM__TransWindowCnt
;;;65           WM_InvalidateWindow(hWin);        /* Mark content as invalid */
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       WM_InvalidateWindow
                  |L1.96|
;;;66         }
;;;67       }
;;;68       WM_UNLOCK();
000060  e8bd4010          POP      {r4,lr}
000064  f7ffbffe          B.W      GUI_Unlock
;;;69     }
;;;70     
                          ENDP

                  WM_GetHasTrans PROC
;;;74     */
;;;75     int WM_GetHasTrans(WM_HWIN hWin) {
000068  b570              PUSH     {r4-r6,lr}
00006a  4605              MOV      r5,r0
;;;76       int r = 0;
00006c  2400              MOVS     r4,#0
;;;77       WM_Obj *pWin;
;;;78       WM_LOCK();
00006e  f7fffffe          BL       GUI_Lock
;;;79       if (hWin) {
000072  b12d              CBZ      r5,|L1.128|
;;;80         pWin = WM_H2P(hWin);  
000074  4628              MOV      r0,r5
000076  f7fffffe          BL       GUI_ALLOC_h2p
;;;81         r = pWin->Status & WM_SF_HASTRANS;
00007a  8b80              LDRH     r0,[r0,#0x1c]
00007c  f0000401          AND      r4,r0,#1
                  |L1.128|
;;;82       }
;;;83       WM_UNLOCK();
000080  f7fffffe          BL       GUI_Unlock
;;;84       return r;
000084  4620              MOV      r0,r4
;;;85     }
000086  bd70              POP      {r4-r6,pc}
;;;86     
                          ENDP

                  |L1.136|
                          DCD      WM__TransWindowCnt
