; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\lcd_readrect.o --depend=.\rvmdk\lcd_readrect.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\lcd_readrect.crf ..\..\..\..\..\uCGUI\GUI\Core\LCD_ReadRect.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  LCD_ReadRect PROC
;;;34     */
;;;35     void LCD_ReadRect(int x0, int y0, int x1, int y1, LCD_PIXELINDEX * pBuffer, const tLCDDEV_APIList * pAPI) {
000000  e92d4ff8          PUSH     {r3-r11,lr}
000004  4682              MOV      r10,r0
000006  f8dd802c          LDR      r8,[sp,#0x2c]
00000a  9d0a              LDR      r5,[sp,#0x28]
00000c  460e              MOV      r6,r1
00000e  4617              MOV      r7,r2
000010  4699              MOV      r9,r3
;;;36       void (* pfReadRect)(int x0, int y0, int x1, int y1, LCD_PIXELINDEX * pBuffer);
;;;37       pfReadRect = (void (*)(int, int, int, int, LCD_PIXELINDEX *))pAPI->pfGetDevFunc(LCD_DEVFUNC_READRECT);
000012  f8d81030          LDR      r1,[r8,#0x30]
000016  2001              MOVS     r0,#1
000018  4788              BLX      r1
00001a  4684              MOV      r12,r0
;;;38       if (!pfReadRect) {
00001c  f1bc0f00          CMP      r12,#0
000020  d007              BEQ      |L1.50|
;;;39         while (y0 <= y1) {
;;;40           int x;
;;;41           for (x = x0; x <= x1; x++) {
;;;42             *pBuffer++ = pAPI->pfGetPixelIndex(x, y0);
;;;43           }
;;;44           y0++;
;;;45         }
;;;46       } else {
;;;47         pfReadRect(x0, y0, x1, y1, pBuffer);
000022  464b              MOV      r3,r9
000024  463a              MOV      r2,r7
000026  4631              MOV      r1,r6
000028  4650              MOV      r0,r10
00002a  9500              STR      r5,[sp,#0]
00002c  47e0              BLX      r12
                  |L1.46|
;;;48       }
;;;49     }
00002e  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.50|
000032  454e              CMP      r6,r9                 ;39
000034  dcfb              BGT      |L1.46|
                  |L1.54|
000036  4654              MOV      r4,r10                ;41
000038  42bc              CMP      r4,r7                 ;41
00003a  dc09              BGT      |L1.80|
                  |L1.60|
00003c  f8d8301c          LDR      r3,[r8,#0x1c]         ;42
000040  4631              MOV      r1,r6                 ;42
000042  4620              MOV      r0,r4                 ;42
000044  4798              BLX      r3                    ;42
000046  f8250b02          STRH     r0,[r5],#2            ;42
00004a  1c64              ADDS     r4,r4,#1              ;41
00004c  42bc              CMP      r4,r7                 ;41
00004e  ddf5              BLE      |L1.60|
                  |L1.80|
000050  1c76              ADDS     r6,r6,#1              ;44
000052  454e              CMP      r6,r9                 ;39
000054  ddef              BLE      |L1.54|
000056  e8bd8ff8          POP      {r3-r11,pc}
;;;50     
                          ENDP

