; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\wm_setscrollpos.o --depend=.\rvmdk\wm_setscrollpos.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\wm_setscrollpos.crf ..\..\..\..\..\uCGUI\GUI\WM\WM_SetScrollPos.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  _SetScrollPos PROC
;;;33     */
;;;34     static void _SetScrollPos(WM_HWIN hWin, unsigned ScrollPos, int Id) {
000000  b570              PUSH     {r4-r6,lr}
000002  460d              MOV      r5,r1
000004  b084              SUB      sp,sp,#0x10
000006  4611              MOV      r1,r2
;;;35       WM_HWIN hVScroll;
;;;36       hVScroll = WM_GetDialogItem(hWin, Id);
000008  f7fffffe          BL       WM_GetDialogItem
00000c  4606              MOV      r6,r0
;;;37       if (hVScroll) {
00000e  2e00              CMP      r6,#0
000010  d013              BEQ      |L1.58|
;;;38         int OldValue;
;;;39         WM_SCROLL_STATE ScrollState = {0};
000012  2100              MOVS     r1,#0
000014  9101              STR      r1,[sp,#4]
000016  9102              STR      r1,[sp,#8]
000018  9103              STR      r1,[sp,#0xc]
;;;40         WM_GetScrollState(hVScroll, &ScrollState);
00001a  a901              ADD      r1,sp,#4
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       WM_GetScrollState
;;;41         OldValue = ScrollState.v;
000022  9c02              LDR      r4,[sp,#8]
;;;42         ScrollState.v = ScrollPos;
000024  9502              STR      r5,[sp,#8]
;;;43         WM_CheckScrollBounds(&ScrollState);
000026  a801              ADD      r0,sp,#4
000028  f7fffffe          BL       WM_CheckScrollBounds
;;;44         if (ScrollState.v != OldValue) {
00002c  9902              LDR      r1,[sp,#8]
00002e  42a1              CMP      r1,r4
000030  d003              BEQ      |L1.58|
;;;45           WM_SetScrollState(hVScroll, &ScrollState);
000032  a901              ADD      r1,sp,#4
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       WM_SetScrollState
                  |L1.58|
;;;46         }
;;;47       }
;;;48     }
00003a  b004              ADD      sp,sp,#0x10
00003c  bd70              POP      {r4-r6,pc}
;;;49     
                          ENDP

                  WM_SetScrollPosH PROC
;;;59     */
;;;60     void WM_SetScrollPosH(WM_HWIN hWin, unsigned ScrollPos) {
00003e  b570              PUSH     {r4-r6,lr}
000040  4604              MOV      r4,r0
000042  460d              MOV      r5,r1
;;;61       WM_LOCK();
000044  f7fffffe          BL       GUI_Lock
;;;62       _SetScrollPos(hWin, ScrollPos, GUI_ID_HSCROLL);
000048  22ff              MOVS     r2,#0xff
00004a  4629              MOV      r1,r5
00004c  4620              MOV      r0,r4
00004e  f7fffffe          BL       _SetScrollPos
;;;63       WM_UNLOCK();
000052  e8bd4070          POP      {r4-r6,lr}
000056  f7ffbffe          B.W      GUI_Unlock
;;;64     }
;;;65     
                          ENDP

                  WM_SetScrollPosV PROC
;;;69     */
;;;70     void WM_SetScrollPosV(WM_HWIN hWin, unsigned ScrollPos) {
00005a  b570              PUSH     {r4-r6,lr}
00005c  4604              MOV      r4,r0
00005e  460d              MOV      r5,r1
;;;71       WM_LOCK();
000060  f7fffffe          BL       GUI_Lock
;;;72       _SetScrollPos(hWin, ScrollPos, GUI_ID_VSCROLL);
000064  22fe              MOVS     r2,#0xfe
000066  4629              MOV      r1,r5
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       _SetScrollPos
;;;73       WM_UNLOCK();
00006e  e8bd4070          POP      {r4-r6,lr}
000072  f7ffbffe          B.W      GUI_Unlock
;;;74     }
;;;75     
                          ENDP

