; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o.\rvmdk\gui__calctextrect.o --depend=.\rvmdk\gui__calctextrect.d --cpu=Cortex-M3 --apcs=interwork -O1 -Otime -I. -I..\BSP -I..\..\..\..\..\uCOS-II\Ports\arm-cortex-m3\Generic\RealView -I..\..\..\..\..\uCOS-II\Source -I..\..\..\..\..\CPU\ST\STM32\inc -I..\..\..\..\..\uC-CPU -I..\..\..\..\..\uC-CPU\Arm-Cortex-M3\RealView -I..\..\..\..\..\uC-LIB -I..\..\..\..\..\uC-Probe\Target\Plugins\uCOS-II -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\Source -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Ports\ST\STM32 -I..\..\..\..\..\uC-Probe\Target\Communication\Generic\RS-232\Source -I..\..\..\..\..\User\inc -I..\..\..\..\..\uCGUI\Config -I..\..\..\..\..\uCGUI\GUIDemo -I..\..\..\..\..\uCGUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\AntiAlias -I..\..\..\..\..\uCGUI\GUI\ConvertColor -I..\..\..\..\..\uCGUI\GUI\ConvertMono -I..\..\..\..\..\uCGUI\GUI\Core -I..\..\..\..\..\uCGUI\GUI\Font -I..\..\..\..\..\uCGUI\GUI\LCDDriver -I..\..\..\..\..\uCGUI\GUI\MemDev -I..\..\..\..\..\uCGUI\GUI\MultiLayer -I..\..\..\..\..\uCGUI\GUI\Widget -I..\..\..\..\..\uCGUI\GUI\WM -Id:\Keil-stm32\ARM\INC -Id:\Keil-stm32\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\rvmdk\gui__calctextrect.crf ..\..\..\..\..\uCGUI\GUI\Core\GUI__CalcTextRect.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=1

                  GUI__CalcTextRect PROC
;;;33     */
;;;34     void GUI__CalcTextRect(const char GUI_UNI_PTR* pText, const GUI_RECT* pTextRectIn, GUI_RECT* pTextRectOut, int TextAlign) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
000008  4698              MOV      r8,r3
;;;35       if (pText) {
00000a  b378              CBZ      r0,|L1.108|
;;;36         int xPos, yPos, TextWidth, TextHeight;
;;;37     
;;;38         /* Calculate X-pos of text */
;;;39         TextWidth = GUI_GetStringDistX(pText);
00000c  f7fffffe          BL       GUI_GetStringDistX
000010  4607              MOV      r7,r0
;;;40         switch (TextAlign & GUI_TA_HORIZONTAL) {
000012  f0080003          AND      r0,r8,#3
000016  2801              CMP      r0,#1
000018  d023              BEQ      |L1.98|
00001a  2802              CMP      r0,#2
00001c  d015              BEQ      |L1.74|
;;;41         case GUI_TA_HCENTER:
;;;42           xPos = pTextRectIn->x0 + ((pTextRectIn->x1 - pTextRectIn->x0 + 1) - TextWidth) / 2;
;;;43           break;
;;;44         case GUI_TA_RIGHT:
;;;45           xPos = pTextRectIn->x1 - TextWidth + 1;
;;;46           break;
;;;47         default:
;;;48           xPos = pTextRectIn->x0;
00001e  f9b46000          LDRSH    r6,[r4,#0]
                  |L1.34|
;;;49         }
;;;50     
;;;51         /* Calculate Y-pos of text*/
;;;52         TextHeight = GUI_GetFontDistY();
000022  f7fffffe          BL       GUI_GetFontDistY
;;;53         switch (TextAlign & GUI_TA_VERTICAL) {
000026  f008010c          AND      r1,r8,#0xc
00002a  2904              CMP      r1,#4
00002c  d02b              BEQ      |L1.134|
00002e  290c              CMP      r1,#0xc
000030  d01d              BEQ      |L1.110|
;;;54         case GUI_TA_VCENTER:
;;;55           yPos = pTextRectIn->y0 + ((pTextRectIn->y1 - pTextRectIn->y0 + 1) - TextHeight) / 2;
;;;56           break;
;;;57         case GUI_TA_BOTTOM:
;;;58           yPos = pTextRectIn->y1 - TextHeight + 1;
;;;59           break;
;;;60         case GUI_TA_BASELINE:
;;;61         default:
;;;62           yPos = pTextRectIn->y0;
000032  f9b41002          LDRSH    r1,[r4,#2]
                  |L1.54|
;;;63         }
;;;64     
;;;65         /* Return text rectangle */
;;;66         pTextRectOut->x0 = xPos;
000036  802e              STRH     r6,[r5,#0]
;;;67         pTextRectOut->y0 = yPos;
000038  8069              STRH     r1,[r5,#2]
;;;68         pTextRectOut->x1 = xPos + TextWidth  - 1;
00003a  19f2              ADDS     r2,r6,r7
00003c  1e52              SUBS     r2,r2,#1
00003e  80aa              STRH     r2,[r5,#4]
;;;69         pTextRectOut->y1 = yPos + TextHeight - 1;
000040  4408              ADD      r0,r0,r1
000042  1e40              SUBS     r0,r0,#1
000044  80e8              STRH     r0,[r5,#6]
;;;70       } else {
;;;71         *pTextRectOut = *pTextRectIn;
;;;72       }
;;;73     }
000046  e8bd81f0          POP      {r4-r8,pc}
                  |L1.74|
00004a  f9b41004          LDRSH    r1,[r4,#4]            ;42
00004e  f9b40000          LDRSH    r0,[r4,#0]            ;42
000052  1a09              SUBS     r1,r1,r0              ;42
000054  1bc9              SUBS     r1,r1,r7              ;42
000056  1c49              ADDS     r1,r1,#1              ;42
000058  eb0171d1          ADD      r1,r1,r1,LSR #31      ;42
00005c  eb000661          ADD      r6,r0,r1,ASR #1       ;42
000060  e7df              B        |L1.34|
                  |L1.98|
000062  f9b40004          LDRSH    r0,[r4,#4]            ;45
000066  1bc0              SUBS     r0,r0,r7              ;45
000068  1c46              ADDS     r6,r0,#1              ;45
00006a  e7da              B        |L1.34|
                  |L1.108|
00006c  e010              B        |L1.144|
                  |L1.110|
00006e  f9b42006          LDRSH    r2,[r4,#6]            ;55
000072  f9b41002          LDRSH    r1,[r4,#2]            ;55
000076  1a52              SUBS     r2,r2,r1              ;55
000078  1a12              SUBS     r2,r2,r0              ;55
00007a  1c52              ADDS     r2,r2,#1              ;55
00007c  eb0272d2          ADD      r2,r2,r2,LSR #31      ;55
000080  eb010162          ADD      r1,r1,r2,ASR #1       ;55
000084  e7d7              B        |L1.54|
                  |L1.134|
000086  f9b41006          LDRSH    r1,[r4,#6]            ;58
00008a  1a09              SUBS     r1,r1,r0              ;58
00008c  1c49              ADDS     r1,r1,#1              ;58
00008e  e7d2              B        |L1.54|
                  |L1.144|
000090  6820              LDR      r0,[r4,#0]            ;71
000092  6028              STR      r0,[r5,#0]            ;71
000094  6860              LDR      r0,[r4,#4]            ;71
000096  6068              STR      r0,[r5,#4]            ;71
000098  e8bd81f0          POP      {r4-r8,pc}
;;;74     
                          ENDP

